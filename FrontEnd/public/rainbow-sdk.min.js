!function(modules){var installedModules={};function __webpack_require__(moduleId){if(installedModules[moduleId])return installedModules[moduleId].exports;var module=installedModules[moduleId]={i:moduleId,l:!1,exports:{}};return modules[moduleId].call(module.exports,module,module.exports,__webpack_require__),module.l=!0,module.exports}__webpack_require__.m=modules,__webpack_require__.c=installedModules,__webpack_require__.d=function(exports,name,getter){__webpack_require__.o(exports,name)||Object.defineProperty(exports,name,{enumerable:!0,get:getter})},__webpack_require__.r=function(exports){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(exports,"__esModule",{value:!0})},__webpack_require__.t=function(value,mode){if(1&mode&&(value=__webpack_require__(value)),8&mode)return value;if(4&mode&&"object"==typeof value&&value&&value.__esModule)return value;var ns=Object.create(null);if(__webpack_require__.r(ns),Object.defineProperty(ns,"default",{enumerable:!0,value:value}),2&mode&&"string"!=typeof value)for(var key in value)__webpack_require__.d(ns,key,function(key){return value[key]}.bind(null,key));return ns},__webpack_require__.n=function(module){var getter=module&&module.__esModule?function(){return module.default}:function(){return module};return __webpack_require__.d(getter,"a",getter),getter},__webpack_require__.o=function(object,property){return Object.prototype.hasOwnProperty.call(object,property)},__webpack_require__.p="",__webpack_require__(__webpack_require__.s=157)}([function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});class Call{constructor(status,id,type,contact){this.isVm=!1,this.remoteMedia=0,this.localMedia=0,this.isEscalated=!1,this.startDate=new Date,this.isInitiator=!1,this.participants=null,this.isRemoteVideoMuted=!1,this.isConference=!1,this.subject=void 0,this.currentCalled={contactPhoneNumber:"",contact:null,participantsPhoneNumbers:[],participants:[]},this.fullJid="",this.mediaPillarCall=null,this.isSecondary=!1,this.relevant=!0,this.relevantEquipmentId="unknown",this.deviceId=null,this.isOwner=void 0,this.pbxConnectionDown=void 0,this.isMuted=!1,this.duration=0,this.unifiedPlanActivated=!1,this.status=status,this.type=type,this.id=id,this.conversationId=null,this.connectionId=null,this.isVm=null,this.contact=contact,this.remoteMedia=0,this.localMedia=0,this.isEscalated=!1,this.startDate=new Date,this.isInitiator=!1,this.participants=null,this.isRemoteVideoMuted=!1,this.isConference=!1,this.avatars=contact&&contact.avatar?[this.contact.avatar.src]:[],this.subject=void 0,this.currentCalled={contactPhoneNumber:"",contact:null,participantsPhoneNumbers:[],participants:[]},this.fullJid="",this.mediaPillarCall=null,this.isSecondary=!1,this.relevant=!1,this.relevantEquipmentId="unknown",this.deviceId=null,this.isOwner=void 0,this.pbxConnectionDown=void 0,this.isMuted=!1,this.duration=0,this.statusInfo=null}static create(status,id,type,contact){return new Call(status,id,type,contact)}setCallId(id){this.id=id}setConversationId(conversationId){this.conversationId=conversationId}setStatus(status){this.status=status}setType(type){this.type=type}setIsVm(isVM){this.isVm=isVM}setContact(contact){this.contact=contact,this.avatars=[this.contact.avatar.src]}startDuration(){this.duration}getCurrentCalled(){return this.currentCalled}setSubject(subject){this.subject=subject}setCurrentCalledContactNumber(number){this.currentCalled.contactPhoneNumber=number}setRelevantEquipmentId(relevantEquipmentId){this.relevantEquipmentId=relevantEquipmentId}setParticipants(participants){this.participants=participants,this.avatars=[];this.participants.forEach(participant=>{this.avatars.push(participant.avatar.src)})}setConnectionId(connectionId){this.connectionId=connectionId,this.id=Call.getIdFromConnectionId(connectionId)}isInConversationWithMobile(){return!!this.fullJid&&(-1!==this.fullJid.indexOf("mobile_android")||-1!==this.fullJid.indexOf("mobile_ios"))}setCurrentCalled(currentCalled){currentCalled?this.contact&&this.contact.id?(this.currentCalled.contactPhoneNumber=currentCalled.contactPhoneNumber&&""!==currentCalled.contactPhoneNumber?currentCalled.contactPhoneNumber:"",this.currentCalled.contact=currentCalled.contact?currentCalled.contact:null,this.currentCalled.participantsPhoneNumbers=null,this.currentCalled.participants=null):(this.currentCalled.contactPhoneNumber="",this.currentCalled.contact=null,this.currentCalled.participantsPhoneNumbers=currentCalled.participantsPhoneNumbers&&currentCalled.participantsPhoneNumbers.length>0?currentCalled.participantsPhoneNumbers:null,this.currentCalled.participants=currentCalled.participants&&currentCalled.participants.length>0?currentCalled.participants:null):(this.currentCalled.contactPhoneNumber="",this.currentCalled.contact=null,this.currentCalled.participantsPhoneNumbers=null,this.currentCalled.participants=null)}static getIdFromConnectionId(connectionId){return connectionId}static getCallIdFromConnectionId(connectionId){return connectionId?connectionId.split("#")[0]:null}static getDeviceIdFromConnectionId(connectionId){var deviceId=connectionId?connectionId.split("#")[1]:null;return deviceId||null}isMediaPillarCall(){return null!==this.mediaPillarCall}getMediaPillarCall(){return this.mediaPillarCall}setMediaPillarCall(mediaPillarCallContext){this.mediaPillarCall=mediaPillarCallContext||null}setDeviceIdSipWise(deviceId){this.deviceId=deviceId||null}getDeviceIdSipWise(){return this.deviceId}setConnectionIdSipWise(connectionId){this.connectionId=connectionId}getDeviceIdFromConnectionIdFromCall(){return this.deviceId?this.deviceId:this.connectionId?this.connectionId.split("#")[1]:null}toString(){return"(type:"+this.type.value+", id:"+this.id+", status:"+this.status.value}isInCallWithMediaPillar(){return this.fullJid&&-1!==this.fullJid.indexOf("mp_")}}exports.Call=Call,Call.Status={UNKNOWN:{key:0,value:"Unknown"},DIALING:{key:1,value:"dialing"},QUEUED_INCOMMING:{key:2,value:"queuedIncomming"},QUEUED_OUTGOING:{key:10,value:"queuedOutGoing"},RINGING_INCOMMING:{key:3,value:"incommingCall"},RINGING_OUTGOING:{key:4,value:"ringingOutgoing"},ACTIVE:{key:5,value:"active"},HOLD:{key:6,value:"held"},PUT_ON_HOLD:{key:7,value:"putOnHold"},RELEASING:{key:8,value:"releasing"},ANSWERING:{key:9,value:"answering"},CONNECTING:{key:12,value:"connecting"},ERROR:{key:11,value:"error"}},Call.Type={WEBRTC:{key:1,value:"Video"},PHONE:{key:2,value:"Phone"}},Call.Media={AUDIO:1,VIDEO:2,PHONE:4,SHARING:8},angular.module("rainbow").factory("Call",()=>Call)},function(module,exports,__webpack_require__){module.exports=function(){var CryptoJS=CryptoJS||function(Math,undefined){var create=Object.create||function(){function F(){}return function(obj){var subtype;return F.prototype=obj,subtype=new F,F.prototype=null,subtype}}(),C={},C_lib=C.lib={},Base=C_lib.Base={extend:function(overrides){var subtype=create(this);return overrides&&subtype.mixIn(overrides),subtype.hasOwnProperty("init")&&this.init!==subtype.init||(subtype.init=function(){subtype.$super.init.apply(this,arguments)}),subtype.init.prototype=subtype,subtype.$super=this,subtype},create:function(){var instance=this.extend();return instance.init.apply(instance,arguments),instance},init:function(){},mixIn:function(properties){for(var propertyName in properties)properties.hasOwnProperty(propertyName)&&(this[propertyName]=properties[propertyName]);properties.hasOwnProperty("toString")&&(this.toString=properties.toString)},clone:function(){return this.init.prototype.extend(this)}},WordArray=C_lib.WordArray=Base.extend({init:function(words,sigBytes){words=this.words=words||[],this.sigBytes=null!=sigBytes?sigBytes:4*words.length},toString:function(encoder){return(encoder||Hex).stringify(this)},concat:function(wordArray){var thisWords=this.words,thatWords=wordArray.words,thisSigBytes=this.sigBytes,thatSigBytes=wordArray.sigBytes;if(this.clamp(),thisSigBytes%4)for(var i=0;i<thatSigBytes;i++){var thatByte=thatWords[i>>>2]>>>24-i%4*8&255;thisWords[thisSigBytes+i>>>2]|=thatByte<<24-(thisSigBytes+i)%4*8}else for(i=0;i<thatSigBytes;i+=4)thisWords[thisSigBytes+i>>>2]=thatWords[i>>>2];return this.sigBytes+=thatSigBytes,this},clamp:function(){var words=this.words,sigBytes=this.sigBytes;words[sigBytes>>>2]&=4294967295<<32-sigBytes%4*8,words.length=Math.ceil(sigBytes/4)},clone:function(){var clone=Base.clone.call(this);return clone.words=this.words.slice(0),clone},random:function(nBytes){for(var rcache,words=[],r=function(m_w){m_w=m_w;var m_z=987654321,mask=4294967295;return function(){var result=((m_z=36969*(65535&m_z)+(m_z>>16)&mask)<<16)+(m_w=18e3*(65535&m_w)+(m_w>>16)&mask)&mask;return result/=4294967296,(result+=.5)*(Math.random()>.5?1:-1)}},i=0;i<nBytes;i+=4){var _r=r(4294967296*(rcache||Math.random()));rcache=987654071*_r(),words.push(4294967296*_r()|0)}return new WordArray.init(words,nBytes)}}),C_enc=C.enc={},Hex=C_enc.Hex={stringify:function(wordArray){for(var words=wordArray.words,sigBytes=wordArray.sigBytes,hexChars=[],i=0;i<sigBytes;i++){var bite=words[i>>>2]>>>24-i%4*8&255;hexChars.push((bite>>>4).toString(16)),hexChars.push((15&bite).toString(16))}return hexChars.join("")},parse:function(hexStr){for(var hexStrLength=hexStr.length,words=[],i=0;i<hexStrLength;i+=2)words[i>>>3]|=parseInt(hexStr.substr(i,2),16)<<24-i%8*4;return new WordArray.init(words,hexStrLength/2)}},Latin1=C_enc.Latin1={stringify:function(wordArray){for(var words=wordArray.words,sigBytes=wordArray.sigBytes,latin1Chars=[],i=0;i<sigBytes;i++){var bite=words[i>>>2]>>>24-i%4*8&255;latin1Chars.push(String.fromCharCode(bite))}return latin1Chars.join("")},parse:function(latin1Str){for(var latin1StrLength=latin1Str.length,words=[],i=0;i<latin1StrLength;i++)words[i>>>2]|=(255&latin1Str.charCodeAt(i))<<24-i%4*8;return new WordArray.init(words,latin1StrLength)}},Utf8=C_enc.Utf8={stringify:function(wordArray){try{return decodeURIComponent(escape(Latin1.stringify(wordArray)))}catch(e){throw new Error("Malformed UTF-8 data")}},parse:function(utf8Str){return Latin1.parse(unescape(encodeURIComponent(utf8Str)))}},BufferedBlockAlgorithm=C_lib.BufferedBlockAlgorithm=Base.extend({reset:function(){this._data=new WordArray.init,this._nDataBytes=0},_append:function(data){"string"==typeof data&&(data=Utf8.parse(data)),this._data.concat(data),this._nDataBytes+=data.sigBytes},_process:function(doFlush){var data=this._data,dataWords=data.words,dataSigBytes=data.sigBytes,blockSize=this.blockSize,nBlocksReady=dataSigBytes/(4*blockSize),nWordsReady=(nBlocksReady=doFlush?Math.ceil(nBlocksReady):Math.max((0|nBlocksReady)-this._minBufferSize,0))*blockSize,nBytesReady=Math.min(4*nWordsReady,dataSigBytes);if(nWordsReady){for(var offset=0;offset<nWordsReady;offset+=blockSize)this._doProcessBlock(dataWords,offset);var processedWords=dataWords.splice(0,nWordsReady);data.sigBytes-=nBytesReady}return new WordArray.init(processedWords,nBytesReady)},clone:function(){var clone=Base.clone.call(this);return clone._data=this._data.clone(),clone},_minBufferSize:0}),C_algo=(C_lib.Hasher=BufferedBlockAlgorithm.extend({cfg:Base.extend(),init:function(cfg){this.cfg=this.cfg.extend(cfg),this.reset()},reset:function(){BufferedBlockAlgorithm.reset.call(this),this._doReset()},update:function(messageUpdate){return this._append(messageUpdate),this._process(),this},finalize:function(messageUpdate){return messageUpdate&&this._append(messageUpdate),this._doFinalize()},blockSize:16,_createHelper:function(hasher){return function(message,cfg){return new hasher.init(cfg).finalize(message)}},_createHmacHelper:function(hasher){return function(message,key){return new C_algo.HMAC.init(hasher,key).finalize(message)}}}),C.algo={});return C}(Math);return CryptoJS}()},function(module,exports,__webpack_require__){module.exports=function(CryptoJS){return CryptoJS}(__webpack_require__(1),__webpack_require__(9),__webpack_require__(39),__webpack_require__(40),__webpack_require__(5),__webpack_require__(6),__webpack_require__(10),__webpack_require__(14),__webpack_require__(41),__webpack_require__(15),__webpack_require__(42),__webpack_require__(43),__webpack_require__(44),__webpack_require__(11),__webpack_require__(45),__webpack_require__(4),__webpack_require__(3),__webpack_require__(46),__webpack_require__(47),__webpack_require__(48),__webpack_require__(49),__webpack_require__(50),__webpack_require__(51),__webpack_require__(52),__webpack_require__(53),__webpack_require__(54),__webpack_require__(55),__webpack_require__(56),__webpack_require__(57),__webpack_require__(58),__webpack_require__(59),__webpack_require__(60),__webpack_require__(61))},function(module,exports,__webpack_require__){module.exports=function(CryptoJS){CryptoJS.lib.Cipher||function(undefined){var C=CryptoJS,C_lib=C.lib,Base=C_lib.Base,WordArray=C_lib.WordArray,BufferedBlockAlgorithm=C_lib.BufferedBlockAlgorithm,C_enc=C.enc,Base64=(C_enc.Utf8,C_enc.Base64),EvpKDF=C.algo.EvpKDF,Cipher=C_lib.Cipher=BufferedBlockAlgorithm.extend({cfg:Base.extend(),createEncryptor:function(key,cfg){return this.create(this._ENC_XFORM_MODE,key,cfg)},createDecryptor:function(key,cfg){return this.create(this._DEC_XFORM_MODE,key,cfg)},init:function(xformMode,key,cfg){this.cfg=this.cfg.extend(cfg),this._xformMode=xformMode,this._key=key,this.reset()},reset:function(){BufferedBlockAlgorithm.reset.call(this),this._doReset()},process:function(dataUpdate){return this._append(dataUpdate),this._process()},finalize:function(dataUpdate){return dataUpdate&&this._append(dataUpdate),this._doFinalize()},keySize:4,ivSize:4,_ENC_XFORM_MODE:1,_DEC_XFORM_MODE:2,_createHelper:function(){function selectCipherStrategy(key){return"string"==typeof key?PasswordBasedCipher:SerializableCipher}return function(cipher){return{encrypt:function(message,key,cfg){return selectCipherStrategy(key).encrypt(cipher,message,key,cfg)},decrypt:function(ciphertext,key,cfg){return selectCipherStrategy(key).decrypt(cipher,ciphertext,key,cfg)}}}}()}),C_mode=(C_lib.StreamCipher=Cipher.extend({_doFinalize:function(){return this._process(!0)},blockSize:1}),C.mode={}),BlockCipherMode=C_lib.BlockCipherMode=Base.extend({createEncryptor:function(cipher,iv){return this.Encryptor.create(cipher,iv)},createDecryptor:function(cipher,iv){return this.Decryptor.create(cipher,iv)},init:function(cipher,iv){this._cipher=cipher,this._iv=iv}}),CBC=C_mode.CBC=function(){var CBC=BlockCipherMode.extend();function xorBlock(words,offset,blockSize){var iv=this._iv;if(iv){var block=iv;this._iv=undefined}else block=this._prevBlock;for(var i=0;i<blockSize;i++)words[offset+i]^=block[i]}return CBC.Encryptor=CBC.extend({processBlock:function(words,offset){var cipher=this._cipher,blockSize=cipher.blockSize;xorBlock.call(this,words,offset,blockSize),cipher.encryptBlock(words,offset),this._prevBlock=words.slice(offset,offset+blockSize)}}),CBC.Decryptor=CBC.extend({processBlock:function(words,offset){var cipher=this._cipher,blockSize=cipher.blockSize,thisBlock=words.slice(offset,offset+blockSize);cipher.decryptBlock(words,offset),xorBlock.call(this,words,offset,blockSize),this._prevBlock=thisBlock}}),CBC}(),Pkcs7=(C.pad={}).Pkcs7={pad:function(data,blockSize){for(var blockSizeBytes=4*blockSize,nPaddingBytes=blockSizeBytes-data.sigBytes%blockSizeBytes,paddingWord=nPaddingBytes<<24|nPaddingBytes<<16|nPaddingBytes<<8|nPaddingBytes,paddingWords=[],i=0;i<nPaddingBytes;i+=4)paddingWords.push(paddingWord);var padding=WordArray.create(paddingWords,nPaddingBytes);data.concat(padding)},unpad:function(data){var nPaddingBytes=255&data.words[data.sigBytes-1>>>2];data.sigBytes-=nPaddingBytes}},CipherParams=(C_lib.BlockCipher=Cipher.extend({cfg:Cipher.cfg.extend({mode:CBC,padding:Pkcs7}),reset:function(){Cipher.reset.call(this);var cfg=this.cfg,iv=cfg.iv,mode=cfg.mode;if(this._xformMode==this._ENC_XFORM_MODE)var modeCreator=mode.createEncryptor;else modeCreator=mode.createDecryptor,this._minBufferSize=1;this._mode&&this._mode.__creator==modeCreator?this._mode.init(this,iv&&iv.words):(this._mode=modeCreator.call(mode,this,iv&&iv.words),this._mode.__creator=modeCreator)},_doProcessBlock:function(words,offset){this._mode.processBlock(words,offset)},_doFinalize:function(){var padding=this.cfg.padding;if(this._xformMode==this._ENC_XFORM_MODE){padding.pad(this._data,this.blockSize);var finalProcessedBlocks=this._process(!0)}else finalProcessedBlocks=this._process(!0),padding.unpad(finalProcessedBlocks);return finalProcessedBlocks},blockSize:4}),C_lib.CipherParams=Base.extend({init:function(cipherParams){this.mixIn(cipherParams)},toString:function(formatter){return(formatter||this.formatter).stringify(this)}})),OpenSSLFormatter=(C.format={}).OpenSSL={stringify:function(cipherParams){var ciphertext=cipherParams.ciphertext,salt=cipherParams.salt;if(salt)var wordArray=WordArray.create([1398893684,1701076831]).concat(salt).concat(ciphertext);else wordArray=ciphertext;return wordArray.toString(Base64)},parse:function(openSSLStr){var ciphertext=Base64.parse(openSSLStr),ciphertextWords=ciphertext.words;if(1398893684==ciphertextWords[0]&&1701076831==ciphertextWords[1]){var salt=WordArray.create(ciphertextWords.slice(2,4));ciphertextWords.splice(0,4),ciphertext.sigBytes-=16}return CipherParams.create({ciphertext:ciphertext,salt:salt})}},SerializableCipher=C_lib.SerializableCipher=Base.extend({cfg:Base.extend({format:OpenSSLFormatter}),encrypt:function(cipher,message,key,cfg){cfg=this.cfg.extend(cfg);var encryptor=cipher.createEncryptor(key,cfg),ciphertext=encryptor.finalize(message),cipherCfg=encryptor.cfg;return CipherParams.create({ciphertext:ciphertext,key:key,iv:cipherCfg.iv,algorithm:cipher,mode:cipherCfg.mode,padding:cipherCfg.padding,blockSize:cipher.blockSize,formatter:cfg.format})},decrypt:function(cipher,ciphertext,key,cfg){return cfg=this.cfg.extend(cfg),ciphertext=this._parse(ciphertext,cfg.format),cipher.createDecryptor(key,cfg).finalize(ciphertext.ciphertext)},_parse:function(ciphertext,format){return"string"==typeof ciphertext?format.parse(ciphertext,this):ciphertext}}),OpenSSLKdf=(C.kdf={}).OpenSSL={execute:function(password,keySize,ivSize,salt){salt||(salt=WordArray.random(8));var key=EvpKDF.create({keySize:keySize+ivSize}).compute(password,salt),iv=WordArray.create(key.words.slice(keySize),4*ivSize);return key.sigBytes=4*keySize,CipherParams.create({key:key,iv:iv,salt:salt})}},PasswordBasedCipher=C_lib.PasswordBasedCipher=SerializableCipher.extend({cfg:SerializableCipher.cfg.extend({kdf:OpenSSLKdf}),encrypt:function(cipher,message,password,cfg){var derivedParams=(cfg=this.cfg.extend(cfg)).kdf.execute(password,cipher.keySize,cipher.ivSize);cfg.iv=derivedParams.iv;var ciphertext=SerializableCipher.encrypt.call(this,cipher,message,derivedParams.key,cfg);return ciphertext.mixIn(derivedParams),ciphertext},decrypt:function(cipher,ciphertext,password,cfg){cfg=this.cfg.extend(cfg),ciphertext=this._parse(ciphertext,cfg.format);var derivedParams=cfg.kdf.execute(password,cipher.keySize,cipher.ivSize,ciphertext.salt);return cfg.iv=derivedParams.iv,SerializableCipher.decrypt.call(this,cipher,ciphertext,derivedParams.key,cfg)}})}()}(__webpack_require__(1),__webpack_require__(4))},function(module,exports,__webpack_require__){module.exports=function(CryptoJS){return C_lib=(C=CryptoJS).lib,Base=C_lib.Base,WordArray=C_lib.WordArray,C_algo=C.algo,MD5=C_algo.MD5,EvpKDF=C_algo.EvpKDF=Base.extend({cfg:Base.extend({keySize:4,hasher:MD5,iterations:1}),init:function(cfg){this.cfg=this.cfg.extend(cfg)},compute:function(password,salt){for(var cfg=this.cfg,hasher=cfg.hasher.create(),derivedKey=WordArray.create(),derivedKeyWords=derivedKey.words,keySize=cfg.keySize,iterations=cfg.iterations;derivedKeyWords.length<keySize;){block&&hasher.update(block);var block=hasher.update(password).finalize(salt);hasher.reset();for(var i=1;i<iterations;i++)block=hasher.finalize(block),hasher.reset();derivedKey.concat(block)}return derivedKey.sigBytes=4*keySize,derivedKey}}),C.EvpKDF=function(password,salt,cfg){return EvpKDF.create(cfg).compute(password,salt)},CryptoJS.EvpKDF;var C,C_lib,Base,WordArray,C_algo,MD5,EvpKDF}(__webpack_require__(1),__webpack_require__(10),__webpack_require__(11))},function(module,exports,__webpack_require__){module.exports=function(CryptoJS){return WordArray=(C=CryptoJS).lib.WordArray,C.enc.Base64={stringify:function(wordArray){var words=wordArray.words,sigBytes=wordArray.sigBytes,map=this._map;wordArray.clamp();for(var base64Chars=[],i=0;i<sigBytes;i+=3)for(var triplet=(words[i>>>2]>>>24-i%4*8&255)<<16|(words[i+1>>>2]>>>24-(i+1)%4*8&255)<<8|words[i+2>>>2]>>>24-(i+2)%4*8&255,j=0;j<4&&i+.75*j<sigBytes;j++)base64Chars.push(map.charAt(triplet>>>6*(3-j)&63));var paddingChar=map.charAt(64);if(paddingChar)for(;base64Chars.length%4;)base64Chars.push(paddingChar);return base64Chars.join("")},parse:function(base64Str){var base64StrLength=base64Str.length,map=this._map,reverseMap=this._reverseMap;if(!reverseMap){reverseMap=this._reverseMap=[];for(var j=0;j<map.length;j++)reverseMap[map.charCodeAt(j)]=j}var paddingChar=map.charAt(64);if(paddingChar){var paddingIndex=base64Str.indexOf(paddingChar);-1!==paddingIndex&&(base64StrLength=paddingIndex)}return function(base64Str,base64StrLength,reverseMap){for(var words=[],nBytes=0,i=0;i<base64StrLength;i++)if(i%4){var bits1=reverseMap[base64Str.charCodeAt(i-1)]<<i%4*2,bits2=reverseMap[base64Str.charCodeAt(i)]>>>6-i%4*2;words[nBytes>>>2]|=(bits1|bits2)<<24-nBytes%4*8,nBytes++}return WordArray.create(words,nBytes)}(base64Str,base64StrLength,reverseMap)},_map:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="},CryptoJS.enc.Base64;var C,WordArray}(__webpack_require__(1))},function(module,exports,__webpack_require__){module.exports=function(CryptoJS){return function(Math){var C=CryptoJS,C_lib=C.lib,WordArray=C_lib.WordArray,Hasher=C_lib.Hasher,C_algo=C.algo,T=[];!function(){for(var i=0;i<64;i++)T[i]=4294967296*Math.abs(Math.sin(i+1))|0}();var MD5=C_algo.MD5=Hasher.extend({_doReset:function(){this._hash=new WordArray.init([1732584193,4023233417,2562383102,271733878])},_doProcessBlock:function(M,offset){for(var i=0;i<16;i++){var offset_i=offset+i,M_offset_i=M[offset_i];M[offset_i]=16711935&(M_offset_i<<8|M_offset_i>>>24)|4278255360&(M_offset_i<<24|M_offset_i>>>8)}var H=this._hash.words,M_offset_0=M[offset+0],M_offset_1=M[offset+1],M_offset_2=M[offset+2],M_offset_3=M[offset+3],M_offset_4=M[offset+4],M_offset_5=M[offset+5],M_offset_6=M[offset+6],M_offset_7=M[offset+7],M_offset_8=M[offset+8],M_offset_9=M[offset+9],M_offset_10=M[offset+10],M_offset_11=M[offset+11],M_offset_12=M[offset+12],M_offset_13=M[offset+13],M_offset_14=M[offset+14],M_offset_15=M[offset+15],a=H[0],b=H[1],c=H[2],d=H[3];a=FF(a,b,c,d,M_offset_0,7,T[0]),d=FF(d,a,b,c,M_offset_1,12,T[1]),c=FF(c,d,a,b,M_offset_2,17,T[2]),b=FF(b,c,d,a,M_offset_3,22,T[3]),a=FF(a,b,c,d,M_offset_4,7,T[4]),d=FF(d,a,b,c,M_offset_5,12,T[5]),c=FF(c,d,a,b,M_offset_6,17,T[6]),b=FF(b,c,d,a,M_offset_7,22,T[7]),a=FF(a,b,c,d,M_offset_8,7,T[8]),d=FF(d,a,b,c,M_offset_9,12,T[9]),c=FF(c,d,a,b,M_offset_10,17,T[10]),b=FF(b,c,d,a,M_offset_11,22,T[11]),a=FF(a,b,c,d,M_offset_12,7,T[12]),d=FF(d,a,b,c,M_offset_13,12,T[13]),c=FF(c,d,a,b,M_offset_14,17,T[14]),a=GG(a,b=FF(b,c,d,a,M_offset_15,22,T[15]),c,d,M_offset_1,5,T[16]),d=GG(d,a,b,c,M_offset_6,9,T[17]),c=GG(c,d,a,b,M_offset_11,14,T[18]),b=GG(b,c,d,a,M_offset_0,20,T[19]),a=GG(a,b,c,d,M_offset_5,5,T[20]),d=GG(d,a,b,c,M_offset_10,9,T[21]),c=GG(c,d,a,b,M_offset_15,14,T[22]),b=GG(b,c,d,a,M_offset_4,20,T[23]),a=GG(a,b,c,d,M_offset_9,5,T[24]),d=GG(d,a,b,c,M_offset_14,9,T[25]),c=GG(c,d,a,b,M_offset_3,14,T[26]),b=GG(b,c,d,a,M_offset_8,20,T[27]),a=GG(a,b,c,d,M_offset_13,5,T[28]),d=GG(d,a,b,c,M_offset_2,9,T[29]),c=GG(c,d,a,b,M_offset_7,14,T[30]),a=HH(a,b=GG(b,c,d,a,M_offset_12,20,T[31]),c,d,M_offset_5,4,T[32]),d=HH(d,a,b,c,M_offset_8,11,T[33]),c=HH(c,d,a,b,M_offset_11,16,T[34]),b=HH(b,c,d,a,M_offset_14,23,T[35]),a=HH(a,b,c,d,M_offset_1,4,T[36]),d=HH(d,a,b,c,M_offset_4,11,T[37]),c=HH(c,d,a,b,M_offset_7,16,T[38]),b=HH(b,c,d,a,M_offset_10,23,T[39]),a=HH(a,b,c,d,M_offset_13,4,T[40]),d=HH(d,a,b,c,M_offset_0,11,T[41]),c=HH(c,d,a,b,M_offset_3,16,T[42]),b=HH(b,c,d,a,M_offset_6,23,T[43]),a=HH(a,b,c,d,M_offset_9,4,T[44]),d=HH(d,a,b,c,M_offset_12,11,T[45]),c=HH(c,d,a,b,M_offset_15,16,T[46]),a=II(a,b=HH(b,c,d,a,M_offset_2,23,T[47]),c,d,M_offset_0,6,T[48]),d=II(d,a,b,c,M_offset_7,10,T[49]),c=II(c,d,a,b,M_offset_14,15,T[50]),b=II(b,c,d,a,M_offset_5,21,T[51]),a=II(a,b,c,d,M_offset_12,6,T[52]),d=II(d,a,b,c,M_offset_3,10,T[53]),c=II(c,d,a,b,M_offset_10,15,T[54]),b=II(b,c,d,a,M_offset_1,21,T[55]),a=II(a,b,c,d,M_offset_8,6,T[56]),d=II(d,a,b,c,M_offset_15,10,T[57]),c=II(c,d,a,b,M_offset_6,15,T[58]),b=II(b,c,d,a,M_offset_13,21,T[59]),a=II(a,b,c,d,M_offset_4,6,T[60]),d=II(d,a,b,c,M_offset_11,10,T[61]),c=II(c,d,a,b,M_offset_2,15,T[62]),b=II(b,c,d,a,M_offset_9,21,T[63]),H[0]=H[0]+a|0,H[1]=H[1]+b|0,H[2]=H[2]+c|0,H[3]=H[3]+d|0},_doFinalize:function(){var data=this._data,dataWords=data.words,nBitsTotal=8*this._nDataBytes,nBitsLeft=8*data.sigBytes;dataWords[nBitsLeft>>>5]|=128<<24-nBitsLeft%32;var nBitsTotalH=Math.floor(nBitsTotal/4294967296),nBitsTotalL=nBitsTotal;dataWords[15+(nBitsLeft+64>>>9<<4)]=16711935&(nBitsTotalH<<8|nBitsTotalH>>>24)|4278255360&(nBitsTotalH<<24|nBitsTotalH>>>8),dataWords[14+(nBitsLeft+64>>>9<<4)]=16711935&(nBitsTotalL<<8|nBitsTotalL>>>24)|4278255360&(nBitsTotalL<<24|nBitsTotalL>>>8),data.sigBytes=4*(dataWords.length+1),this._process();for(var hash=this._hash,H=hash.words,i=0;i<4;i++){var H_i=H[i];H[i]=16711935&(H_i<<8|H_i>>>24)|4278255360&(H_i<<24|H_i>>>8)}return hash},clone:function(){var clone=Hasher.clone.call(this);return clone._hash=this._hash.clone(),clone}});function FF(a,b,c,d,x,s,t){var n=a+(b&c|~b&d)+x+t;return(n<<s|n>>>32-s)+b}function GG(a,b,c,d,x,s,t){var n=a+(b&d|c&~d)+x+t;return(n<<s|n>>>32-s)+b}function HH(a,b,c,d,x,s,t){var n=a+(b^c^d)+x+t;return(n<<s|n>>>32-s)+b}function II(a,b,c,d,x,s,t){var n=a+(c^(b|~d))+x+t;return(n<<s|n>>>32-s)+b}C.MD5=Hasher._createHelper(MD5),C.HmacMD5=Hasher._createHmacHelper(MD5)}(Math),CryptoJS.MD5}(__webpack_require__(1))},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var int64_buffer_1=__webpack_require__(16),EBMLEncoder_1=__webpack_require__(17),_Buffer=__webpack_require__(12),_tools=__webpack_require__(139),_block=__webpack_require__(140);function WebPBlockFilter(elms){return elms.reduce((function(lst,elm){return"b"!==elm.type?lst:"SimpleBlock"!==elm.name?lst:exports.ebmlBlock(elm.data).frames.some((function(frame){return"9d012a"===frame.slice(3,6).toString("hex")}))?lst.concat(elm):lst}),[])}function VP8BitStreamToRiffWebPBuffer(frame){var VP8Chunk=createRIFFChunk("VP8 ",frame);return createRIFFChunk("RIFF",concat([new exports.Buffer("WEBP","ascii"),VP8Chunk]))}function createRIFFChunk(FourCC,chunk){var chunkSize=new exports.Buffer(4);return chunkSize.writeUInt32LE(chunk.byteLength,0),concat([new exports.Buffer(FourCC.substr(0,4),"ascii"),chunkSize,chunk,new exports.Buffer(chunk.byteLength%2==0?0:1)])}function removeElement(idName,metadata){for(var start=-1,i=0;i<metadata.length;i++){var element=metadata[i];if(element.name===idName){if("m"!==element.type)return void metadata.splice(i,1);if(element.isEnd){if(-1==start)throw new Error("Detected "+idName+" closing element before finding the start");return void metadata.splice(start,i-start+1)}start=i}}}function extractElement(idName,metadata){for(var result=[],start=-1,i=0;i<metadata.length;i++){var element=metadata[i];if(element.name===idName){if("m"!==element.type){result.push(metadata[i]);break}if(element.isEnd){if(-1==start)throw new Error("Detected "+idName+" closing element before finding the start");result=metadata.slice(start,i+1);break}start=i}}return result}function encodedSizeOfEbml(refinedMetaData){var encorder=new EBMLEncoder_1.default;return refinedMetaData.reduce((function(lst,elm){return lst.concat(encorder.encode([elm]))}),[]).reduce((function(o,buf){return o+buf.byteLength}),0)}function refineMetadata(mesetadata,sizeDiff,info){var duration=info.duration,clusterPtrs=info.clusterPtrs,cues=info.cues,_metadata=mesetadata.slice(0);if("number"==typeof duration){var overwrited_1=!1;_metadata.forEach((function(elm){"f"===elm.type&&"Duration"===elm.name&&(overwrited_1=!0,elm.data=createFloatBuffer(duration,8))})),overwrited_1||insertTag(_metadata,"Info",[{name:"Duration",type:"f",data:createFloatBuffer(duration,8)}])}Array.isArray(cues)&&insertTag(_metadata,"Cues",function(cueInfos,sizeDiff){var cues=[];return cueInfos.forEach((function(_a){var CueTrack=_a.CueTrack,CueClusterPosition=_a.CueClusterPosition,CueTime=_a.CueTime;cues.push({name:"CuePoint",type:"m",isEnd:!1}),cues.push({name:"CueTime",type:"u",data:createUIntBuffer(CueTime)}),cues.push({name:"CueTrackPositions",type:"m",isEnd:!1}),cues.push({name:"CueTrack",type:"u",data:createUIntBuffer(CueTrack)}),cues.push({name:"CueClusterPosition",type:"u",data:createUIntBuffer(CueClusterPosition+sizeDiff)}),cues.push({name:"CueTrackPositions",type:"m",isEnd:!0}),cues.push({name:"CuePoint",type:"m",isEnd:!0})})),cues}(cues,sizeDiff));var seekhead_children=[];return Array.isArray(clusterPtrs)&&(console.warn("append cluster pointers to seekhead is deprecated. please use cues"),seekhead_children=function(clusterPtrs,sizeDiff){var seeks=[];return clusterPtrs.forEach((function(start){seeks.push({name:"Seek",type:"m",isEnd:!1}),seeks.push({name:"SeekID",type:"b",data:new exports.Buffer([31,67,182,117])}),seeks.push({name:"SeekPosition",type:"u",data:createUIntBuffer(start+sizeDiff)}),seeks.push({name:"Seek",type:"m",isEnd:!0})})),seeks}(clusterPtrs,sizeDiff)),insertTag(_metadata,"SeekHead",seekhead_children,!0),_metadata}function insertTag(_metadata,tagName,children,insertHead){void 0===insertHead&&(insertHead=!1);for(var idx=-1,i=0;i<_metadata.length;i++){var elm=_metadata[i];if("m"===elm.type&&elm.name===tagName&&!1===elm.isEnd){idx=i;break}}idx>=0?Array.prototype.splice.apply(_metadata,[idx+1,0].concat(children)):insertHead?[].concat([{name:tagName,type:"m",isEnd:!1}],children,[{name:tagName,type:"m",isEnd:!0}]).reverse().forEach((function(elm){_metadata.unshift(elm)})):(_metadata.push({name:tagName,type:"m",isEnd:!1}),children.forEach((function(elm){_metadata.push(elm)})),_metadata.push({name:tagName,type:"m",isEnd:!0}))}function concat(list){for(var i=0,length=0;i<list.length;++i)length+=list[i].length;var buffer=exports.Buffer.allocUnsafe(length),pos=0;for(i=0;i<list.length;++i){var buf=list[i];buf.copy(buffer,pos),pos+=buf.length}return buffer}function createUIntBuffer(value){for(var bytes=1;value>=Math.pow(2,8*bytes);bytes++);if(bytes>=7)return console.warn("7bit or more bigger uint not supported."),new int64_buffer_1.Uint64BE(value).toBuffer();var data=new exports.Buffer(bytes);return data.writeUIntBE(value,0,bytes),data}function createIntBuffer(value){for(var bytes=1;value>=Math.pow(2,8*bytes);bytes++);if(bytes>=7)return console.warn("7bit or more bigger uint not supported."),new int64_buffer_1.Int64BE(value).toBuffer();var data=new exports.Buffer(bytes);return data.writeIntBE(value,0,bytes),data}function createFloatBuffer(value,bytes){var data;if(void 0===bytes&&(bytes=8),8===bytes)return(data=new exports.Buffer(8)).writeDoubleBE(value,0),data;if(4===bytes)return(data=new exports.Buffer(4)).writeFloatBE(value,0),data;throw new Error("float type bits must 4bytes or 8bytes")}exports.Buffer=_Buffer.Buffer,exports.readVint=_tools.readVint,exports.writeVint=_tools.writeVint,exports.ebmlBlock=_block,exports.readBlock=function(buf){return exports.ebmlBlock(new exports.Buffer(buf))},exports.encodeTag=function(tagId,tagData,unknownSize){return void 0===unknownSize&&(unknownSize=!1),concat([tagId,unknownSize?new exports.Buffer("01ffffffffffffff","hex"):exports.writeVint(tagData.length),tagData])},exports.WebPFrameFilter=function(elms){return WebPBlockFilter(elms).reduce((function(lst,elm){return exports.ebmlBlock(elm.data).frames.reduce((function(lst,frame){var webpBuf=VP8BitStreamToRiffWebPBuffer(frame),webp=new Blob([webpBuf],{type:"image/webp"});return lst.concat(webp)}),lst)}),[])},exports.WebPBlockFilter=WebPBlockFilter,exports.VP8BitStreamToRiffWebPBuffer=VP8BitStreamToRiffWebPBuffer,exports.createRIFFChunk=createRIFFChunk,exports.makeMetadataSeekable=function(originalMetadata,duration,cuesInfo){var header=extractElement("EBML",originalMetadata),segmentContentStartPos=encodedSizeOfEbml(header)+12,originalMetadataSize=originalMetadata[originalMetadata.length-1].dataEnd-segmentContentStartPos,info=extractElement("Info",originalMetadata);removeElement("Duration",info),info.splice(1,0,{name:"Duration",type:"f",data:createFloatBuffer(duration,8)});for(var infoSize=encodedSizeOfEbml(info),tracks=extractElement("Tracks",originalMetadata),tracksSize=encodedSizeOfEbml(tracks),seekHeadSize=47,seekHead=[],cuesSize=5+15*cuesInfo.length,cues=[],lastSizeDifference=-1,_loop_1=function(i){var infoStart=seekHeadSize,tracksStart=infoStart+infoSize,cuesStart=tracksStart+tracksSize,sizeDifference=cuesStart+cuesSize-originalMetadataSize;if((seekHead=[]).push({name:"SeekHead",type:"m",isEnd:!1}),seekHead.push({name:"Seek",type:"m",isEnd:!1}),seekHead.push({name:"SeekID",type:"b",data:new exports.Buffer([21,73,169,102])}),seekHead.push({name:"SeekPosition",type:"u",data:createUIntBuffer(infoStart)}),seekHead.push({name:"Seek",type:"m",isEnd:!0}),seekHead.push({name:"Seek",type:"m",isEnd:!1}),seekHead.push({name:"SeekID",type:"b",data:new exports.Buffer([22,84,174,107])}),seekHead.push({name:"SeekPosition",type:"u",data:createUIntBuffer(tracksStart)}),seekHead.push({name:"Seek",type:"m",isEnd:!0}),seekHead.push({name:"Seek",type:"m",isEnd:!1}),seekHead.push({name:"SeekID",type:"b",data:new exports.Buffer([28,83,187,107])}),seekHead.push({name:"SeekPosition",type:"u",data:createUIntBuffer(cuesStart)}),seekHead.push({name:"Seek",type:"m",isEnd:!0}),seekHead.push({name:"SeekHead",type:"m",isEnd:!0}),seekHeadSize=encodedSizeOfEbml(seekHead),(cues=[]).push({name:"Cues",type:"m",isEnd:!1}),cuesInfo.forEach((function(_a){var CueTrack=_a.CueTrack,CueClusterPosition=_a.CueClusterPosition,CueTime=_a.CueTime;cues.push({name:"CuePoint",type:"m",isEnd:!1}),cues.push({name:"CueTime",type:"u",data:createUIntBuffer(CueTime)}),cues.push({name:"CueTrackPositions",type:"m",isEnd:!1}),cues.push({name:"CueTrack",type:"u",data:createUIntBuffer(CueTrack)}),CueClusterPosition-=segmentContentStartPos,CueClusterPosition+=sizeDifference,cues.push({name:"CueClusterPosition",type:"u",data:createUIntBuffer(CueClusterPosition)}),cues.push({name:"CueTrackPositions",type:"m",isEnd:!0}),cues.push({name:"CuePoint",type:"m",isEnd:!0})})),cues.push({name:"Cues",type:"m",isEnd:!0}),cuesSize=encodedSizeOfEbml(cues),lastSizeDifference===sizeDifference)return"break";if(lastSizeDifference=sizeDifference,9===i)throw new Error("Failed to converge to a stable metadata size")},i=0;i<10;i++){if("break"===_loop_1(i))break}var finalMetadata=[].concat.apply([],[header,{name:"Segment",type:"m",isEnd:!1,unknownSize:!0},seekHead,info,tracks,cues]);return(new EBMLEncoder_1.default).encode(finalMetadata)},exports.removeElement=removeElement,exports.extractElement=extractElement,exports.putRefinedMetaData=function(metadata,info){Array.isArray(info.cueInfos)&&!Array.isArray(info.cues)&&(console.warn("putRefinedMetaData: info.cueInfos property is deprecated. please use info.cues"),info.cues=info.cueInfos);for(var ebml=[],payload=[],i_1=0;i_1<metadata.length;i_1++){var elm=metadata[i_1];if("m"===elm.type&&"Segment"===elm.name){if(ebml=metadata.slice(0,i_1),payload=metadata.slice(i_1),elm.unknownSize){payload.shift();break}throw new Error("this metadata is not streaming webm file")}}if(!(payload[payload.length-1].dataEnd>0))throw new Error("metadata dataEnd has wrong number");var i,originalPayloadOffsetEnd=payload[payload.length-1].dataEnd,ebmlSize=ebml[ebml.length-1].dataEnd,offsetDiff=(new EBMLEncoder_1.default).encode(ebml).byteLength-ebmlSize,payloadSize=originalPayloadOffsetEnd-payload[0].tagStart,segmentTagBuf=(payload[0].tagStart,payload[0].tagStart,new exports.Buffer([24,83,128,103])),segmentSizeBuf=new exports.Buffer("01ffffffffffffff","hex"),_segmentSize=segmentTagBuf.byteLength+segmentSizeBuf.byteLength,newPayloadSize=payloadSize;for(i=1;i<20;i++){var refined=refineMetadata(payload,offsetDiff+(ebmlSize+_segmentSize+newPayloadSize-originalPayloadOffsetEnd),info),newNewRefinedSize=(new EBMLEncoder_1.default).encode(refined).byteLength;if(newNewRefinedSize===newPayloadSize)return(new EBMLEncoder_1.default).encode([].concat(ebml,[{type:"m",name:"Segment",isEnd:!1,unknownSize:!0}],refined));newPayloadSize=newNewRefinedSize}throw new Error("unable to refine metadata, stable size could not be found in "+i+" iterations!")},exports.concat=concat,exports.encodeValueToBuffer=function(elm){var data=new exports.Buffer(0);if("m"===elm.type)return elm;switch(elm.type){case"u":data=createUIntBuffer(elm.value);break;case"i":data=createIntBuffer(elm.value);break;case"f":data=createFloatBuffer(elm.value);break;case"s":data=new exports.Buffer(elm.value,"ascii");break;case"8":data=new exports.Buffer(elm.value,"utf8");break;case"b":data=elm.value;break;case"d":data=new int64_buffer_1.Int64BE(elm.value.getTime().toString()).toBuffer()}return Object.assign({},elm,{data:data})},exports.createUIntBuffer=createUIntBuffer,exports.createIntBuffer=createIntBuffer,exports.createFloatBuffer=createFloatBuffer,exports.convertEBMLDateToJSDate=function(int64str){return int64str instanceof Date?int64str:new Date(new Date("2001-01-01T00:00:00.000Z").getTime()+Number(int64str)/1e3/1e3)}},function(module,exports,__webpack_require__){"use strict";var SDPUtils={generateIdentifier:function(){return Math.random().toString(36).substr(2,10)}};SDPUtils.localCName=SDPUtils.generateIdentifier(),SDPUtils.splitLines=function(blob){return blob.trim().split("\n").map((function(line){return line.trim()}))},SDPUtils.splitSections=function(blob){return blob.split("\nm=").map((function(part,index){return(index>0?"m="+part:part).trim()+"\r\n"}))},SDPUtils.getDescription=function(blob){var sections=SDPUtils.splitSections(blob);return sections&&sections[0]},SDPUtils.getMediaSections=function(blob){var sections=SDPUtils.splitSections(blob);return sections.shift(),sections},SDPUtils.matchPrefix=function(blob,prefix){return SDPUtils.splitLines(blob).filter((function(line){return 0===line.indexOf(prefix)}))},SDPUtils.parseCandidate=function(line){for(var parts,candidate={foundation:(parts=0===line.indexOf("a=candidate:")?line.substring(12).split(" "):line.substring(10).split(" "))[0],component:parseInt(parts[1],10),protocol:parts[2].toLowerCase(),priority:parseInt(parts[3],10),ip:parts[4],address:parts[4],port:parseInt(parts[5],10),type:parts[7]},i=8;i<parts.length;i+=2)switch(parts[i]){case"raddr":candidate.relatedAddress=parts[i+1];break;case"rport":candidate.relatedPort=parseInt(parts[i+1],10);break;case"tcptype":candidate.tcpType=parts[i+1];break;case"ufrag":candidate.ufrag=parts[i+1],candidate.usernameFragment=parts[i+1];break;default:candidate[parts[i]]=parts[i+1]}return candidate},SDPUtils.writeCandidate=function(candidate){var sdp=[];sdp.push(candidate.foundation),sdp.push(candidate.component),sdp.push(candidate.protocol.toUpperCase()),sdp.push(candidate.priority),sdp.push(candidate.address||candidate.ip),sdp.push(candidate.port);var type=candidate.type;return sdp.push("typ"),sdp.push(type),"host"!==type&&candidate.relatedAddress&&candidate.relatedPort&&(sdp.push("raddr"),sdp.push(candidate.relatedAddress),sdp.push("rport"),sdp.push(candidate.relatedPort)),candidate.tcpType&&"tcp"===candidate.protocol.toLowerCase()&&(sdp.push("tcptype"),sdp.push(candidate.tcpType)),(candidate.usernameFragment||candidate.ufrag)&&(sdp.push("ufrag"),sdp.push(candidate.usernameFragment||candidate.ufrag)),"candidate:"+sdp.join(" ")},SDPUtils.parseIceOptions=function(line){return line.substr(14).split(" ")},SDPUtils.parseRtpMap=function(line){var parts=line.substr(9).split(" "),parsed={payloadType:parseInt(parts.shift(),10)};return parts=parts[0].split("/"),parsed.name=parts[0],parsed.clockRate=parseInt(parts[1],10),parsed.channels=3===parts.length?parseInt(parts[2],10):1,parsed.numChannels=parsed.channels,parsed},SDPUtils.writeRtpMap=function(codec){var pt=codec.payloadType;void 0!==codec.preferredPayloadType&&(pt=codec.preferredPayloadType);var channels=codec.channels||codec.numChannels||1;return"a=rtpmap:"+pt+" "+codec.name+"/"+codec.clockRate+(1!==channels?"/"+channels:"")+"\r\n"},SDPUtils.parseExtmap=function(line){var parts=line.substr(9).split(" ");return{id:parseInt(parts[0],10),direction:parts[0].indexOf("/")>0?parts[0].split("/")[1]:"sendrecv",uri:parts[1]}},SDPUtils.writeExtmap=function(headerExtension){return"a=extmap:"+(headerExtension.id||headerExtension.preferredId)+(headerExtension.direction&&"sendrecv"!==headerExtension.direction?"/"+headerExtension.direction:"")+" "+headerExtension.uri+"\r\n"},SDPUtils.parseFmtp=function(line){for(var kv,parsed={},parts=line.substr(line.indexOf(" ")+1).split(";"),j=0;j<parts.length;j++)parsed[(kv=parts[j].trim().split("="))[0].trim()]=kv[1];return parsed},SDPUtils.writeFmtp=function(codec){var line="",pt=codec.payloadType;if(void 0!==codec.preferredPayloadType&&(pt=codec.preferredPayloadType),codec.parameters&&Object.keys(codec.parameters).length){var params=[];Object.keys(codec.parameters).forEach((function(param){codec.parameters[param]?params.push(param+"="+codec.parameters[param]):params.push(param)})),line+="a=fmtp:"+pt+" "+params.join(";")+"\r\n"}return line},SDPUtils.parseRtcpFb=function(line){var parts=line.substr(line.indexOf(" ")+1).split(" ");return{type:parts.shift(),parameter:parts.join(" ")}},SDPUtils.writeRtcpFb=function(codec){var lines="",pt=codec.payloadType;return void 0!==codec.preferredPayloadType&&(pt=codec.preferredPayloadType),codec.rtcpFeedback&&codec.rtcpFeedback.length&&codec.rtcpFeedback.forEach((function(fb){lines+="a=rtcp-fb:"+pt+" "+fb.type+(fb.parameter&&fb.parameter.length?" "+fb.parameter:"")+"\r\n"})),lines},SDPUtils.parseSsrcMedia=function(line){var sp=line.indexOf(" "),parts={ssrc:parseInt(line.substr(7,sp-7),10)},colon=line.indexOf(":",sp);return colon>-1?(parts.attribute=line.substr(sp+1,colon-sp-1),parts.value=line.substr(colon+1)):parts.attribute=line.substr(sp+1),parts},SDPUtils.parseSsrcGroup=function(line){var parts=line.substr(13).split(" ");return{semantics:parts.shift(),ssrcs:parts.map((function(ssrc){return parseInt(ssrc,10)}))}},SDPUtils.getMid=function(mediaSection){var mid=SDPUtils.matchPrefix(mediaSection,"a=mid:")[0];if(mid)return mid.substr(6)},SDPUtils.parseFingerprint=function(line){var parts=line.substr(14).split(" ");return{algorithm:parts[0].toLowerCase(),value:parts[1]}},SDPUtils.getDtlsParameters=function(mediaSection,sessionpart){return{role:"auto",fingerprints:SDPUtils.matchPrefix(mediaSection+sessionpart,"a=fingerprint:").map(SDPUtils.parseFingerprint)}},SDPUtils.writeDtlsParameters=function(params,setupType){var sdp="a=setup:"+setupType+"\r\n";return params.fingerprints.forEach((function(fp){sdp+="a=fingerprint:"+fp.algorithm+" "+fp.value+"\r\n"})),sdp},SDPUtils.getIceParameters=function(mediaSection,sessionpart){var lines=SDPUtils.splitLines(mediaSection);return{usernameFragment:(lines=lines.concat(SDPUtils.splitLines(sessionpart))).filter((function(line){return 0===line.indexOf("a=ice-ufrag:")}))[0].substr(12),password:lines.filter((function(line){return 0===line.indexOf("a=ice-pwd:")}))[0].substr(10)}},SDPUtils.writeIceParameters=function(params){return"a=ice-ufrag:"+params.usernameFragment+"\r\na=ice-pwd:"+params.password+"\r\n"},SDPUtils.parseRtpParameters=function(mediaSection){for(var description={codecs:[],headerExtensions:[],fecMechanisms:[],rtcp:[]},mline=SDPUtils.splitLines(mediaSection)[0].split(" "),i=3;i<mline.length;i++){var pt=mline[i],rtpmapline=SDPUtils.matchPrefix(mediaSection,"a=rtpmap:"+pt+" ")[0];if(rtpmapline){var codec=SDPUtils.parseRtpMap(rtpmapline),fmtps=SDPUtils.matchPrefix(mediaSection,"a=fmtp:"+pt+" ");switch(codec.parameters=fmtps.length?SDPUtils.parseFmtp(fmtps[0]):{},codec.rtcpFeedback=SDPUtils.matchPrefix(mediaSection,"a=rtcp-fb:"+pt+" ").map(SDPUtils.parseRtcpFb),description.codecs.push(codec),codec.name.toUpperCase()){case"RED":case"ULPFEC":description.fecMechanisms.push(codec.name.toUpperCase())}}}return SDPUtils.matchPrefix(mediaSection,"a=extmap:").forEach((function(line){description.headerExtensions.push(SDPUtils.parseExtmap(line))})),description},SDPUtils.writeRtpDescription=function(kind,caps){var sdp="";sdp+="m="+kind+" ",sdp+=caps.codecs.length>0?"9":"0",sdp+=" UDP/TLS/RTP/SAVPF ",sdp+=caps.codecs.map((function(codec){return void 0!==codec.preferredPayloadType?codec.preferredPayloadType:codec.payloadType})).join(" ")+"\r\n",sdp+="c=IN IP4 0.0.0.0\r\n",sdp+="a=rtcp:9 IN IP4 0.0.0.0\r\n",caps.codecs.forEach((function(codec){sdp+=SDPUtils.writeRtpMap(codec),sdp+=SDPUtils.writeFmtp(codec),sdp+=SDPUtils.writeRtcpFb(codec)}));var maxptime=0;return caps.codecs.forEach((function(codec){codec.maxptime>maxptime&&(maxptime=codec.maxptime)})),maxptime>0&&(sdp+="a=maxptime:"+maxptime+"\r\n"),sdp+="a=rtcp-mux\r\n",caps.headerExtensions&&caps.headerExtensions.forEach((function(extension){sdp+=SDPUtils.writeExtmap(extension)})),sdp},SDPUtils.parseRtpEncodingParameters=function(mediaSection){var secondarySsrc,encodingParameters=[],description=SDPUtils.parseRtpParameters(mediaSection),hasRed=-1!==description.fecMechanisms.indexOf("RED"),hasUlpfec=-1!==description.fecMechanisms.indexOf("ULPFEC"),ssrcs=SDPUtils.matchPrefix(mediaSection,"a=ssrc:").map((function(line){return SDPUtils.parseSsrcMedia(line)})).filter((function(parts){return"cname"===parts.attribute})),primarySsrc=ssrcs.length>0&&ssrcs[0].ssrc,flows=SDPUtils.matchPrefix(mediaSection,"a=ssrc-group:FID").map((function(line){return line.substr(17).split(" ").map((function(part){return parseInt(part,10)}))}));flows.length>0&&flows[0].length>1&&flows[0][0]===primarySsrc&&(secondarySsrc=flows[0][1]),description.codecs.forEach((function(codec){if("RTX"===codec.name.toUpperCase()&&codec.parameters.apt){var encParam={ssrc:primarySsrc,codecPayloadType:parseInt(codec.parameters.apt,10)};primarySsrc&&secondarySsrc&&(encParam.rtx={ssrc:secondarySsrc}),encodingParameters.push(encParam),hasRed&&((encParam=JSON.parse(JSON.stringify(encParam))).fec={ssrc:primarySsrc,mechanism:hasUlpfec?"red+ulpfec":"red"},encodingParameters.push(encParam))}})),0===encodingParameters.length&&primarySsrc&&encodingParameters.push({ssrc:primarySsrc});var bandwidth=SDPUtils.matchPrefix(mediaSection,"b=");return bandwidth.length&&(bandwidth=0===bandwidth[0].indexOf("b=TIAS:")?parseInt(bandwidth[0].substr(7),10):0===bandwidth[0].indexOf("b=AS:")?1e3*parseInt(bandwidth[0].substr(5),10)*.95-16e3:void 0,encodingParameters.forEach((function(params){params.maxBitrate=bandwidth}))),encodingParameters},SDPUtils.parseRtcpParameters=function(mediaSection){var rtcpParameters={},remoteSsrc=SDPUtils.matchPrefix(mediaSection,"a=ssrc:").map((function(line){return SDPUtils.parseSsrcMedia(line)})).filter((function(obj){return"cname"===obj.attribute}))[0];remoteSsrc&&(rtcpParameters.cname=remoteSsrc.value,rtcpParameters.ssrc=remoteSsrc.ssrc);var rsize=SDPUtils.matchPrefix(mediaSection,"a=rtcp-rsize");rtcpParameters.reducedSize=rsize.length>0,rtcpParameters.compound=0===rsize.length;var mux=SDPUtils.matchPrefix(mediaSection,"a=rtcp-mux");return rtcpParameters.mux=mux.length>0,rtcpParameters},SDPUtils.parseMsid=function(mediaSection){var parts,spec=SDPUtils.matchPrefix(mediaSection,"a=msid:");if(1===spec.length)return{stream:(parts=spec[0].substr(7).split(" "))[0],track:parts[1]};var planB=SDPUtils.matchPrefix(mediaSection,"a=ssrc:").map((function(line){return SDPUtils.parseSsrcMedia(line)})).filter((function(msidParts){return"msid"===msidParts.attribute}));return planB.length>0?{stream:(parts=planB[0].value.split(" "))[0],track:parts[1]}:void 0},SDPUtils.generateSessionId=function(){return Math.random().toString().substr(2,21)},SDPUtils.writeSessionBoilerplate=function(sessId,sessVer,sessUser){var version=void 0!==sessVer?sessVer:2;return"v=0\r\no="+(sessUser||"thisisadapterortc")+" "+(sessId||SDPUtils.generateSessionId())+" "+version+" IN IP4 127.0.0.1\r\ns=-\r\nt=0 0\r\n"},SDPUtils.writeMediaSection=function(transceiver,caps,type,stream){var sdp=SDPUtils.writeRtpDescription(transceiver.kind,caps);if(sdp+=SDPUtils.writeIceParameters(transceiver.iceGatherer.getLocalParameters()),sdp+=SDPUtils.writeDtlsParameters(transceiver.dtlsTransport.getLocalParameters(),"offer"===type?"actpass":"active"),sdp+="a=mid:"+transceiver.mid+"\r\n",transceiver.direction?sdp+="a="+transceiver.direction+"\r\n":transceiver.rtpSender&&transceiver.rtpReceiver?sdp+="a=sendrecv\r\n":transceiver.rtpSender?sdp+="a=sendonly\r\n":transceiver.rtpReceiver?sdp+="a=recvonly\r\n":sdp+="a=inactive\r\n",transceiver.rtpSender){var msid="msid:"+stream.id+" "+transceiver.rtpSender.track.id+"\r\n";sdp+="a="+msid,sdp+="a=ssrc:"+transceiver.sendEncodingParameters[0].ssrc+" "+msid,transceiver.sendEncodingParameters[0].rtx&&(sdp+="a=ssrc:"+transceiver.sendEncodingParameters[0].rtx.ssrc+" "+msid,sdp+="a=ssrc-group:FID "+transceiver.sendEncodingParameters[0].ssrc+" "+transceiver.sendEncodingParameters[0].rtx.ssrc+"\r\n")}return sdp+="a=ssrc:"+transceiver.sendEncodingParameters[0].ssrc+" cname:"+SDPUtils.localCName+"\r\n",transceiver.rtpSender&&transceiver.sendEncodingParameters[0].rtx&&(sdp+="a=ssrc:"+transceiver.sendEncodingParameters[0].rtx.ssrc+" cname:"+SDPUtils.localCName+"\r\n"),sdp},SDPUtils.getDirection=function(mediaSection,sessionpart){for(var lines=SDPUtils.splitLines(mediaSection),i=0;i<lines.length;i++)switch(lines[i]){case"a=sendrecv":case"a=sendonly":case"a=recvonly":case"a=inactive":return lines[i].substr(2)}return sessionpart?SDPUtils.getDirection(sessionpart):"sendrecv"},SDPUtils.getKind=function(mediaSection){return SDPUtils.splitLines(mediaSection)[0].split(" ")[0].substr(2)},SDPUtils.isRejected=function(mediaSection){return"0"===mediaSection.split(" ",2)[1]},SDPUtils.parseMLine=function(mediaSection){var parts=SDPUtils.splitLines(mediaSection)[0].substr(2).split(" ");return{kind:parts[0],port:parseInt(parts[1],10),protocol:parts[2],fmt:parts.slice(3).join(" ")}},SDPUtils.parseOLine=function(mediaSection){var parts=SDPUtils.matchPrefix(mediaSection,"o=")[0].substr(2).split(" ");return{username:parts[0],sessionId:parts[1],sessionVersion:parseInt(parts[2],10),netType:parts[3],addressType:parts[4],address:parts[5]}},SDPUtils.isValidSDP=function(blob){if("string"!=typeof blob||0===blob.length)return!1;for(var lines=SDPUtils.splitLines(blob),i=0;i<lines.length;i++)if(lines[i].length<2||"="!==lines[i].charAt(1))return!1;return!0},module.exports=SDPUtils},function(module,exports,__webpack_require__){module.exports=function(CryptoJS){return C_lib=(C=CryptoJS).lib,Base=C_lib.Base,X32WordArray=C_lib.WordArray,(C_x64=C.x64={}).Word=Base.extend({init:function(high,low){this.high=high,this.low=low}}),C_x64.WordArray=Base.extend({init:function(words,sigBytes){words=this.words=words||[],this.sigBytes=null!=sigBytes?sigBytes:8*words.length},toX32:function(){for(var x64Words=this.words,x64WordsLength=x64Words.length,x32Words=[],i=0;i<x64WordsLength;i++){var x64Word=x64Words[i];x32Words.push(x64Word.high),x32Words.push(x64Word.low)}return X32WordArray.create(x32Words,this.sigBytes)},clone:function(){for(var clone=Base.clone.call(this),words=clone.words=this.words.slice(0),wordsLength=words.length,i=0;i<wordsLength;i++)words[i]=words[i].clone();return clone}}),CryptoJS;var C,C_lib,Base,X32WordArray,C_x64}(__webpack_require__(1))},function(module,exports,__webpack_require__){module.exports=function(CryptoJS){return C_lib=(C=CryptoJS).lib,WordArray=C_lib.WordArray,Hasher=C_lib.Hasher,C_algo=C.algo,W=[],SHA1=C_algo.SHA1=Hasher.extend({_doReset:function(){this._hash=new WordArray.init([1732584193,4023233417,2562383102,271733878,3285377520])},_doProcessBlock:function(M,offset){for(var H=this._hash.words,a=H[0],b=H[1],c=H[2],d=H[3],e=H[4],i=0;i<80;i++){if(i<16)W[i]=0|M[offset+i];else{var n=W[i-3]^W[i-8]^W[i-14]^W[i-16];W[i]=n<<1|n>>>31}var t=(a<<5|a>>>27)+e+W[i];t+=i<20?1518500249+(b&c|~b&d):i<40?1859775393+(b^c^d):i<60?(b&c|b&d|c&d)-1894007588:(b^c^d)-899497514,e=d,d=c,c=b<<30|b>>>2,b=a,a=t}H[0]=H[0]+a|0,H[1]=H[1]+b|0,H[2]=H[2]+c|0,H[3]=H[3]+d|0,H[4]=H[4]+e|0},_doFinalize:function(){var data=this._data,dataWords=data.words,nBitsTotal=8*this._nDataBytes,nBitsLeft=8*data.sigBytes;return dataWords[nBitsLeft>>>5]|=128<<24-nBitsLeft%32,dataWords[14+(nBitsLeft+64>>>9<<4)]=Math.floor(nBitsTotal/4294967296),dataWords[15+(nBitsLeft+64>>>9<<4)]=nBitsTotal,data.sigBytes=4*dataWords.length,this._process(),this._hash},clone:function(){var clone=Hasher.clone.call(this);return clone._hash=this._hash.clone(),clone}}),C.SHA1=Hasher._createHelper(SHA1),C.HmacSHA1=Hasher._createHmacHelper(SHA1),CryptoJS.SHA1;var C,C_lib,WordArray,Hasher,C_algo,W,SHA1}(__webpack_require__(1))},function(module,exports,__webpack_require__){module.exports=function(CryptoJS){var C,Base,Utf8;Base=(C=CryptoJS).lib.Base,Utf8=C.enc.Utf8,C.algo.HMAC=Base.extend({init:function(hasher,key){hasher=this._hasher=new hasher.init,"string"==typeof key&&(key=Utf8.parse(key));var hasherBlockSize=hasher.blockSize,hasherBlockSizeBytes=4*hasherBlockSize;key.sigBytes>hasherBlockSizeBytes&&(key=hasher.finalize(key)),key.clamp();for(var oKey=this._oKey=key.clone(),iKey=this._iKey=key.clone(),oKeyWords=oKey.words,iKeyWords=iKey.words,i=0;i<hasherBlockSize;i++)oKeyWords[i]^=1549556828,iKeyWords[i]^=909522486;oKey.sigBytes=iKey.sigBytes=hasherBlockSizeBytes,this.reset()},reset:function(){var hasher=this._hasher;hasher.reset(),hasher.update(this._iKey)},update:function(messageUpdate){return this._hasher.update(messageUpdate),this},finalize:function(messageUpdate){var hasher=this._hasher,innerHash=hasher.finalize(messageUpdate);return hasher.reset(),hasher.finalize(this._oKey.clone().concat(innerHash))}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){"use strict";(function(global){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <http://feross.org>
 * @license  MIT
 */
var base64=__webpack_require__(136),ieee754=__webpack_require__(137),isArray=__webpack_require__(138);function kMaxLength(){return Buffer.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function createBuffer(that,length){if(kMaxLength()<length)throw new RangeError("Invalid typed array length");return Buffer.TYPED_ARRAY_SUPPORT?(that=new Uint8Array(length)).__proto__=Buffer.prototype:(null===that&&(that=new Buffer(length)),that.length=length),that}function Buffer(arg,encodingOrOffset,length){if(!(Buffer.TYPED_ARRAY_SUPPORT||this instanceof Buffer))return new Buffer(arg,encodingOrOffset,length);if("number"==typeof arg){if("string"==typeof encodingOrOffset)throw new Error("If encoding is specified then the first argument must be a string");return allocUnsafe(this,arg)}return from(this,arg,encodingOrOffset,length)}function from(that,value,encodingOrOffset,length){if("number"==typeof value)throw new TypeError('"value" argument must not be a number');return"undefined"!=typeof ArrayBuffer&&value instanceof ArrayBuffer?function(that,array,byteOffset,length){if(array.byteLength,byteOffset<0||array.byteLength<byteOffset)throw new RangeError("'offset' is out of bounds");if(array.byteLength<byteOffset+(length||0))throw new RangeError("'length' is out of bounds");array=void 0===byteOffset&&void 0===length?new Uint8Array(array):void 0===length?new Uint8Array(array,byteOffset):new Uint8Array(array,byteOffset,length);Buffer.TYPED_ARRAY_SUPPORT?(that=array).__proto__=Buffer.prototype:that=fromArrayLike(that,array);return that}(that,value,encodingOrOffset,length):"string"==typeof value?function(that,string,encoding){"string"==typeof encoding&&""!==encoding||(encoding="utf8");if(!Buffer.isEncoding(encoding))throw new TypeError('"encoding" must be a valid string encoding');var length=0|byteLength(string,encoding),actual=(that=createBuffer(that,length)).write(string,encoding);actual!==length&&(that=that.slice(0,actual));return that}(that,value,encodingOrOffset):function(that,obj){if(Buffer.isBuffer(obj)){var len=0|checked(obj.length);return 0===(that=createBuffer(that,len)).length?that:(obj.copy(that,0,0,len),that)}if(obj){if("undefined"!=typeof ArrayBuffer&&obj.buffer instanceof ArrayBuffer||"length"in obj)return"number"!=typeof obj.length||(val=obj.length)!=val?createBuffer(that,0):fromArrayLike(that,obj);if("Buffer"===obj.type&&isArray(obj.data))return fromArrayLike(that,obj.data)}var val;throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}(that,value)}function assertSize(size){if("number"!=typeof size)throw new TypeError('"size" argument must be a number');if(size<0)throw new RangeError('"size" argument must not be negative')}function allocUnsafe(that,size){if(assertSize(size),that=createBuffer(that,size<0?0:0|checked(size)),!Buffer.TYPED_ARRAY_SUPPORT)for(var i=0;i<size;++i)that[i]=0;return that}function fromArrayLike(that,array){var length=array.length<0?0:0|checked(array.length);that=createBuffer(that,length);for(var i=0;i<length;i+=1)that[i]=255&array[i];return that}function checked(length){if(length>=kMaxLength())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+kMaxLength().toString(16)+" bytes");return 0|length}function byteLength(string,encoding){if(Buffer.isBuffer(string))return string.length;if("undefined"!=typeof ArrayBuffer&&"function"==typeof ArrayBuffer.isView&&(ArrayBuffer.isView(string)||string instanceof ArrayBuffer))return string.byteLength;"string"!=typeof string&&(string=""+string);var len=string.length;if(0===len)return 0;for(var loweredCase=!1;;)switch(encoding){case"ascii":case"latin1":case"binary":return len;case"utf8":case"utf-8":case void 0:return utf8ToBytes(string).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*len;case"hex":return len>>>1;case"base64":return base64ToBytes(string).length;default:if(loweredCase)return utf8ToBytes(string).length;encoding=(""+encoding).toLowerCase(),loweredCase=!0}}function slowToString(encoding,start,end){var loweredCase=!1;if((void 0===start||start<0)&&(start=0),start>this.length)return"";if((void 0===end||end>this.length)&&(end=this.length),end<=0)return"";if((end>>>=0)<=(start>>>=0))return"";for(encoding||(encoding="utf8");;)switch(encoding){case"hex":return hexSlice(this,start,end);case"utf8":case"utf-8":return utf8Slice(this,start,end);case"ascii":return asciiSlice(this,start,end);case"latin1":case"binary":return latin1Slice(this,start,end);case"base64":return base64Slice(this,start,end);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return utf16leSlice(this,start,end);default:if(loweredCase)throw new TypeError("Unknown encoding: "+encoding);encoding=(encoding+"").toLowerCase(),loweredCase=!0}}function swap(b,n,m){var i=b[n];b[n]=b[m],b[m]=i}function bidirectionalIndexOf(buffer,val,byteOffset,encoding,dir){if(0===buffer.length)return-1;if("string"==typeof byteOffset?(encoding=byteOffset,byteOffset=0):byteOffset>2147483647?byteOffset=2147483647:byteOffset<-2147483648&&(byteOffset=-2147483648),byteOffset=+byteOffset,isNaN(byteOffset)&&(byteOffset=dir?0:buffer.length-1),byteOffset<0&&(byteOffset=buffer.length+byteOffset),byteOffset>=buffer.length){if(dir)return-1;byteOffset=buffer.length-1}else if(byteOffset<0){if(!dir)return-1;byteOffset=0}if("string"==typeof val&&(val=Buffer.from(val,encoding)),Buffer.isBuffer(val))return 0===val.length?-1:arrayIndexOf(buffer,val,byteOffset,encoding,dir);if("number"==typeof val)return val&=255,Buffer.TYPED_ARRAY_SUPPORT&&"function"==typeof Uint8Array.prototype.indexOf?dir?Uint8Array.prototype.indexOf.call(buffer,val,byteOffset):Uint8Array.prototype.lastIndexOf.call(buffer,val,byteOffset):arrayIndexOf(buffer,[val],byteOffset,encoding,dir);throw new TypeError("val must be string, number or Buffer")}function arrayIndexOf(arr,val,byteOffset,encoding,dir){var i,indexSize=1,arrLength=arr.length,valLength=val.length;if(void 0!==encoding&&("ucs2"===(encoding=String(encoding).toLowerCase())||"ucs-2"===encoding||"utf16le"===encoding||"utf-16le"===encoding)){if(arr.length<2||val.length<2)return-1;indexSize=2,arrLength/=2,valLength/=2,byteOffset/=2}function read(buf,i){return 1===indexSize?buf[i]:buf.readUInt16BE(i*indexSize)}if(dir){var foundIndex=-1;for(i=byteOffset;i<arrLength;i++)if(read(arr,i)===read(val,-1===foundIndex?0:i-foundIndex)){if(-1===foundIndex&&(foundIndex=i),i-foundIndex+1===valLength)return foundIndex*indexSize}else-1!==foundIndex&&(i-=i-foundIndex),foundIndex=-1}else for(byteOffset+valLength>arrLength&&(byteOffset=arrLength-valLength),i=byteOffset;i>=0;i--){for(var found=!0,j=0;j<valLength;j++)if(read(arr,i+j)!==read(val,j)){found=!1;break}if(found)return i}return-1}function hexWrite(buf,string,offset,length){offset=Number(offset)||0;var remaining=buf.length-offset;length?(length=Number(length))>remaining&&(length=remaining):length=remaining;var strLen=string.length;if(strLen%2!=0)throw new TypeError("Invalid hex string");length>strLen/2&&(length=strLen/2);for(var i=0;i<length;++i){var parsed=parseInt(string.substr(2*i,2),16);if(isNaN(parsed))return i;buf[offset+i]=parsed}return i}function utf8Write(buf,string,offset,length){return blitBuffer(utf8ToBytes(string,buf.length-offset),buf,offset,length)}function asciiWrite(buf,string,offset,length){return blitBuffer(function(str){for(var byteArray=[],i=0;i<str.length;++i)byteArray.push(255&str.charCodeAt(i));return byteArray}(string),buf,offset,length)}function latin1Write(buf,string,offset,length){return asciiWrite(buf,string,offset,length)}function base64Write(buf,string,offset,length){return blitBuffer(base64ToBytes(string),buf,offset,length)}function ucs2Write(buf,string,offset,length){return blitBuffer(function(str,units){for(var c,hi,lo,byteArray=[],i=0;i<str.length&&!((units-=2)<0);++i)c=str.charCodeAt(i),hi=c>>8,lo=c%256,byteArray.push(lo),byteArray.push(hi);return byteArray}(string,buf.length-offset),buf,offset,length)}function base64Slice(buf,start,end){return 0===start&&end===buf.length?base64.fromByteArray(buf):base64.fromByteArray(buf.slice(start,end))}function utf8Slice(buf,start,end){end=Math.min(buf.length,end);for(var res=[],i=start;i<end;){var secondByte,thirdByte,fourthByte,tempCodePoint,firstByte=buf[i],codePoint=null,bytesPerSequence=firstByte>239?4:firstByte>223?3:firstByte>191?2:1;if(i+bytesPerSequence<=end)switch(bytesPerSequence){case 1:firstByte<128&&(codePoint=firstByte);break;case 2:128==(192&(secondByte=buf[i+1]))&&(tempCodePoint=(31&firstByte)<<6|63&secondByte)>127&&(codePoint=tempCodePoint);break;case 3:secondByte=buf[i+1],thirdByte=buf[i+2],128==(192&secondByte)&&128==(192&thirdByte)&&(tempCodePoint=(15&firstByte)<<12|(63&secondByte)<<6|63&thirdByte)>2047&&(tempCodePoint<55296||tempCodePoint>57343)&&(codePoint=tempCodePoint);break;case 4:secondByte=buf[i+1],thirdByte=buf[i+2],fourthByte=buf[i+3],128==(192&secondByte)&&128==(192&thirdByte)&&128==(192&fourthByte)&&(tempCodePoint=(15&firstByte)<<18|(63&secondByte)<<12|(63&thirdByte)<<6|63&fourthByte)>65535&&tempCodePoint<1114112&&(codePoint=tempCodePoint)}null===codePoint?(codePoint=65533,bytesPerSequence=1):codePoint>65535&&(codePoint-=65536,res.push(codePoint>>>10&1023|55296),codePoint=56320|1023&codePoint),res.push(codePoint),i+=bytesPerSequence}return function(codePoints){var len=codePoints.length;if(len<=MAX_ARGUMENTS_LENGTH)return String.fromCharCode.apply(String,codePoints);var res="",i=0;for(;i<len;)res+=String.fromCharCode.apply(String,codePoints.slice(i,i+=MAX_ARGUMENTS_LENGTH));return res}(res)}exports.Buffer=Buffer,exports.SlowBuffer=function(length){+length!=length&&(length=0);return Buffer.alloc(+length)},exports.INSPECT_MAX_BYTES=50,Buffer.TYPED_ARRAY_SUPPORT=void 0!==global.TYPED_ARRAY_SUPPORT?global.TYPED_ARRAY_SUPPORT:function(){try{var arr=new Uint8Array(1);return arr.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===arr.foo()&&"function"==typeof arr.subarray&&0===arr.subarray(1,1).byteLength}catch(e){return!1}}(),exports.kMaxLength=kMaxLength(),Buffer.poolSize=8192,Buffer._augment=function(arr){return arr.__proto__=Buffer.prototype,arr},Buffer.from=function(value,encodingOrOffset,length){return from(null,value,encodingOrOffset,length)},Buffer.TYPED_ARRAY_SUPPORT&&(Buffer.prototype.__proto__=Uint8Array.prototype,Buffer.__proto__=Uint8Array,"undefined"!=typeof Symbol&&Symbol.species&&Buffer[Symbol.species]===Buffer&&Object.defineProperty(Buffer,Symbol.species,{value:null,configurable:!0})),Buffer.alloc=function(size,fill,encoding){return function(that,size,fill,encoding){return assertSize(size),size<=0?createBuffer(that,size):void 0!==fill?"string"==typeof encoding?createBuffer(that,size).fill(fill,encoding):createBuffer(that,size).fill(fill):createBuffer(that,size)}(null,size,fill,encoding)},Buffer.allocUnsafe=function(size){return allocUnsafe(null,size)},Buffer.allocUnsafeSlow=function(size){return allocUnsafe(null,size)},Buffer.isBuffer=function(b){return!(null==b||!b._isBuffer)},Buffer.compare=function(a,b){if(!Buffer.isBuffer(a)||!Buffer.isBuffer(b))throw new TypeError("Arguments must be Buffers");if(a===b)return 0;for(var x=a.length,y=b.length,i=0,len=Math.min(x,y);i<len;++i)if(a[i]!==b[i]){x=a[i],y=b[i];break}return x<y?-1:y<x?1:0},Buffer.isEncoding=function(encoding){switch(String(encoding).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},Buffer.concat=function(list,length){if(!isArray(list))throw new TypeError('"list" argument must be an Array of Buffers');if(0===list.length)return Buffer.alloc(0);var i;if(void 0===length)for(length=0,i=0;i<list.length;++i)length+=list[i].length;var buffer=Buffer.allocUnsafe(length),pos=0;for(i=0;i<list.length;++i){var buf=list[i];if(!Buffer.isBuffer(buf))throw new TypeError('"list" argument must be an Array of Buffers');buf.copy(buffer,pos),pos+=buf.length}return buffer},Buffer.byteLength=byteLength,Buffer.prototype._isBuffer=!0,Buffer.prototype.swap16=function(){var len=this.length;if(len%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var i=0;i<len;i+=2)swap(this,i,i+1);return this},Buffer.prototype.swap32=function(){var len=this.length;if(len%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var i=0;i<len;i+=4)swap(this,i,i+3),swap(this,i+1,i+2);return this},Buffer.prototype.swap64=function(){var len=this.length;if(len%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var i=0;i<len;i+=8)swap(this,i,i+7),swap(this,i+1,i+6),swap(this,i+2,i+5),swap(this,i+3,i+4);return this},Buffer.prototype.toString=function(){var length=0|this.length;return 0===length?"":0===arguments.length?utf8Slice(this,0,length):slowToString.apply(this,arguments)},Buffer.prototype.equals=function(b){if(!Buffer.isBuffer(b))throw new TypeError("Argument must be a Buffer");return this===b||0===Buffer.compare(this,b)},Buffer.prototype.inspect=function(){var str="",max=exports.INSPECT_MAX_BYTES;return this.length>0&&(str=this.toString("hex",0,max).match(/.{2}/g).join(" "),this.length>max&&(str+=" ... ")),"<Buffer "+str+">"},Buffer.prototype.compare=function(target,start,end,thisStart,thisEnd){if(!Buffer.isBuffer(target))throw new TypeError("Argument must be a Buffer");if(void 0===start&&(start=0),void 0===end&&(end=target?target.length:0),void 0===thisStart&&(thisStart=0),void 0===thisEnd&&(thisEnd=this.length),start<0||end>target.length||thisStart<0||thisEnd>this.length)throw new RangeError("out of range index");if(thisStart>=thisEnd&&start>=end)return 0;if(thisStart>=thisEnd)return-1;if(start>=end)return 1;if(this===target)return 0;for(var x=(thisEnd>>>=0)-(thisStart>>>=0),y=(end>>>=0)-(start>>>=0),len=Math.min(x,y),thisCopy=this.slice(thisStart,thisEnd),targetCopy=target.slice(start,end),i=0;i<len;++i)if(thisCopy[i]!==targetCopy[i]){x=thisCopy[i],y=targetCopy[i];break}return x<y?-1:y<x?1:0},Buffer.prototype.includes=function(val,byteOffset,encoding){return-1!==this.indexOf(val,byteOffset,encoding)},Buffer.prototype.indexOf=function(val,byteOffset,encoding){return bidirectionalIndexOf(this,val,byteOffset,encoding,!0)},Buffer.prototype.lastIndexOf=function(val,byteOffset,encoding){return bidirectionalIndexOf(this,val,byteOffset,encoding,!1)},Buffer.prototype.write=function(string,offset,length,encoding){if(void 0===offset)encoding="utf8",length=this.length,offset=0;else if(void 0===length&&"string"==typeof offset)encoding=offset,length=this.length,offset=0;else{if(!isFinite(offset))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");offset|=0,isFinite(length)?(length|=0,void 0===encoding&&(encoding="utf8")):(encoding=length,length=void 0)}var remaining=this.length-offset;if((void 0===length||length>remaining)&&(length=remaining),string.length>0&&(length<0||offset<0)||offset>this.length)throw new RangeError("Attempt to write outside buffer bounds");encoding||(encoding="utf8");for(var loweredCase=!1;;)switch(encoding){case"hex":return hexWrite(this,string,offset,length);case"utf8":case"utf-8":return utf8Write(this,string,offset,length);case"ascii":return asciiWrite(this,string,offset,length);case"latin1":case"binary":return latin1Write(this,string,offset,length);case"base64":return base64Write(this,string,offset,length);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return ucs2Write(this,string,offset,length);default:if(loweredCase)throw new TypeError("Unknown encoding: "+encoding);encoding=(""+encoding).toLowerCase(),loweredCase=!0}},Buffer.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var MAX_ARGUMENTS_LENGTH=4096;function asciiSlice(buf,start,end){var ret="";end=Math.min(buf.length,end);for(var i=start;i<end;++i)ret+=String.fromCharCode(127&buf[i]);return ret}function latin1Slice(buf,start,end){var ret="";end=Math.min(buf.length,end);for(var i=start;i<end;++i)ret+=String.fromCharCode(buf[i]);return ret}function hexSlice(buf,start,end){var len=buf.length;(!start||start<0)&&(start=0),(!end||end<0||end>len)&&(end=len);for(var out="",i=start;i<end;++i)out+=toHex(buf[i]);return out}function utf16leSlice(buf,start,end){for(var bytes=buf.slice(start,end),res="",i=0;i<bytes.length;i+=2)res+=String.fromCharCode(bytes[i]+256*bytes[i+1]);return res}function checkOffset(offset,ext,length){if(offset%1!=0||offset<0)throw new RangeError("offset is not uint");if(offset+ext>length)throw new RangeError("Trying to access beyond buffer length")}function checkInt(buf,value,offset,ext,max,min){if(!Buffer.isBuffer(buf))throw new TypeError('"buffer" argument must be a Buffer instance');if(value>max||value<min)throw new RangeError('"value" argument is out of bounds');if(offset+ext>buf.length)throw new RangeError("Index out of range")}function objectWriteUInt16(buf,value,offset,littleEndian){value<0&&(value=65535+value+1);for(var i=0,j=Math.min(buf.length-offset,2);i<j;++i)buf[offset+i]=(value&255<<8*(littleEndian?i:1-i))>>>8*(littleEndian?i:1-i)}function objectWriteUInt32(buf,value,offset,littleEndian){value<0&&(value=4294967295+value+1);for(var i=0,j=Math.min(buf.length-offset,4);i<j;++i)buf[offset+i]=value>>>8*(littleEndian?i:3-i)&255}function checkIEEE754(buf,value,offset,ext,max,min){if(offset+ext>buf.length)throw new RangeError("Index out of range");if(offset<0)throw new RangeError("Index out of range")}function writeFloat(buf,value,offset,littleEndian,noAssert){return noAssert||checkIEEE754(buf,0,offset,4),ieee754.write(buf,value,offset,littleEndian,23,4),offset+4}function writeDouble(buf,value,offset,littleEndian,noAssert){return noAssert||checkIEEE754(buf,0,offset,8),ieee754.write(buf,value,offset,littleEndian,52,8),offset+8}Buffer.prototype.slice=function(start,end){var newBuf,len=this.length;if((start=~~start)<0?(start+=len)<0&&(start=0):start>len&&(start=len),(end=void 0===end?len:~~end)<0?(end+=len)<0&&(end=0):end>len&&(end=len),end<start&&(end=start),Buffer.TYPED_ARRAY_SUPPORT)(newBuf=this.subarray(start,end)).__proto__=Buffer.prototype;else{var sliceLen=end-start;newBuf=new Buffer(sliceLen,void 0);for(var i=0;i<sliceLen;++i)newBuf[i]=this[i+start]}return newBuf},Buffer.prototype.readUIntLE=function(offset,byteLength,noAssert){offset|=0,byteLength|=0,noAssert||checkOffset(offset,byteLength,this.length);for(var val=this[offset],mul=1,i=0;++i<byteLength&&(mul*=256);)val+=this[offset+i]*mul;return val},Buffer.prototype.readUIntBE=function(offset,byteLength,noAssert){offset|=0,byteLength|=0,noAssert||checkOffset(offset,byteLength,this.length);for(var val=this[offset+--byteLength],mul=1;byteLength>0&&(mul*=256);)val+=this[offset+--byteLength]*mul;return val},Buffer.prototype.readUInt8=function(offset,noAssert){return noAssert||checkOffset(offset,1,this.length),this[offset]},Buffer.prototype.readUInt16LE=function(offset,noAssert){return noAssert||checkOffset(offset,2,this.length),this[offset]|this[offset+1]<<8},Buffer.prototype.readUInt16BE=function(offset,noAssert){return noAssert||checkOffset(offset,2,this.length),this[offset]<<8|this[offset+1]},Buffer.prototype.readUInt32LE=function(offset,noAssert){return noAssert||checkOffset(offset,4,this.length),(this[offset]|this[offset+1]<<8|this[offset+2]<<16)+16777216*this[offset+3]},Buffer.prototype.readUInt32BE=function(offset,noAssert){return noAssert||checkOffset(offset,4,this.length),16777216*this[offset]+(this[offset+1]<<16|this[offset+2]<<8|this[offset+3])},Buffer.prototype.readIntLE=function(offset,byteLength,noAssert){offset|=0,byteLength|=0,noAssert||checkOffset(offset,byteLength,this.length);for(var val=this[offset],mul=1,i=0;++i<byteLength&&(mul*=256);)val+=this[offset+i]*mul;return val>=(mul*=128)&&(val-=Math.pow(2,8*byteLength)),val},Buffer.prototype.readIntBE=function(offset,byteLength,noAssert){offset|=0,byteLength|=0,noAssert||checkOffset(offset,byteLength,this.length);for(var i=byteLength,mul=1,val=this[offset+--i];i>0&&(mul*=256);)val+=this[offset+--i]*mul;return val>=(mul*=128)&&(val-=Math.pow(2,8*byteLength)),val},Buffer.prototype.readInt8=function(offset,noAssert){return noAssert||checkOffset(offset,1,this.length),128&this[offset]?-1*(255-this[offset]+1):this[offset]},Buffer.prototype.readInt16LE=function(offset,noAssert){noAssert||checkOffset(offset,2,this.length);var val=this[offset]|this[offset+1]<<8;return 32768&val?4294901760|val:val},Buffer.prototype.readInt16BE=function(offset,noAssert){noAssert||checkOffset(offset,2,this.length);var val=this[offset+1]|this[offset]<<8;return 32768&val?4294901760|val:val},Buffer.prototype.readInt32LE=function(offset,noAssert){return noAssert||checkOffset(offset,4,this.length),this[offset]|this[offset+1]<<8|this[offset+2]<<16|this[offset+3]<<24},Buffer.prototype.readInt32BE=function(offset,noAssert){return noAssert||checkOffset(offset,4,this.length),this[offset]<<24|this[offset+1]<<16|this[offset+2]<<8|this[offset+3]},Buffer.prototype.readFloatLE=function(offset,noAssert){return noAssert||checkOffset(offset,4,this.length),ieee754.read(this,offset,!0,23,4)},Buffer.prototype.readFloatBE=function(offset,noAssert){return noAssert||checkOffset(offset,4,this.length),ieee754.read(this,offset,!1,23,4)},Buffer.prototype.readDoubleLE=function(offset,noAssert){return noAssert||checkOffset(offset,8,this.length),ieee754.read(this,offset,!0,52,8)},Buffer.prototype.readDoubleBE=function(offset,noAssert){return noAssert||checkOffset(offset,8,this.length),ieee754.read(this,offset,!1,52,8)},Buffer.prototype.writeUIntLE=function(value,offset,byteLength,noAssert){(value=+value,offset|=0,byteLength|=0,noAssert)||checkInt(this,value,offset,byteLength,Math.pow(2,8*byteLength)-1,0);var mul=1,i=0;for(this[offset]=255&value;++i<byteLength&&(mul*=256);)this[offset+i]=value/mul&255;return offset+byteLength},Buffer.prototype.writeUIntBE=function(value,offset,byteLength,noAssert){(value=+value,offset|=0,byteLength|=0,noAssert)||checkInt(this,value,offset,byteLength,Math.pow(2,8*byteLength)-1,0);var i=byteLength-1,mul=1;for(this[offset+i]=255&value;--i>=0&&(mul*=256);)this[offset+i]=value/mul&255;return offset+byteLength},Buffer.prototype.writeUInt8=function(value,offset,noAssert){return value=+value,offset|=0,noAssert||checkInt(this,value,offset,1,255,0),Buffer.TYPED_ARRAY_SUPPORT||(value=Math.floor(value)),this[offset]=255&value,offset+1},Buffer.prototype.writeUInt16LE=function(value,offset,noAssert){return value=+value,offset|=0,noAssert||checkInt(this,value,offset,2,65535,0),Buffer.TYPED_ARRAY_SUPPORT?(this[offset]=255&value,this[offset+1]=value>>>8):objectWriteUInt16(this,value,offset,!0),offset+2},Buffer.prototype.writeUInt16BE=function(value,offset,noAssert){return value=+value,offset|=0,noAssert||checkInt(this,value,offset,2,65535,0),Buffer.TYPED_ARRAY_SUPPORT?(this[offset]=value>>>8,this[offset+1]=255&value):objectWriteUInt16(this,value,offset,!1),offset+2},Buffer.prototype.writeUInt32LE=function(value,offset,noAssert){return value=+value,offset|=0,noAssert||checkInt(this,value,offset,4,4294967295,0),Buffer.TYPED_ARRAY_SUPPORT?(this[offset+3]=value>>>24,this[offset+2]=value>>>16,this[offset+1]=value>>>8,this[offset]=255&value):objectWriteUInt32(this,value,offset,!0),offset+4},Buffer.prototype.writeUInt32BE=function(value,offset,noAssert){return value=+value,offset|=0,noAssert||checkInt(this,value,offset,4,4294967295,0),Buffer.TYPED_ARRAY_SUPPORT?(this[offset]=value>>>24,this[offset+1]=value>>>16,this[offset+2]=value>>>8,this[offset+3]=255&value):objectWriteUInt32(this,value,offset,!1),offset+4},Buffer.prototype.writeIntLE=function(value,offset,byteLength,noAssert){if(value=+value,offset|=0,!noAssert){var limit=Math.pow(2,8*byteLength-1);checkInt(this,value,offset,byteLength,limit-1,-limit)}var i=0,mul=1,sub=0;for(this[offset]=255&value;++i<byteLength&&(mul*=256);)value<0&&0===sub&&0!==this[offset+i-1]&&(sub=1),this[offset+i]=(value/mul>>0)-sub&255;return offset+byteLength},Buffer.prototype.writeIntBE=function(value,offset,byteLength,noAssert){if(value=+value,offset|=0,!noAssert){var limit=Math.pow(2,8*byteLength-1);checkInt(this,value,offset,byteLength,limit-1,-limit)}var i=byteLength-1,mul=1,sub=0;for(this[offset+i]=255&value;--i>=0&&(mul*=256);)value<0&&0===sub&&0!==this[offset+i+1]&&(sub=1),this[offset+i]=(value/mul>>0)-sub&255;return offset+byteLength},Buffer.prototype.writeInt8=function(value,offset,noAssert){return value=+value,offset|=0,noAssert||checkInt(this,value,offset,1,127,-128),Buffer.TYPED_ARRAY_SUPPORT||(value=Math.floor(value)),value<0&&(value=255+value+1),this[offset]=255&value,offset+1},Buffer.prototype.writeInt16LE=function(value,offset,noAssert){return value=+value,offset|=0,noAssert||checkInt(this,value,offset,2,32767,-32768),Buffer.TYPED_ARRAY_SUPPORT?(this[offset]=255&value,this[offset+1]=value>>>8):objectWriteUInt16(this,value,offset,!0),offset+2},Buffer.prototype.writeInt16BE=function(value,offset,noAssert){return value=+value,offset|=0,noAssert||checkInt(this,value,offset,2,32767,-32768),Buffer.TYPED_ARRAY_SUPPORT?(this[offset]=value>>>8,this[offset+1]=255&value):objectWriteUInt16(this,value,offset,!1),offset+2},Buffer.prototype.writeInt32LE=function(value,offset,noAssert){return value=+value,offset|=0,noAssert||checkInt(this,value,offset,4,2147483647,-2147483648),Buffer.TYPED_ARRAY_SUPPORT?(this[offset]=255&value,this[offset+1]=value>>>8,this[offset+2]=value>>>16,this[offset+3]=value>>>24):objectWriteUInt32(this,value,offset,!0),offset+4},Buffer.prototype.writeInt32BE=function(value,offset,noAssert){return value=+value,offset|=0,noAssert||checkInt(this,value,offset,4,2147483647,-2147483648),value<0&&(value=4294967295+value+1),Buffer.TYPED_ARRAY_SUPPORT?(this[offset]=value>>>24,this[offset+1]=value>>>16,this[offset+2]=value>>>8,this[offset+3]=255&value):objectWriteUInt32(this,value,offset,!1),offset+4},Buffer.prototype.writeFloatLE=function(value,offset,noAssert){return writeFloat(this,value,offset,!0,noAssert)},Buffer.prototype.writeFloatBE=function(value,offset,noAssert){return writeFloat(this,value,offset,!1,noAssert)},Buffer.prototype.writeDoubleLE=function(value,offset,noAssert){return writeDouble(this,value,offset,!0,noAssert)},Buffer.prototype.writeDoubleBE=function(value,offset,noAssert){return writeDouble(this,value,offset,!1,noAssert)},Buffer.prototype.copy=function(target,targetStart,start,end){if(start||(start=0),end||0===end||(end=this.length),targetStart>=target.length&&(targetStart=target.length),targetStart||(targetStart=0),end>0&&end<start&&(end=start),end===start)return 0;if(0===target.length||0===this.length)return 0;if(targetStart<0)throw new RangeError("targetStart out of bounds");if(start<0||start>=this.length)throw new RangeError("sourceStart out of bounds");if(end<0)throw new RangeError("sourceEnd out of bounds");end>this.length&&(end=this.length),target.length-targetStart<end-start&&(end=target.length-targetStart+start);var i,len=end-start;if(this===target&&start<targetStart&&targetStart<end)for(i=len-1;i>=0;--i)target[i+targetStart]=this[i+start];else if(len<1e3||!Buffer.TYPED_ARRAY_SUPPORT)for(i=0;i<len;++i)target[i+targetStart]=this[i+start];else Uint8Array.prototype.set.call(target,this.subarray(start,start+len),targetStart);return len},Buffer.prototype.fill=function(val,start,end,encoding){if("string"==typeof val){if("string"==typeof start?(encoding=start,start=0,end=this.length):"string"==typeof end&&(encoding=end,end=this.length),1===val.length){var code=val.charCodeAt(0);code<256&&(val=code)}if(void 0!==encoding&&"string"!=typeof encoding)throw new TypeError("encoding must be a string");if("string"==typeof encoding&&!Buffer.isEncoding(encoding))throw new TypeError("Unknown encoding: "+encoding)}else"number"==typeof val&&(val&=255);if(start<0||this.length<start||this.length<end)throw new RangeError("Out of range index");if(end<=start)return this;var i;if(start>>>=0,end=void 0===end?this.length:end>>>0,val||(val=0),"number"==typeof val)for(i=start;i<end;++i)this[i]=val;else{var bytes=Buffer.isBuffer(val)?val:utf8ToBytes(new Buffer(val,encoding).toString()),len=bytes.length;for(i=0;i<end-start;++i)this[i+start]=bytes[i%len]}return this};var INVALID_BASE64_RE=/[^+\/0-9A-Za-z-_]/g;function toHex(n){return n<16?"0"+n.toString(16):n.toString(16)}function utf8ToBytes(string,units){var codePoint;units=units||1/0;for(var length=string.length,leadSurrogate=null,bytes=[],i=0;i<length;++i){if((codePoint=string.charCodeAt(i))>55295&&codePoint<57344){if(!leadSurrogate){if(codePoint>56319){(units-=3)>-1&&bytes.push(239,191,189);continue}if(i+1===length){(units-=3)>-1&&bytes.push(239,191,189);continue}leadSurrogate=codePoint;continue}if(codePoint<56320){(units-=3)>-1&&bytes.push(239,191,189),leadSurrogate=codePoint;continue}codePoint=65536+(leadSurrogate-55296<<10|codePoint-56320)}else leadSurrogate&&(units-=3)>-1&&bytes.push(239,191,189);if(leadSurrogate=null,codePoint<128){if((units-=1)<0)break;bytes.push(codePoint)}else if(codePoint<2048){if((units-=2)<0)break;bytes.push(codePoint>>6|192,63&codePoint|128)}else if(codePoint<65536){if((units-=3)<0)break;bytes.push(codePoint>>12|224,codePoint>>6&63|128,63&codePoint|128)}else{if(!(codePoint<1114112))throw new Error("Invalid code point");if((units-=4)<0)break;bytes.push(codePoint>>18|240,codePoint>>12&63|128,codePoint>>6&63|128,63&codePoint|128)}}return bytes}function base64ToBytes(str){return base64.toByteArray(function(str){if((str=function(str){return str.trim?str.trim():str.replace(/^\s+|\s+$/g,"")}(str).replace(INVALID_BASE64_RE,"")).length<2)return"";for(;str.length%4!=0;)str+="=";return str}(str))}function blitBuffer(src,dst,offset,length){for(var i=0;i<length&&!(i+offset>=dst.length||i>=src.length);++i)dst[i+offset]=src[i];return i}}).call(this,__webpack_require__(135))},function(module,exports){window.version="1.67.2"},function(module,exports,__webpack_require__){module.exports=function(CryptoJS){return function(Math){var C=CryptoJS,C_lib=C.lib,WordArray=C_lib.WordArray,Hasher=C_lib.Hasher,C_algo=C.algo,H=[],K=[];!function(){function isPrime(n){for(var sqrtN=Math.sqrt(n),factor=2;factor<=sqrtN;factor++)if(!(n%factor))return!1;return!0}function getFractionalBits(n){return 4294967296*(n-(0|n))|0}for(var n=2,nPrime=0;nPrime<64;)isPrime(n)&&(nPrime<8&&(H[nPrime]=getFractionalBits(Math.pow(n,.5))),K[nPrime]=getFractionalBits(Math.pow(n,1/3)),nPrime++),n++}();var W=[],SHA256=C_algo.SHA256=Hasher.extend({_doReset:function(){this._hash=new WordArray.init(H.slice(0))},_doProcessBlock:function(M,offset){for(var H=this._hash.words,a=H[0],b=H[1],c=H[2],d=H[3],e=H[4],f=H[5],g=H[6],h=H[7],i=0;i<64;i++){if(i<16)W[i]=0|M[offset+i];else{var gamma0x=W[i-15],gamma0=(gamma0x<<25|gamma0x>>>7)^(gamma0x<<14|gamma0x>>>18)^gamma0x>>>3,gamma1x=W[i-2],gamma1=(gamma1x<<15|gamma1x>>>17)^(gamma1x<<13|gamma1x>>>19)^gamma1x>>>10;W[i]=gamma0+W[i-7]+gamma1+W[i-16]}var maj=a&b^a&c^b&c,sigma0=(a<<30|a>>>2)^(a<<19|a>>>13)^(a<<10|a>>>22),t1=h+((e<<26|e>>>6)^(e<<21|e>>>11)^(e<<7|e>>>25))+(e&f^~e&g)+K[i]+W[i];h=g,g=f,f=e,e=d+t1|0,d=c,c=b,b=a,a=t1+(sigma0+maj)|0}H[0]=H[0]+a|0,H[1]=H[1]+b|0,H[2]=H[2]+c|0,H[3]=H[3]+d|0,H[4]=H[4]+e|0,H[5]=H[5]+f|0,H[6]=H[6]+g|0,H[7]=H[7]+h|0},_doFinalize:function(){var data=this._data,dataWords=data.words,nBitsTotal=8*this._nDataBytes,nBitsLeft=8*data.sigBytes;return dataWords[nBitsLeft>>>5]|=128<<24-nBitsLeft%32,dataWords[14+(nBitsLeft+64>>>9<<4)]=Math.floor(nBitsTotal/4294967296),dataWords[15+(nBitsLeft+64>>>9<<4)]=nBitsTotal,data.sigBytes=4*dataWords.length,this._process(),this._hash},clone:function(){var clone=Hasher.clone.call(this);return clone._hash=this._hash.clone(),clone}});C.SHA256=Hasher._createHelper(SHA256),C.HmacSHA256=Hasher._createHmacHelper(SHA256)}(Math),CryptoJS.SHA256}(__webpack_require__(1))},function(module,exports,__webpack_require__){module.exports=function(CryptoJS){return function(){var C=CryptoJS,Hasher=C.lib.Hasher,C_x64=C.x64,X64Word=C_x64.Word,X64WordArray=C_x64.WordArray,C_algo=C.algo;function X64Word_create(){return X64Word.create.apply(X64Word,arguments)}var K=[X64Word_create(1116352408,3609767458),X64Word_create(1899447441,602891725),X64Word_create(3049323471,3964484399),X64Word_create(3921009573,2173295548),X64Word_create(961987163,4081628472),X64Word_create(1508970993,3053834265),X64Word_create(2453635748,2937671579),X64Word_create(2870763221,3664609560),X64Word_create(3624381080,2734883394),X64Word_create(310598401,1164996542),X64Word_create(607225278,1323610764),X64Word_create(1426881987,3590304994),X64Word_create(1925078388,4068182383),X64Word_create(2162078206,991336113),X64Word_create(2614888103,633803317),X64Word_create(3248222580,3479774868),X64Word_create(3835390401,2666613458),X64Word_create(4022224774,944711139),X64Word_create(264347078,2341262773),X64Word_create(604807628,2007800933),X64Word_create(770255983,1495990901),X64Word_create(1249150122,1856431235),X64Word_create(1555081692,3175218132),X64Word_create(1996064986,2198950837),X64Word_create(2554220882,3999719339),X64Word_create(2821834349,766784016),X64Word_create(2952996808,2566594879),X64Word_create(3210313671,3203337956),X64Word_create(3336571891,1034457026),X64Word_create(3584528711,2466948901),X64Word_create(113926993,3758326383),X64Word_create(338241895,168717936),X64Word_create(666307205,1188179964),X64Word_create(773529912,1546045734),X64Word_create(1294757372,1522805485),X64Word_create(1396182291,2643833823),X64Word_create(1695183700,2343527390),X64Word_create(1986661051,1014477480),X64Word_create(2177026350,1206759142),X64Word_create(2456956037,344077627),X64Word_create(2730485921,1290863460),X64Word_create(2820302411,3158454273),X64Word_create(3259730800,3505952657),X64Word_create(3345764771,106217008),X64Word_create(3516065817,3606008344),X64Word_create(3600352804,1432725776),X64Word_create(4094571909,1467031594),X64Word_create(275423344,851169720),X64Word_create(430227734,3100823752),X64Word_create(506948616,1363258195),X64Word_create(659060556,3750685593),X64Word_create(883997877,3785050280),X64Word_create(958139571,3318307427),X64Word_create(1322822218,3812723403),X64Word_create(1537002063,2003034995),X64Word_create(1747873779,3602036899),X64Word_create(1955562222,1575990012),X64Word_create(2024104815,1125592928),X64Word_create(2227730452,2716904306),X64Word_create(2361852424,442776044),X64Word_create(2428436474,593698344),X64Word_create(2756734187,3733110249),X64Word_create(3204031479,2999351573),X64Word_create(3329325298,3815920427),X64Word_create(3391569614,3928383900),X64Word_create(3515267271,566280711),X64Word_create(3940187606,3454069534),X64Word_create(4118630271,4000239992),X64Word_create(116418474,1914138554),X64Word_create(174292421,2731055270),X64Word_create(289380356,3203993006),X64Word_create(460393269,320620315),X64Word_create(685471733,587496836),X64Word_create(852142971,1086792851),X64Word_create(1017036298,365543100),X64Word_create(1126000580,2618297676),X64Word_create(1288033470,3409855158),X64Word_create(1501505948,4234509866),X64Word_create(1607167915,987167468),X64Word_create(1816402316,1246189591)],W=[];!function(){for(var i=0;i<80;i++)W[i]=X64Word_create()}();var SHA512=C_algo.SHA512=Hasher.extend({_doReset:function(){this._hash=new X64WordArray.init([new X64Word.init(1779033703,4089235720),new X64Word.init(3144134277,2227873595),new X64Word.init(1013904242,4271175723),new X64Word.init(2773480762,1595750129),new X64Word.init(1359893119,2917565137),new X64Word.init(2600822924,725511199),new X64Word.init(528734635,4215389547),new X64Word.init(1541459225,327033209)])},_doProcessBlock:function(M,offset){for(var H=this._hash.words,H0=H[0],H1=H[1],H2=H[2],H3=H[3],H4=H[4],H5=H[5],H6=H[6],H7=H[7],H0h=H0.high,H0l=H0.low,H1h=H1.high,H1l=H1.low,H2h=H2.high,H2l=H2.low,H3h=H3.high,H3l=H3.low,H4h=H4.high,H4l=H4.low,H5h=H5.high,H5l=H5.low,H6h=H6.high,H6l=H6.low,H7h=H7.high,H7l=H7.low,ah=H0h,al=H0l,bh=H1h,bl=H1l,ch=H2h,cl=H2l,dh=H3h,dl=H3l,eh=H4h,el=H4l,fh=H5h,fl=H5l,gh=H6h,gl=H6l,hh=H7h,hl=H7l,i=0;i<80;i++){var Wi=W[i];if(i<16)var Wih=Wi.high=0|M[offset+2*i],Wil=Wi.low=0|M[offset+2*i+1];else{var gamma0x=W[i-15],gamma0xh=gamma0x.high,gamma0xl=gamma0x.low,gamma0h=(gamma0xh>>>1|gamma0xl<<31)^(gamma0xh>>>8|gamma0xl<<24)^gamma0xh>>>7,gamma0l=(gamma0xl>>>1|gamma0xh<<31)^(gamma0xl>>>8|gamma0xh<<24)^(gamma0xl>>>7|gamma0xh<<25),gamma1x=W[i-2],gamma1xh=gamma1x.high,gamma1xl=gamma1x.low,gamma1h=(gamma1xh>>>19|gamma1xl<<13)^(gamma1xh<<3|gamma1xl>>>29)^gamma1xh>>>6,gamma1l=(gamma1xl>>>19|gamma1xh<<13)^(gamma1xl<<3|gamma1xh>>>29)^(gamma1xl>>>6|gamma1xh<<26),Wi7=W[i-7],Wi7h=Wi7.high,Wi7l=Wi7.low,Wi16=W[i-16],Wi16h=Wi16.high,Wi16l=Wi16.low;Wih=(Wih=(Wih=gamma0h+Wi7h+((Wil=gamma0l+Wi7l)>>>0<gamma0l>>>0?1:0))+gamma1h+((Wil+=gamma1l)>>>0<gamma1l>>>0?1:0))+Wi16h+((Wil+=Wi16l)>>>0<Wi16l>>>0?1:0),Wi.high=Wih,Wi.low=Wil}var t1l,chh=eh&fh^~eh&gh,chl=el&fl^~el&gl,majh=ah&bh^ah&ch^bh&ch,majl=al&bl^al&cl^bl&cl,sigma0h=(ah>>>28|al<<4)^(ah<<30|al>>>2)^(ah<<25|al>>>7),sigma0l=(al>>>28|ah<<4)^(al<<30|ah>>>2)^(al<<25|ah>>>7),sigma1h=(eh>>>14|el<<18)^(eh>>>18|el<<14)^(eh<<23|el>>>9),sigma1l=(el>>>14|eh<<18)^(el>>>18|eh<<14)^(el<<23|eh>>>9),Ki=K[i],Kih=Ki.high,Kil=Ki.low,t1h=hh+sigma1h+((t1l=hl+sigma1l)>>>0<hl>>>0?1:0),t2l=sigma0l+majl;hh=gh,hl=gl,gh=fh,gl=fl,fh=eh,fl=el,eh=dh+(t1h=(t1h=(t1h=t1h+chh+((t1l+=chl)>>>0<chl>>>0?1:0))+Kih+((t1l+=Kil)>>>0<Kil>>>0?1:0))+Wih+((t1l+=Wil)>>>0<Wil>>>0?1:0))+((el=dl+t1l|0)>>>0<dl>>>0?1:0)|0,dh=ch,dl=cl,ch=bh,cl=bl,bh=ah,bl=al,ah=t1h+(sigma0h+majh+(t2l>>>0<sigma0l>>>0?1:0))+((al=t1l+t2l|0)>>>0<t1l>>>0?1:0)|0}H0l=H0.low=H0l+al,H0.high=H0h+ah+(H0l>>>0<al>>>0?1:0),H1l=H1.low=H1l+bl,H1.high=H1h+bh+(H1l>>>0<bl>>>0?1:0),H2l=H2.low=H2l+cl,H2.high=H2h+ch+(H2l>>>0<cl>>>0?1:0),H3l=H3.low=H3l+dl,H3.high=H3h+dh+(H3l>>>0<dl>>>0?1:0),H4l=H4.low=H4l+el,H4.high=H4h+eh+(H4l>>>0<el>>>0?1:0),H5l=H5.low=H5l+fl,H5.high=H5h+fh+(H5l>>>0<fl>>>0?1:0),H6l=H6.low=H6l+gl,H6.high=H6h+gh+(H6l>>>0<gl>>>0?1:0),H7l=H7.low=H7l+hl,H7.high=H7h+hh+(H7l>>>0<hl>>>0?1:0)},_doFinalize:function(){var data=this._data,dataWords=data.words,nBitsTotal=8*this._nDataBytes,nBitsLeft=8*data.sigBytes;return dataWords[nBitsLeft>>>5]|=128<<24-nBitsLeft%32,dataWords[30+(nBitsLeft+128>>>10<<5)]=Math.floor(nBitsTotal/4294967296),dataWords[31+(nBitsLeft+128>>>10<<5)]=nBitsTotal,data.sigBytes=4*dataWords.length,this._process(),this._hash.toX32()},clone:function(){var clone=Hasher.clone.call(this);return clone._hash=this._hash.clone(),clone},blockSize:32});C.SHA512=Hasher._createHelper(SHA512),C.HmacSHA512=Hasher._createHmacHelper(SHA512)}(),CryptoJS.SHA512}(__webpack_require__(1),__webpack_require__(9))},function(module,exports,__webpack_require__){(function(Buffer){!function(exports){var storage,UNDEFINED="undefined",BUFFER=UNDEFINED!==typeof Buffer&&Buffer,UINT8ARRAY=UNDEFINED!==typeof Uint8Array&&Uint8Array,ARRAYBUFFER=UNDEFINED!==typeof ArrayBuffer&&ArrayBuffer,ZERO=[0,0,0,0,0,0,0,0],isArray=Array.isArray||function(val){return!!val&&"[object Array]"==Object.prototype.toString.call(val)},BIT32=4294967296,BIT24=16777216;function factory(name,bigendian,unsigned){var posH=bigendian?0:4,posL=bigendian?4:0,pos0=bigendian?0:3,pos1=bigendian?1:2,pos2=bigendian?2:1,pos3=bigendian?3:0,fromPositive=bigendian?fromPositiveBE:fromPositiveLE,fromNegative=bigendian?fromNegativeBE:fromNegativeLE,proto=Int64.prototype,isName="is"+name,_isInt64="_"+isName;return proto.buffer=void 0,proto.offset=0,proto[_isInt64]=!0,proto.toNumber=toNumber,proto.toString=function(radix){var buffer=this.buffer,offset=this.offset,high=readInt32(buffer,offset+posH),low=readInt32(buffer,offset+posL),str="",sign=!unsigned&&2147483648&high;sign&&(high=~high,low=BIT32-low);radix=radix||10;for(;;){var mod=high%radix*BIT32+low;if(high=Math.floor(high/radix),low=Math.floor(mod/radix),str=(mod%radix).toString(radix)+str,!high&&!low)break}sign&&(str="-"+str);return str},proto.toJSON=toNumber,proto.toArray=toArray,BUFFER&&(proto.toBuffer=toBuffer),UINT8ARRAY&&(proto.toArrayBuffer=toArrayBuffer),Int64[isName]=function(b){return!(!b||!b[_isInt64])},exports[name]=Int64,Int64;function Int64(buffer,offset,value,raddix){return this instanceof Int64?function(that,buffer,offset,value,raddix){UINT8ARRAY&&ARRAYBUFFER&&(buffer instanceof ARRAYBUFFER&&(buffer=new UINT8ARRAY(buffer)),value instanceof ARRAYBUFFER&&(value=new UINT8ARRAY(value)));if(!(buffer||offset||value||storage))return void(that.buffer=newArray(ZERO,0));if(!isValidBuffer(buffer,offset)){raddix=offset,value=buffer,offset=0,buffer=new(storage||Array)(8)}if(that.buffer=buffer,that.offset=offset|=0,UNDEFINED===typeof value)return;"string"==typeof value?function(buffer,offset,str,raddix){var pos=0,len=str.length,high=0,low=0;"-"===str[0]&&pos++;var sign=pos;for(;pos<len;){var chr=parseInt(str[pos++],raddix);if(!(chr>=0))break;low=low*raddix+chr,high=high*raddix+Math.floor(low/BIT32),low%=BIT32}sign&&(high=~high,low?low=BIT32-low:high++);writeInt32(buffer,offset+posH,high),writeInt32(buffer,offset+posL,low)}(buffer,offset,value,raddix||10):isValidBuffer(value,raddix)?fromArray(buffer,offset,value,raddix):"number"==typeof raddix?(writeInt32(buffer,offset+posH,value),writeInt32(buffer,offset+posL,raddix)):value>0?fromPositive(buffer,offset,value):value<0?fromNegative(buffer,offset,value):fromArray(buffer,offset,ZERO,0)}(this,buffer,offset,value,raddix):new Int64(buffer,offset,value,raddix)}function toNumber(){var buffer=this.buffer,offset=this.offset,high=readInt32(buffer,offset+posH),low=readInt32(buffer,offset+posL);return unsigned||(high|=0),high?high*BIT32+low:low}function writeInt32(buffer,offset,value){buffer[offset+pos3]=255&value,value>>=8,buffer[offset+pos2]=255&value,value>>=8,buffer[offset+pos1]=255&value,value>>=8,buffer[offset+pos0]=255&value}function readInt32(buffer,offset){return buffer[offset+pos0]*BIT24+(buffer[offset+pos1]<<16)+(buffer[offset+pos2]<<8)+buffer[offset+pos3]}}function toArray(raw){var buffer=this.buffer,offset=this.offset;return storage=null,!1!==raw&&0===offset&&8===buffer.length&&isArray(buffer)?buffer:newArray(buffer,offset)}function toBuffer(raw){var buffer=this.buffer,offset=this.offset;if(storage=BUFFER,!1!==raw&&0===offset&&8===buffer.length&&Buffer.isBuffer(buffer))return buffer;var dest=new BUFFER(8);return fromArray(dest,0,buffer,offset),dest}function toArrayBuffer(raw){var buffer=this.buffer,offset=this.offset,arrbuf=buffer.buffer;if(storage=UINT8ARRAY,!1!==raw&&0===offset&&arrbuf instanceof ARRAYBUFFER&&8===arrbuf.byteLength)return arrbuf;var dest=new UINT8ARRAY(8);return fromArray(dest,0,buffer,offset),dest.buffer}function isValidBuffer(buffer,offset){var len=buffer&&buffer.length;return offset|=0,len&&offset+8<=len&&"string"!=typeof buffer[offset]}function fromArray(destbuf,destoff,srcbuf,srcoff){destoff|=0,srcoff|=0;for(var i=0;i<8;i++)destbuf[destoff++]=255&srcbuf[srcoff++]}function newArray(buffer,offset){return Array.prototype.slice.call(buffer,offset,offset+8)}function fromPositiveBE(buffer,offset,value){for(var pos=offset+8;pos>offset;)buffer[--pos]=255&value,value/=256}function fromNegativeBE(buffer,offset,value){var pos=offset+8;for(value++;pos>offset;)buffer[--pos]=255&-value^255,value/=256}function fromPositiveLE(buffer,offset,value){for(var end=offset+8;offset<end;)buffer[offset++]=255&value,value/=256}function fromNegativeLE(buffer,offset,value){var end=offset+8;for(value++;offset<end;)buffer[offset++]=255&-value^255,value/=256}factory("Uint64BE",!0,!0),factory("Int64BE",!0,!1),factory("Uint64LE",!1,!0),factory("Int64LE",!1,!1)}("string"!=typeof exports.nodeName?exports:this||{})}).call(this,__webpack_require__(12).Buffer)},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var tools=__webpack_require__(7),tools_1=__webpack_require__(7),byEbmlID=__webpack_require__(18).byEbmlID,EBMLEncoder=function(){function EBMLEncoder(){this._schema=byEbmlID,this._buffers=[],this._stack=[]}return EBMLEncoder.prototype.encode=function(elms){var _this=this;return tools.concat(elms.reduce((function(lst,elm){return lst.concat(_this.encodeChunk(elm))}),[])).buffer},EBMLEncoder.prototype.encodeChunk=function(elm){return"m"===elm.type?elm.isEnd?this.endTag(elm):this.startTag(elm):this.writeTag(elm),this.flush()},EBMLEncoder.prototype.flush=function(){var ret=this._buffers;return this._buffers=[],ret},EBMLEncoder.prototype.getSchemaInfo=function(tagName){for(var tagNums=Object.keys(this._schema).map(Number),i=0;i<tagNums.length;i++){var tagNum=tagNums[i];if(this._schema[tagNum].name===tagName)return new tools_1.Buffer(tagNum.toString(16),"hex")}return null},EBMLEncoder.prototype.writeTag=function(elm){var tagName=elm.name,tagId=this.getSchemaInfo(tagName),tagData=elm.data;if(null==tagId)throw new Error("No schema entry found for "+tagName);var data=tools.encodeTag(tagId,tagData);this._stack.length>0?this._stack[this._stack.length-1].children.push({tagId:tagId,elm:elm,children:[],data:data}):this._buffers=this._buffers.concat(data)},EBMLEncoder.prototype.startTag=function(elm){var tagName=elm.name,tagId=this.getSchemaInfo(tagName);if(null==tagId)throw new Error("No schema entry found for "+tagName);if(elm.unknownSize){var data=tools.encodeTag(tagId,new tools_1.Buffer(0),elm.unknownSize);this._buffers=this._buffers.concat(data)}else{var tag={tagId:tagId,elm:elm,children:[],data:null};this._stack.length>0&&this._stack[this._stack.length-1].children.push(tag),this._stack.push(tag)}},EBMLEncoder.prototype.endTag=function(elm){elm.name;var tag=this._stack.pop();if(null==tag)throw new Error("EBML structure is broken");if(tag.elm.name!==elm.name)throw new Error("EBML structure is broken");var childTagDataBuffers=tag.children.reduce((function(lst,child){if(null===child.data)throw new Error("EBML structure is broken");return lst.concat(child.data)}),[]),childTagDataBuffer=tools.concat(childTagDataBuffers);"m"===tag.elm.type?tag.data=tools.encodeTag(tag.tagId,childTagDataBuffer,tag.elm.unknownSize):tag.data=tools.encodeTag(tag.tagId,childTagDataBuffer),this._stack.length<1&&(this._buffers=this._buffers.concat(tag.data))},EBMLEncoder}();exports.default=EBMLEncoder},function(module,exports,__webpack_require__){"use strict";var byEbmlID={128:{name:"ChapterDisplay",level:4,type:"m",multiple:!0,minver:1,webm:!0,description:"Contains all possible strings to use for the chapter display."},131:{name:"TrackType",level:3,type:"u",mandatory:!0,minver:1,range:"1-254",description:"A set of track types coded on 8 bits (1: video, 2: audio, 3: complex, 0x10: logo, 0x11: subtitle, 0x12: buttons, 0x20: control)."},133:{name:"ChapString",cppname:"ChapterString",level:5,type:"8",mandatory:!0,minver:1,webm:!0,description:"Contains the string to use as the chapter atom."},134:{name:"CodecID",level:3,type:"s",mandatory:!0,minver:1,description:"An ID corresponding to the codec, see the codec page for more info."},136:{name:"FlagDefault",cppname:"TrackFlagDefault",level:3,type:"u",mandatory:!0,minver:1,default:1,range:"0-1",description:"Set if that track (audio, video or subs) SHOULD be active if no language found matches the user preference. (1 bit)"},137:{name:"ChapterTrackNumber",level:5,type:"u",mandatory:!0,multiple:!0,minver:1,webm:!1,range:"not 0",description:"UID of the Track to apply this chapter too. In the absense of a control track, choosing this chapter will select the listed Tracks and deselect unlisted tracks. Absense of this element indicates that the Chapter should be applied to any currently used Tracks."},145:{name:"ChapterTimeStart",level:4,type:"u",mandatory:!0,minver:1,webm:!0,description:"Timestamp of the start of Chapter (not scaled)."},146:{name:"ChapterTimeEnd",level:4,type:"u",minver:1,webm:!1,description:"Timestamp of the end of Chapter (timestamp excluded, not scaled)."},150:{name:"CueRefTime",level:5,type:"u",mandatory:!0,minver:2,webm:!1,description:"Timestamp of the referenced Block."},151:{name:"CueRefCluster",level:5,type:"u",mandatory:!0,webm:!1,description:"The Position of the Cluster containing the referenced Block."},152:{name:"ChapterFlagHidden",level:4,type:"u",mandatory:!0,minver:1,webm:!1,default:0,range:"0-1",description:"If a chapter is hidden (1), it should not be available to the user interface (but still to Control Tracks; see flag notes). (1 bit)"},16980:{name:"ContentCompAlgo",level:6,type:"u",mandatory:!0,minver:1,webm:!1,default:0,description:"The compression algorithm used. Algorithms that have been specified so far are: 0 - zlib,   3 - Header Stripping"},16981:{name:"ContentCompSettings",level:6,type:"b",minver:1,webm:!1,description:"Settings that might be needed by the decompressor. For Header Stripping (ContentCompAlgo=3), the bytes that were removed from the beggining of each frames of the track."},17026:{name:"DocType",level:1,type:"s",mandatory:!0,default:"matroska",minver:1,description:"A string that describes the type of document that follows this EBML header. 'matroska' in our case or 'webm' for webm files."},17029:{name:"DocTypeReadVersion",level:1,type:"u",mandatory:!0,default:1,minver:1,description:"The minimum DocType version an interpreter has to support to read this file."},17030:{name:"EBMLVersion",level:1,type:"u",mandatory:!0,default:1,minver:1,description:"The version of EBML parser used to create the file."},17031:{name:"DocTypeVersion",level:1,type:"u",mandatory:!0,default:1,minver:1,description:"The version of DocType interpreter used to create the file."},17476:{name:"SegmentFamily",level:2,type:"b",multiple:!0,minver:1,webm:!1,bytesize:16,description:"A randomly generated unique ID that all segments related to each other must use (128 bits)."},17505:{name:"DateUTC",level:2,type:"d",minver:1,description:"Date of the origin of timestamp (value 0), i.e. production date."},17540:{name:"TagDefault",level:4,type:"u",mandatory:!0,minver:1,webm:!1,default:1,range:"0-1",description:"Indication to know if this is the default/original language to use for the given tag. (1 bit)"},17541:{name:"TagBinary",level:4,type:"b",minver:1,webm:!1,description:"The values of the Tag if it is binary. Note that this cannot be used in the same SimpleTag as TagString."},17543:{name:"TagString",level:4,type:"8",minver:1,webm:!1,description:"The value of the Element."},17545:{name:"Duration",level:2,type:"f",minver:1,range:"> 0",description:"Duration of the segment (based on TimecodeScale)."},17816:{name:"ChapterFlagEnabled",level:4,type:"u",mandatory:!0,minver:1,webm:!1,default:1,range:"0-1",description:"Specify wether the chapter is enabled. It can be enabled/disabled by a Control Track. When disabled, the movie should skip all the content between the TimeStart and TimeEnd of this chapter (see flag notes). (1 bit)"},18016:{name:"FileMimeType",level:3,type:"s",mandatory:!0,minver:1,webm:!1,description:"MIME type of the file."},18017:{name:"FileUsedStartTime",level:3,type:"u",divx:!0,description:"DivX font extension"},18018:{name:"FileUsedEndTime",level:3,type:"u",divx:!0,description:"DivX font extension"},18037:{name:"FileReferral",level:3,type:"b",webm:!1,description:"A binary value that a track/codec can refer to when the attachment is needed."},20529:{name:"ContentEncodingOrder",level:5,type:"u",mandatory:!0,minver:1,webm:!1,default:0,description:"Tells when this modification was used during encoding/muxing starting with 0 and counting upwards. The decoder/demuxer has to start with the highest order number it finds and work its way down. This value has to be unique over all ContentEncodingOrder elements in the segment."},20530:{name:"ContentEncodingScope",level:5,type:"u",mandatory:!0,minver:1,webm:!1,default:1,range:"not 0",description:"A bit field that describes which elements have been modified in this way. Values (big endian) can be OR'ed. Possible values: 1 - all frame contents, 2 - the track's private data, 4 - the next ContentEncoding (next ContentEncodingOrder. Either the data inside ContentCompression and/or ContentEncryption)"},20531:{name:"ContentEncodingType",level:5,type:"u",mandatory:!0,minver:1,webm:!1,default:0,description:"A value describing what kind of transformation has been done. Possible values: 0 - compression, 1 - encryption"},20532:{name:"ContentCompression",level:5,type:"m",minver:1,webm:!1,description:"Settings describing the compression used. Must be present if the value of ContentEncodingType is 0 and absent otherwise. Each block must be decompressable even if no previous block is available in order not to prevent seeking."},20533:{name:"ContentEncryption",level:5,type:"m",minver:1,webm:!1,description:"Settings describing the encryption used. Must be present if the value of ContentEncodingType is 1 and absent otherwise."},21368:{name:"CueBlockNumber",level:4,type:"u",minver:1,default:1,range:"not 0",description:"Number of the Block in the specified Cluster."},22100:{name:"ChapterStringUID",level:4,type:"8",mandatory:!1,minver:3,webm:!0,description:"A unique string ID to identify the Chapter. Use for WebVTT cue identifier storage."},22337:{name:"WritingApp",level:2,type:"8",mandatory:!0,minver:1,description:'Writing application ("mkvmerge-0.3.3").'},22612:{name:"SilentTracks",cppname:"ClusterSilentTracks",level:2,type:"m",minver:1,webm:!1,description:"The list of tracks that are not used in that part of the stream. It is useful when using overlay tracks on seeking. Then you should decide what track to use."},25152:{name:"ContentEncoding",level:4,type:"m",mandatory:!0,multiple:!0,minver:1,webm:!1,description:"Settings for one content encoding like compression or encryption."},25188:{name:"BitDepth",cppname:"AudioBitDepth",level:4,type:"u",minver:1,range:"not 0",description:"Bits per sample, mostly used for PCM."},25906:{name:"SignedElement",level:3,type:"b",multiple:!0,webm:!1,description:"An element ID whose data will be used to compute the signature."},26148:{name:"TrackTranslate",level:3,type:"m",multiple:!0,minver:1,webm:!1,description:"The track identification for the given Chapter Codec."},26897:{name:"ChapProcessCommand",cppname:"ChapterProcessCommand",level:5,type:"m",multiple:!0,minver:1,webm:!1,description:"Contains all the commands associated to the Atom."},26914:{name:"ChapProcessTime",cppname:"ChapterProcessTime",level:6,type:"u",mandatory:!0,minver:1,webm:!1,description:"Defines when the process command should be handled (0: during the whole chapter, 1: before starting playback, 2: after playback of the chapter)."},26916:{name:"ChapterTranslate",level:2,type:"m",multiple:!0,minver:1,webm:!1,description:"A tuple of corresponding ID used by chapter codecs to represent this segment."},26931:{name:"ChapProcessData",cppname:"ChapterProcessData",level:6,type:"b",mandatory:!0,minver:1,webm:!1,description:"Contains the command information. The data should be interpreted depending on the ChapProcessCodecID value. For ChapProcessCodecID = 1, the data correspond to the binary DVD cell pre/post commands."},26948:{name:"ChapProcess",cppname:"ChapterProcess",level:4,type:"m",multiple:!0,minver:1,webm:!1,description:"Contains all the commands associated to the Atom."},26965:{name:"ChapProcessCodecID",cppname:"ChapterProcessCodecID",level:5,type:"u",mandatory:!0,minver:1,webm:!1,default:0,description:"Contains the type of the codec used for the processing. A value of 0 means native Matroska processing (to be defined), a value of 1 means the DVD command set is used. More codec IDs can be added later."},29555:{name:"Tag",level:2,type:"m",mandatory:!0,multiple:!0,minver:1,webm:!1,description:"Element containing elements specific to Tracks/Chapters."},29572:{name:"SegmentFilename",level:2,type:"8",minver:1,webm:!1,description:"A filename corresponding to this segment."},29766:{name:"AttachmentLink",cppname:"TrackAttachmentLink",level:3,type:"u",minver:1,webm:!1,range:"not 0",description:"The UID of an attachment that is used by this codec."},2459272:{name:"CodecName",level:3,type:"8",minver:1,description:"A human-readable string specifying the codec."},408125543:{name:"Segment",level:"0",type:"m",mandatory:!0,multiple:!0,minver:1,description:"This element contains all other top-level (level 1) elements. Typically a Matroska file is composed of 1 segment."},17530:{name:"TagLanguage",level:4,type:"s",mandatory:!0,minver:1,webm:!1,default:"und",description:"Specifies the language of the tag specified, in the Matroska languages form."},17827:{name:"TagName",level:4,type:"8",mandatory:!0,minver:1,webm:!1,description:"The name of the Tag that is going to be stored."},26568:{name:"SimpleTag",cppname:"TagSimple",level:3,recursive:"1",type:"m",mandatory:!0,multiple:!0,minver:1,webm:!1,description:"Contains general information about the target."},25542:{name:"TagAttachmentUID",level:4,type:"u",multiple:!0,minver:1,webm:!1,default:0,description:"A unique ID to identify the Attachment(s) the tags belong to. If the value is 0 at this level, the tags apply to all the attachments in the Segment."},25540:{name:"TagChapterUID",level:4,type:"u",multiple:!0,minver:1,webm:!1,default:0,description:"A unique ID to identify the Chapter(s) the tags belong to. If the value is 0 at this level, the tags apply to all chapters in the Segment."},25545:{name:"TagEditionUID",level:4,type:"u",multiple:!0,minver:1,webm:!1,default:0,description:"A unique ID to identify the EditionEntry(s) the tags belong to. If the value is 0 at this level, the tags apply to all editions in the Segment."},25541:{name:"TagTrackUID",level:4,type:"u",multiple:!0,minver:1,webm:!1,default:0,description:"A unique ID to identify the Track(s) the tags belong to. If the value is 0 at this level, the tags apply to all tracks in the Segment."},25546:{name:"TargetType",cppname:"TagTargetType",level:4,type:"s",minver:1,webm:!1,strong:"informational",description:'An  string that can be used to display the logical level of the target like "ALBUM", "TRACK", "MOVIE", "CHAPTER", etc (see TargetType).'},26826:{name:"TargetTypeValue",cppname:"TagTargetTypeValue",level:4,type:"u",minver:1,webm:!1,default:50,description:"A number to indicate the logical level of the target (see TargetType)."},25536:{name:"Targets",cppname:"TagTargets",level:3,type:"m",mandatory:!0,minver:1,webm:!1,description:"Contain all UIDs where the specified meta data apply. It is empty to describe everything in the segment."},307544935:{name:"Tags",level:1,type:"m",multiple:!0,minver:1,webm:!1,description:"Element containing elements specific to Tracks/Chapters. A list of valid tags can be found here."},17677:{name:"ChapProcessPrivate",cppname:"ChapterProcessPrivate",level:5,type:"b",minver:1,webm:!1,description:'Some optional data attached to the ChapProcessCodecID information. For ChapProcessCodecID = 1, it is the "DVD level" equivalent.'},17278:{name:"ChapCountry",cppname:"ChapterCountry",level:5,type:"s",multiple:!0,minver:1,webm:!1,description:"The countries corresponding to the string, same 2 octets as in Internet domains."},17276:{name:"ChapLanguage",cppname:"ChapterLanguage",level:5,type:"s",mandatory:!0,multiple:!0,minver:1,webm:!0,default:"eng",description:"The languages corresponding to the string, in the bibliographic ISO-639-2 form."},143:{name:"ChapterTrack",level:4,type:"m",minver:1,webm:!1,description:"List of tracks on which the chapter applies. If this element is not present, all tracks apply"},25539:{name:"ChapterPhysicalEquiv",level:4,type:"u",minver:1,webm:!1,description:'Specify the physical equivalent of this ChapterAtom like "DVD" (60) or "SIDE" (50), see complete list of values.'},28348:{name:"ChapterSegmentEditionUID",level:4,type:"u",minver:1,webm:!1,range:"not 0",description:"The EditionUID to play from the segment linked in ChapterSegmentUID."},28263:{name:"ChapterSegmentUID",level:4,type:"b",minver:1,webm:!1,range:">0",bytesize:16,description:"A segment to play in place of this chapter. Edition ChapterSegmentEditionUID should be used for this segment, otherwise no edition is used."},29636:{name:"ChapterUID",level:4,type:"u",mandatory:!0,minver:1,webm:!0,range:"not 0",description:"A unique ID to identify the Chapter."},182:{name:"ChapterAtom",level:3,recursive:"1",type:"m",mandatory:!0,multiple:!0,minver:1,webm:!0,description:"Contains the atom information to use as the chapter atom (apply to all tracks)."},17885:{name:"EditionFlagOrdered",level:3,type:"u",minver:1,webm:!1,default:0,range:"0-1",description:"Specify if the chapters can be defined multiple times and the order to play them is enforced. (1 bit)"},17883:{name:"EditionFlagDefault",level:3,type:"u",mandatory:!0,minver:1,webm:!1,default:0,range:"0-1",description:"If a flag is set (1) the edition should be used as the default one. (1 bit)"},17853:{name:"EditionFlagHidden",level:3,type:"u",mandatory:!0,minver:1,webm:!1,default:0,range:"0-1",description:"If an edition is hidden (1), it should not be available to the user interface (but still to Control Tracks; see flag notes). (1 bit)"},17852:{name:"EditionUID",level:3,type:"u",minver:1,webm:!1,range:"not 0",description:"A unique ID to identify the edition. It's useful for tagging an edition."},17849:{name:"EditionEntry",level:2,type:"m",mandatory:!0,multiple:!0,minver:1,webm:!0,description:"Contains all information about a segment edition."},272869232:{name:"Chapters",level:1,type:"m",minver:1,webm:!0,description:"A system to define basic menus and partition data. For more detailed information, look at the Chapters Explanation."},18094:{name:"FileUID",level:3,type:"u",mandatory:!0,minver:1,webm:!1,range:"not 0",description:"Unique ID representing the file, as random as possible."},18012:{name:"FileData",level:3,type:"b",mandatory:!0,minver:1,webm:!1,description:"The data of the file."},18030:{name:"FileName",level:3,type:"8",mandatory:!0,minver:1,webm:!1,description:"Filename of the attached file."},18046:{name:"FileDescription",level:3,type:"8",minver:1,webm:!1,description:"A human-friendly name for the attached file."},24999:{name:"AttachedFile",level:2,type:"m",mandatory:!0,multiple:!0,minver:1,webm:!1,description:"An attached file."},423732329:{name:"Attachments",level:1,type:"m",minver:1,webm:!1,description:"Contain attached files."},235:{name:"CueRefCodecState",level:5,type:"u",webm:!1,default:0,description:"The position of the Codec State corresponding to this referenced element. 0 means that the data is taken from the initial Track Entry."},21343:{name:"CueRefNumber",level:5,type:"u",webm:!1,default:1,range:"not 0",description:"Number of the referenced Block of Track X in the specified Cluster."},219:{name:"CueReference",level:4,type:"m",multiple:!0,minver:2,webm:!1,description:"The Clusters containing the required referenced Blocks."},234:{name:"CueCodecState",level:4,type:"u",minver:2,webm:!1,default:0,description:"The position of the Codec State corresponding to this Cue element. 0 means that the data is taken from the initial Track Entry."},178:{name:"CueDuration",level:4,type:"u",mandatory:!1,minver:4,webm:!1,description:"The duration of the block according to the segment time base. If missing the track's DefaultDuration does not apply and no duration information is available in terms of the cues."},240:{name:"CueRelativePosition",level:4,type:"u",mandatory:!1,minver:4,webm:!1,description:"The relative position of the referenced block inside the cluster with 0 being the first possible position for an element inside that cluster.",position:"clusterRelative"},241:{name:"CueClusterPosition",level:4,type:"u",mandatory:!0,minver:1,description:"The position of the Cluster containing the required Block.",position:"segment"},247:{name:"CueTrack",level:4,type:"u",mandatory:!0,minver:1,range:"not 0",description:"The track for which a position is given."},183:{name:"CueTrackPositions",level:3,type:"m",mandatory:!0,multiple:!0,minver:1,description:"Contain positions for different tracks corresponding to the timestamp."},179:{name:"CueTime",level:3,type:"u",mandatory:!0,minver:1,description:"Absolute timestamp according to the segment time base."},187:{name:"CuePoint",level:2,type:"m",mandatory:!0,multiple:!0,minver:1,description:"Contains all information relative to a seek point in the segment."},475249515:{name:"Cues",level:1,type:"m",minver:1,description:'A top-level element to speed seeking access. All entries are local to the segment. Should be mandatory for non "live" streams.'},18406:{name:"ContentSigHashAlgo",level:6,type:"u",minver:1,webm:!1,default:0,description:"The hash algorithm used for the signature. A value of '0' means that the contents have not been signed but only encrypted. Predefined values: 1 - SHA1-160 2 - MD5"},18405:{name:"ContentSigAlgo",level:6,type:"u",minver:1,webm:!1,default:0,description:"The algorithm used for the signature. A value of '0' means that the contents have not been signed but only encrypted. Predefined values: 1 - RSA"},18404:{name:"ContentSigKeyID",level:6,type:"b",minver:1,webm:!1,description:"This is the ID of the private key the data was signed with."},18403:{name:"ContentSignature",level:6,type:"b",minver:1,webm:!1,description:"A cryptographic signature of the contents."},18402:{name:"ContentEncKeyID",level:6,type:"b",minver:1,webm:!1,description:"For public key algorithms this is the ID of the public key the the data was encrypted with."},18401:{name:"ContentEncAlgo",level:6,type:"u",minver:1,webm:!1,default:0,description:"The encryption algorithm used. The value '0' means that the contents have not been encrypted but only signed. Predefined values: 1 - DES, 2 - 3DES, 3 - Twofish, 4 - Blowfish, 5 - AES"},28032:{name:"ContentEncodings",level:3,type:"m",minver:1,webm:!1,description:"Settings for several content encoding mechanisms like compression or encryption."},196:{name:"TrickMasterTrackSegmentUID",level:3,type:"b",divx:!0,bytesize:16,description:"DivX trick track extenstions"},199:{name:"TrickMasterTrackUID",level:3,type:"u",divx:!0,description:"DivX trick track extenstions"},198:{name:"TrickTrackFlag",level:3,type:"u",divx:!0,default:0,description:"DivX trick track extenstions"},193:{name:"TrickTrackSegmentUID",level:3,type:"b",divx:!0,bytesize:16,description:"DivX trick track extenstions"},192:{name:"TrickTrackUID",level:3,type:"u",divx:!0,description:"DivX trick track extenstions"},237:{name:"TrackJoinUID",level:5,type:"u",mandatory:!0,multiple:!0,minver:3,webm:!1,range:"not 0",description:"The trackUID number of a track whose blocks are used to create this virtual track."},233:{name:"TrackJoinBlocks",level:4,type:"m",minver:3,webm:!1,description:"Contains the list of all tracks whose Blocks need to be combined to create this virtual track"},230:{name:"TrackPlaneType",level:6,type:"u",mandatory:!0,minver:3,webm:!1,description:"The kind of plane this track corresponds to (0: left eye, 1: right eye, 2: background)."},229:{name:"TrackPlaneUID",level:6,type:"u",mandatory:!0,minver:3,webm:!1,range:"not 0",description:"The trackUID number of the track representing the plane."},228:{name:"TrackPlane",level:5,type:"m",mandatory:!0,multiple:!0,minver:3,webm:!1,description:"Contains a video plane track that need to be combined to create this 3D track"},227:{name:"TrackCombinePlanes",level:4,type:"m",minver:3,webm:!1,description:"Contains the list of all video plane tracks that need to be combined to create this 3D track"},226:{name:"TrackOperation",level:3,type:"m",minver:3,webm:!1,description:"Operation that needs to be applied on tracks to create this virtual track. For more details look at the Specification Notes on the subject."},32123:{name:"ChannelPositions",cppname:"AudioPosition",level:4,type:"b",webm:!1,description:"Table of horizontal angles for each successive channel, see appendix."},159:{name:"Channels",cppname:"AudioChannels",level:4,type:"u",mandatory:!0,minver:1,default:1,range:"not 0",description:"Numbers of channels in the track."},30901:{name:"OutputSamplingFrequency",cppname:"AudioOutputSamplingFreq",level:4,type:"f",minver:1,default:"Sampling Frequency",range:"> 0",description:"Real output sampling frequency in Hz (used for SBR techniques)."},181:{name:"SamplingFrequency",cppname:"AudioSamplingFreq",level:4,type:"f",mandatory:!0,minver:1,default:8e3,range:"> 0",description:"Sampling frequency in Hz."},225:{name:"Audio",cppname:"TrackAudio",level:3,type:"m",minver:1,description:"Audio settings."},2327523:{name:"FrameRate",cppname:"VideoFrameRate",level:4,type:"f",range:"> 0",strong:"Informational",description:"Number of frames per second.  only."},3126563:{name:"GammaValue",cppname:"VideoGamma",level:4,type:"f",webm:!1,range:"> 0",description:"Gamma Value."},3061028:{name:"ColourSpace",cppname:"VideoColourSpace",level:4,type:"b",minver:1,webm:!1,bytesize:4,description:"Same value as in AVI (32 bits)."},21683:{name:"AspectRatioType",cppname:"VideoAspectRatio",level:4,type:"u",minver:1,default:0,description:"Specify the possible modifications to the aspect ratio (0: free resizing, 1: keep aspect ratio, 2: fixed)."},21682:{name:"DisplayUnit",cppname:"VideoDisplayUnit",level:4,type:"u",minver:1,default:0,description:"How DisplayWidth & DisplayHeight should be interpreted (0: pixels, 1: centimeters, 2: inches, 3: Display Aspect Ratio)."},21690:{name:"DisplayHeight",cppname:"VideoDisplayHeight",level:4,type:"u",minver:1,default:"PixelHeight",range:"not 0",description:"Height of the video frames to display. The default value is only valid when DisplayUnit is 0."},21680:{name:"DisplayWidth",cppname:"VideoDisplayWidth",level:4,type:"u",minver:1,default:"PixelWidth",range:"not 0",description:"Width of the video frames to display. The default value is only valid when DisplayUnit is 0."},21725:{name:"PixelCropRight",cppname:"VideoPixelCropRight",level:4,type:"u",minver:1,default:0,description:"The number of video pixels to remove on the right of the image."},21708:{name:"PixelCropLeft",cppname:"VideoPixelCropLeft",level:4,type:"u",minver:1,default:0,description:"The number of video pixels to remove on the left of the image."},21691:{name:"PixelCropTop",cppname:"VideoPixelCropTop",level:4,type:"u",minver:1,default:0,description:"The number of video pixels to remove at the top of the image."},21674:{name:"PixelCropBottom",cppname:"VideoPixelCropBottom",level:4,type:"u",minver:1,default:0,description:"The number of video pixels to remove at the bottom of the image (for HDTV content)."},186:{name:"PixelHeight",cppname:"VideoPixelHeight",level:4,type:"u",mandatory:!0,minver:1,range:"not 0",description:"Height of the encoded video frames in pixels."},176:{name:"PixelWidth",cppname:"VideoPixelWidth",level:4,type:"u",mandatory:!0,minver:1,range:"not 0",description:"Width of the encoded video frames in pixels."},21433:{name:"OldStereoMode",level:4,type:"u",maxver:"0",webm:!1,divx:!1,description:"DEPRECATED, DO NOT USE. Bogus StereoMode value used in old versions of libmatroska. (0: mono, 1: right eye, 2: left eye, 3: both eyes)."},21440:{name:"AlphaMode",cppname:"VideoAlphaMode",level:4,type:"u",minver:3,webm:!0,default:0,description:"Alpha Video Mode. Presence of this element indicates that the BlockAdditional element could contain Alpha data."},21432:{name:"StereoMode",cppname:"VideoStereoMode",level:4,type:"u",minver:3,webm:!0,default:0,description:"Stereo-3D video mode (0: mono, 1: side by side (left eye is first), 2: top-bottom (right eye is first), 3: top-bottom (left eye is first), 4: checkboard (right is first), 5: checkboard (left is first), 6: row interleaved (right is first), 7: row interleaved (left is first), 8: column interleaved (right is first), 9: column interleaved (left is first), 10: anaglyph (cyan/red), 11: side by side (right eye is first), 12: anaglyph (green/magenta), 13 both eyes laced in one Block (left eye is first), 14 both eyes laced in one Block (right eye is first)) . There are some more details on 3D support in the Specification Notes."},154:{name:"FlagInterlaced",cppname:"VideoFlagInterlaced",level:4,type:"u",mandatory:!0,minver:2,webm:!0,default:0,range:"0-1",description:"Set if the video is interlaced. (1 bit)"},224:{name:"Video",cppname:"TrackVideo",level:3,type:"m",minver:1,description:"Video settings."},26277:{name:"TrackTranslateTrackID",level:4,type:"b",mandatory:!0,minver:1,webm:!1,description:"The binary value used to represent this track in the chapter codec data. The format depends on the ChapProcessCodecID used."},26303:{name:"TrackTranslateCodec",level:4,type:"u",mandatory:!0,minver:1,webm:!1,description:"The chapter codec using this ID (0: Matroska Script, 1: DVD-menu)."},26364:{name:"TrackTranslateEditionUID",level:4,type:"u",multiple:!0,minver:1,webm:!1,description:"Specify an edition UID on which this translation applies. When not specified, it means for all editions found in the segment."},22203:{name:"SeekPreRoll",level:3,type:"u",mandatory:!0,multiple:!1,default:0,minver:4,webm:!0,description:"After a discontinuity, SeekPreRoll is the duration in nanoseconds of the data the decoder must decode before the decoded data is valid."},22186:{name:"CodecDelay",level:3,type:"u",multiple:!1,default:0,minver:4,webm:!0,description:"CodecDelay is The codec-built-in delay in nanoseconds. This value must be subtracted from each block timestamp in order to get the actual timestamp. The value should be small so the muxing of tracks with the same actual timestamp are in the same Cluster."},28587:{name:"TrackOverlay",level:3,type:"u",multiple:!0,minver:1,webm:!1,description:"Specify that this track is an overlay track for the Track specified (in the u-integer). That means when this track has a gap (see SilentTracks) the overlay track should be used instead. The order of multiple TrackOverlay matters, the first one is the one that should be used. If not found it should be the second, etc."},170:{name:"CodecDecodeAll",level:3,type:"u",mandatory:!0,minver:2,webm:!1,default:1,range:"0-1",description:"The codec can decode potentially damaged data (1 bit)."},2536e3:{name:"CodecDownloadURL",level:3,type:"s",multiple:!0,webm:!1,description:"A URL to download about the codec used."},3883072:{name:"CodecInfoURL",level:3,type:"s",multiple:!0,webm:!1,description:"A URL to find information about the codec used."},3839639:{name:"CodecSettings",level:3,type:"8",webm:!1,description:"A string describing the encoding setting used."},25506:{name:"CodecPrivate",level:3,type:"b",minver:1,description:"Private data only known to the codec."},2274716:{name:"Language",cppname:"TrackLanguage",level:3,type:"s",minver:1,default:"eng",description:"Specifies the language of the track in the Matroska languages form."},21358:{name:"Name",cppname:"TrackName",level:3,type:"8",minver:1,description:"A human-readable track name."},21998:{name:"MaxBlockAdditionID",level:3,type:"u",mandatory:!0,minver:1,webm:!1,default:0,description:"The maximum value of BlockAdditions for this track."},21375:{name:"TrackOffset",level:3,type:"i",webm:!1,default:0,description:"A value to add to the Block's Timestamp. This can be used to adjust the playback offset of a track."},2306383:{name:"TrackTimecodeScale",level:3,type:"f",mandatory:!0,minver:1,maxver:"3",webm:!1,default:1,range:"> 0",description:"DEPRECATED, DO NOT USE. The scale to apply on this track to work at normal speed in relation with other tracks (mostly used to adjust video speed when the audio length differs)."},2313850:{name:"DefaultDecodedFieldDuration",cppname:"TrackDefaultDecodedFieldDuration",level:3,type:"u",minver:4,range:"not 0",description:"The period in nanoseconds (not scaled by TimcodeScale)\nbetween two successive fields at the output of the decoding process (see the notes)"},2352003:{name:"DefaultDuration",cppname:"TrackDefaultDuration",level:3,type:"u",minver:1,range:"not 0",description:"Number of nanoseconds (not scaled via TimecodeScale) per frame ('frame' in the Matroska sense -- one element put into a (Simple)Block)."},28152:{name:"MaxCache",cppname:"TrackMaxCache",level:3,type:"u",minver:1,webm:!1,description:"The maximum cache size required to store referenced frames in and the current frame. 0 means no cache is needed."},28135:{name:"MinCache",cppname:"TrackMinCache",level:3,type:"u",mandatory:!0,minver:1,webm:!1,default:0,description:"The minimum number of frames a player should be able to cache during playback. If set to 0, the reference pseudo-cache system is not used."},156:{name:"FlagLacing",cppname:"TrackFlagLacing",level:3,type:"u",mandatory:!0,minver:1,default:1,range:"0-1",description:"Set if the track may contain blocks using lacing. (1 bit)"},21930:{name:"FlagForced",cppname:"TrackFlagForced",level:3,type:"u",mandatory:!0,minver:1,default:0,range:"0-1",description:"Set if that track MUST be active during playback. There can be many forced track for a kind (audio, video or subs), the player should select the one which language matches the user preference or the default + forced track. Overlay MAY happen between a forced and non-forced track of the same kind. (1 bit)"},185:{name:"FlagEnabled",cppname:"TrackFlagEnabled",level:3,type:"u",mandatory:!0,minver:2,webm:!0,default:1,range:"0-1",description:"Set if the track is usable. (1 bit)"},29637:{name:"TrackUID",level:3,type:"u",mandatory:!0,minver:1,range:"not 0",description:"A unique ID to identify the Track. This should be kept the same when making a direct stream copy of the Track to another file."},215:{name:"TrackNumber",level:3,type:"u",mandatory:!0,minver:1,range:"not 0",description:"The track number as used in the Block Header (using more than 127 tracks is not encouraged, though the design allows an unlimited number)."},174:{name:"TrackEntry",level:2,type:"m",mandatory:!0,multiple:!0,minver:1,description:"Describes a track with all elements."},374648427:{name:"Tracks",level:1,type:"m",multiple:!0,minver:1,description:"A top-level block of information with many tracks described."},175:{name:"EncryptedBlock",level:2,type:"b",multiple:!0,webm:!1,description:"Similar to EncryptedBlock Structure)"},202:{name:"ReferenceTimeCode",level:4,type:"u",multiple:!1,mandatory:!0,minver:0,webm:!1,divx:!0,description:"DivX trick track extenstions"},201:{name:"ReferenceOffset",level:4,type:"u",multiple:!1,mandatory:!0,minver:0,webm:!1,divx:!0,description:"DivX trick track extenstions"},200:{name:"ReferenceFrame",level:3,type:"m",multiple:!1,minver:0,webm:!1,divx:!0,description:"DivX trick track extenstions"},207:{name:"SliceDuration",level:5,type:"u",default:0,description:"The (scaled) duration to apply to the element."},206:{name:"Delay",cppname:"SliceDelay",level:5,type:"u",default:0,description:"The (scaled) delay to apply to the element."},203:{name:"BlockAdditionID",cppname:"SliceBlockAddID",level:5,type:"u",default:0,description:"The ID of the BlockAdditional element (0 is the main Block)."},205:{name:"FrameNumber",cppname:"SliceFrameNumber",level:5,type:"u",default:0,description:"The number of the frame to generate from this lace with this delay (allow you to generate many frames from the same Block/Frame)."},204:{name:"LaceNumber",cppname:"SliceLaceNumber",level:5,type:"u",minver:1,default:0,divx:!1,description:"The reverse number of the frame in the lace (0 is the last frame, 1 is the next to last, etc). While there are a few files in the wild with this element, it is no longer in use and has been deprecated. Being able to interpret this element is not required for playback."},232:{name:"TimeSlice",level:4,type:"m",multiple:!0,minver:1,divx:!1,description:"Contains extra time information about the data contained in the Block. While there are a few files in the wild with this element, it is no longer in use and has been deprecated. Being able to interpret this element is not required for playback."},142:{name:"Slices",level:3,type:"m",minver:1,divx:!1,description:"Contains slices description."},30114:{name:"DiscardPadding",level:3,type:"i",minver:4,webm:!0,description:"Duration in nanoseconds of the silent data added to the Block (padding at the end of the Block for positive value, at the beginning of the Block for negative value). The duration of DiscardPadding is not calculated in the duration of the TrackEntry and should be discarded during playback."},164:{name:"CodecState",level:3,type:"b",minver:2,webm:!1,description:"The new codec state to use. Data interpretation is private to the codec. This information should always be referenced by a seek entry."},253:{name:"ReferenceVirtual",level:3,type:"i",webm:!1,description:"Relative position of the data that should be in position of the virtual block."},251:{name:"ReferenceBlock",level:3,type:"i",multiple:!0,minver:1,description:"Timestamp of another frame used as a reference (ie: B or P frame). The timestamp is relative to the block it's attached to."},250:{name:"ReferencePriority",cppname:"FlagReferenced",level:3,type:"u",mandatory:!0,minver:1,webm:!1,default:0,description:"This frame is referenced and has the specified cache priority. In cache only a frame of the same or higher priority can replace this frame. A value of 0 means the frame is not referenced."},155:{name:"BlockDuration",level:3,type:"u",minver:1,default:"TrackDuration",description:'The duration of the Block (based on TimecodeScale). This element is mandatory when DefaultDuration is set for the track (but can be omitted as other default values). When not written and with no DefaultDuration, the value is assumed to be the difference between the timestamp of this Block and the timestamp of the next Block in "display" order (not coding order). This element can be useful at the end of a Track (as there is not other Block available), or when there is a break in a track like for subtitle tracks. When set to 0 that means the frame is not a keyframe.'},165:{name:"BlockAdditional",level:5,type:"b",mandatory:!0,minver:1,webm:!1,description:"Interpreted by the codec as it wishes (using the BlockAddID)."},238:{name:"BlockAddID",level:5,type:"u",mandatory:!0,minver:1,webm:!1,default:1,range:"not 0",description:"An ID to identify the BlockAdditional level."},166:{name:"BlockMore",level:4,type:"m",mandatory:!0,multiple:!0,minver:1,webm:!1,description:"Contain the BlockAdditional and some parameters."},30113:{name:"BlockAdditions",level:3,type:"m",minver:1,webm:!1,description:"Contain additional blocks to complete the main one. An EBML parser that has no knowledge of the Block structure could still see and use/skip these data."},162:{name:"BlockVirtual",level:3,type:"b",webm:!1,description:"A Block with no data. It must be stored in the stream at the place the real Block should be in display order. (see Block Virtual)"},161:{name:"Block",level:3,type:"b",mandatory:!0,minver:1,description:"Block containing the actual data to be rendered and a timestamp relative to the Cluster Timecode. (see Block Structure)"},160:{name:"BlockGroup",level:2,type:"m",multiple:!0,minver:1,description:"Basic container of information containing a single Block or BlockVirtual, and information specific to that Block/VirtualBlock."},163:{name:"SimpleBlock",level:2,type:"b",multiple:!0,minver:2,webm:!0,divx:!0,description:"Similar to SimpleBlock Structure"},171:{name:"PrevSize",cppname:"ClusterPrevSize",level:2,type:"u",minver:1,description:"Size of the previous Cluster, in octets. Can be useful for backward playing.",position:"prevCluster"},167:{name:"Position",cppname:"ClusterPosition",level:2,type:"u",minver:1,webm:!1,description:"The Position of the Cluster in the segment (0 in live broadcast streams). It might help to resynchronise offset on damaged streams.",position:"segment"},22743:{name:"SilentTrackNumber",cppname:"ClusterSilentTrackNumber",level:3,type:"u",multiple:!0,minver:1,webm:!1,description:"One of the track number that are not used from now on in the stream. It could change later if not specified as silent in a further Cluster."},231:{name:"Timecode",cppname:"ClusterTimecode",level:2,type:"u",mandatory:!0,minver:1,description:"Absolute timestamp of the cluster (based on TimecodeScale)."},524531317:{name:"Cluster",level:1,type:"m",multiple:!0,minver:1,description:"The lower level element containing the (monolithic) Block structure."},19840:{name:"MuxingApp",level:2,type:"8",mandatory:!0,minver:1,description:'Muxing application or library ("libmatroska-0.4.3").'},31657:{name:"Title",level:2,type:"8",minver:1,webm:!1,description:"General name of the segment."},2807730:{name:"TimecodeScaleDenominator",level:2,type:"u",mandatory:!0,minver:4,default:"1000000000",description:"Timestamp scale numerator, see TimecodeScale."},2807729:{name:"TimecodeScale",level:2,type:"u",mandatory:!0,minver:1,default:"1000000",description:"Timestamp scale in nanoseconds (1.000.000 means all timestamps in the segment are expressed in milliseconds)."},27045:{name:"ChapterTranslateID",level:3,type:"b",mandatory:!0,minver:1,webm:!1,description:"The binary value used to represent this segment in the chapter codec data. The format depends on the ChapProcessCodecID used."},27071:{name:"ChapterTranslateCodec",level:3,type:"u",mandatory:!0,minver:1,webm:!1,description:"The chapter codec using this ID (0: Matroska Script, 1: DVD-menu)."},27132:{name:"ChapterTranslateEditionUID",level:3,type:"u",multiple:!0,minver:1,webm:!1,description:"Specify an edition UID on which this correspondance applies. When not specified, it means for all editions found in the segment."},4096955:{name:"NextFilename",level:2,type:"8",minver:1,webm:!1,description:"An escaped filename corresponding to the next segment."},4110627:{name:"NextUID",level:2,type:"b",minver:1,webm:!1,bytesize:16,description:"A unique ID to identify the next chained segment (128 bits)."},3965867:{name:"PrevFilename",level:2,type:"8",minver:1,webm:!1,description:"An escaped filename corresponding to the previous segment."},3979555:{name:"PrevUID",level:2,type:"b",minver:1,webm:!1,bytesize:16,description:"A unique ID to identify the previous chained segment (128 bits)."},29604:{name:"SegmentUID",level:2,type:"b",minver:1,webm:!1,range:"not 0",bytesize:16,description:"A randomly generated unique ID to identify the current segment between many others (128 bits)."},357149030:{name:"Info",level:1,type:"m",mandatory:!0,multiple:!0,minver:1,description:"Contains miscellaneous general information and statistics on the file."},21420:{name:"SeekPosition",level:3,type:"u",mandatory:!0,minver:1,description:"The position of the element in the segment in octets (0 = first level 1 element).",position:"segment"},21419:{name:"SeekID",level:3,type:"b",mandatory:!0,minver:1,description:"The binary ID corresponding to the element name.",type2:"ebmlID"},19899:{name:"Seek",cppname:"SeekPoint",level:2,type:"m",mandatory:!0,multiple:!0,minver:1,description:"Contains a single seek entry to an EBML element."},290298740:{name:"SeekHead",cppname:"SeekHeader",level:1,type:"m",multiple:!0,minver:1,description:"Contains the position of other level 1 elements."},32379:{name:"SignatureElementList",level:2,type:"m",multiple:!0,webm:!1,i:"Cluster|Block|BlockAdditional",description:"A list consists of a number of consecutive elements that represent one case where data is used in signature. Ex:  means that the BlockAdditional of all Blocks in all Clusters is used for encryption."},32347:{name:"SignatureElements",level:1,type:"m",webm:!1,description:"Contains elements that will be used to compute the signature."},32437:{name:"Signature",level:1,type:"b",webm:!1,description:"The signature of the data (until a new."},32421:{name:"SignaturePublicKey",level:1,type:"b",webm:!1,description:"The public key to use with the algorithm (in the case of a PKI-based signature)."},32410:{name:"SignatureHash",level:1,type:"u",webm:!1,description:"Hash algorithm used (1=SHA1-160, 2=MD5)."},32394:{name:"SignatureAlgo",level:1,type:"u",webm:!1,description:"Signature algorithm used (1=RSA, 2=elliptic)."},458458727:{name:"SignatureSlot",level:-1,type:"m",multiple:!0,webm:!1,description:"Contain signature of some (coming) elements in the stream."},191:{name:"CRC-32",level:-1,type:"b",minver:1,webm:!1,description:"The CRC is computed on all the data of the Master element it's in. The CRC element should be the first in it's parent master for easier reading. All level 1 elements should include a CRC-32. The CRC in use is the IEEE CRC32 Little Endian",crc:!0},236:{name:"Void",level:-1,type:"b",minver:1,description:"Used to void damaged data, to avoid unexpected behaviors when using damaged data. The content is discarded. Also used to reserve space in a sub-element for later use."},17139:{name:"EBMLMaxSizeLength",level:1,type:"u",mandatory:!0,default:8,minver:1,description:"The maximum length of the sizes you'll find in this file (8 or less in Matroska). This does not override the element size indicated at the beginning of an element. Elements that have an indicated size which is larger than what is allowed by EBMLMaxSizeLength shall be considered invalid."},17138:{name:"EBMLMaxIDLength",level:1,type:"u",mandatory:!0,default:4,minver:1,description:"The maximum length of the IDs you'll find in this file (4 or less in Matroska)."},17143:{name:"EBMLReadVersion",level:1,type:"u",mandatory:!0,default:1,minver:1,description:"The minimum EBML version a parser has to support to read this file."},440786851:{name:"EBML",level:"0",type:"m",mandatory:!0,multiple:!0,minver:1,description:"Set the EBML characteristics of the data to follow. Each EBML document has to start with this."}},byName={},schema={byEbmlID:byEbmlID,byName:byName};for(var ebmlID in byEbmlID){byName[byEbmlID[ebmlID].name.replace("-","_")]=parseInt(ebmlID,10)}module.exports=schema},function(module,exports,__webpack_require__){"use strict";var SDPUtils=__webpack_require__(8);function writeMediaSection(transceiver,caps,type,stream,dtlsRole){var sdp=SDPUtils.writeRtpDescription(transceiver.kind,caps);if(sdp+=SDPUtils.writeIceParameters(transceiver.iceGatherer.getLocalParameters()),sdp+=SDPUtils.writeDtlsParameters(transceiver.dtlsTransport.getLocalParameters(),"offer"===type?"actpass":dtlsRole||"active"),sdp+="a=mid:"+transceiver.mid+"\r\n",transceiver.rtpSender&&transceiver.rtpReceiver?sdp+="a=sendrecv\r\n":transceiver.rtpSender?sdp+="a=sendonly\r\n":transceiver.rtpReceiver?sdp+="a=recvonly\r\n":sdp+="a=inactive\r\n",transceiver.rtpSender){var trackId=transceiver.rtpSender._initialTrackId||transceiver.rtpSender.track.id;transceiver.rtpSender._initialTrackId=trackId;var msid="msid:"+(stream?stream.id:"-")+" "+trackId+"\r\n";sdp+="a="+msid,sdp+="a=ssrc:"+transceiver.sendEncodingParameters[0].ssrc+" "+msid,transceiver.sendEncodingParameters[0].rtx&&(sdp+="a=ssrc:"+transceiver.sendEncodingParameters[0].rtx.ssrc+" "+msid,sdp+="a=ssrc-group:FID "+transceiver.sendEncodingParameters[0].ssrc+" "+transceiver.sendEncodingParameters[0].rtx.ssrc+"\r\n")}return sdp+="a=ssrc:"+transceiver.sendEncodingParameters[0].ssrc+" cname:"+SDPUtils.localCName+"\r\n",transceiver.rtpSender&&transceiver.sendEncodingParameters[0].rtx&&(sdp+="a=ssrc:"+transceiver.sendEncodingParameters[0].rtx.ssrc+" cname:"+SDPUtils.localCName+"\r\n"),sdp}function getCommonCapabilities(localCapabilities,remoteCapabilities){var commonCapabilities={codecs:[],headerExtensions:[],fecMechanisms:[]},findCodecByPayloadType=function(pt,codecs){pt=parseInt(pt,10);for(var i=0;i<codecs.length;i++)if(codecs[i].payloadType===pt||codecs[i].preferredPayloadType===pt)return codecs[i]},rtxCapabilityMatches=function(lRtx,rRtx,lCodecs,rCodecs){var lCodec=findCodecByPayloadType(lRtx.parameters.apt,lCodecs),rCodec=findCodecByPayloadType(rRtx.parameters.apt,rCodecs);return lCodec&&rCodec&&lCodec.name.toLowerCase()===rCodec.name.toLowerCase()};return localCapabilities.codecs.forEach((function(lCodec){for(var i=0;i<remoteCapabilities.codecs.length;i++){var rCodec=remoteCapabilities.codecs[i];if(lCodec.name.toLowerCase()===rCodec.name.toLowerCase()&&lCodec.clockRate===rCodec.clockRate){if("rtx"===lCodec.name.toLowerCase()&&lCodec.parameters&&rCodec.parameters.apt&&!rtxCapabilityMatches(lCodec,rCodec,localCapabilities.codecs,remoteCapabilities.codecs))continue;(rCodec=JSON.parse(JSON.stringify(rCodec))).numChannels=Math.min(lCodec.numChannels,rCodec.numChannels),commonCapabilities.codecs.push(rCodec),rCodec.rtcpFeedback=rCodec.rtcpFeedback.filter((function(fb){for(var j=0;j<lCodec.rtcpFeedback.length;j++)if(lCodec.rtcpFeedback[j].type===fb.type&&lCodec.rtcpFeedback[j].parameter===fb.parameter)return!0;return!1}));break}}})),localCapabilities.headerExtensions.forEach((function(lHeaderExtension){for(var i=0;i<remoteCapabilities.headerExtensions.length;i++){var rHeaderExtension=remoteCapabilities.headerExtensions[i];if(lHeaderExtension.uri===rHeaderExtension.uri){commonCapabilities.headerExtensions.push(rHeaderExtension);break}}})),commonCapabilities}function isActionAllowedInSignalingState(action,type,signalingState){return-1!=={offer:{setLocalDescription:["stable","have-local-offer"],setRemoteDescription:["stable","have-remote-offer"]},answer:{setLocalDescription:["have-remote-offer","have-local-pranswer"],setRemoteDescription:["have-local-offer","have-remote-pranswer"]}}[type][action].indexOf(signalingState)}function maybeAddCandidate(iceTransport,candidate){var alreadyAdded=iceTransport.getRemoteCandidates().find((function(remoteCandidate){return candidate.foundation===remoteCandidate.foundation&&candidate.ip===remoteCandidate.ip&&candidate.port===remoteCandidate.port&&candidate.priority===remoteCandidate.priority&&candidate.protocol===remoteCandidate.protocol&&candidate.type===remoteCandidate.type}));return alreadyAdded||iceTransport.addRemoteCandidate(candidate),!alreadyAdded}function makeError(name,description){var e=new Error(description);return e.name=name,e.code={NotSupportedError:9,InvalidStateError:11,InvalidAccessError:15,TypeError:void 0,OperationError:void 0}[name],e}module.exports=function(window,edgeVersion){function addTrackToStreamAndFireEvent(track,stream){stream.addTrack(track),stream.dispatchEvent(new window.MediaStreamTrackEvent("addtrack",{track:track}))}function fireAddTrack(pc,track,receiver,streams){var trackEvent=new Event("track");trackEvent.track=track,trackEvent.receiver=receiver,trackEvent.transceiver={receiver:receiver},trackEvent.streams=streams,window.setTimeout((function(){pc._dispatchEvent("track",trackEvent)}))}var RTCPeerConnection=function(config){var pc=this,_eventTarget=document.createDocumentFragment();if(["addEventListener","removeEventListener","dispatchEvent"].forEach((function(method){pc[method]=_eventTarget[method].bind(_eventTarget)})),this.canTrickleIceCandidates=null,this.needNegotiation=!1,this.localStreams=[],this.remoteStreams=[],this._localDescription=null,this._remoteDescription=null,this.signalingState="stable",this.iceConnectionState="new",this.connectionState="new",this.iceGatheringState="new",config=JSON.parse(JSON.stringify(config||{})),this.usingBundle="max-bundle"===config.bundlePolicy,"negotiate"===config.rtcpMuxPolicy)throw makeError("NotSupportedError","rtcpMuxPolicy 'negotiate' is not supported");switch(config.rtcpMuxPolicy||(config.rtcpMuxPolicy="require"),config.iceTransportPolicy){case"all":case"relay":break;default:config.iceTransportPolicy="all"}switch(config.bundlePolicy){case"balanced":case"max-compat":case"max-bundle":break;default:config.bundlePolicy="balanced"}if(config.iceServers=function(iceServers,edgeVersion){var hasTurn=!1;return(iceServers=JSON.parse(JSON.stringify(iceServers))).filter((function(server){if(server&&(server.urls||server.url)){var urls=server.urls||server.url;server.url&&!server.urls&&console.warn("RTCIceServer.url is deprecated! Use urls instead.");var isString="string"==typeof urls;return isString&&(urls=[urls]),urls=urls.filter((function(url){return 0===url.indexOf("turn:")&&-1!==url.indexOf("transport=udp")&&-1===url.indexOf("turn:[")&&!hasTurn?(hasTurn=!0,!0):0===url.indexOf("stun:")&&edgeVersion>=14393&&-1===url.indexOf("?transport=udp")})),delete server.url,server.urls=isString?urls[0]:urls,!!urls.length}}))}(config.iceServers||[],edgeVersion),this._iceGatherers=[],config.iceCandidatePoolSize)for(var i=config.iceCandidatePoolSize;i>0;i--)this._iceGatherers.push(new window.RTCIceGatherer({iceServers:config.iceServers,gatherPolicy:config.iceTransportPolicy}));else config.iceCandidatePoolSize=0;this._config=config,this.transceivers=[],this._sdpSessionId=SDPUtils.generateSessionId(),this._sdpSessionVersion=0,this._dtlsRole=void 0,this._isClosed=!1};Object.defineProperty(RTCPeerConnection.prototype,"localDescription",{configurable:!0,get:function(){return this._localDescription}}),Object.defineProperty(RTCPeerConnection.prototype,"remoteDescription",{configurable:!0,get:function(){return this._remoteDescription}}),RTCPeerConnection.prototype.onicecandidate=null,RTCPeerConnection.prototype.onaddstream=null,RTCPeerConnection.prototype.ontrack=null,RTCPeerConnection.prototype.onremovestream=null,RTCPeerConnection.prototype.onsignalingstatechange=null,RTCPeerConnection.prototype.oniceconnectionstatechange=null,RTCPeerConnection.prototype.onconnectionstatechange=null,RTCPeerConnection.prototype.onicegatheringstatechange=null,RTCPeerConnection.prototype.onnegotiationneeded=null,RTCPeerConnection.prototype.ondatachannel=null,RTCPeerConnection.prototype._dispatchEvent=function(name,event){this._isClosed||(this.dispatchEvent(event),"function"==typeof this["on"+name]&&this["on"+name](event))},RTCPeerConnection.prototype._emitGatheringStateChange=function(){var event=new Event("icegatheringstatechange");this._dispatchEvent("icegatheringstatechange",event)},RTCPeerConnection.prototype.getConfiguration=function(){return this._config},RTCPeerConnection.prototype.getLocalStreams=function(){return this.localStreams},RTCPeerConnection.prototype.getRemoteStreams=function(){return this.remoteStreams},RTCPeerConnection.prototype._createTransceiver=function(kind,doNotAdd){var hasBundleTransport=this.transceivers.length>0,transceiver={track:null,iceGatherer:null,iceTransport:null,dtlsTransport:null,localCapabilities:null,remoteCapabilities:null,rtpSender:null,rtpReceiver:null,kind:kind,mid:null,sendEncodingParameters:null,recvEncodingParameters:null,stream:null,associatedRemoteMediaStreams:[],wantReceive:!0};if(this.usingBundle&&hasBundleTransport)transceiver.iceTransport=this.transceivers[0].iceTransport,transceiver.dtlsTransport=this.transceivers[0].dtlsTransport;else{var transports=this._createIceAndDtlsTransports();transceiver.iceTransport=transports.iceTransport,transceiver.dtlsTransport=transports.dtlsTransport}return doNotAdd||this.transceivers.push(transceiver),transceiver},RTCPeerConnection.prototype.addTrack=function(track,stream){if(this._isClosed)throw makeError("InvalidStateError","Attempted to call addTrack on a closed peerconnection.");var transceiver;if(this.transceivers.find((function(s){return s.track===track})))throw makeError("InvalidAccessError","Track already exists.");for(var i=0;i<this.transceivers.length;i++)this.transceivers[i].track||this.transceivers[i].kind!==track.kind||(transceiver=this.transceivers[i]);return transceiver||(transceiver=this._createTransceiver(track.kind)),this._maybeFireNegotiationNeeded(),-1===this.localStreams.indexOf(stream)&&this.localStreams.push(stream),transceiver.track=track,transceiver.stream=stream,transceiver.rtpSender=new window.RTCRtpSender(track,transceiver.dtlsTransport),transceiver.rtpSender},RTCPeerConnection.prototype.addStream=function(stream){var pc=this;if(edgeVersion>=15025)stream.getTracks().forEach((function(track){pc.addTrack(track,stream)}));else{var clonedStream=stream.clone();stream.getTracks().forEach((function(track,idx){var clonedTrack=clonedStream.getTracks()[idx];track.addEventListener("enabled",(function(event){clonedTrack.enabled=event.enabled}))})),clonedStream.getTracks().forEach((function(track){pc.addTrack(track,clonedStream)}))}},RTCPeerConnection.prototype.removeTrack=function(sender){if(this._isClosed)throw makeError("InvalidStateError","Attempted to call removeTrack on a closed peerconnection.");if(!(sender instanceof window.RTCRtpSender))throw new TypeError("Argument 1 of RTCPeerConnection.removeTrack does not implement interface RTCRtpSender.");var transceiver=this.transceivers.find((function(t){return t.rtpSender===sender}));if(!transceiver)throw makeError("InvalidAccessError","Sender was not created by this connection.");var stream=transceiver.stream;transceiver.rtpSender.stop(),transceiver.rtpSender=null,transceiver.track=null,transceiver.stream=null,-1===this.transceivers.map((function(t){return t.stream})).indexOf(stream)&&this.localStreams.indexOf(stream)>-1&&this.localStreams.splice(this.localStreams.indexOf(stream),1),this._maybeFireNegotiationNeeded()},RTCPeerConnection.prototype.removeStream=function(stream){var pc=this;stream.getTracks().forEach((function(track){var sender=pc.getSenders().find((function(s){return s.track===track}));sender&&pc.removeTrack(sender)}))},RTCPeerConnection.prototype.getSenders=function(){return this.transceivers.filter((function(transceiver){return!!transceiver.rtpSender})).map((function(transceiver){return transceiver.rtpSender}))},RTCPeerConnection.prototype.getReceivers=function(){return this.transceivers.filter((function(transceiver){return!!transceiver.rtpReceiver})).map((function(transceiver){return transceiver.rtpReceiver}))},RTCPeerConnection.prototype._createIceGatherer=function(sdpMLineIndex,usingBundle){var pc=this;if(usingBundle&&sdpMLineIndex>0)return this.transceivers[0].iceGatherer;if(this._iceGatherers.length)return this._iceGatherers.shift();var iceGatherer=new window.RTCIceGatherer({iceServers:this._config.iceServers,gatherPolicy:this._config.iceTransportPolicy});return Object.defineProperty(iceGatherer,"state",{value:"new",writable:!0}),this.transceivers[sdpMLineIndex].bufferedCandidateEvents=[],this.transceivers[sdpMLineIndex].bufferCandidates=function(event){var end=!event.candidate||0===Object.keys(event.candidate).length;iceGatherer.state=end?"completed":"gathering",null!==pc.transceivers[sdpMLineIndex].bufferedCandidateEvents&&pc.transceivers[sdpMLineIndex].bufferedCandidateEvents.push(event)},iceGatherer.addEventListener("localcandidate",this.transceivers[sdpMLineIndex].bufferCandidates),iceGatherer},RTCPeerConnection.prototype._gather=function(mid,sdpMLineIndex){var pc=this,iceGatherer=this.transceivers[sdpMLineIndex].iceGatherer;if(!iceGatherer.onlocalcandidate){var bufferedCandidateEvents=this.transceivers[sdpMLineIndex].bufferedCandidateEvents;this.transceivers[sdpMLineIndex].bufferedCandidateEvents=null,iceGatherer.removeEventListener("localcandidate",this.transceivers[sdpMLineIndex].bufferCandidates),iceGatherer.onlocalcandidate=function(evt){if(!(pc.usingBundle&&sdpMLineIndex>0)){var event=new Event("icecandidate");event.candidate={sdpMid:mid,sdpMLineIndex:sdpMLineIndex};var cand=evt.candidate,end=!cand||0===Object.keys(cand).length;if(end)"new"!==iceGatherer.state&&"gathering"!==iceGatherer.state||(iceGatherer.state="completed");else{"new"===iceGatherer.state&&(iceGatherer.state="gathering"),cand.component=1,cand.ufrag=iceGatherer.getLocalParameters().usernameFragment;var serializedCandidate=SDPUtils.writeCandidate(cand);event.candidate=Object.assign(event.candidate,SDPUtils.parseCandidate(serializedCandidate)),event.candidate.candidate=serializedCandidate,event.candidate.toJSON=function(){return{candidate:event.candidate.candidate,sdpMid:event.candidate.sdpMid,sdpMLineIndex:event.candidate.sdpMLineIndex,usernameFragment:event.candidate.usernameFragment}}}var sections=SDPUtils.getMediaSections(pc._localDescription.sdp);sections[event.candidate.sdpMLineIndex]+=end?"a=end-of-candidates\r\n":"a="+event.candidate.candidate+"\r\n",pc._localDescription.sdp=SDPUtils.getDescription(pc._localDescription.sdp)+sections.join("");var complete=pc.transceivers.every((function(transceiver){return transceiver.iceGatherer&&"completed"===transceiver.iceGatherer.state}));"gathering"!==pc.iceGatheringState&&(pc.iceGatheringState="gathering",pc._emitGatheringStateChange()),end||pc._dispatchEvent("icecandidate",event),complete&&(pc._dispatchEvent("icecandidate",new Event("icecandidate")),pc.iceGatheringState="complete",pc._emitGatheringStateChange())}},window.setTimeout((function(){bufferedCandidateEvents.forEach((function(e){iceGatherer.onlocalcandidate(e)}))}),0)}},RTCPeerConnection.prototype._createIceAndDtlsTransports=function(){var pc=this,iceTransport=new window.RTCIceTransport(null);iceTransport.onicestatechange=function(){pc._updateIceConnectionState(),pc._updateConnectionState()};var dtlsTransport=new window.RTCDtlsTransport(iceTransport);return dtlsTransport.ondtlsstatechange=function(){pc._updateConnectionState()},dtlsTransport.onerror=function(){Object.defineProperty(dtlsTransport,"state",{value:"failed",writable:!0}),pc._updateConnectionState()},{iceTransport:iceTransport,dtlsTransport:dtlsTransport}},RTCPeerConnection.prototype._disposeIceAndDtlsTransports=function(sdpMLineIndex){var iceGatherer=this.transceivers[sdpMLineIndex].iceGatherer;iceGatherer&&(delete iceGatherer.onlocalcandidate,delete this.transceivers[sdpMLineIndex].iceGatherer);var iceTransport=this.transceivers[sdpMLineIndex].iceTransport;iceTransport&&(delete iceTransport.onicestatechange,delete this.transceivers[sdpMLineIndex].iceTransport);var dtlsTransport=this.transceivers[sdpMLineIndex].dtlsTransport;dtlsTransport&&(delete dtlsTransport.ondtlsstatechange,delete dtlsTransport.onerror,delete this.transceivers[sdpMLineIndex].dtlsTransport)},RTCPeerConnection.prototype._transceive=function(transceiver,send,recv){var params=getCommonCapabilities(transceiver.localCapabilities,transceiver.remoteCapabilities);send&&transceiver.rtpSender&&(params.encodings=transceiver.sendEncodingParameters,params.rtcp={cname:SDPUtils.localCName,compound:transceiver.rtcpParameters.compound},transceiver.recvEncodingParameters.length&&(params.rtcp.ssrc=transceiver.recvEncodingParameters[0].ssrc),transceiver.rtpSender.send(params)),recv&&transceiver.rtpReceiver&&params.codecs.length>0&&("video"===transceiver.kind&&transceiver.recvEncodingParameters&&edgeVersion<15019&&transceiver.recvEncodingParameters.forEach((function(p){delete p.rtx})),transceiver.recvEncodingParameters.length?params.encodings=transceiver.recvEncodingParameters:params.encodings=[{}],params.rtcp={compound:transceiver.rtcpParameters.compound},transceiver.rtcpParameters.cname&&(params.rtcp.cname=transceiver.rtcpParameters.cname),transceiver.sendEncodingParameters.length&&(params.rtcp.ssrc=transceiver.sendEncodingParameters[0].ssrc),transceiver.rtpReceiver.receive(params))},RTCPeerConnection.prototype.setLocalDescription=function(description){var sections,sessionpart,pc=this;if(-1===["offer","answer"].indexOf(description.type))return Promise.reject(makeError("TypeError",'Unsupported type "'+description.type+'"'));if(!isActionAllowedInSignalingState("setLocalDescription",description.type,pc.signalingState)||pc._isClosed)return Promise.reject(makeError("InvalidStateError","Can not set local "+description.type+" in state "+pc.signalingState));if("offer"===description.type)sections=SDPUtils.splitSections(description.sdp),sessionpart=sections.shift(),sections.forEach((function(mediaSection,sdpMLineIndex){var caps=SDPUtils.parseRtpParameters(mediaSection);pc.transceivers[sdpMLineIndex].localCapabilities=caps})),pc.transceivers.forEach((function(transceiver,sdpMLineIndex){pc._gather(transceiver.mid,sdpMLineIndex)}));else if("answer"===description.type){sections=SDPUtils.splitSections(pc._remoteDescription.sdp),sessionpart=sections.shift();var isIceLite=SDPUtils.matchPrefix(sessionpart,"a=ice-lite").length>0;sections.forEach((function(mediaSection,sdpMLineIndex){var transceiver=pc.transceivers[sdpMLineIndex],iceGatherer=transceiver.iceGatherer,iceTransport=transceiver.iceTransport,dtlsTransport=transceiver.dtlsTransport,localCapabilities=transceiver.localCapabilities,remoteCapabilities=transceiver.remoteCapabilities;if(!(SDPUtils.isRejected(mediaSection)&&0===SDPUtils.matchPrefix(mediaSection,"a=bundle-only").length)&&!transceiver.rejected){var remoteIceParameters=SDPUtils.getIceParameters(mediaSection,sessionpart),remoteDtlsParameters=SDPUtils.getDtlsParameters(mediaSection,sessionpart);isIceLite&&(remoteDtlsParameters.role="server"),pc.usingBundle&&0!==sdpMLineIndex||(pc._gather(transceiver.mid,sdpMLineIndex),"new"===iceTransport.state&&iceTransport.start(iceGatherer,remoteIceParameters,isIceLite?"controlling":"controlled"),"new"===dtlsTransport.state&&dtlsTransport.start(remoteDtlsParameters));var params=getCommonCapabilities(localCapabilities,remoteCapabilities);pc._transceive(transceiver,params.codecs.length>0,!1)}}))}return pc._localDescription={type:description.type,sdp:description.sdp},"offer"===description.type?pc._updateSignalingState("have-local-offer"):pc._updateSignalingState("stable"),Promise.resolve()},RTCPeerConnection.prototype.setRemoteDescription=function(description){var pc=this;if(-1===["offer","answer"].indexOf(description.type))return Promise.reject(makeError("TypeError",'Unsupported type "'+description.type+'"'));if(!isActionAllowedInSignalingState("setRemoteDescription",description.type,pc.signalingState)||pc._isClosed)return Promise.reject(makeError("InvalidStateError","Can not set remote "+description.type+" in state "+pc.signalingState));var streams={};pc.remoteStreams.forEach((function(stream){streams[stream.id]=stream}));var receiverList=[],sections=SDPUtils.splitSections(description.sdp),sessionpart=sections.shift(),isIceLite=SDPUtils.matchPrefix(sessionpart,"a=ice-lite").length>0,usingBundle=SDPUtils.matchPrefix(sessionpart,"a=group:BUNDLE ").length>0;pc.usingBundle=usingBundle;var iceOptions=SDPUtils.matchPrefix(sessionpart,"a=ice-options:")[0];return pc.canTrickleIceCandidates=!!iceOptions&&iceOptions.substr(14).split(" ").indexOf("trickle")>=0,sections.forEach((function(mediaSection,sdpMLineIndex){var lines=SDPUtils.splitLines(mediaSection),kind=SDPUtils.getKind(mediaSection),rejected=SDPUtils.isRejected(mediaSection)&&0===SDPUtils.matchPrefix(mediaSection,"a=bundle-only").length,protocol=lines[0].substr(2).split(" ")[2],direction=SDPUtils.getDirection(mediaSection,sessionpart),remoteMsid=SDPUtils.parseMsid(mediaSection),mid=SDPUtils.getMid(mediaSection)||SDPUtils.generateIdentifier();if(rejected||"application"===kind&&("DTLS/SCTP"===protocol||"UDP/DTLS/SCTP"===protocol))pc.transceivers[sdpMLineIndex]={mid:mid,kind:kind,protocol:protocol,rejected:!0};else{var transceiver,iceGatherer,iceTransport,dtlsTransport,rtpReceiver,sendEncodingParameters,recvEncodingParameters,localCapabilities,track;!rejected&&pc.transceivers[sdpMLineIndex]&&pc.transceivers[sdpMLineIndex].rejected&&(pc.transceivers[sdpMLineIndex]=pc._createTransceiver(kind,!0));var remoteIceParameters,remoteDtlsParameters,remoteCapabilities=SDPUtils.parseRtpParameters(mediaSection);rejected||(remoteIceParameters=SDPUtils.getIceParameters(mediaSection,sessionpart),(remoteDtlsParameters=SDPUtils.getDtlsParameters(mediaSection,sessionpart)).role="client"),recvEncodingParameters=SDPUtils.parseRtpEncodingParameters(mediaSection);var rtcpParameters=SDPUtils.parseRtcpParameters(mediaSection),isComplete=SDPUtils.matchPrefix(mediaSection,"a=end-of-candidates",sessionpart).length>0,cands=SDPUtils.matchPrefix(mediaSection,"a=candidate:").map((function(cand){return SDPUtils.parseCandidate(cand)})).filter((function(cand){return 1===cand.component}));if(("offer"===description.type||"answer"===description.type)&&!rejected&&usingBundle&&sdpMLineIndex>0&&pc.transceivers[sdpMLineIndex]&&(pc._disposeIceAndDtlsTransports(sdpMLineIndex),pc.transceivers[sdpMLineIndex].iceGatherer=pc.transceivers[0].iceGatherer,pc.transceivers[sdpMLineIndex].iceTransport=pc.transceivers[0].iceTransport,pc.transceivers[sdpMLineIndex].dtlsTransport=pc.transceivers[0].dtlsTransport,pc.transceivers[sdpMLineIndex].rtpSender&&pc.transceivers[sdpMLineIndex].rtpSender.setTransport(pc.transceivers[0].dtlsTransport),pc.transceivers[sdpMLineIndex].rtpReceiver&&pc.transceivers[sdpMLineIndex].rtpReceiver.setTransport(pc.transceivers[0].dtlsTransport)),"offer"!==description.type||rejected){if("answer"===description.type&&!rejected){iceGatherer=(transceiver=pc.transceivers[sdpMLineIndex]).iceGatherer,iceTransport=transceiver.iceTransport,dtlsTransport=transceiver.dtlsTransport,rtpReceiver=transceiver.rtpReceiver,sendEncodingParameters=transceiver.sendEncodingParameters,localCapabilities=transceiver.localCapabilities,pc.transceivers[sdpMLineIndex].recvEncodingParameters=recvEncodingParameters,pc.transceivers[sdpMLineIndex].remoteCapabilities=remoteCapabilities,pc.transceivers[sdpMLineIndex].rtcpParameters=rtcpParameters,cands.length&&"new"===iceTransport.state&&(!isIceLite&&!isComplete||usingBundle&&0!==sdpMLineIndex?cands.forEach((function(candidate){maybeAddCandidate(transceiver.iceTransport,candidate)})):iceTransport.setRemoteCandidates(cands)),usingBundle&&0!==sdpMLineIndex||("new"===iceTransport.state&&iceTransport.start(iceGatherer,remoteIceParameters,"controlling"),"new"===dtlsTransport.state&&dtlsTransport.start(remoteDtlsParameters)),!getCommonCapabilities(transceiver.localCapabilities,transceiver.remoteCapabilities).codecs.filter((function(c){return"rtx"===c.name.toLowerCase()})).length&&transceiver.sendEncodingParameters[0].rtx&&delete transceiver.sendEncodingParameters[0].rtx,pc._transceive(transceiver,"sendrecv"===direction||"recvonly"===direction,"sendrecv"===direction||"sendonly"===direction),!rtpReceiver||"sendrecv"!==direction&&"sendonly"!==direction?delete transceiver.rtpReceiver:(track=rtpReceiver.track,remoteMsid?(streams[remoteMsid.stream]||(streams[remoteMsid.stream]=new window.MediaStream),addTrackToStreamAndFireEvent(track,streams[remoteMsid.stream]),receiverList.push([track,rtpReceiver,streams[remoteMsid.stream]])):(streams.default||(streams.default=new window.MediaStream),addTrackToStreamAndFireEvent(track,streams.default),receiverList.push([track,rtpReceiver,streams.default])))}}else{(transceiver=pc.transceivers[sdpMLineIndex]||pc._createTransceiver(kind)).mid=mid,transceiver.iceGatherer||(transceiver.iceGatherer=pc._createIceGatherer(sdpMLineIndex,usingBundle)),cands.length&&"new"===transceiver.iceTransport.state&&(!isComplete||usingBundle&&0!==sdpMLineIndex?cands.forEach((function(candidate){maybeAddCandidate(transceiver.iceTransport,candidate)})):transceiver.iceTransport.setRemoteCandidates(cands)),localCapabilities=window.RTCRtpReceiver.getCapabilities(kind),edgeVersion<15019&&(localCapabilities.codecs=localCapabilities.codecs.filter((function(codec){return"rtx"!==codec.name}))),sendEncodingParameters=transceiver.sendEncodingParameters||[{ssrc:1001*(2*sdpMLineIndex+2)}];var stream,isNewTrack=!1;if("sendrecv"===direction||"sendonly"===direction){if(isNewTrack=!transceiver.rtpReceiver,rtpReceiver=transceiver.rtpReceiver||new window.RTCRtpReceiver(transceiver.dtlsTransport,kind),isNewTrack)track=rtpReceiver.track,remoteMsid&&"-"===remoteMsid.stream||(remoteMsid?(streams[remoteMsid.stream]||(streams[remoteMsid.stream]=new window.MediaStream,Object.defineProperty(streams[remoteMsid.stream],"id",{get:function(){return remoteMsid.stream}})),Object.defineProperty(track,"id",{get:function(){return remoteMsid.track}}),stream=streams[remoteMsid.stream]):(streams.default||(streams.default=new window.MediaStream),stream=streams.default)),stream&&(addTrackToStreamAndFireEvent(track,stream),transceiver.associatedRemoteMediaStreams.push(stream)),receiverList.push([track,rtpReceiver,stream])}else transceiver.rtpReceiver&&transceiver.rtpReceiver.track&&(transceiver.associatedRemoteMediaStreams.forEach((function(s){var nativeTrack=s.getTracks().find((function(t){return t.id===transceiver.rtpReceiver.track.id}));nativeTrack&&function(track,stream){stream.removeTrack(track),stream.dispatchEvent(new window.MediaStreamTrackEvent("removetrack",{track:track}))}(nativeTrack,s)})),transceiver.associatedRemoteMediaStreams=[]);transceiver.localCapabilities=localCapabilities,transceiver.remoteCapabilities=remoteCapabilities,transceiver.rtpReceiver=rtpReceiver,transceiver.rtcpParameters=rtcpParameters,transceiver.sendEncodingParameters=sendEncodingParameters,transceiver.recvEncodingParameters=recvEncodingParameters,pc._transceive(pc.transceivers[sdpMLineIndex],!1,isNewTrack)}}})),void 0===pc._dtlsRole&&(pc._dtlsRole="offer"===description.type?"active":"passive"),pc._remoteDescription={type:description.type,sdp:description.sdp},"offer"===description.type?pc._updateSignalingState("have-remote-offer"):pc._updateSignalingState("stable"),Object.keys(streams).forEach((function(sid){var stream=streams[sid];if(stream.getTracks().length){if(-1===pc.remoteStreams.indexOf(stream)){pc.remoteStreams.push(stream);var event=new Event("addstream");event.stream=stream,window.setTimeout((function(){pc._dispatchEvent("addstream",event)}))}receiverList.forEach((function(item){var track=item[0],receiver=item[1];stream.id===item[2].id&&fireAddTrack(pc,track,receiver,[stream])}))}})),receiverList.forEach((function(item){item[2]||fireAddTrack(pc,item[0],item[1],[])})),window.setTimeout((function(){pc&&pc.transceivers&&pc.transceivers.forEach((function(transceiver){transceiver.iceTransport&&"new"===transceiver.iceTransport.state&&transceiver.iceTransport.getRemoteCandidates().length>0&&(console.warn("Timeout for addRemoteCandidate. Consider sending an end-of-candidates notification"),transceiver.iceTransport.addRemoteCandidate({}))}))}),4e3),Promise.resolve()},RTCPeerConnection.prototype.close=function(){this.transceivers.forEach((function(transceiver){transceiver.iceTransport&&transceiver.iceTransport.stop(),transceiver.dtlsTransport&&transceiver.dtlsTransport.stop(),transceiver.rtpSender&&transceiver.rtpSender.stop(),transceiver.rtpReceiver&&transceiver.rtpReceiver.stop()})),this._isClosed=!0,this._updateSignalingState("closed")},RTCPeerConnection.prototype._updateSignalingState=function(newState){this.signalingState=newState;var event=new Event("signalingstatechange");this._dispatchEvent("signalingstatechange",event)},RTCPeerConnection.prototype._maybeFireNegotiationNeeded=function(){var pc=this;"stable"===this.signalingState&&!0!==this.needNegotiation&&(this.needNegotiation=!0,window.setTimeout((function(){if(pc.needNegotiation){pc.needNegotiation=!1;var event=new Event("negotiationneeded");pc._dispatchEvent("negotiationneeded",event)}}),0))},RTCPeerConnection.prototype._updateIceConnectionState=function(){var newState,states={new:0,closed:0,checking:0,connected:0,completed:0,disconnected:0,failed:0};if(this.transceivers.forEach((function(transceiver){transceiver.iceTransport&&!transceiver.rejected&&states[transceiver.iceTransport.state]++})),newState="new",states.failed>0?newState="failed":states.checking>0?newState="checking":states.disconnected>0?newState="disconnected":states.new>0?newState="new":states.connected>0?newState="connected":states.completed>0&&(newState="completed"),newState!==this.iceConnectionState){this.iceConnectionState=newState;var event=new Event("iceconnectionstatechange");this._dispatchEvent("iceconnectionstatechange",event)}},RTCPeerConnection.prototype._updateConnectionState=function(){var newState,states={new:0,closed:0,connecting:0,connected:0,completed:0,disconnected:0,failed:0};if(this.transceivers.forEach((function(transceiver){transceiver.iceTransport&&transceiver.dtlsTransport&&!transceiver.rejected&&(states[transceiver.iceTransport.state]++,states[transceiver.dtlsTransport.state]++)})),states.connected+=states.completed,newState="new",states.failed>0?newState="failed":states.connecting>0?newState="connecting":states.disconnected>0?newState="disconnected":states.new>0?newState="new":states.connected>0&&(newState="connected"),newState!==this.connectionState){this.connectionState=newState;var event=new Event("connectionstatechange");this._dispatchEvent("connectionstatechange",event)}},RTCPeerConnection.prototype.createOffer=function(){var pc=this;if(pc._isClosed)return Promise.reject(makeError("InvalidStateError","Can not call createOffer after close"));var numAudioTracks=pc.transceivers.filter((function(t){return"audio"===t.kind})).length,numVideoTracks=pc.transceivers.filter((function(t){return"video"===t.kind})).length,offerOptions=arguments[0];if(offerOptions){if(offerOptions.mandatory||offerOptions.optional)throw new TypeError("Legacy mandatory/optional constraints not supported.");void 0!==offerOptions.offerToReceiveAudio&&(numAudioTracks=!0===offerOptions.offerToReceiveAudio?1:!1===offerOptions.offerToReceiveAudio?0:offerOptions.offerToReceiveAudio),void 0!==offerOptions.offerToReceiveVideo&&(numVideoTracks=!0===offerOptions.offerToReceiveVideo?1:!1===offerOptions.offerToReceiveVideo?0:offerOptions.offerToReceiveVideo)}for(pc.transceivers.forEach((function(transceiver){"audio"===transceiver.kind?--numAudioTracks<0&&(transceiver.wantReceive=!1):"video"===transceiver.kind&&--numVideoTracks<0&&(transceiver.wantReceive=!1)}));numAudioTracks>0||numVideoTracks>0;)numAudioTracks>0&&(pc._createTransceiver("audio"),numAudioTracks--),numVideoTracks>0&&(pc._createTransceiver("video"),numVideoTracks--);var sdp=SDPUtils.writeSessionBoilerplate(pc._sdpSessionId,pc._sdpSessionVersion++);pc.transceivers.forEach((function(transceiver,sdpMLineIndex){var track=transceiver.track,kind=transceiver.kind,mid=transceiver.mid||SDPUtils.generateIdentifier();transceiver.mid=mid,transceiver.iceGatherer||(transceiver.iceGatherer=pc._createIceGatherer(sdpMLineIndex,pc.usingBundle));var localCapabilities=window.RTCRtpSender.getCapabilities(kind);edgeVersion<15019&&(localCapabilities.codecs=localCapabilities.codecs.filter((function(codec){return"rtx"!==codec.name}))),localCapabilities.codecs.forEach((function(codec){"H264"===codec.name&&void 0===codec.parameters["level-asymmetry-allowed"]&&(codec.parameters["level-asymmetry-allowed"]="1"),transceiver.remoteCapabilities&&transceiver.remoteCapabilities.codecs&&transceiver.remoteCapabilities.codecs.forEach((function(remoteCodec){codec.name.toLowerCase()===remoteCodec.name.toLowerCase()&&codec.clockRate===remoteCodec.clockRate&&(codec.preferredPayloadType=remoteCodec.payloadType)}))})),localCapabilities.headerExtensions.forEach((function(hdrExt){(transceiver.remoteCapabilities&&transceiver.remoteCapabilities.headerExtensions||[]).forEach((function(rHdrExt){hdrExt.uri===rHdrExt.uri&&(hdrExt.id=rHdrExt.id)}))}));var sendEncodingParameters=transceiver.sendEncodingParameters||[{ssrc:1001*(2*sdpMLineIndex+1)}];track&&edgeVersion>=15019&&"video"===kind&&!sendEncodingParameters[0].rtx&&(sendEncodingParameters[0].rtx={ssrc:sendEncodingParameters[0].ssrc+1}),transceiver.wantReceive&&(transceiver.rtpReceiver=new window.RTCRtpReceiver(transceiver.dtlsTransport,kind)),transceiver.localCapabilities=localCapabilities,transceiver.sendEncodingParameters=sendEncodingParameters})),"max-compat"!==pc._config.bundlePolicy&&(sdp+="a=group:BUNDLE "+pc.transceivers.map((function(t){return t.mid})).join(" ")+"\r\n"),sdp+="a=ice-options:trickle\r\n",pc.transceivers.forEach((function(transceiver,sdpMLineIndex){sdp+=writeMediaSection(transceiver,transceiver.localCapabilities,"offer",transceiver.stream,pc._dtlsRole),sdp+="a=rtcp-rsize\r\n",!transceiver.iceGatherer||"new"===pc.iceGatheringState||0!==sdpMLineIndex&&pc.usingBundle||(transceiver.iceGatherer.getLocalCandidates().forEach((function(cand){cand.component=1,sdp+="a="+SDPUtils.writeCandidate(cand)+"\r\n"})),"completed"===transceiver.iceGatherer.state&&(sdp+="a=end-of-candidates\r\n"))}));var desc=new window.RTCSessionDescription({type:"offer",sdp:sdp});return Promise.resolve(desc)},RTCPeerConnection.prototype.createAnswer=function(){var pc=this;if(pc._isClosed)return Promise.reject(makeError("InvalidStateError","Can not call createAnswer after close"));if("have-remote-offer"!==pc.signalingState&&"have-local-pranswer"!==pc.signalingState)return Promise.reject(makeError("InvalidStateError","Can not call createAnswer in signalingState "+pc.signalingState));var sdp=SDPUtils.writeSessionBoilerplate(pc._sdpSessionId,pc._sdpSessionVersion++);pc.usingBundle&&(sdp+="a=group:BUNDLE "+pc.transceivers.map((function(t){return t.mid})).join(" ")+"\r\n"),sdp+="a=ice-options:trickle\r\n";var mediaSectionsInOffer=SDPUtils.getMediaSections(pc._remoteDescription.sdp).length;pc.transceivers.forEach((function(transceiver,sdpMLineIndex){if(!(sdpMLineIndex+1>mediaSectionsInOffer)){if(transceiver.rejected)return"application"===transceiver.kind?"DTLS/SCTP"===transceiver.protocol?sdp+="m=application 0 DTLS/SCTP 5000\r\n":sdp+="m=application 0 "+transceiver.protocol+" webrtc-datachannel\r\n":"audio"===transceiver.kind?sdp+="m=audio 0 UDP/TLS/RTP/SAVPF 0\r\na=rtpmap:0 PCMU/8000\r\n":"video"===transceiver.kind&&(sdp+="m=video 0 UDP/TLS/RTP/SAVPF 120\r\na=rtpmap:120 VP8/90000\r\n"),void(sdp+="c=IN IP4 0.0.0.0\r\na=inactive\r\na=mid:"+transceiver.mid+"\r\n");var localTrack;if(transceiver.stream)"audio"===transceiver.kind?localTrack=transceiver.stream.getAudioTracks()[0]:"video"===transceiver.kind&&(localTrack=transceiver.stream.getVideoTracks()[0]),localTrack&&edgeVersion>=15019&&"video"===transceiver.kind&&!transceiver.sendEncodingParameters[0].rtx&&(transceiver.sendEncodingParameters[0].rtx={ssrc:transceiver.sendEncodingParameters[0].ssrc+1});var commonCapabilities=getCommonCapabilities(transceiver.localCapabilities,transceiver.remoteCapabilities);!commonCapabilities.codecs.filter((function(c){return"rtx"===c.name.toLowerCase()})).length&&transceiver.sendEncodingParameters[0].rtx&&delete transceiver.sendEncodingParameters[0].rtx,sdp+=writeMediaSection(transceiver,commonCapabilities,"answer",transceiver.stream,pc._dtlsRole),transceiver.rtcpParameters&&transceiver.rtcpParameters.reducedSize&&(sdp+="a=rtcp-rsize\r\n")}}));var desc=new window.RTCSessionDescription({type:"answer",sdp:sdp});return Promise.resolve(desc)},RTCPeerConnection.prototype.addIceCandidate=function(candidate){var sections,pc=this;return candidate&&void 0===candidate.sdpMLineIndex&&!candidate.sdpMid?Promise.reject(new TypeError("sdpMLineIndex or sdpMid required")):new Promise((function(resolve,reject){if(!pc._remoteDescription)return reject(makeError("InvalidStateError","Can not add ICE candidate without a remote description"));if(candidate&&""!==candidate.candidate){var sdpMLineIndex=candidate.sdpMLineIndex;if(candidate.sdpMid)for(var i=0;i<pc.transceivers.length;i++)if(pc.transceivers[i].mid===candidate.sdpMid){sdpMLineIndex=i;break}var transceiver=pc.transceivers[sdpMLineIndex];if(!transceiver)return reject(makeError("OperationError","Can not add ICE candidate"));if(transceiver.rejected)return resolve();var cand=Object.keys(candidate.candidate).length>0?SDPUtils.parseCandidate(candidate.candidate):{};if("tcp"===cand.protocol&&(0===cand.port||9===cand.port))return resolve();if(cand.component&&1!==cand.component)return resolve();if((0===sdpMLineIndex||sdpMLineIndex>0&&transceiver.iceTransport!==pc.transceivers[0].iceTransport)&&!maybeAddCandidate(transceiver.iceTransport,cand))return reject(makeError("OperationError","Can not add ICE candidate"));var candidateString=candidate.candidate.trim();0===candidateString.indexOf("a=")&&(candidateString=candidateString.substr(2)),(sections=SDPUtils.getMediaSections(pc._remoteDescription.sdp))[sdpMLineIndex]+="a="+(cand.type?candidateString:"end-of-candidates")+"\r\n",pc._remoteDescription.sdp=SDPUtils.getDescription(pc._remoteDescription.sdp)+sections.join("")}else for(var j=0;j<pc.transceivers.length&&(pc.transceivers[j].rejected||(pc.transceivers[j].iceTransport.addRemoteCandidate({}),(sections=SDPUtils.getMediaSections(pc._remoteDescription.sdp))[j]+="a=end-of-candidates\r\n",pc._remoteDescription.sdp=SDPUtils.getDescription(pc._remoteDescription.sdp)+sections.join(""),!pc.usingBundle));j++);resolve()}))},RTCPeerConnection.prototype.getStats=function(selector){if(selector&&selector instanceof window.MediaStreamTrack){var senderOrReceiver=null;if(this.transceivers.forEach((function(transceiver){transceiver.rtpSender&&transceiver.rtpSender.track===selector?senderOrReceiver=transceiver.rtpSender:transceiver.rtpReceiver&&transceiver.rtpReceiver.track===selector&&(senderOrReceiver=transceiver.rtpReceiver)})),!senderOrReceiver)throw makeError("InvalidAccessError","Invalid selector.");return senderOrReceiver.getStats()}var promises=[];return this.transceivers.forEach((function(transceiver){["rtpSender","rtpReceiver","iceGatherer","iceTransport","dtlsTransport"].forEach((function(method){transceiver[method]&&promises.push(transceiver[method].getStats())}))})),Promise.all(promises).then((function(allStats){var results=new Map;return allStats.forEach((function(stats){stats.forEach((function(stat){results.set(stat.id,stat)}))})),results}))};["RTCRtpSender","RTCRtpReceiver","RTCIceGatherer","RTCIceTransport","RTCDtlsTransport"].forEach((function(ortcObjectName){var obj=window[ortcObjectName];if(obj&&obj.prototype&&obj.prototype.getStats){var nativeGetstats=obj.prototype.getStats;obj.prototype.getStats=function(){return nativeGetstats.apply(this).then((function(nativeStats){var mapStats=new Map;return Object.keys(nativeStats).forEach((function(id){var stat;nativeStats[id].type={inboundrtp:"inbound-rtp",outboundrtp:"outbound-rtp",candidatepair:"candidate-pair",localcandidate:"local-candidate",remotecandidate:"remote-candidate"}[(stat=nativeStats[id]).type]||stat.type,mapStats.set(id,nativeStats[id])})),mapStats}))}}}));var methods=["createOffer","createAnswer"];return methods.forEach((function(method){var nativeMethod=RTCPeerConnection.prototype[method];RTCPeerConnection.prototype[method]=function(){var args=arguments;return"function"==typeof args[0]||"function"==typeof args[1]?nativeMethod.apply(this,[arguments[2]]).then((function(description){"function"==typeof args[0]&&args[0].apply(null,[description])}),(function(error){"function"==typeof args[1]&&args[1].apply(null,[error])})):nativeMethod.apply(this,arguments)}})),(methods=["setLocalDescription","setRemoteDescription","addIceCandidate"]).forEach((function(method){var nativeMethod=RTCPeerConnection.prototype[method];RTCPeerConnection.prototype[method]=function(){var args=arguments;return"function"==typeof args[1]||"function"==typeof args[2]?nativeMethod.apply(this,arguments).then((function(){"function"==typeof args[1]&&args[1].apply(null)}),(function(error){"function"==typeof args[2]&&args[2].apply(null,[error])})):nativeMethod.apply(this,arguments)}})),["getStats"].forEach((function(method){var nativeMethod=RTCPeerConnection.prototype[method];RTCPeerConnection.prototype[method]=function(){var args=arguments;return"function"==typeof args[1]?nativeMethod.apply(this,arguments).then((function(){"function"==typeof args[1]&&args[1].apply(null)})):nativeMethod.apply(this,arguments)}})),RTCPeerConnection}},function(module,exports){window.sdkversion="1.67.0"},function(module,exports){window.app=angular.module("rainbow",["angular-jwt"]),window.rainbowAdmin=angular.module("rainbowAdmin",[]),window.rainbow=angular.module("rainbow",["rainbowAdmin"])},function(module,exports,__webpack_require__){__webpack_require__(13),__webpack_require__(23),__webpack_require__(24),__webpack_require__(25),__webpack_require__(26),__webpack_require__(27),__webpack_require__(28),__webpack_require__(29),__webpack_require__(30),__webpack_require__(31),__webpack_require__(32),__webpack_require__(33),__webpack_require__(34),__webpack_require__(35),__webpack_require__(36),__webpack_require__(37),__webpack_require__(38),__webpack_require__(62),__webpack_require__(63),__webpack_require__(64),__webpack_require__(0),__webpack_require__(65),__webpack_require__(66),__webpack_require__(67),__webpack_require__(68),__webpack_require__(69),__webpack_require__(70),__webpack_require__(71),__webpack_require__(72),__webpack_require__(73),__webpack_require__(74),__webpack_require__(75),__webpack_require__(76),__webpack_require__(77),__webpack_require__(78),__webpack_require__(79),__webpack_require__(80),__webpack_require__(81),__webpack_require__(82),__webpack_require__(83),__webpack_require__(84),__webpack_require__(85),__webpack_require__(86),__webpack_require__(87),__webpack_require__(88),__webpack_require__(89),__webpack_require__(90),__webpack_require__(91),__webpack_require__(92),__webpack_require__(93),__webpack_require__(94),__webpack_require__(96),__webpack_require__(97),__webpack_require__(98),__webpack_require__(99),__webpack_require__(100),__webpack_require__(101),__webpack_require__(102),__webpack_require__(103),__webpack_require__(104),__webpack_require__(105),__webpack_require__(106),__webpack_require__(107),__webpack_require__(108),__webpack_require__(109),__webpack_require__(110),__webpack_require__(111),__webpack_require__(112),__webpack_require__(113),__webpack_require__(114),__webpack_require__(115),__webpack_require__(116),__webpack_require__(117),__webpack_require__(118),__webpack_require__(119),__webpack_require__(120),__webpack_require__(121),__webpack_require__(122),__webpack_require__(123),__webpack_require__(124),__webpack_require__(125),__webpack_require__(126),__webpack_require__(127),__webpack_require__(128),__webpack_require__(129),__webpack_require__(130),__webpack_require__(131),__webpack_require__(132),__webpack_require__(146),__webpack_require__(147),__webpack_require__(148),__webpack_require__(149),__webpack_require__(150),__webpack_require__(151)},function(module,exports){angular.module("rainbow").factory("AuthSettings",[function(){"use strict";function AuthSettings(authURLs){if(authURLs.length>0){if(1===authURLs.length)var authSettings=authURLs[0];else authSettings=authURLs.reduce((function(settings,authUrl){return"RAINBOW"===authUrl.type&&"RAINBOW"!==settings.type?(settings.safetyUrl=authUrl.url||authUrl.loginUrl,settings):(authUrl.safetyUrl=settings.url||settings.loginUrl,authUrl)}));this.type=authSettings.type,this.loginUrl=authSettings.url||authSettings.loginUrl,this.logoutUrl=authSettings.logoutUrl,this.safetyUrl=authSettings.safetyUrl}this.setParameter=function(name,fn){switch(name){case"uid":this.userId=fn();break;case"x-rainbow-app-auth":if("RAINBOW"!==this.type&&this.loginUrl){var appAuth=fn((url=new URL(this.loginUrl)).searchParams.get("challenge"));url.searchParams.append(name,appAuth),this.loginUrl=url.href}break;case"token":if("RAINBOW"!==this.type&&this.logoutUrl){var url=new URL(this.logoutUrl),tkn=fn();url.searchParams.append(name,tkn),this.logoutUrl=url.href}break;case"safetyUrl":"RAINBOW"===this.type||this.safetyUrl||(this.safetyUrl=fn())}}}return AuthSettings.createFromData=function(data){return new AuthSettings(data)},AuthSettings}])},function(module,exports){function RBError(message,details,detailsCode,detailsData){this.name="RainbowError",this.message=message,this.details=details,this.detailsCode=detailsCode,this.detailsData=detailsData,this.stack=(new Error).stack}RBError.prototype=Object.create(Error.prototype),RBError.prototype.constructor=RBError,window.RBError=RBError},function(module,exports){angular.module("rainbow").factory("Company",[function(){"use strict";function Company(data){var _this=this;Company.attributes.forEach((function(attribute){angular.isDefined(data[attribute.name])?_this[attribute.name]=data[attribute.name]:angular.isDefined(attribute.defaultValue)&&(_this[attribute.name]=attribute.defaultValue)})),this.state=data.state?data.state:"USA"===data.country?"AL":"CAN"===data.country?"AB":null,this.logo=null,this.filterName=this.name.toLowerCase(),this.updateFromData=function(newData){Company.attributes.forEach((function(attribute){angular.isDefined(newData[attribute.name])&&(_this[attribute.name]=newData[attribute.name])}))},this.nameForLogs="",this.isActive=function(){return"active"===this.status},this.isInitializing=function(){return"initializing"===this.status},this.isInvited=function(){return"invited"===this.status},this.isFreemium=function(){return"freemium"===this.offerType},this.isPremium=function(){return"premium"===this.offerType},this.isVAD=function(){return this.isBP&&"VAD"===this.bpType},this.isIR=function(){return this.isBP&&"IR"===this.bpType},this.isDR=function(){return this.isBP&&"DR"===this.bpType},this.isEC=function(){return!this.isBP}}return Company.createFromData=function(data){return new Company(data)},Company.create=function(id,name){return new Company({id:id,name:name})},Company.prune=function(data,userContact){var dataCopy=Object.assign({},data);return delete dataCopy.dataLocation,dataCopy.isBP||(delete dataCopy.bpType,delete dataCopy.bpBusinessModel,delete dataCopy.bpApplicantNumber,delete dataCopy.bpCRDid,delete dataCopy.bpHasRightToSell,delete dataCopy.bpHasRightToConnect,delete dataCopy.bpIsContractAccepted),userContact&&(userContact.isSuperadmin()||userContact.isBPAdminFinance())||(delete dataCopy.bpType,delete dataCopy.adminHasRightToUpdateSubscriptions,delete dataCopy.adminAllowedUpdateSubscriptionsOps),userContact&&userContact.isSuperadmin()||delete dataCopy.superadminComment,""===dataCopy.economicActivityClassification&&delete dataCopy.economicActivityClassification,userContact&&(userContact.isSuperadmin()||null!==dataCopy.supportEmail&&""!==dataCopy.supportEmail)||delete dataCopy.supportEmail,userContact&&(userContact.isSuperadmin()||null!==dataCopy.privateDC&&""!==dataCopy.privateDC)||delete dataCopy.privateDC,dataCopy},Company.StatusValues=["initializing","active","alerting","hold","terminated"],Company.VisibilityValuesWithOrganization=["public","private","organization","closed","isolated"],Company.VisibilityValues=["public","private","closed","isolated"],Company.SizeValues=["self-employed","1-10 employees","11-50 employees","51-200 employees","201-500 employees","501-1000 employees","1001-5000 employees","5001-10,000 employees","10,001+ employees"],Company.OfferTypes=["freemium","premium"],Company.BPTypes=["VAD","DR","IR"],Company.BPTypeLabels={IR:"Indirect Reseller",VAD:"Value Added Distributor",DR:"Direct Reseller"},Company.BPBusinessModels=["resell"],Company.BPBusinessModelLabels={resell:"Resell",referral:"Referral"},Company.adminAllowedUpdateSubscriptionsOperations=["all","increase_only"],Company.BPBusinessTypes={DEFAULT:"default",VOICE_BY_ALE:"voice_by_ale",VOICE_BY_PARTNER:"voice_by_partner",CONFERENCE:"conference"},Company.FileSharingCustomisationValues=["enabled","disabled"],Company.UserTitleNameCustomisationValues=["enabled","disabled"],Company.EconomicActivityClassificationTypes={NONE:"notDefined-f",A:"agriculture",B:"mining",C:"manufacturing",D:"electricity",E:"water supply",F:"construction",G:"wholesale",H:"transportation",I:"accommodation",J:"information and communication",K:"financial",L:"real estate activities",M:"professional",N:"administrative",O:"public administration",P:"education",Q:"human health",R:"arts",S:"other service activities",T:"activities of households as employer",U:"activities of extraterritorial organisations and bodies"},Company.PrivateDCValues=["HDS"],Company.attributes=[{name:"id",defaultValue:void 0},{name:"name",defaultValue:""},{name:"companyContactId",defaultValue:void 0},{name:"adminEmail",defaultValue:""},{name:"supportEmail",defaultValue:void 0},{name:"status",defaultValue:"active"},{name:"economicActivityClassification",defaultValue:"NONE"},{name:"website",defaultValue:void 0},{name:"description",defaultValue:void 0},{name:"visibility",defaultValue:"private"},{name:"visibleBy",defaultValue:[]},{name:"organisationId",defaultValue:""},{name:"userSelfRegisterEnabled",defaultValue:!1},{name:"userSelfRegisterAllowedDomains",defaultValue:[]},{name:"offerType",defaultValue:"freemium"},{name:"country",defaultValue:void 0},{name:"state",defaultValue:null},{name:"size",defaultValue:void 0},{name:"slogan",defaultValue:void 0},{name:"isBP",defaultValue:!1},{name:"bpType",defaultValue:void 0},{name:"bpBusinessModel",defaultValue:void 0},{name:"bpApplicantNumber",defaultValue:void 0},{name:"bpCRDid",defaultValue:void 0},{name:"bpHasRightToSell",defaultValue:void 0},{name:"bpId",defaultValue:void 0},{name:"bpHasRightToConnect",defaultValue:void 0},{name:"adminHasRightToUpdateSubscriptions",defaultValue:!1},{name:"adminAllowedUpdateSubscriptionsOps",defaultValue:"all"},{name:"externalReference",defaultValue:void 0},{name:"externalReference2",defaultValue:void 0},{name:"lastAvatarUpdateDate",defaultValue:null},{name:"lastBannerUpdateDate",defaultValue:null},{name:"avatarShape",defaultValue:"circle"},{name:"catalogId",defaultValue:void 0},{name:"office365Tenant",defaultValue:void 0},{name:"isCentrex",defaultValue:void 0},{name:"tenantCallNumber",defaultValue:void 0},{name:"tenantName",defaultValue:void 0},{name:"numberUsers",defaultValue:void 0},{name:"giphyEnabled",defaultValue:!0},{name:"dataLocation",defaultValue:void 0},{name:"privateDC",defaultValue:void 0},{name:"superadminComment",defaultValue:void 0},{name:"bpBusinessType",defaultValue:[]},{name:"voIPSettings",defaultValue:void 0},{name:"fileSharingCustomisation",defaultValue:void 0},{name:"userTitleNameCustomisation",defaultValue:void 0}],Company.prototype.getNameForLogs=function(){if(!this.nameForLogs&&this.name){var temp=this.name.replace(/[^\s](?=.{1,}$)/g,"*");this.nameForLogs=this.name.charAt(0)+temp.substr(1)}return this.nameForLogs},Company}]),angular.module("rainbow").filter("companyOfferFilter",[function(){"use strict";return function(input){return"freemium"===input?"Freemium":"premium"===input?"Premium":input?input.charAt(0).toUpperCase()+input.slice(1).toLowerCase():input}}])},function(module,exports){angular.module("rainbow").factory("CompanyInvitation",[function(){"use strict";function CompanyInvitation(id,companyId,companyName,invitedUserId,invitedUserEmail,invitingAdminId,invitingAdminLoginEmail,invitationDate,lastNotificationDate,requestedNotificationLanguage,status,acceptationDate,declinationDate,invitedToBeCompanyAdmin){this.id=id,this.companyId=companyId,this.companyName=companyName,this.invitedUserId=invitedUserId,this.invitedUserEmail=invitedUserEmail,this.invitingAdminId=invitingAdminId,this.invitingAdminLoginEmail=invitingAdminLoginEmail,this.invitationDate=invitationDate,this.lastNotificationDate=lastNotificationDate,this.requestedNotificationLanguage=requestedNotificationLanguage,this.status=status,this.acceptationDate=acceptationDate,this.declinationDate=declinationDate,this.invitedToBeCompanyAdmin=invitedToBeCompanyAdmin}return CompanyInvitation.createFromData=function(data){return new CompanyInvitation(data.id,data.companyId,data.companyName,data.invitedUserId,data.invitedUserEmail,data.invitingAdminId,data.invitingAdminLoginEmail,data.invitationDate,data.lastNotificationDate,data.requestedNotificationLanguage,data.status,data.acceptationDate,data.declinationDate,data.invitedToBeCompanyAdmin)},CompanyInvitation}])},function(module,exports){class FileState{}FileState.DELETED="deleted",FileState.UPLOADING="uploading",FileState.UPLOADED="uploaded",FileState.NOT_UPLOADED="not_uploaded",FileState.DOWNLOADING="downloading",FileState.UNKNOWN="unknown";class ThumbnailPlaceholder{constructor(icon,style){this.icon=icon,this.style=style}}class Thumbnail{constructor(data){data?(this.availableThumbnail=data.availableThumbnail,this.md5sum=data.md5sum,this.size=data.size,this.wantThumbnailDate=data.wantThumbnailDate):this.availableThumbnail=!1}isThumbnailAvailable(){return this.availableThumbnail}}class FileDescriptor{constructor(id=null,url=null,ownerId=null,fileName=null,extension=null,typeMIME=null,size=null,registrationDate=null,uploadedDate=null,dateToSort=null,viewers=null,state=null,thumbnail=null,orientation=0,tags=null,virusScanState=null,voiceMessage=!1){this.id=id,this.url=url,this.ownerId=ownerId,this.fileName=fileName,this.extension=extension,this.typeMIME=typeMIME,this.thumbnailPlaceholder=this.getThumbnailPlaceholderFromMimetype(typeMIME),this.size=size,this.registrationDate=registrationDate,this.uploadedDate=uploadedDate,this.dateToSort=dateToSort,this.viewers=viewers,this.state=state,this.thumbnail=new Thumbnail(thumbnail),this.fileToSend=void 0,this.previewBlob=void 0,this.tags=tags,this.orientation=orientation||void 0,this.virusScanState=virusScanState,this.voiceMessage=voiceMessage}isMicrosoftFile(){return["docx","doc","ppt","pptx","xls","xlsx"].some(ext=>ext===this.extension)}isThumbnailPossible(){return this.isImage()||this.isPDF()}isPDF(){return"application/pdf"===this.typeMIME}isImage(){return this.typeMIME&&this.typeMIME.length>="image/".length&&"image/"===this.typeMIME.slice(0,"image/".length)}isAudioVideo(){return["avi","mpg","wma","mp3","wmv","mkv","mov","wav","ogg","mp4","aac"].some(ext=>ext===this.extension)}isUploaded(){return this.state&&this.state===FileState.UPLOADED}isAlreadyFileViewer(viewerId){return!(!this.ownerId||this.ownerId!==viewerId)||!!this.viewers&&this.viewers.some(viewer=>viewer.viewerId===viewerId)}getDisplayName(){return this.fileName.replace(/\.[^/.]+$/,"")}getDisplayNameTruncated(){var str=this.fileName.replace(/\.[^/.]+$/,"");return[str.substring(0,str.length-4),str.slice(-4)]}getExtension(){return this.fileName.toUpperCase()===this.extension.toUpperCase()?"":"."+this.extension}getThumbnailPlaceholderFromMimetype(mime){return mime?0===mime.indexOf("image")?new ThumbnailPlaceholder("icon_image","imageStyle"):"application/msword"===mime||/^application\/vnd.openxmlformats-officedocument.wordprocessingml.*$/.test(mime)||"application/vnd.oasis.opendocument.text"===mime?new ThumbnailPlaceholder("icon_doc","docStyle"):/^application\/vnd.ms-powerpoint.*$/.test(mime)||/^application\/vnd.openxmlformats-officedocument.presentationml.*$/.test(mime)||"application/vnd.oasis.opendocument.presentation"===mime?new ThumbnailPlaceholder("icon_ppt","pptStyle"):0===mime.indexOf("application/vnd.ms-excel")||/^application\/vnd.openxmlformats-officedocument.spreadsheetml.*$/.test(mime)?new ThumbnailPlaceholder("icon_xls","xlsStyle"):"application/pdf"===mime||"application/vnd.oasis.opendocument.spreadsheet"===mime?new ThumbnailPlaceholder("icon_pdf","pdfStyle"):0===mime.indexOf("video/")||0===mime.indexOf("audio/")?new ThumbnailPlaceholder("icon_file-video","imageStyle"):new ThumbnailPlaceholder("icon_filestandard","otherStyle"):new ThumbnailPlaceholder("icon_filestandard","otherStyle")}releaseURL(){this.localURL=void 0}}angular.module("rainbow").factory("fileDescriptorFactory",[function(){return(id,url,ownerId,fileName,extension,typeMIME,size,registrationDate,uploadedDate,dateToSort,viewers,state,thumbnail,orientation,tags,virusScanState,voiceMessage)=>new FileDescriptor(id,url,ownerId,fileName,extension,typeMIME,size,registrationDate,uploadedDate,dateToSort,viewers,state,thumbnail,orientation,tags,virusScanState,voiceMessage)}])},function(module,exports){class FileViewerType{}FileViewerType.USER="user",FileViewerType.ROOM="room";class FileViewer{constructor(viewerId,type,contact,contactService=null,channelService=null){this.contactService=contactService,this.channelService=channelService,this.viewerId=viewerId,this.type=type,this.contact=contact}get avatarSrc(){if("user"===this.type&&this.contact)this._avatarSrc=this.contact.avatar.src;else if("channel"===this.type&&this.channel)this._avatarSrc=this.channel.getAvatarSrc();else if(this._avatarSrc=null,"user"===this.type&&this.contactService.getContactByDBId(this.viewerId).then(contact=>{this.contact=contact,this._avatarSrc=this.contact.avatar.src}),"channel"===this.type){let channel=this.channelService.getChannelFromCache(this.viewerId,!1);channel&&(this.channel=channel,this._avatarSrc=this.channel.getAvatarSrc())}return this._avatarSrc}}angular.module("rainbow").factory("fileViewerFactory",[function(){return data=>{let viewers=[];for(let viewerData of data)viewers.push(new FileViewer(viewerData.viewerId,viewerData.type,viewerData.contact,viewerData.contactService,viewerData.channelService));return viewers}}]),angular.module("rainbow").factory("fileViewerElementFactory",[function(){return(viewerId,type,contact,contactService,channelService)=>new FileViewer(viewerId,type,contact,contactService,channelService)}])},function(module,exports){angular.module("rainbow").factory("CompanyRequest",[function(){"use strict";function CompanyRequest(id,requestingUserId,requestingUserLoginEmail,requestedCompanyId,requestedCompanyName,status,requestingDate,requestedNotificationLanguage,lastNotificationDate,requestedToCompanyAdmin,requestedCompanyInvitationId){this.id=id,this.requestingUserId=requestingUserId,this.requestingUserLoginEmail=requestingUserLoginEmail,this.requestedCompanyId=requestedCompanyId,this.requestedCompanyName=requestedCompanyName,this.status=status,this.requestingDate=requestingDate,this.requestedNotificationLanguage=requestedNotificationLanguage,this.lastNotificationDate=lastNotificationDate,this.requestedToCompanyAdmin=requestedToCompanyAdmin,this.requestedCompanyInvitationId=requestedCompanyInvitationId}return CompanyRequest.createFromData=function(data){return new CompanyRequest(data.id,data.requestingUserId,data.requestingUserLoginEmail,data.requestedCompanyId,data.requestedCompanyName,data.status,data.requestingDate,data.requestedNotificationLanguage,data.lastNotificationDate,data.requestedToCompanyAdmin,data.requestedCompanyInvitationId)},CompanyRequest}])},function(module,exports){angular.module("rainbow").factory("CompanyBpLinkInvitation",[function(){"use strict";function CompanyBpLinkInvitation(id,invitedCompanyId,invitedCompanyName,invitedToBeBpIr,invitingAdminId,invitingAdminLoginEmail,invitingCompanyId,invitingCompanyName,invitationDate,lastNotificationDate,requestedNotificationLanguage,status,acceptationDate,cancelationDate,declinationDate){this.id=id,this.invitedCompanyId=invitedCompanyId,this.invitedCompanyName=invitedCompanyName,this.invitedToBeBpIr=invitedToBeBpIr,this.invitingAdminId=invitingAdminId,this.invitingAdminLoginEmail=invitingAdminLoginEmail,this.invitingCompanyId=invitingCompanyId,this.invitingCompanyName=invitingCompanyName,this.invitationDate=invitationDate,this.lastNotificationDate=lastNotificationDate,this.requestedNotificationLanguage=requestedNotificationLanguage,this.status=status,this.acceptationDate=acceptationDate,this.cancelationDate=cancelationDate,this.declinationDate=declinationDate}return CompanyBpLinkInvitation.createFromData=function(data){return new CompanyBpLinkInvitation(data.id,data.invitedCompanyId,data.invitedCompanyName,data.invitedToBeBpIr,data.invitingAdminId,data.invitingAdminLoginEmail,data.invitingCompanyId,data.invitingCompanyName,data.invitationDate,data.lastNotificationDate,data.requestedNotificationLanguage,data.status,data.acceptationDate,data.cancelationDate,data.declinationDate)},CompanyBpLinkInvitation}])},function(module,exports){angular.module("rainbow").factory("CompanyBpLinkRequest",[function(){"use strict";function CompanyBpLinkRequest(id,requestingAdminId,requestingAdminLoginEmail,requestingCompanyId,requestingCompanyName,requestedCompanyId,requestedCompanyName,requestedToBeBpIr,requestDate,lastNotificationDate,requestedNotificationLanguage,status,acceptationDate,cancelationDate,declinationDate){this.id=id,this.requestingAdminId=requestingAdminId,this.requestingAdminLoginEmail=requestingAdminLoginEmail,this.requestingCompanyId=requestingCompanyId,this.requestingCompanyName=requestingCompanyName,this.requestedCompanyId=requestedCompanyId,this.requestedCompanyName=requestedCompanyName,this.requestedToBeBpIr=requestedToBeBpIr,this.requestDate=requestDate,this.lastNotificationDate=lastNotificationDate,this.requestedNotificationLanguage=requestedNotificationLanguage,this.status=status,this.acceptationDate=acceptationDate,this.cancelationDate=cancelationDate,this.declinationDate=declinationDate}return CompanyBpLinkRequest.createFromData=function(data){return new CompanyBpLinkRequest(data.id,data.requestingAdminId,data.requestingAdminLoginEmail,data.requestingCompanyId,data.requestingCompanyName,data.requestedCompanyId,data.requestedCompanyName,data.requestedToBeBpIr,data.requestDate,data.lastNotificationDate,data.requestedNotificationLanguage,data.status,data.acceptationDate,data.cancelationDate,data.declinationDate)},CompanyBpLinkRequest}])},function(module,exports){angular.module("rainbow").factory("Conference",[function(){"use strict";function Conference(companyId,id,mediaType,name,passCodes,scheduled,lastUpdateDate,userId,confDialOutDisabled,playEntryTone,muteUponEntry){this.companyId=companyId,this.id=id,this.mediaType=mediaType,this.name=name,this.passCodes=passCodes||[],this.scheduled=scheduled,this.lastUpdateDate=lastUpdateDate,this.userId=userId,this.confDialOutDisabled=confDialOutDisabled,this.playEntryTone=playEntryTone,this.muteUponEntry=muteUponEntry,this.updateFromData=function(data){this.companyId=data.companyId,this.id=data.id,this.mediaType=data.mediaType,this.name=data.name,this.passCodes=data.passCodes,this.scheduled=data.scheduled,this.lastUpdateDate=data.lastUpdateDate,this.userId=data.userId,this.confDialOutDisabled=data.confDialOutDisabled,this.playEntryTone=data.playEntryTone,this.muteUponEntry=data.muteUponEntry}}return Conference.createFromData=function(data){return new Conference(data.companyId,data.id,data.mediaType,data.name,data.passCodes,data.scheduled,data.lastUpdateDate,data.userId,data.confDialOutDisabled,data.playEntryTone,data.muteUponEntry)},Conference}])},function(module,exports){angular.module("rainbow").factory("ConferenceSession",["$log","ConferenceParticipant","contactService","$q",function($log,ConferenceParticipant,contactService,$q){"use strict";function ConferenceSession(_id,_participants,_active,_type){var that=this;that.id=_id,that.participants=_participants,that.active=_active,that.talkerActive=void 0,that.recordingStarted=void 0,that.talkers=void 0,that.isLeaderAlreadyConnected=!1,that.status=null,that.localStreams=[],that.sessions={},that.publishers=[],that.type=_type,that.callId=null,that.hasLocalVideo=!1,that.jingleJid=null,that.localVideoSessionId=null,that.localSharingSessionId=null,that.haveJoined=!1,that.lock=!1,that.cleanupSessionData=function(){$log.debug("[ConferenceSession] Cleanup for conferenceSession "+that.id),that.participants=[],that.talkerActive=void 0,that.recordingStarted=void 0,that.talkers=void 0,that.isLeaderAlreadyConnected=!1,that.localStreams=[],that.sessions={},that.publishers=[],that.hasLocalVideo=!1,that.metricsState="",that.recordingStarted=!1,that.status="ended",that.hasLocalSharing=!1,that.reversedVideos=!1,that.jingleJid=null,that.localVideoSessionId=null,that.localSharingSessionId=null,that.haveJoined=!1,that.lock=!1},that.updateFromData=function(id,participants,active){that.id=id,that.participants=participants,that.active=active},that.updateActiveState=function(active){that.active=active},that.updateStateFromData=function(active,talkerActive,recordingStarted,lock){that.active=active,that.talkerActive=talkerActive,that.recordingStarted=recordingStarted,that.lock=lock},that.updateParticipants=function(participantsData){return $q((function(resolve){var result=!1;participantsData||resolve(!1),that.participants||(that.participants=[]),0===participantsData.length&&(that.participants=[]),participantsData.forEach((function(participantData){if(participantData.participantId){$log.debug("[conferenceSession] updateParticipants participantId="+participantData.participantId);var existingParticipant=that.getParticipantById(participantData.participantId)?that.getParticipantById(participantData.participantId):participantData.jid_im?that.getParticipantByJid(participantData.jid_im):null;existingParticipant?($log.debug("[conferenceSession] updateParticipants update participantId="+participantData.participantId),existingParticipant.updateFromData(participantData)):($log.debug("[conferenceSession] updateParticipants create participantId="+participantData.participantId),that.participants.push(ConferenceParticipant.createFromData(participantData)),result=!0)}})),resolve(result)}))},that.removeParticipants=function(removedParticipants){removedParticipants&&removedParticipants.forEach((function(removedParticipantId){var removedParticipantIndex=that.getParticipantIndexById(removedParticipantId);-1!==removedParticipantIndex&&($log.debug("[conferenceSession] removeParticipants remove participantId="+removedParticipantId),that.participants.splice(removedParticipantIndex,1))}))},that.removePublisher=function(removedPublisherId){if(removedPublisherId){var removedPublisherIndex=that.getPublisherIndexById(removedPublisherId);-1!==removedPublisherIndex&&($log.debug("[conferenceSession] removePublisher remove participantId="+removedPublisherId),that.publishers.splice(removedPublisherIndex,1))}},that.updateTalkers=function(talkers){$log.debug("[conferenceSession] updateTalkers talkers="+talkers),that.talkers=talkers},that.isActive=function(){return void 0!==that.active&&that.active},that.isTalkerActive=function(){return void 0!==that.talkerActive&&that.talkerActive},that.isRecordingStarted=function(){return void 0!==that.recordingStarted&&that.recordingStarted},that.getParticipants=function(){return that.participants},that.getConnectedParticipants=function(){return that.participants?that.participants.filter((function(participant){return"disconnected"!==participant.state&&"watching"!==participant.state})):void 0},that.getWatchingParticipants=function(){return that.participants?that.participants.filter((function(participant){return"watching"===participant.state})):void 0},that.getConnectedParticipantsExceptLeader=function(){return that.participants?that.participants.filter((function(participant){return"disconnected"!==participant.state&&"watching"!==participant.state&&"moderator"!==participant.role})):void 0},that.getConnectedLeaderParticipantsExcept=function(jid){return that.participants?that.participants.filter((function(participant){return"disconnected"!==participant.state&&"moderator"===participant.role&&participant.jid_im!==jid})):void 0},that.getConnectedParticipantsExcept=function(jid){return that.participants?that.participants.filter((function(participant){return participant.jid_im!==jid&&"disconnected"!==participant.state&&"watching"!==participant.state})):void 0},that.getLeaderParticipant=function(){return that.participants?that.participants.find((function(participant){return"moderator"===participant.role&&"disconnected"!==participant.state&&"watching"!==participant.state})):void 0},that.getLeaderParticipantById=function(jid){return that.participants?that.participants.find((function(participant){return"moderator"===participant.role&&"disconnected"!==participant.state&&"watching"!==participant.state&&participant.jid_im===jid})):void 0},that.getParticipantById=function(participantId){return that.participants?that.participants.find((function(participant){return participant.participantId===participantId})):void 0},that.getParticipantByJid=function(jid){return that.participants?that.participants.find((function(participant){return participant.jid_im===jid})):void 0},that.getNonDisconnectedParticipantByJid=function(jid){return that.participants?that.participants.find((function(participant){return participant.jid_im===jid&&"disconnected"!==participant.state})):void 0},that.getConnectedParticipantByJid=function(jid){return that.participants?that.participants.find((function(participant){return participant.jid_im===jid&&"connected"===participant.state})):void 0},that.getWatchingParticipantByJid=function(jid){return that.participants?that.participants.find((function(participant){return participant.jid_im===jid&&"watching"===participant.state})):void 0},that.getParticipantIndexById=function(participantId){return that.participants?that.participants.findIndex((function(participant){return participant.participantId===participantId})):-1},that.getPublisherIndexById=function(publisherId){return that.publishers?that.publishers.findIndex((function(publisher){return publisher.participantId===publisherId})):-1},that.isParticipantConnectedByJid=function(jid){return void 0!==that.participants&&that.participants.some((function(participant){return participant.jid_im===jid&&"connected"===participant.state}))},that.isParticipantWatchingByJid=function(jid){return void 0!==that.participants&&that.participants.some((function(participant){return participant.jid_im===jid&&"watching"===participant.state}))},that.isParticipantRingingByJid=function(jid){return void 0!==that.participants&&that.participants.some((function(participant){return participant.jid_im===jid&&"ringing"===participant.state}))},that.isParticipantConnectedWithThisUAByJid=function(jid){return that.haveJoined&&void 0!==that.participants&&that.participants.some((function(participant){return participant.jid_im===jid&&"connected"===participant.state}))},that.getTalkers=function(){return that.talkers},that.setCallId=function(callId){that.callId=callId},that.getListOfRemoteVideoPublishers=function(){var result=[];if(that.publishers)for(var i=0;i<that.publishers.length;i++)"video"===that.publishers[i].mediaType&&that.publishers[i].jid_im!==contactService.userContact.jid&&result.push(that.publishers[i]);return result}}return ConferenceSession.createFromData=function(id,participants,active,type){return type||(type="pstnAudio"),new ConferenceSession(id,participants,active,type)},ConferenceSession}])},function(module,exports){angular.module("rainbow").factory("ConferenceParticipant",[function(){"use strict";function ConferenceParticipant(participantId,userId,jid_im,jid_tel,role,mute,held,confStartDate,startDate,phoneNumber,state){this.participantId=participantId,this.userId=userId,this.jid_im=jid_im,this.jid_tel=jid_tel,this.role=role,this.mute=mute,this.held=held,this.confStartDate=confStartDate,this.startDate=startDate,this.phoneNumber=phoneNumber,this.state=state,this.updateFromData=function(data){data.participantId&&(this.participantId=data.participantId),data.userId&&(this.userId=data.userId),this.jid_im=data.jid_im,data.jid_tel&&(this.jid_tel=data.jid_tel),this.role=data.participantRole?data.participantRole:this.role,this.confStartDate=data.confStartDate?data.confStartDate:this.confStartDate,this.startDate=data.startDate?data.startDate:this.startDate,this.phoneNumber=data.phoneNumber?data.phoneNumber:this.phoneNumber,this.state=data.participantState?data.participantState:this.state,this.mute=data.mute,this.held=data.held}}return ConferenceParticipant.createFromData=function(data){return new ConferenceParticipant(data.participantId,data.userId,data.jid_im,data.jid_tel,data.participantRole,data.mute,data.held,data.confStartDate,data.startDate,data.phoneNumber,data.participantState)},ConferenceParticipant}])},function(module,exports){class Channel{constructor(name,id,visibility,topic,creatorId,companyId,creationDate,users_count,lastAvatarUpdateDate,subscribed,type,invited,category,mode,subscribers_count){this.userRole="none",this.messageRetrieved=!1,this.messages=[],this.subscribed=!1,this.deleted=!1,this.invited=!1,this.type="SIMPLE",this.pageIndex=0,this.isLoading=!1,this.complete=!1,this.users=[],this.publishersRetreived=!1,this.loaded=!1,this.name=name,this.id=id,this.visibility=visibility,this.topic=topic,this.creatorId=creatorId,this.companyId=companyId,this.creationDate=creationDate,this.type=type,this.users_count=users_count,this.subscribers_count=subscribers_count,this.category=category,this.mode=mode,this.lastAvatarUpdateDate=lastAvatarUpdateDate;let timestamp=this.lastAvatarUpdateDate?"&ts="+new Date(this.lastAvatarUpdateDate).getTime():"";if(this.avatar=config.restServerUrl+"/api/channel-avatar/"+id+"?size=256"+timestamp,void 0!==subscribed&&(this.subscribed=subscribed),void 0!==type&&(this.userRole=type),void 0!==invited&&(this.invited=invited),!this.mode)switch(this.visibility){case"company":this.mode="company_public";break;case"public":this.mode="all_public";break;case"private":this.mode="company_private"}}isNotMember(){return this.userRole="none"}isOwner(){return"owner"===this.userRole}isPublisher(){return this.subscribed&&("owner"===this.userRole||"publisher"===this.userRole)}isMember(){return"member"===this.userRole}getAvatarSrc(){return this.lastAvatarUpdateDate?this.avatar:"/resources/skins/rainbow/images/channels/default_channel_avatar.png"}static ChannelFactory(){return data=>new Channel(data.name,data.id,data.visibility,data.topic,data.creatorId,data.companyId,data.creationDate,data.users_count,data.lastAvatarUpdateDate,data.subscribed,data.type,data.invited,data.category,data.mode,data.subscribers_count)}}angular.module("rainbow").factory("Channel",Channel.ChannelFactory)},function(module,exports){class SearchTextMsgResult{constructor(){this.body=void 0,this.date=void 0,this.isRoom=!1,this.isSent=!1,this.messageId=void 0}static SearchTextMsgResultFactory(){return()=>new SearchTextMsgResult}}class SearchTextResult{constructor(convId){this.room=null,this.contact=null,this.totalCount=-1,this.convRes=[],this.otherJid=convId}getResultFromMsgId(msgId){for(let item of this.convRes)if(item.messageId===msgId)return item}addMsgItem(msgItem){this.convRes.push(msgItem)}isRoom(){return this.conversation?null!=this.conversation.room:null!==this.room}}class SearchTextConvResults{constructor(){this.searchedText="",this.results=[],this.queryIds=[],this.totalCount=0,this.searchCounter=0}isEmpty(){return 0===this.queryIds.length||0===Object.keys(this.results).length}searchCount(){this.searchCounter++}getAvailableCount(){let count=0;for(let item of this.results)count+=item.convRes.length;return count}getTotalCount(){return this.totalCount}clearAll(){this.queryIds=[],this.totalCount=0,this.clearMessagesResults()}clearMessagesResults(){this.results.splice(0,this.results.length)}isCurrentQuery(queryId){return this.queryIds.indexOf(queryId)>-1}getItemForConvId(convJid){for(let item of this.results)if(item.otherJid===convJid)return item}createNewResult(convJid){let currentConvResults=this.getItemForConvId(convJid);return currentConvResults||(currentConvResults=new SearchTextResult(convJid),this.results.push(currentConvResults)),currentConvResults}addNewItemResult(convJid,searchTextItem){let currentConvResults=this.getItemForConvId(convJid);currentConvResults||(currentConvResults=new SearchTextResult(convJid),this.results.push(currentConvResults)),currentConvResults.getResultFromMsgId(searchTextItem.messageId)||currentConvResults.addMsgItem(searchTextItem)}splitText(text,searchFilter){var textStart="",textColored="",textEnd="",textSimplified=this.cleanUpSpecialChars(text).toLowerCase(),searchFilterSimplified=this.cleanUpSpecialChars(searchFilter).toLowerCase(),index=textSimplified.indexOf(searchFilterSimplified);return index>=0?(index>0&&(textStart=text.slice(0,index)),textColored=text.slice(index,index+searchFilter.length),text.length>searchFilter.length+index&&(textEnd=text.slice(index+searchFilter.length,text.length))):textStart=text,[textStart,textColored,textEnd]}cleanUpSpecialChars(str){return str=(str=(str=(str=(str=(str=(str=(str=(str=(str=str.replace(/[ÀÁÂÃÄÅ]/g,"A")).replace(/[àáâãäå]/g,"a")).replace(/[ÈÉÊË]/g,"E")).replace(/[éèëê]/g,"e")).replace(/[ÎÏ]/g,"I")).replace(/[îï]/g,"i")).replace(/[ÔÖÕ]/g,"O")).replace(/[ôöõ]/g,"o")).replace(/[ùûü]/g,"u")).replace(/[ç]/g,"c")}}angular.module("rainbow").factory("SearchTextConvResultsFactory",(function(){return()=>new SearchTextConvResults})),angular.module("rainbow").factory("SearchTextMsgResultFactory",SearchTextMsgResult.SearchTextMsgResultFactory)},function(module,exports){angular.module("rainbowAdmin").factory("Offer",[function(){"use strict";function Offer(id,name,description,groupName,offerReference,profileId,canBeSold,businessModel,isDefault,isExclusive,isPrepaid,prepaidDuration,autoSubscribe,hasConference,hasVoice,isDemo,isBundle,isChinaOffer){this.id=id,this.name=name||"",this.description=description||"Rainbow "+this.name,this.groupName=hasConference?"Conference":groupName||name,this.offerReference=offerReference,this.profileId=profileId,this.canBeSold=canBeSold||!1,this.businessModel=businessModel,this.isDefault=isDefault,this.isExclusive=isExclusive,this.isPrepaid=isPrepaid,this.prepaidDuration=prepaidDuration,this.autoSubscribe=autoSubscribe,this.hasConference=hasConference,this.hasVoice=hasVoice,this.isDemo=void 0===isDemo?!this.isDefault&&!this.canBeSold&&this.name.toLowerCase().includes("demo"):isDemo,this.isBundle=isBundle,this.isChinaOffer=isChinaOffer,this.disallowUnsubscribeWithAllocatedLicences=this.hasVoice||"Room"===this.groupName,this.disallowAllocationToUsers="Room"===this.groupName,this.hasVoice?this.logo="logo-offer-voice.svg":this.hasConference?this.logo="logo-offer-conference.svg":this.logo=Offer.getLogoByName(this.name),this.isEnterprise=function(){return this.name.toLowerCase().startsWith("enterprise")},this.isBusiness=function(){return this.name.toLowerCase().startsWith("business")},this.isEssential=function(){return this.isDefault},this.isTrial=function(){return this.isDemo},this.isUserLicense=function(){return this.isDefault||"nb_users"===this.businessModel||"usage"===this.businessModel},this.isDeviceLicense=function(deviceType){return"TV"===deviceType&&"Room"===this.groupName},this.isFixedLicense=function(){return"flat_fee"===this.businessModel},this.isUserBasedLicense=function(){return"nb_users"===this.businessModel},this.isUsageBasedLicense=function(){return"usage"===this.businessModel}}return Offer.createFromData=function(data){return new Offer(data.id,data.name,data.description,data.groupName,data.offerReference,data.profileId,data.canBeSold,data.businessModel,data.isDefault,data.isExclusive,data.isPrepaid,data.prepaidDuration,data.autoSubscribe,data.hasConference,data.hasVoice,data.isDemo,data.isBundle,data.isChinaOffer)},Offer.createFromSubscriptionData=function(subscription){return new Offer(subscription.offerId,subscription.offerName,subscription.offerDescription,subscription.groupName,subscription.offerReference,subscription.profileId,subscription.canBeSold,subscription.businessModel,subscription.isDefault,subscription.isExclusive,subscription.isPrepaid,subscription.prepaidDuration,subscription.autoSubscribe,subscription.hasConference,subscription.hasVoice,subscription.isDemo,subscription.isBundle,subscription.isChinaOffer)},Offer.createFromSubscriptionCountersData=function(subscriptionCounters){return new Offer(subscriptionCounters.offerId,subscriptionCounters.offerName,void 0,subscriptionCounters.groupName,subscriptionCounters.offerReference,void 0,subscriptionCounters.canBeSold,subscriptionCounters.businessModel,subscriptionCounters.isDefault,subscriptionCounters.isExclusive,subscriptionCounters.isPrepaid,subscriptionCounters.prepaidDuration,void 0,subscriptionCounters.hasConference,subscriptionCounters.hasVoice,subscriptionCounters.isDemo,subscriptionCounters.isBundle)},Offer.createFromProfileData=function(profile){return new Offer(profile.offerId,profile.offerName,void 0,void 0,void 0,profile.profileId,!1,void 0,profile.isDefault,profile.isExclusive,profile.isPrepaid,profile.prepaidDuration,void 0,profile.hasConference,profile.hasVoice,profile.isDemo,profile.isBundle)},Offer.createFromOperationLog=function(operationLog){var data="delete"===operationLog.operationType?operationLog.previousData:operationLog.newData;return new Offer(data.offerId,data.offerName,data.offerDescription,void 0,data.offerReference,data.profileId,data.canBeSold,data.businessModel,data.isDefault,data.isExclusive,data.isPrepaid,data.prepaidDuration,void 0,data.hasConference,data.hasVoice,data.isDemo,data.isBundle)},Offer.getLogoByName=function(offerName){var logo="logo-offer-default.svg";if(offerName){var name=offerName.toLowerCase();-1!==name.indexOf("voice")?name="voice":-1!==name.indexOf("conference")?name="conference":-1!==name.indexOf("enterprise")?name="enterprise":-1!==name.indexOf("business")&&(name="business"),logo="logo-offer-"+name+".svg"}return logo},Offer.offerComparator=function(offer1,offer2){var offerOrder=["Essential","Business","Enterprise","Voice","Room","Conference"];if(offer1.isEssential())return-1;if(offer2.isEssential())return 1;if(offer1.isTrial()&&!offer2.isTrial())return-1;if(!offer1.isTrial()&&offer2.isTrial())return 1;if(offer1.hasConference&&!offer2.hasConference)return 1;if(!offer1.hasConference&&offer2.hasConference)return-1;var orderIndex1=offerOrder.findIndex((function(order){return offer1.name.startsWith(order)})),orderIndex2=offerOrder.findIndex((function(order){return offer2.name.startsWith(order)}));return(orderIndex1=-1===orderIndex1?offerOrder.length:orderIndex1)<(orderIndex2=-1===orderIndex2?offerOrder.length:orderIndex2)?-1:orderIndex1>orderIndex2?1:offer1.isTrial()?-1:offer2.isTrial()?1:offer1.isPrepaid&&!offer2.isPrepaid?1:!offer1.isPrepaid&&offer2.isPrepaid?-1:offer1.name<offer2.name?-1:offer1.name>offer2.name?1:0},Offer.isExclusive=function(offer){return offer.isDefault||offer.isExclusive},Offer.isOptional=function(offer){return!Offer.isExclusive(offer)},Offer.isEssential=function(offer){return offer.isDefault},Offer.isNotEssential=function(offer){return!offer.isDefault},Offer.isModelByNbUsers=function(offer){return"nb_users"===offer.businessModel},Offer.isPrepaid=function(offer){return offer.isPrepaid},Offer.isNotPrepaid=function(offer){return!offer.isPrepaid},Offer.isUserLicense=function(offer){return offer.isUserLicense()},Offer.isUsageBasedLicense=function(offer){return offer.isUsageBasedLicense()},Offer}])},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var crypto_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(2);angular.module("rainbow").factory("Contact",["$q","$rootScope","$interval","$document","$translate","$sce","settingsService","Company","$log","xmppService","authService","utilService",function($q,$rootScope,$interval,$document,$translate,$sce,settingsService,Company,$log,xmppService,authService,utilService){function Contact(jid,name,company){var that=this;this.id=jid,this.jid=jid,this.fullJid=null,this.jidtel=null,this.dbId=null,this.login=null,this.temp=!1,this.status="unknown",this.telStatus="",this.imStatus="offline",this.imStatusStamp=[],this.resources={},this.loginEmail="",this.lastname="",this.firstname="",this.company=company,this.nickname="",this.title="",this.jobTitle="",this.country="",this.defaultAvatar=null,this._avatar=null,this._avatarLoading=!1,this.avatarSrc=null,this.timezone="",this.roles=null,this.confId="",this.phonePro="",this.phoneProCan="",this.phonePbx="",this.phoneInternalNumber="",this.pbxId="",this.mobilePro="",this.mobileProCan="",this.isMobileProShared=!1,this.phonePerso="",this.isPhonePersoShared=!1,this.phonePersoCan="",this.mobilePerso="",this.isMobilePersoShared=!1,this.mobilePersoCan="",this.emailPro="",this.emailPerso="",this.oldImStatus=null,this.roster=!1,this.initialized=!1,this._displayName=name||jid,this.name={value:this._displayName},this.initials="",this.message="",this.cellStyle="",this.ask="none",this.subscription="none",this.conversation=null,this.adminType=null,this.capabilities=null,this.groups=null,this.mobileResource=null,this.language=null,this.lastActivityDate=null,this.nameUpdatePrio=Contact.NameUpdatePrio.MAX_UPDATE_PRIO,this.isInDefaultCompany=!1,this.calendarState={},this.guest=!1,this.isVirtualTerm=!1,this.nameForLogs="",this.systDeviceName=null,this.isTv=!1,this.rainbowTvData={},this.fileSharingEnabled=!0,this.tags=null,$rootScope.$on("$destroy",$rootScope.$on("ON_DISPLAY_ORDER_EVENT",(function(){that.computeDisplayName()}))),$rootScope.$on("$destroy",$rootScope.$on("ON_DISPLAY_ORDER_EVENT",(function(){that.computeDisplayName()})))}return Contact.create=function(jid,firstname,lastname,company,login){var contact=new Contact(jid,null,company);return firstname&&lastname&&(firstname=firstname.charAt(0).toUpperCase()+firstname.slice(1),lastname=lastname.charAt(0).toUpperCase()+lastname.slice(1),contact.computeCompleteDisplayName(firstname,lastname)),contact.login=login,contact},Contact.createByPhoneNumber=function(phoneNumber){var contact=new Contact(null,phoneNumber);return contact.id=phoneNumber,contact},Contact.createBotContact=function(jid,botName,id,botAvatarUrl){var contact=new Contact(jid),image=new Image;return window.rainbowSDK?image=null:image.src=botAvatarUrl,contact.lastname=botName,contact.isBot=!0,contact.computeDisplayName(),contact.status="online",contact.imStatus="online",contact.subscription="both",contact.avatar=image,contact.dbId=id,contact},Contact.updateContactToBot=function(contact,name,id,botAvatarUrl){var image=new Image;return window.rainbowSDK?image=null:image.src=botAvatarUrl,contact.lastname=name,contact.isBot=!0,contact.computeDisplayName(),contact.status="online",contact.imStatus="online",contact.subscription="both",contact.avatar=image,contact.dbId=id,contact},Contact.AdminType={ORGANIZATION_ADMIN:"organization_admin",COMPANY_ADMIN:"company_admin",SITE_ADMIN:"site_admin",UNDEFINED:"undefined"},Contact.NameUpdatePrio={NO_UPDATE_PRIO:0,OUTLOOK_UPDATE_PRIO:1,SERVER_UPDATE_PRIO:2,MAX_UPDATE_PRIO:99},Object.defineProperty(Contact.prototype,"avatar",{set:function(avatar){this._avatar=avatar},get:function(){var that=this;if(that._avatar)return that._avatar;if(!that._avatarLoading&&that.avatarSrc){that._avatarLoading=!0;var image=new Image;image.onload=function(){var loadedImage=this;$interval((function(){that._avatar=loadedImage,that._avatarLoading=!1,$log.log("[contact] Lazily load avatar for "+that.displayNameForLog()+" success"),$rootScope.$broadcast("ON_CONTACT_AVATAR_UPDATE",that.jid)}),0,1,!0)},image.onerror=function(){$log.warn("[contact] Lazily load avatar for "+that.displayNameForLog()+" failure : use text avatar"),that._avatar=that.defaultAvatar,that._avatarLoading=!1},image.src=that.avatarSrc}return that.defaultAvatar}}),Object.defineProperty(Contact.prototype,"displayName",{set:function(value){this._displayName=value,this.name.value=value,this.displayNameMD5=Object(crypto_js__WEBPACK_IMPORTED_MODULE_0__.MD5)(crypto_js__WEBPACK_IMPORTED_MODULE_0__.enc.Latin1.parse(value)).toString(crypto_js__WEBPACK_IMPORTED_MODULE_0__.enc.Hex)},get:function(){return this._displayName}}),Object.defineProperty(Contact.prototype,"lastActivityDate",{set:function(lastActivityDate){this._lastActivityDate=lastActivityDate,this.updateLastActivityMessage()},get:function(){return this._lastActivityDate}}),Object.defineProperty(Contact.prototype,"statusMessage",{get:function(){if((this._currentStatus!==this.status||this._currentLastActivityMessage!==this.lastActivityMessage||this._currentMessage!==this.message)&&(this._currentStatus=this.status,this._currentMessage=this.message,this._currentLastActivityMessage=this.lastActivityMessage,"unknown"===this.status?this._statusMessage=this.company&&this.company.name?this.company.name:$translate.instant("unknown"):"offline"===this.status&&""===this.lastActivityMessage?this._statusMessage=$translate.instant("offlineFilter"):"away"===this.status&&""===this.lastActivityMessage?this._statusMessage=$translate.instant("shortAway"):this._statusMessage=$translate.instant(this.status,{offlineDate:this.lastActivityMessage}),this.message)){var message=$translate.instant(this.message);"("!==message.charAt(0)&&(message="("+message+")"),this._statusMessage+=" "+message}return this._statusMessage}}),Object.defineProperty(Contact.prototype,"lastActivityMessage",{get:function(){var that=this;if(!that._lastActivityMessage&&!that._lastActivityInProgress){that._lastActivityInProgress=!0;try{xmppService.connection.lastactivity.query(that.jid,{onResponse:function(stanza){var inactivityInMSeconds=1e3*$(stanza).find("query").attr("seconds"),lastActivityDateInMSeconds=(new Date).getTime()-inactivityInMSeconds;that.lastActivityDate=new Date(lastActivityDateInMSeconds),that._lastActivityInProgress=!1}})}catch(error){$log.error("[Contact] lastActivityDate getter accessor for contact "+that.jid_im+" -- failure : "+error),that._lastActivityInProgress=!1}return null}return this._lastActivityMessage}}),Contact.prototype.updateLastActivityMessage=function(){if(this._lastActivityDate){var mdate=moment(this._lastActivityDate);moment.locale().startsWith("de")?(this._lastActivityMessage=mdate.fromNow(!0).replace("Tage","Tagen"),this._lastActivityMessage=this._lastActivityMessage.replace("eine Stunde","einer Stunde")):this._lastActivityMessage=mdate.fromNow(!0)}else this._lastActivityMessage=""},Contact.prototype.getLastAvailableDate=function(){var lastStamp=null,stamps=this.imStatusStamp;return Object.keys(stamps).forEach((function(key){var stamp=stamps[key];lastStamp?lastStamp<stamp&&(lastStamp=stamp):lastStamp=stamp})),lastStamp},Contact.prototype.updateCalendarPresenceInfo=function(){var calendarState=this.calendarState,calendarParams=null,calendarMessage=null;calendarState.iconId=null;var calendarLabelKey=null;calendarState.autoReplyOn?(calendarState.iconId="icon_outofoffice",calendarMessage="<div style='text-align:left'>"+utilService.escapeHtml(calendarState.autoReplyInfos.message).replace(/\n/g,"<br/>")+"</div>",calendarParams={meetingDate:calendarState.autoReplyInfos.until,message:calendarMessage},calendarLabelKey=calendarState.autoReplyInfos.until?calendarState.autoReplyInfos.untilDate?"calendarAutoReply-date":"calendarAutoReply":"calendarAutoReplySimple"):("busy"===calendarState.message?(calendarState.iconId="icon_inameeting",calendarLabelKey=calendarState.untilDate?"calendar-busy-date":"calendar-busy"):"out_of_office"===calendarState.message&&(calendarState.iconId="icon_outofoffice",calendarLabelKey=calendarState.untilDate?"calendar-outofoffice-date":"calendar-outofoffice"),calendarParams={meetingDate:calendarState.until}),calendarLabelKey&&(calendarState.tooltip=$translate.instant(calendarLabelKey,{meetingDate:calendarParams.meetingDate}),calendarParams.message&&(calendarParams.message=calendarParams.message.replace(/<script>/g,""),calendarState.tooltip=$sce.trustAsHtml(calendarState.tooltip+" "+calendarParams.message)))},Contact.prototype.displayNameForLog=function(){return config&&config.debug?this.displayName:this.displayNameMD5},Contact.prototype.isMobileResource=function(jid){return-1!==jid.indexOf("mobile_")},Contact.prototype.calculateStatusFromResources=function(isMe){var presence="offline",message="",initStamp="",stamp="",fullJid=this.fullJid,desktopPresence=!1,allowMobiles=config.webrtcWithMobiles;for(var key in this.resources)if(this.resources.hasOwnProperty(key)){if("dnd"===this.resources[key].show&&"phone"===this.resources[key].status){presence="busy",message="audioPhone",desktopPresence=!0,fullJid=key;break}if("xa"===this.resources[key].show||"dnd"===this.resources[key].show&&""===this.resources[key].status){var toUpdate=!1;this.resources[key].initStamp?initStamp?this.resources[key].initStamp.getTime()>initStamp.getTime()&&(initStamp=this.resources[key].initStamp,toUpdate=!0):(initStamp=this.resources[key].initStamp,toUpdate=!0):stamp?this.resources[key].stamp.getTime()>stamp.getTime()&&(stamp=this.resources[key].stamp,initStamp=this.resources[key].stamp,toUpdate=!0):(stamp=this.resources[key].stamp,initStamp=this.resources[key].stamp,toUpdate=!0),toUpdate&&(presence=this.resources[key].show,message=this.resources[key].status)}else"xa"!==presence&&("dnd"!==presence||"dnd"===presence&&""!==message)&&"dnd"===this.resources[key].show&&""!==this.resources[key].status?("presentation"===this.resources[key].status?(presence=this.resources[key].show,message="presentation"):(presence="busy",message=this.resources[key].status),fullJid=key,desktopPresence=!0):isMe&&"online"===this.resources[key].show&&"mode=auto"===this.resources[key].status&&key===this.fullJid?"busy"!==presence&&"dnd"!==presence&&"presentation"!==message&&(presence="online",message="",this.resources[key].status="",this.isMobileResource(key)?presence="online-mobile":desktopPresence=!0):"online"===this.resources[key].show&&"xa"!==presence&&"dnd"!==presence&&"busy"!==presence?(message="","online-mobile"!==presence&&(presence="online"),this.resources[key].status="",this.isMobileResource(key)?presence="online-mobile":(fullJid=key,desktopPresence=!0),allowMobiles&&(fullJid=key)):"away"===this.resources[key].show&&"offline"===presence&&(presence="away",message="",fullJid=key);"mode=auto"===this.resources[key].status&&(this.resources[key].status="")}for(var key in this.resources)this.resources.hasOwnProperty(key)&&"mode=auto"===this.resources[key].status&&(this.resources[key].status="");return isMe||this.fullJid||(this.fullJid=fullJid),"online-mobile"===presence&&desktopPresence?(presence="online",message=""):"online-mobile"!==presence||isMe||allowMobiles||(this.fullJid=null,message=""),{presence:presence,message:message}},Contact.prototype.isCPaaSGuest=function(){return this.roles.indexOf("guest")>=0},Contact.prototype.isGuest=function(){return this.guestMode},Contact.prototype.hasAdminRights=function(){return this.isSuperadmin()||this.isBusinessAdmin()||this.isAdmin()||this.isBPAdmin()},Contact.prototype.isSuperadmin=function(){return this.roles.indexOf("superadmin")>=0},Contact.prototype.isBusinessAdmin=function(){return this.roles.indexOf("business_admin")>=0},Contact.prototype.isAdmin=function(){return this.roles.indexOf("admin")>=0&&(!this.isOrganizationAdmin()||!this.isBPAdmin())},Contact.prototype.isOrganizationAdmin=function(){return this.roles.indexOf("admin")>=0&&this.adminType===Contact.AdminType.ORGANIZATION_ADMIN},Contact.prototype.isCompanyAdmin=function(){return this.roles.indexOf("admin")>=0&&this.adminType===Contact.AdminType.COMPANY_ADMIN},Contact.prototype.isSiteAdmin=function(){return this.roles.indexOf("admin")>=0&&this.adminType===Contact.AdminType.SITE_ADMIN},Contact.prototype.getAdminType=function(){return this.roles.indexOf("admin")>=0?this.adminType:Contact.AdminType.UNDEFINED},Contact.prototype.isECAdmin=function(){return this.company&&!this.company.isBP&&this.isAdmin()},Contact.prototype.isBPAdmin=function(){return this.isBPAdminOperations()||this.isBPAdminFinance()},Contact.prototype.isBPAdminOperations=function(){return this.company&&this.company.isBP&&this.roles.indexOf("bp_admin")>=0},Contact.prototype.isBPAdminFinance=function(){return this.company&&this.company.isBP&&this.roles.indexOf("bp_finance")>=0},Contact.prototype.isBPAdminDR=function(){return this.isBPAdmin()&&this.company.isDR()},Contact.prototype.isBPAdminVAD=function(){return this.isBPAdmin()&&this.company.isVAD()},Contact.prototype.isBPAdminIR=function(){return this.isBPAdmin()&&this.company.isIR()},Contact.prototype.isDirectoryAdmin=function(){return this.roles.indexOf("directory_admin")>=0},Contact.prototype.updateIMStatus=function(attr,isMe){if(this.imStatusStamp[attr.jid]&&this.imStatusStamp[attr.jid]>attr.stamp)$log.info("[Contact] Ignore obsolete presence message for contact "+this.jid);else{$log.info("[Contact] updateIMStatus "+JSON.stringify(attr)),this.imStatusStamp[attr.jid]=attr.stamp,attr.status&&(this.imStatus=attr.status);var status=attr.message?attr.message:"";if("offline"===this.imStatus)this.fullJid===attr.jid&&(this.fullJid=null),delete this.resources[attr.jid],delete this.imStatusStamp[attr.jid],0===this.resources.length&&(this.message="");else{this.resources[attr.jid]?(this.resources[attr.jid].show=this.imStatus,this.resources[attr.jid].status=status,this.resources[attr.jid].stamp=attr.stamp):this.resources[attr.jid]={show:this.imStatus,status:status,initStamp:attr.stamp,stamp:attr.stamp},$log.info("[Contact] updateIMStatus user resources after update "+JSON.stringify(this.resources)),this.isMobileResource(attr.jid)||isMe||(this.fullJid=attr.jid);var allowMobiles=config.webrtcWithMobiles;!isMe&&allowMobiles&&(this.fullJid=attr.jid)}if(this.updateRichStatus(isMe),isMe&&this.isMobileResource(attr.jid)&&("offline"!==attr.status&&null===this.mobileResource&&(this.mobileResource=attr.jid,$log.info("[Contact] updateIMStatus: post event ON_MOBILE_TELEPHONY_STATUS_CHANGED_EVENT"),$rootScope.$broadcast("ON_MOBILE_TELEPHONY_STATUS_CHANGED_EVENT","started")),"offline"===attr.status)){var otherMobileResource=null;for(var key in this.resources)if(this.resources.hasOwnProperty(key)&&this.isMobileResource(key)){otherMobileResource=key;break}this.mobileResource=otherMobileResource,null===this.mobileResource&&$rootScope.$broadcast("ON_MOBILE_TELEPHONY_STATUS_CHANGED_EVENT","stopped")}}},Contact.prototype.getPCGPresenceSource=function(jid){var result="";if(jid){var index=jid.indexOf("/");-1!==index&&(result=jid.substr(index+1))}return result},Contact.prototype.transcodePCG2Presence=function(attr){var result="";switch(attr.status){case"offline":result="";break;case"online":result="EVT_CONNECTION_CLEARED";break;case"dnd":result="EVT_ESTABLISHED"}return result},Contact.prototype.updateTelephonyStatus=function(attr,isMe){var statusOrg=this.telStatus;"pcg2"===this.getPCGPresenceSource(attr.jid)?this.telStatus=this.transcodePCG2Presence(attr):this.telStatus=attr.message,this.updateRichStatus(isMe),isMe&&statusOrg!==this.telStatus&&$rootScope.$broadcast("ON_UPDATE_MYTELEPHONY_STATUS_EVENT")},Contact.prototype.updatePresenceStatus=function(status){this.status=status},Contact.prototype.updateRichStatus=function(isMe){if("EVT_SERVICE_INITIATED"===this.telStatus||"EVT_ESTABLISHED"===this.telStatus)this.status="busy",this.message="audioPhone";else if("subscribe"===this.ask)this.status="wait";else if("none"===this.subscription||"from"===this.subscription)this.status="unknown";else{var calculatedStatus=this.calculateStatusFromResources(isMe);"xa"===calculatedStatus.presence&&(""!==calculatedStatus.message||isMe?"away"===calculatedStatus.message&&(calculatedStatus.presence="away",calculatedStatus.message=""):calculatedStatus.presence="offline"),this.status=calculatedStatus.presence,this.message=calculatedStatus.message,isMe?$log.info("[Contact] updateRichStatus MY PRESENCE : "+calculatedStatus.presence+" || message : "+calculatedStatus.message):$log.info("[Contact] updateRichStatus presence : "+calculatedStatus.presence+" || message : "+calculatedStatus.message),"offline"!==this.status&&(this.lastActivityDate=null)}isMe&&$rootScope.$broadcast("ON_UPDATE_MYCONTACT_EVENT"),$rootScope.$broadcast("ON_UPDATE_CONTACT_RICH_STATUS_EVENT",this)},Contact.prototype.updateFromUserData=function(userData){this.dbId=userData.id,this.loginEmail=userData.loginEmail,this.firstname=userData.firstName,this.lastname=userData.lastName,this.nickname=userData.nickName?userData.nickName:"",this.title=userData.title?userData.title:"",this.jobTitle=userData.jobTitle?userData.jobTitle:"",this.organisationId=userData.organisationId,this.siteId=userData.siteId,this.country=userData.country?userData.country:"FRA",this.timezone=userData.timezone,this.roles=userData.roles,this.adminType=userData.adminType,this.isBot=!1,this.isTerminated=userData.isTerminated,this.isInDefaultCompany=userData.isInDefaultCompany,this.lastAvatarUpdateDate=userData.lastAvatarUpdateDate,this.initialized=userData.isInitialized,this.guestMode=!!userData.guestMode&&userData.guestMode,this.isTv=userData.isTv,userData.fileSharingCustomisation&&(this.fileSharingEnabled="enabled"===userData.fileSharingCustomisation),this.tags=userData.tags,userData.jid_im&&(this.id=userData.jid_im,this.jid=userData.jid_im,this.jidtel=userData.jid_tel),this.company&&this.company.id===userData.companyId||(this.company=Company.create(userData.companyId,userData.companyName)),this.phonePro=this.phoneProCan="",this.phonePbx="",this.phoneInternalNumber="",this.pbxId="",this.mobilePro=this.mobileProCan="",this.phonePerso=this.phonePersoCan="",this.mobilePerso=this.mobilePersoCan="",this.voicemailNumber="",this.hasPhoneNumber=!1,this.hasPhoneProDdiNumber=!1;var that=this;userData.emails&&(that.emailPerso="",userData.emails.forEach((function(email){switch(email.type){case"work":that.emailPro=email.email;break;case"home":that.emailPerso=email.email}}))),userData.phoneNumbers&&(userData.phoneNumbers.forEach((function(phoneNumber){var number=phoneNumber.number,numberCan=phoneNumber.numberE164,deviceType=phoneNumber.deviceType;switch(that.hasPhoneNumber=!0,phoneNumber.type){case"work":"landline"===deviceType&&(phoneNumber.isCloudPbxDDI?(that.phonePro=phoneNumber.number,that.phoneProCan=phoneNumber.numberE164,that.hasPhoneProDdiNumber=!0):that.hasPhoneProDdiNumber||(that.phonePro=number,that.phoneProCan=numberCan),phoneNumber.isFromSystem&&(that.phonePbx=phoneNumber.shortNumber,phoneNumber.internalNumber&&(that.phoneInternalNumber=phoneNumber.internalNumber,"Remote Extension"!==phoneNumber.deviceName&&"Any Device"!==phoneNumber.deviceName||(that.isVirtualTerm=!0)),that.systDeviceName=phoneNumber.deviceName?phoneNumber.deviceName:null,that.pbxId=phoneNumber.pbxId,that.voicemailNumber=phoneNumber.voiceMailNumber)),"mobile"===deviceType&&(that.mobilePro=number,that.isMobileProShared=phoneNumber.isVisibleByOthers,that.mobileProCan=numberCan);break;case"home":"landline"===deviceType&&(that.phonePerso=number,that.isPhonePersoShared=phoneNumber.isVisibleByOthers,that.phonePersoCan=numberCan),"mobile"===deviceType&&(that.mobilePerso=number,that.isMobilePersoShared=phoneNumber.isVisibleByOthers,that.mobilePersoCan=numberCan)}})),this.phoneNumbersInitialized=!0),this.computeDisplayName()},Contact.prototype.updateName=function(firstName,lastName){this.firstname=firstName,this.lastname=lastName,this.computeDisplayName(),this.getAvatar()},Contact.prototype.getNameUpdatePrio=function(){return this.nameUpdatePrio},Contact.prototype.setNameUpdatePrio=function(prio){switch(prio){case Contact.NameUpdatePrio.NO_UPDATE_PRIO:case Contact.NameUpdatePrio.OUTLOOK_UPDATE_PRIO:case Contact.NameUpdatePrio.SERVER_UPDATE_PRIO:case Contact.NameUpdatePrio.MAX_UPDATE_PRIO:this.nameUpdatePrio=prio}},Contact.prototype.containsEmail=function(email){var lowerCaseEmail=email.toLowerCase();return!(!this.loginEmail||this.loginEmail.toLowerCase()!==lowerCaseEmail)||(!(!this.emailPro||this.emailPro.toLowerCase()!==lowerCaseEmail)||!(!this.emailPerso||this.emailPerso.toLowerCase()!==lowerCaseEmail))},Contact.prototype.computeDisplayName=function(){var firstName=this.firstname?this.firstname.charAt(0).toUpperCase()+this.firstname.slice(1):null,lastName=this.lastname?this.lastname.charAt(0).toUpperCase()+this.lastname.slice(1):null,nickName=this.nickname?this.nickname.charAt(0).toUpperCase()+this.nickname.slice(1):null;this.isTv?(this.displayName=firstName||lastName,this.initials=this.displayName.charAt(0)):lastName&&firstName?this.computeCompleteDisplayName(firstName,lastName):lastName&&!firstName?(this.displayName=lastName,this.initials=lastName.charAt(0)):nickName?(this.displayName=nickName,this.initials=nickName.charAt(0)):this.loginEmail?(this.displayName=this.loginEmail,this.initials=this.loginEmail.substring(0,2).toUpperCase()):firstName?(this.displayName=firstName,this.initials=firstName.charAt(0)):(this.displayName="Anonymous",this.initials="A")},Contact.prototype.computeCompleteDisplayName=function(firstName,lastName){var displayName="",initials="";1!==lastName.length&&2!==firstName.length?"FL"===settingsService.getSetting("displayOrder")?(displayName=firstName+" "+lastName,initials=firstName.charAt(0)+lastName.charAt(0)):(displayName=lastName+" "+firstName,initials=lastName.charAt(0)+firstName.charAt(0)):(displayName="FL"===settingsService.getSetting("displayOrder")?firstName+" "+lastName:lastName+" "+firstName,initials=firstName.charAt(0)+firstName.charAt(1)),this.displayName=displayName,this.initials=initials;for(var upperCaseDisplayName=this.displayName.toUpperCase(),sum=0,i=0;i<upperCaseDisplayName.length;i++)sum+=upperCaseDisplayName.charCodeAt(i);this.colorIndex=sum%12,this.color=Contact.textAvatarColor[this.colorIndex]},Contact.prototype.getAvatarInBase64=function(){var contact=this,that=this;return $q((function(resolve){try{if(contact&&contact.avatar&&contact.avatar.src||resolve(),contact.avatar.src&&!contact.avatar.src.startsWith("data:image/png")){var img=new Image,canvas=$document[0].createElement("canvas");canvas.width=120,canvas.height=120;var ctx=canvas.getContext("2d");ctx.rect(0,0,120,120),ctx.fillStyle=that.color,ctx.fill(),img.onload=function(){ctx.drawImage(this,0,0,120,120);var dataURL=canvas.toDataURL("image/png");resolve(dataURL)},img.src=contact.avatar.src}else resolve(contact.avatar.src)}catch(error){$log.warn("[contactService] getAvatarInBase64 error "+error),resolve()}}))},Contact.prototype.getAvatar=function(size,forced){var contact=this;if(contact.dbId&&contact.lastAvatarUpdateDate){var serverURL=config.webservices.protocol+"://"+config.webservices.currentServer;$rootScope.cdn&&(serverURL=$rootScope.cdnServer);var imgSrc=serverURL+"/api/avatar/"+contact.dbId+"?size="+(size||256);imgSrc+="&update="+Object(crypto_js__WEBPACK_IMPORTED_MODULE_0__.MD5)(crypto_js__WEBPACK_IMPORTED_MODULE_0__.enc.Latin1.parse(contact.lastAvatarUpdateDate)).toString(crypto_js__WEBPACK_IMPORTED_MODULE_0__.enc.Hex),contact.avatarSrc=imgSrc}if(authService.fromSDK)return contact.createTextAvatarImage(),$q.when();if(contact.isTv){var image=new Image;return image.src="/resources/skins/rainbow/images/misc/androidtv.svg",contact.defaultAvatar=image,$q.when()}return $q((function(resolve){contact.createTextAvatarImage(),!forced&&contact.lastAvatarUpdateDate||(contact.avatar=null),resolve(contact)}))},Contact.prototype.createTextAvatarImage=function(){var image=new Image,canvas=$document[0].createElement("canvas");canvas.width=image.width=225,canvas.height=image.height=225;var ctx=canvas.getContext("2d");ctx.rect(0,0,225,225),ctx.fillStyle=this.color,ctx.fill(),ctx.font="bold 100px Helvetica",ctx.textAlign="center",ctx.fillStyle="white",ctx.fillText(this.initials,110,150),image.src=canvas.toDataURL("image/png"),this.defaultAvatar=image},Contact.prototype.getGroups=function(){return this.groups},Contact.prototype.setGroups=function(groups){this.groups=groups},Contact.prototype.getNameForLogs=function(){if(!this.nameForLogs&&this.displayName){var temp=this.displayName.replace(/[^\s](?=.{1,}$)/g,"*");this.nameForLogs=this.displayName.charAt(0)+temp.substr(1)}return this.nameForLogs},Contact.textAvatarColor=["#ff4500","#d38700","#348833","#007356","#00b2a9","#00b0e5","#0085ca","#6639b7","#91278a","#cf0072","#a50034","#d20000"],Contact}])},function(module,exports,__webpack_require__){module.exports=function(CryptoJS){return function(){if("function"==typeof ArrayBuffer){var WordArray=CryptoJS.lib.WordArray,superInit=WordArray.init;(WordArray.init=function(typedArray){if(typedArray instanceof ArrayBuffer&&(typedArray=new Uint8Array(typedArray)),(typedArray instanceof Int8Array||"undefined"!=typeof Uint8ClampedArray&&typedArray instanceof Uint8ClampedArray||typedArray instanceof Int16Array||typedArray instanceof Uint16Array||typedArray instanceof Int32Array||typedArray instanceof Uint32Array||typedArray instanceof Float32Array||typedArray instanceof Float64Array)&&(typedArray=new Uint8Array(typedArray.buffer,typedArray.byteOffset,typedArray.byteLength)),typedArray instanceof Uint8Array){for(var typedArrayByteLength=typedArray.byteLength,words=[],i=0;i<typedArrayByteLength;i++)words[i>>>2]|=typedArray[i]<<24-i%4*8;superInit.call(this,words,typedArrayByteLength)}else superInit.apply(this,arguments)}).prototype=WordArray}}(),CryptoJS.lib.WordArray}(__webpack_require__(1))},function(module,exports,__webpack_require__){module.exports=function(CryptoJS){return function(){var C=CryptoJS,WordArray=C.lib.WordArray,C_enc=C.enc;function swapEndian(word){return word<<8&4278255360|word>>>8&16711935}C_enc.Utf16=C_enc.Utf16BE={stringify:function(wordArray){for(var words=wordArray.words,sigBytes=wordArray.sigBytes,utf16Chars=[],i=0;i<sigBytes;i+=2){var codePoint=words[i>>>2]>>>16-i%4*8&65535;utf16Chars.push(String.fromCharCode(codePoint))}return utf16Chars.join("")},parse:function(utf16Str){for(var utf16StrLength=utf16Str.length,words=[],i=0;i<utf16StrLength;i++)words[i>>>1]|=utf16Str.charCodeAt(i)<<16-i%2*16;return WordArray.create(words,2*utf16StrLength)}},C_enc.Utf16LE={stringify:function(wordArray){for(var words=wordArray.words,sigBytes=wordArray.sigBytes,utf16Chars=[],i=0;i<sigBytes;i+=2){var codePoint=swapEndian(words[i>>>2]>>>16-i%4*8&65535);utf16Chars.push(String.fromCharCode(codePoint))}return utf16Chars.join("")},parse:function(utf16Str){for(var utf16StrLength=utf16Str.length,words=[],i=0;i<utf16StrLength;i++)words[i>>>1]|=swapEndian(utf16Str.charCodeAt(i)<<16-i%2*16);return WordArray.create(words,2*utf16StrLength)}}}(),CryptoJS.enc.Utf16}(__webpack_require__(1))},function(module,exports,__webpack_require__){module.exports=function(CryptoJS){return function(){var C=CryptoJS,WordArray=C.lib.WordArray,C_algo=C.algo,SHA256=C_algo.SHA256,SHA224=C_algo.SHA224=SHA256.extend({_doReset:function(){this._hash=new WordArray.init([3238371032,914150663,812702999,4144912697,4290775857,1750603025,1694076839,3204075428])},_doFinalize:function(){var hash=SHA256._doFinalize.call(this);return hash.sigBytes-=4,hash}});C.SHA224=SHA256._createHelper(SHA224),C.HmacSHA224=SHA256._createHmacHelper(SHA224)}(),CryptoJS.SHA224}(__webpack_require__(1),__webpack_require__(14))},function(module,exports,__webpack_require__){module.exports=function(CryptoJS){return C_x64=(C=CryptoJS).x64,X64Word=C_x64.Word,X64WordArray=C_x64.WordArray,C_algo=C.algo,SHA512=C_algo.SHA512,SHA384=C_algo.SHA384=SHA512.extend({_doReset:function(){this._hash=new X64WordArray.init([new X64Word.init(3418070365,3238371032),new X64Word.init(1654270250,914150663),new X64Word.init(2438529370,812702999),new X64Word.init(355462360,4144912697),new X64Word.init(1731405415,4290775857),new X64Word.init(2394180231,1750603025),new X64Word.init(3675008525,1694076839),new X64Word.init(1203062813,3204075428)])},_doFinalize:function(){var hash=SHA512._doFinalize.call(this);return hash.sigBytes-=16,hash}}),C.SHA384=SHA512._createHelper(SHA384),C.HmacSHA384=SHA512._createHmacHelper(SHA384),CryptoJS.SHA384;var C,C_x64,X64Word,X64WordArray,C_algo,SHA512,SHA384}(__webpack_require__(1),__webpack_require__(9),__webpack_require__(15))},function(module,exports,__webpack_require__){module.exports=function(CryptoJS){return function(Math){var C=CryptoJS,C_lib=C.lib,WordArray=C_lib.WordArray,Hasher=C_lib.Hasher,X64Word=C.x64.Word,C_algo=C.algo,RHO_OFFSETS=[],PI_INDEXES=[],ROUND_CONSTANTS=[];!function(){for(var x=1,y=0,t=0;t<24;t++){RHO_OFFSETS[x+5*y]=(t+1)*(t+2)/2%64;var newY=(2*x+3*y)%5;x=y%5,y=newY}for(x=0;x<5;x++)for(y=0;y<5;y++)PI_INDEXES[x+5*y]=y+(2*x+3*y)%5*5;for(var LFSR=1,i=0;i<24;i++){for(var roundConstantMsw=0,roundConstantLsw=0,j=0;j<7;j++){if(1&LFSR){var bitPosition=(1<<j)-1;bitPosition<32?roundConstantLsw^=1<<bitPosition:roundConstantMsw^=1<<bitPosition-32}128&LFSR?LFSR=LFSR<<1^113:LFSR<<=1}ROUND_CONSTANTS[i]=X64Word.create(roundConstantMsw,roundConstantLsw)}}();var T=[];!function(){for(var i=0;i<25;i++)T[i]=X64Word.create()}();var SHA3=C_algo.SHA3=Hasher.extend({cfg:Hasher.cfg.extend({outputLength:512}),_doReset:function(){for(var state=this._state=[],i=0;i<25;i++)state[i]=new X64Word.init;this.blockSize=(1600-2*this.cfg.outputLength)/32},_doProcessBlock:function(M,offset){for(var state=this._state,nBlockSizeLanes=this.blockSize/2,i=0;i<nBlockSizeLanes;i++){var M2i=M[offset+2*i],M2i1=M[offset+2*i+1];M2i=16711935&(M2i<<8|M2i>>>24)|4278255360&(M2i<<24|M2i>>>8),M2i1=16711935&(M2i1<<8|M2i1>>>24)|4278255360&(M2i1<<24|M2i1>>>8),(lane=state[i]).high^=M2i1,lane.low^=M2i}for(var round=0;round<24;round++){for(var x=0;x<5;x++){for(var tMsw=0,tLsw=0,y=0;y<5;y++)tMsw^=(lane=state[x+5*y]).high,tLsw^=lane.low;var Tx=T[x];Tx.high=tMsw,Tx.low=tLsw}for(x=0;x<5;x++){var Tx4=T[(x+4)%5],Tx1=T[(x+1)%5],Tx1Msw=Tx1.high,Tx1Lsw=Tx1.low;for(tMsw=Tx4.high^(Tx1Msw<<1|Tx1Lsw>>>31),tLsw=Tx4.low^(Tx1Lsw<<1|Tx1Msw>>>31),y=0;y<5;y++)(lane=state[x+5*y]).high^=tMsw,lane.low^=tLsw}for(var laneIndex=1;laneIndex<25;laneIndex++){var laneMsw=(lane=state[laneIndex]).high,laneLsw=lane.low,rhoOffset=RHO_OFFSETS[laneIndex];rhoOffset<32?(tMsw=laneMsw<<rhoOffset|laneLsw>>>32-rhoOffset,tLsw=laneLsw<<rhoOffset|laneMsw>>>32-rhoOffset):(tMsw=laneLsw<<rhoOffset-32|laneMsw>>>64-rhoOffset,tLsw=laneMsw<<rhoOffset-32|laneLsw>>>64-rhoOffset);var TPiLane=T[PI_INDEXES[laneIndex]];TPiLane.high=tMsw,TPiLane.low=tLsw}var T0=T[0],state0=state[0];for(T0.high=state0.high,T0.low=state0.low,x=0;x<5;x++)for(y=0;y<5;y++){var lane=state[laneIndex=x+5*y],TLane=T[laneIndex],Tx1Lane=T[(x+1)%5+5*y],Tx2Lane=T[(x+2)%5+5*y];lane.high=TLane.high^~Tx1Lane.high&Tx2Lane.high,lane.low=TLane.low^~Tx1Lane.low&Tx2Lane.low}lane=state[0];var roundConstant=ROUND_CONSTANTS[round];lane.high^=roundConstant.high,lane.low^=roundConstant.low}},_doFinalize:function(){var data=this._data,dataWords=data.words,nBitsLeft=(this._nDataBytes,8*data.sigBytes),blockSizeBits=32*this.blockSize;dataWords[nBitsLeft>>>5]|=1<<24-nBitsLeft%32,dataWords[(Math.ceil((nBitsLeft+1)/blockSizeBits)*blockSizeBits>>>5)-1]|=128,data.sigBytes=4*dataWords.length,this._process();for(var state=this._state,outputLengthBytes=this.cfg.outputLength/8,outputLengthLanes=outputLengthBytes/8,hashWords=[],i=0;i<outputLengthLanes;i++){var lane=state[i],laneMsw=lane.high,laneLsw=lane.low;laneMsw=16711935&(laneMsw<<8|laneMsw>>>24)|4278255360&(laneMsw<<24|laneMsw>>>8),laneLsw=16711935&(laneLsw<<8|laneLsw>>>24)|4278255360&(laneLsw<<24|laneLsw>>>8),hashWords.push(laneLsw),hashWords.push(laneMsw)}return new WordArray.init(hashWords,outputLengthBytes)},clone:function(){for(var clone=Hasher.clone.call(this),state=clone._state=this._state.slice(0),i=0;i<25;i++)state[i]=state[i].clone();return clone}});C.SHA3=Hasher._createHelper(SHA3),C.HmacSHA3=Hasher._createHmacHelper(SHA3)}(Math),CryptoJS.SHA3}(__webpack_require__(1),__webpack_require__(9))},function(module,exports,__webpack_require__){module.exports=function(CryptoJS){
/** @preserve
	(c) 2012 by Cédric Mesnil. All rights reserved.

	Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

	    - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
	    - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.

	THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	*/
return function(Math){var C=CryptoJS,C_lib=C.lib,WordArray=C_lib.WordArray,Hasher=C_lib.Hasher,C_algo=C.algo,_zl=WordArray.create([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8,3,10,14,4,9,15,8,1,2,7,0,6,13,11,5,12,1,9,11,10,0,8,12,4,13,3,7,15,14,5,6,2,4,0,5,9,7,12,2,10,14,1,3,8,11,6,15,13]),_zr=WordArray.create([5,14,7,0,9,2,11,4,13,6,15,8,1,10,3,12,6,11,3,7,0,13,5,10,14,15,8,12,4,9,1,2,15,5,1,3,7,14,6,9,11,8,12,2,10,0,4,13,8,6,4,1,3,11,15,0,5,12,2,13,9,7,10,14,12,15,10,4,1,5,8,7,6,2,13,14,0,3,9,11]),_sl=WordArray.create([11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8,7,6,8,13,11,9,7,15,7,12,15,9,11,7,13,12,11,13,6,7,14,9,13,15,14,8,13,6,5,12,7,5,11,12,14,15,14,15,9,8,9,14,5,6,8,6,5,12,9,15,5,11,6,8,13,12,5,12,13,14,11,8,5,6]),_sr=WordArray.create([8,9,9,11,13,15,15,5,7,7,8,11,14,14,12,6,9,13,15,7,12,8,9,11,7,7,12,7,6,15,13,11,9,7,15,11,8,6,6,14,12,13,5,14,13,13,7,5,15,5,8,11,14,14,6,14,6,9,12,9,12,5,15,8,8,5,12,9,12,5,14,6,8,13,6,5,15,13,11,11]),_hl=WordArray.create([0,1518500249,1859775393,2400959708,2840853838]),_hr=WordArray.create([1352829926,1548603684,1836072691,2053994217,0]),RIPEMD160=C_algo.RIPEMD160=Hasher.extend({_doReset:function(){this._hash=WordArray.create([1732584193,4023233417,2562383102,271733878,3285377520])},_doProcessBlock:function(M,offset){for(var i=0;i<16;i++){var offset_i=offset+i,M_offset_i=M[offset_i];M[offset_i]=16711935&(M_offset_i<<8|M_offset_i>>>24)|4278255360&(M_offset_i<<24|M_offset_i>>>8)}var al,bl,cl,dl,el,ar,br,cr,dr,er,t,H=this._hash.words,hl=_hl.words,hr=_hr.words,zl=_zl.words,zr=_zr.words,sl=_sl.words,sr=_sr.words;for(ar=al=H[0],br=bl=H[1],cr=cl=H[2],dr=dl=H[3],er=el=H[4],i=0;i<80;i+=1)t=al+M[offset+zl[i]]|0,t+=i<16?f1(bl,cl,dl)+hl[0]:i<32?f2(bl,cl,dl)+hl[1]:i<48?f3(bl,cl,dl)+hl[2]:i<64?f4(bl,cl,dl)+hl[3]:f5(bl,cl,dl)+hl[4],t=(t=rotl(t|=0,sl[i]))+el|0,al=el,el=dl,dl=rotl(cl,10),cl=bl,bl=t,t=ar+M[offset+zr[i]]|0,t+=i<16?f5(br,cr,dr)+hr[0]:i<32?f4(br,cr,dr)+hr[1]:i<48?f3(br,cr,dr)+hr[2]:i<64?f2(br,cr,dr)+hr[3]:f1(br,cr,dr)+hr[4],t=(t=rotl(t|=0,sr[i]))+er|0,ar=er,er=dr,dr=rotl(cr,10),cr=br,br=t;t=H[1]+cl+dr|0,H[1]=H[2]+dl+er|0,H[2]=H[3]+el+ar|0,H[3]=H[4]+al+br|0,H[4]=H[0]+bl+cr|0,H[0]=t},_doFinalize:function(){var data=this._data,dataWords=data.words,nBitsTotal=8*this._nDataBytes,nBitsLeft=8*data.sigBytes;dataWords[nBitsLeft>>>5]|=128<<24-nBitsLeft%32,dataWords[14+(nBitsLeft+64>>>9<<4)]=16711935&(nBitsTotal<<8|nBitsTotal>>>24)|4278255360&(nBitsTotal<<24|nBitsTotal>>>8),data.sigBytes=4*(dataWords.length+1),this._process();for(var hash=this._hash,H=hash.words,i=0;i<5;i++){var H_i=H[i];H[i]=16711935&(H_i<<8|H_i>>>24)|4278255360&(H_i<<24|H_i>>>8)}return hash},clone:function(){var clone=Hasher.clone.call(this);return clone._hash=this._hash.clone(),clone}});function f1(x,y,z){return x^y^z}function f2(x,y,z){return x&y|~x&z}function f3(x,y,z){return(x|~y)^z}function f4(x,y,z){return x&z|y&~z}function f5(x,y,z){return x^(y|~z)}function rotl(x,n){return x<<n|x>>>32-n}C.RIPEMD160=Hasher._createHelper(RIPEMD160),C.HmacRIPEMD160=Hasher._createHmacHelper(RIPEMD160)}(Math),CryptoJS.RIPEMD160}(__webpack_require__(1))},function(module,exports,__webpack_require__){module.exports=function(CryptoJS){return C_lib=(C=CryptoJS).lib,Base=C_lib.Base,WordArray=C_lib.WordArray,C_algo=C.algo,SHA1=C_algo.SHA1,HMAC=C_algo.HMAC,PBKDF2=C_algo.PBKDF2=Base.extend({cfg:Base.extend({keySize:4,hasher:SHA1,iterations:1}),init:function(cfg){this.cfg=this.cfg.extend(cfg)},compute:function(password,salt){for(var cfg=this.cfg,hmac=HMAC.create(cfg.hasher,password),derivedKey=WordArray.create(),blockIndex=WordArray.create([1]),derivedKeyWords=derivedKey.words,blockIndexWords=blockIndex.words,keySize=cfg.keySize,iterations=cfg.iterations;derivedKeyWords.length<keySize;){var block=hmac.update(salt).finalize(blockIndex);hmac.reset();for(var blockWords=block.words,blockWordsLength=blockWords.length,intermediate=block,i=1;i<iterations;i++){intermediate=hmac.finalize(intermediate),hmac.reset();for(var intermediateWords=intermediate.words,j=0;j<blockWordsLength;j++)blockWords[j]^=intermediateWords[j]}derivedKey.concat(block),blockIndexWords[0]++}return derivedKey.sigBytes=4*keySize,derivedKey}}),C.PBKDF2=function(password,salt,cfg){return PBKDF2.create(cfg).compute(password,salt)},CryptoJS.PBKDF2;var C,C_lib,Base,WordArray,C_algo,SHA1,HMAC,PBKDF2}(__webpack_require__(1),__webpack_require__(10),__webpack_require__(11))},function(module,exports,__webpack_require__){module.exports=function(CryptoJS){return CryptoJS.mode.CFB=function(){var CFB=CryptoJS.lib.BlockCipherMode.extend();function generateKeystreamAndEncrypt(words,offset,blockSize,cipher){var iv=this._iv;if(iv){var keystream=iv.slice(0);this._iv=void 0}else keystream=this._prevBlock;cipher.encryptBlock(keystream,0);for(var i=0;i<blockSize;i++)words[offset+i]^=keystream[i]}return CFB.Encryptor=CFB.extend({processBlock:function(words,offset){var cipher=this._cipher,blockSize=cipher.blockSize;generateKeystreamAndEncrypt.call(this,words,offset,blockSize,cipher),this._prevBlock=words.slice(offset,offset+blockSize)}}),CFB.Decryptor=CFB.extend({processBlock:function(words,offset){var cipher=this._cipher,blockSize=cipher.blockSize,thisBlock=words.slice(offset,offset+blockSize);generateKeystreamAndEncrypt.call(this,words,offset,blockSize,cipher),this._prevBlock=thisBlock}}),CFB}(),CryptoJS.mode.CFB}(__webpack_require__(1),__webpack_require__(3))},function(module,exports,__webpack_require__){module.exports=function(CryptoJS){return CryptoJS.mode.CTR=(CTR=CryptoJS.lib.BlockCipherMode.extend(),Encryptor=CTR.Encryptor=CTR.extend({processBlock:function(words,offset){var cipher=this._cipher,blockSize=cipher.blockSize,iv=this._iv,counter=this._counter;iv&&(counter=this._counter=iv.slice(0),this._iv=void 0);var keystream=counter.slice(0);cipher.encryptBlock(keystream,0),counter[blockSize-1]=counter[blockSize-1]+1|0;for(var i=0;i<blockSize;i++)words[offset+i]^=keystream[i]}}),CTR.Decryptor=Encryptor,CTR),CryptoJS.mode.CTR;var CTR,Encryptor}(__webpack_require__(1),__webpack_require__(3))},function(module,exports,__webpack_require__){module.exports=function(CryptoJS){
/** @preserve
	 * Counter block mode compatible with  Dr Brian Gladman fileenc.c
	 * derived from CryptoJS.mode.CTR
	 * Jan Hruby jhruby.web@gmail.com
	 */
return CryptoJS.mode.CTRGladman=function(){var CTRGladman=CryptoJS.lib.BlockCipherMode.extend();function incWord(word){if(255==(word>>24&255)){var b1=word>>16&255,b2=word>>8&255,b3=255&word;255===b1?(b1=0,255===b2?(b2=0,255===b3?b3=0:++b3):++b2):++b1,word=0,word+=b1<<16,word+=b2<<8,word+=b3}else word+=1<<24;return word}var Encryptor=CTRGladman.Encryptor=CTRGladman.extend({processBlock:function(words,offset){var cipher=this._cipher,blockSize=cipher.blockSize,iv=this._iv,counter=this._counter;iv&&(counter=this._counter=iv.slice(0),this._iv=void 0),function(counter){0===(counter[0]=incWord(counter[0]))&&(counter[1]=incWord(counter[1]))}(counter);var keystream=counter.slice(0);cipher.encryptBlock(keystream,0);for(var i=0;i<blockSize;i++)words[offset+i]^=keystream[i]}});return CTRGladman.Decryptor=Encryptor,CTRGladman}(),CryptoJS.mode.CTRGladman}(__webpack_require__(1),__webpack_require__(3))},function(module,exports,__webpack_require__){module.exports=function(CryptoJS){return CryptoJS.mode.OFB=(OFB=CryptoJS.lib.BlockCipherMode.extend(),Encryptor=OFB.Encryptor=OFB.extend({processBlock:function(words,offset){var cipher=this._cipher,blockSize=cipher.blockSize,iv=this._iv,keystream=this._keystream;iv&&(keystream=this._keystream=iv.slice(0),this._iv=void 0),cipher.encryptBlock(keystream,0);for(var i=0;i<blockSize;i++)words[offset+i]^=keystream[i]}}),OFB.Decryptor=Encryptor,OFB),CryptoJS.mode.OFB;var OFB,Encryptor}(__webpack_require__(1),__webpack_require__(3))},function(module,exports,__webpack_require__){module.exports=function(CryptoJS){return CryptoJS.mode.ECB=((ECB=CryptoJS.lib.BlockCipherMode.extend()).Encryptor=ECB.extend({processBlock:function(words,offset){this._cipher.encryptBlock(words,offset)}}),ECB.Decryptor=ECB.extend({processBlock:function(words,offset){this._cipher.decryptBlock(words,offset)}}),ECB),CryptoJS.mode.ECB;var ECB}(__webpack_require__(1),__webpack_require__(3))},function(module,exports,__webpack_require__){module.exports=function(CryptoJS){return CryptoJS.pad.AnsiX923={pad:function(data,blockSize){var dataSigBytes=data.sigBytes,blockSizeBytes=4*blockSize,nPaddingBytes=blockSizeBytes-dataSigBytes%blockSizeBytes,lastBytePos=dataSigBytes+nPaddingBytes-1;data.clamp(),data.words[lastBytePos>>>2]|=nPaddingBytes<<24-lastBytePos%4*8,data.sigBytes+=nPaddingBytes},unpad:function(data){var nPaddingBytes=255&data.words[data.sigBytes-1>>>2];data.sigBytes-=nPaddingBytes}},CryptoJS.pad.Ansix923}(__webpack_require__(1),__webpack_require__(3))},function(module,exports,__webpack_require__){module.exports=function(CryptoJS){return CryptoJS.pad.Iso10126={pad:function(data,blockSize){var blockSizeBytes=4*blockSize,nPaddingBytes=blockSizeBytes-data.sigBytes%blockSizeBytes;data.concat(CryptoJS.lib.WordArray.random(nPaddingBytes-1)).concat(CryptoJS.lib.WordArray.create([nPaddingBytes<<24],1))},unpad:function(data){var nPaddingBytes=255&data.words[data.sigBytes-1>>>2];data.sigBytes-=nPaddingBytes}},CryptoJS.pad.Iso10126}(__webpack_require__(1),__webpack_require__(3))},function(module,exports,__webpack_require__){module.exports=function(CryptoJS){return CryptoJS.pad.Iso97971={pad:function(data,blockSize){data.concat(CryptoJS.lib.WordArray.create([2147483648],1)),CryptoJS.pad.ZeroPadding.pad(data,blockSize)},unpad:function(data){CryptoJS.pad.ZeroPadding.unpad(data),data.sigBytes--}},CryptoJS.pad.Iso97971}(__webpack_require__(1),__webpack_require__(3))},function(module,exports,__webpack_require__){module.exports=function(CryptoJS){return CryptoJS.pad.ZeroPadding={pad:function(data,blockSize){var blockSizeBytes=4*blockSize;data.clamp(),data.sigBytes+=blockSizeBytes-(data.sigBytes%blockSizeBytes||blockSizeBytes)},unpad:function(data){for(var dataWords=data.words,i=data.sigBytes-1;!(dataWords[i>>>2]>>>24-i%4*8&255);)i--;data.sigBytes=i+1}},CryptoJS.pad.ZeroPadding}(__webpack_require__(1),__webpack_require__(3))},function(module,exports,__webpack_require__){module.exports=function(CryptoJS){return CryptoJS.pad.NoPadding={pad:function(){},unpad:function(){}},CryptoJS.pad.NoPadding}(__webpack_require__(1),__webpack_require__(3))},function(module,exports,__webpack_require__){module.exports=function(CryptoJS){return CipherParams=(C=CryptoJS).lib.CipherParams,Hex=C.enc.Hex,C.format.Hex={stringify:function(cipherParams){return cipherParams.ciphertext.toString(Hex)},parse:function(input){var ciphertext=Hex.parse(input);return CipherParams.create({ciphertext:ciphertext})}},CryptoJS.format.Hex;var C,CipherParams,Hex}(__webpack_require__(1),__webpack_require__(3))},function(module,exports,__webpack_require__){module.exports=function(CryptoJS){return function(){var C=CryptoJS,BlockCipher=C.lib.BlockCipher,C_algo=C.algo,SBOX=[],INV_SBOX=[],SUB_MIX_0=[],SUB_MIX_1=[],SUB_MIX_2=[],SUB_MIX_3=[],INV_SUB_MIX_0=[],INV_SUB_MIX_1=[],INV_SUB_MIX_2=[],INV_SUB_MIX_3=[];!function(){for(var d=[],i=0;i<256;i++)d[i]=i<128?i<<1:i<<1^283;var x=0,xi=0;for(i=0;i<256;i++){var sx=xi^xi<<1^xi<<2^xi<<3^xi<<4;sx=sx>>>8^255&sx^99,SBOX[x]=sx,INV_SBOX[sx]=x;var x2=d[x],x4=d[x2],x8=d[x4],t=257*d[sx]^16843008*sx;SUB_MIX_0[x]=t<<24|t>>>8,SUB_MIX_1[x]=t<<16|t>>>16,SUB_MIX_2[x]=t<<8|t>>>24,SUB_MIX_3[x]=t,t=16843009*x8^65537*x4^257*x2^16843008*x,INV_SUB_MIX_0[sx]=t<<24|t>>>8,INV_SUB_MIX_1[sx]=t<<16|t>>>16,INV_SUB_MIX_2[sx]=t<<8|t>>>24,INV_SUB_MIX_3[sx]=t,x?(x=x2^d[d[d[x8^x2]]],xi^=d[d[xi]]):x=xi=1}}();var RCON=[0,1,2,4,8,16,32,64,128,27,54],AES=C_algo.AES=BlockCipher.extend({_doReset:function(){if(!this._nRounds||this._keyPriorReset!==this._key){for(var key=this._keyPriorReset=this._key,keyWords=key.words,keySize=key.sigBytes/4,ksRows=4*((this._nRounds=keySize+6)+1),keySchedule=this._keySchedule=[],ksRow=0;ksRow<ksRows;ksRow++)if(ksRow<keySize)keySchedule[ksRow]=keyWords[ksRow];else{var t=keySchedule[ksRow-1];ksRow%keySize?keySize>6&&ksRow%keySize==4&&(t=SBOX[t>>>24]<<24|SBOX[t>>>16&255]<<16|SBOX[t>>>8&255]<<8|SBOX[255&t]):(t=SBOX[(t=t<<8|t>>>24)>>>24]<<24|SBOX[t>>>16&255]<<16|SBOX[t>>>8&255]<<8|SBOX[255&t],t^=RCON[ksRow/keySize|0]<<24),keySchedule[ksRow]=keySchedule[ksRow-keySize]^t}for(var invKeySchedule=this._invKeySchedule=[],invKsRow=0;invKsRow<ksRows;invKsRow++)ksRow=ksRows-invKsRow,t=invKsRow%4?keySchedule[ksRow]:keySchedule[ksRow-4],invKeySchedule[invKsRow]=invKsRow<4||ksRow<=4?t:INV_SUB_MIX_0[SBOX[t>>>24]]^INV_SUB_MIX_1[SBOX[t>>>16&255]]^INV_SUB_MIX_2[SBOX[t>>>8&255]]^INV_SUB_MIX_3[SBOX[255&t]]}},encryptBlock:function(M,offset){this._doCryptBlock(M,offset,this._keySchedule,SUB_MIX_0,SUB_MIX_1,SUB_MIX_2,SUB_MIX_3,SBOX)},decryptBlock:function(M,offset){var t=M[offset+1];M[offset+1]=M[offset+3],M[offset+3]=t,this._doCryptBlock(M,offset,this._invKeySchedule,INV_SUB_MIX_0,INV_SUB_MIX_1,INV_SUB_MIX_2,INV_SUB_MIX_3,INV_SBOX),t=M[offset+1],M[offset+1]=M[offset+3],M[offset+3]=t},_doCryptBlock:function(M,offset,keySchedule,SUB_MIX_0,SUB_MIX_1,SUB_MIX_2,SUB_MIX_3,SBOX){for(var nRounds=this._nRounds,s0=M[offset]^keySchedule[0],s1=M[offset+1]^keySchedule[1],s2=M[offset+2]^keySchedule[2],s3=M[offset+3]^keySchedule[3],ksRow=4,round=1;round<nRounds;round++){var t0=SUB_MIX_0[s0>>>24]^SUB_MIX_1[s1>>>16&255]^SUB_MIX_2[s2>>>8&255]^SUB_MIX_3[255&s3]^keySchedule[ksRow++],t1=SUB_MIX_0[s1>>>24]^SUB_MIX_1[s2>>>16&255]^SUB_MIX_2[s3>>>8&255]^SUB_MIX_3[255&s0]^keySchedule[ksRow++],t2=SUB_MIX_0[s2>>>24]^SUB_MIX_1[s3>>>16&255]^SUB_MIX_2[s0>>>8&255]^SUB_MIX_3[255&s1]^keySchedule[ksRow++],t3=SUB_MIX_0[s3>>>24]^SUB_MIX_1[s0>>>16&255]^SUB_MIX_2[s1>>>8&255]^SUB_MIX_3[255&s2]^keySchedule[ksRow++];s0=t0,s1=t1,s2=t2,s3=t3}t0=(SBOX[s0>>>24]<<24|SBOX[s1>>>16&255]<<16|SBOX[s2>>>8&255]<<8|SBOX[255&s3])^keySchedule[ksRow++],t1=(SBOX[s1>>>24]<<24|SBOX[s2>>>16&255]<<16|SBOX[s3>>>8&255]<<8|SBOX[255&s0])^keySchedule[ksRow++],t2=(SBOX[s2>>>24]<<24|SBOX[s3>>>16&255]<<16|SBOX[s0>>>8&255]<<8|SBOX[255&s1])^keySchedule[ksRow++],t3=(SBOX[s3>>>24]<<24|SBOX[s0>>>16&255]<<16|SBOX[s1>>>8&255]<<8|SBOX[255&s2])^keySchedule[ksRow++],M[offset]=t0,M[offset+1]=t1,M[offset+2]=t2,M[offset+3]=t3},keySize:8});C.AES=BlockCipher._createHelper(AES)}(),CryptoJS.AES}(__webpack_require__(1),__webpack_require__(5),__webpack_require__(6),__webpack_require__(4),__webpack_require__(3))},function(module,exports,__webpack_require__){module.exports=function(CryptoJS){return function(){var C=CryptoJS,C_lib=C.lib,WordArray=C_lib.WordArray,BlockCipher=C_lib.BlockCipher,C_algo=C.algo,PC1=[57,49,41,33,25,17,9,1,58,50,42,34,26,18,10,2,59,51,43,35,27,19,11,3,60,52,44,36,63,55,47,39,31,23,15,7,62,54,46,38,30,22,14,6,61,53,45,37,29,21,13,5,28,20,12,4],PC2=[14,17,11,24,1,5,3,28,15,6,21,10,23,19,12,4,26,8,16,7,27,20,13,2,41,52,31,37,47,55,30,40,51,45,33,48,44,49,39,56,34,53,46,42,50,36,29,32],BIT_SHIFTS=[1,2,4,6,8,10,12,14,15,17,19,21,23,25,27,28],SBOX_P=[{0:8421888,268435456:32768,536870912:8421378,805306368:2,1073741824:512,1342177280:8421890,1610612736:8389122,1879048192:8388608,2147483648:514,2415919104:8389120,2684354560:33280,2952790016:8421376,3221225472:32770,3489660928:8388610,3758096384:0,4026531840:33282,134217728:0,402653184:8421890,671088640:33282,939524096:32768,1207959552:8421888,1476395008:512,1744830464:8421378,2013265920:2,2281701376:8389120,2550136832:33280,2818572288:8421376,3087007744:8389122,3355443200:8388610,3623878656:32770,3892314112:514,4160749568:8388608,1:32768,268435457:2,536870913:8421888,805306369:8388608,1073741825:8421378,1342177281:33280,1610612737:512,1879048193:8389122,2147483649:8421890,2415919105:8421376,2684354561:8388610,2952790017:33282,3221225473:514,3489660929:8389120,3758096385:32770,4026531841:0,134217729:8421890,402653185:8421376,671088641:8388608,939524097:512,1207959553:32768,1476395009:8388610,1744830465:2,2013265921:33282,2281701377:32770,2550136833:8389122,2818572289:514,3087007745:8421888,3355443201:8389120,3623878657:0,3892314113:33280,4160749569:8421378},{0:1074282512,16777216:16384,33554432:524288,50331648:1074266128,67108864:1073741840,83886080:1074282496,100663296:1073758208,117440512:16,134217728:540672,150994944:1073758224,167772160:1073741824,184549376:540688,201326592:524304,218103808:0,234881024:16400,251658240:1074266112,8388608:1073758208,25165824:540688,41943040:16,58720256:1073758224,75497472:1074282512,92274688:1073741824,109051904:524288,125829120:1074266128,142606336:524304,159383552:0,176160768:16384,192937984:1074266112,209715200:1073741840,226492416:540672,243269632:1074282496,260046848:16400,268435456:0,285212672:1074266128,301989888:1073758224,318767104:1074282496,335544320:1074266112,352321536:16,369098752:540688,385875968:16384,402653184:16400,419430400:524288,436207616:524304,452984832:1073741840,469762048:540672,486539264:1073758208,503316480:1073741824,520093696:1074282512,276824064:540688,293601280:524288,310378496:1074266112,327155712:16384,343932928:1073758208,360710144:1074282512,377487360:16,394264576:1073741824,411041792:1074282496,427819008:1073741840,444596224:1073758224,461373440:524304,478150656:0,494927872:16400,511705088:1074266128,528482304:540672},{0:260,1048576:0,2097152:67109120,3145728:65796,4194304:65540,5242880:67108868,6291456:67174660,7340032:67174400,8388608:67108864,9437184:67174656,10485760:65792,11534336:67174404,12582912:67109124,13631488:65536,14680064:4,15728640:256,524288:67174656,1572864:67174404,2621440:0,3670016:67109120,4718592:67108868,5767168:65536,6815744:65540,7864320:260,8912896:4,9961472:256,11010048:67174400,12058624:65796,13107200:65792,14155776:67109124,15204352:67174660,16252928:67108864,16777216:67174656,17825792:65540,18874368:65536,19922944:67109120,20971520:256,22020096:67174660,23068672:67108868,24117248:0,25165824:67109124,26214400:67108864,27262976:4,28311552:65792,29360128:67174400,30408704:260,31457280:65796,32505856:67174404,17301504:67108864,18350080:260,19398656:67174656,20447232:0,21495808:65540,22544384:67109120,23592960:256,24641536:67174404,25690112:65536,26738688:67174660,27787264:65796,28835840:67108868,29884416:67109124,30932992:67174400,31981568:4,33030144:65792},{0:2151682048,65536:2147487808,131072:4198464,196608:2151677952,262144:0,327680:4198400,393216:2147483712,458752:4194368,524288:2147483648,589824:4194304,655360:64,720896:2147487744,786432:2151678016,851968:4160,917504:4096,983040:2151682112,32768:2147487808,98304:64,163840:2151678016,229376:2147487744,294912:4198400,360448:2151682112,425984:0,491520:2151677952,557056:4096,622592:2151682048,688128:4194304,753664:4160,819200:2147483648,884736:4194368,950272:4198464,1015808:2147483712,1048576:4194368,1114112:4198400,1179648:2147483712,1245184:0,1310720:4160,1376256:2151678016,1441792:2151682048,1507328:2147487808,1572864:2151682112,1638400:2147483648,1703936:2151677952,1769472:4198464,1835008:2147487744,1900544:4194304,1966080:64,2031616:4096,1081344:2151677952,1146880:2151682112,1212416:0,1277952:4198400,1343488:4194368,1409024:2147483648,1474560:2147487808,1540096:64,1605632:2147483712,1671168:4096,1736704:2147487744,1802240:2151678016,1867776:4160,1933312:2151682048,1998848:4194304,2064384:4198464},{0:128,4096:17039360,8192:262144,12288:536870912,16384:537133184,20480:16777344,24576:553648256,28672:262272,32768:16777216,36864:537133056,40960:536871040,45056:553910400,49152:553910272,53248:0,57344:17039488,61440:553648128,2048:17039488,6144:553648256,10240:128,14336:17039360,18432:262144,22528:537133184,26624:553910272,30720:536870912,34816:537133056,38912:0,43008:553910400,47104:16777344,51200:536871040,55296:553648128,59392:16777216,63488:262272,65536:262144,69632:128,73728:536870912,77824:553648256,81920:16777344,86016:553910272,90112:537133184,94208:16777216,98304:553910400,102400:553648128,106496:17039360,110592:537133056,114688:262272,118784:536871040,122880:0,126976:17039488,67584:553648256,71680:16777216,75776:17039360,79872:537133184,83968:536870912,88064:17039488,92160:128,96256:553910272,100352:262272,104448:553910400,108544:0,112640:553648128,116736:16777344,120832:262144,124928:537133056,129024:536871040},{0:268435464,256:8192,512:270532608,768:270540808,1024:268443648,1280:2097152,1536:2097160,1792:268435456,2048:0,2304:268443656,2560:2105344,2816:8,3072:270532616,3328:2105352,3584:8200,3840:270540800,128:270532608,384:270540808,640:8,896:2097152,1152:2105352,1408:268435464,1664:268443648,1920:8200,2176:2097160,2432:8192,2688:268443656,2944:270532616,3200:0,3456:270540800,3712:2105344,3968:268435456,4096:268443648,4352:270532616,4608:270540808,4864:8200,5120:2097152,5376:268435456,5632:268435464,5888:2105344,6144:2105352,6400:0,6656:8,6912:270532608,7168:8192,7424:268443656,7680:270540800,7936:2097160,4224:8,4480:2105344,4736:2097152,4992:268435464,5248:268443648,5504:8200,5760:270540808,6016:270532608,6272:270540800,6528:270532616,6784:8192,7040:2105352,7296:2097160,7552:0,7808:268435456,8064:268443656},{0:1048576,16:33555457,32:1024,48:1049601,64:34604033,80:0,96:1,112:34603009,128:33555456,144:1048577,160:33554433,176:34604032,192:34603008,208:1025,224:1049600,240:33554432,8:34603009,24:0,40:33555457,56:34604032,72:1048576,88:33554433,104:33554432,120:1025,136:1049601,152:33555456,168:34603008,184:1048577,200:1024,216:34604033,232:1,248:1049600,256:33554432,272:1048576,288:33555457,304:34603009,320:1048577,336:33555456,352:34604032,368:1049601,384:1025,400:34604033,416:1049600,432:1,448:0,464:34603008,480:33554433,496:1024,264:1049600,280:33555457,296:34603009,312:1,328:33554432,344:1048576,360:1025,376:34604032,392:33554433,408:34603008,424:0,440:34604033,456:1049601,472:1024,488:33555456,504:1048577},{0:134219808,1:131072,2:134217728,3:32,4:131104,5:134350880,6:134350848,7:2048,8:134348800,9:134219776,10:133120,11:134348832,12:2080,13:0,14:134217760,15:133152,2147483648:2048,2147483649:134350880,2147483650:134219808,2147483651:134217728,2147483652:134348800,2147483653:133120,2147483654:133152,2147483655:32,2147483656:134217760,2147483657:2080,2147483658:131104,2147483659:134350848,2147483660:0,2147483661:134348832,2147483662:134219776,2147483663:131072,16:133152,17:134350848,18:32,19:2048,20:134219776,21:134217760,22:134348832,23:131072,24:0,25:131104,26:134348800,27:134219808,28:134350880,29:133120,30:2080,31:134217728,2147483664:131072,2147483665:2048,2147483666:134348832,2147483667:133152,2147483668:32,2147483669:134348800,2147483670:134217728,2147483671:134219808,2147483672:134350880,2147483673:134217760,2147483674:134219776,2147483675:0,2147483676:133120,2147483677:2080,2147483678:131104,2147483679:134350848}],SBOX_MASK=[4160749569,528482304,33030144,2064384,129024,8064,504,2147483679],DES=C_algo.DES=BlockCipher.extend({_doReset:function(){for(var keyWords=this._key.words,keyBits=[],i=0;i<56;i++){var keyBitPos=PC1[i]-1;keyBits[i]=keyWords[keyBitPos>>>5]>>>31-keyBitPos%32&1}for(var subKeys=this._subKeys=[],nSubKey=0;nSubKey<16;nSubKey++){var subKey=subKeys[nSubKey]=[],bitShift=BIT_SHIFTS[nSubKey];for(i=0;i<24;i++)subKey[i/6|0]|=keyBits[(PC2[i]-1+bitShift)%28]<<31-i%6,subKey[4+(i/6|0)]|=keyBits[28+(PC2[i+24]-1+bitShift)%28]<<31-i%6;for(subKey[0]=subKey[0]<<1|subKey[0]>>>31,i=1;i<7;i++)subKey[i]=subKey[i]>>>4*(i-1)+3;subKey[7]=subKey[7]<<5|subKey[7]>>>27}var invSubKeys=this._invSubKeys=[];for(i=0;i<16;i++)invSubKeys[i]=subKeys[15-i]},encryptBlock:function(M,offset){this._doCryptBlock(M,offset,this._subKeys)},decryptBlock:function(M,offset){this._doCryptBlock(M,offset,this._invSubKeys)},_doCryptBlock:function(M,offset,subKeys){this._lBlock=M[offset],this._rBlock=M[offset+1],exchangeLR.call(this,4,252645135),exchangeLR.call(this,16,65535),exchangeRL.call(this,2,858993459),exchangeRL.call(this,8,16711935),exchangeLR.call(this,1,1431655765);for(var round=0;round<16;round++){for(var subKey=subKeys[round],lBlock=this._lBlock,rBlock=this._rBlock,f=0,i=0;i<8;i++)f|=SBOX_P[i][((rBlock^subKey[i])&SBOX_MASK[i])>>>0];this._lBlock=rBlock,this._rBlock=lBlock^f}var t=this._lBlock;this._lBlock=this._rBlock,this._rBlock=t,exchangeLR.call(this,1,1431655765),exchangeRL.call(this,8,16711935),exchangeRL.call(this,2,858993459),exchangeLR.call(this,16,65535),exchangeLR.call(this,4,252645135),M[offset]=this._lBlock,M[offset+1]=this._rBlock},keySize:2,ivSize:2,blockSize:2});function exchangeLR(offset,mask){var t=(this._lBlock>>>offset^this._rBlock)&mask;this._rBlock^=t,this._lBlock^=t<<offset}function exchangeRL(offset,mask){var t=(this._rBlock>>>offset^this._lBlock)&mask;this._lBlock^=t,this._rBlock^=t<<offset}C.DES=BlockCipher._createHelper(DES);var TripleDES=C_algo.TripleDES=BlockCipher.extend({_doReset:function(){var keyWords=this._key.words;this._des1=DES.createEncryptor(WordArray.create(keyWords.slice(0,2))),this._des2=DES.createEncryptor(WordArray.create(keyWords.slice(2,4))),this._des3=DES.createEncryptor(WordArray.create(keyWords.slice(4,6)))},encryptBlock:function(M,offset){this._des1.encryptBlock(M,offset),this._des2.decryptBlock(M,offset),this._des3.encryptBlock(M,offset)},decryptBlock:function(M,offset){this._des3.decryptBlock(M,offset),this._des2.encryptBlock(M,offset),this._des1.decryptBlock(M,offset)},keySize:6,ivSize:2,blockSize:2});C.TripleDES=BlockCipher._createHelper(TripleDES)}(),CryptoJS.TripleDES}(__webpack_require__(1),__webpack_require__(5),__webpack_require__(6),__webpack_require__(4),__webpack_require__(3))},function(module,exports,__webpack_require__){module.exports=function(CryptoJS){return function(){var C=CryptoJS,StreamCipher=C.lib.StreamCipher,C_algo=C.algo,RC4=C_algo.RC4=StreamCipher.extend({_doReset:function(){for(var key=this._key,keyWords=key.words,keySigBytes=key.sigBytes,S=this._S=[],i=0;i<256;i++)S[i]=i;i=0;for(var j=0;i<256;i++){var keyByteIndex=i%keySigBytes,keyByte=keyWords[keyByteIndex>>>2]>>>24-keyByteIndex%4*8&255;j=(j+S[i]+keyByte)%256;var t=S[i];S[i]=S[j],S[j]=t}this._i=this._j=0},_doProcessBlock:function(M,offset){M[offset]^=generateKeystreamWord.call(this)},keySize:8,ivSize:0});function generateKeystreamWord(){for(var S=this._S,i=this._i,j=this._j,keystreamWord=0,n=0;n<4;n++){j=(j+S[i=(i+1)%256])%256;var t=S[i];S[i]=S[j],S[j]=t,keystreamWord|=S[(S[i]+S[j])%256]<<24-8*n}return this._i=i,this._j=j,keystreamWord}C.RC4=StreamCipher._createHelper(RC4);var RC4Drop=C_algo.RC4Drop=RC4.extend({cfg:RC4.cfg.extend({drop:192}),_doReset:function(){RC4._doReset.call(this);for(var i=this.cfg.drop;i>0;i--)generateKeystreamWord.call(this)}});C.RC4Drop=StreamCipher._createHelper(RC4Drop)}(),CryptoJS.RC4}(__webpack_require__(1),__webpack_require__(5),__webpack_require__(6),__webpack_require__(4),__webpack_require__(3))},function(module,exports,__webpack_require__){module.exports=function(CryptoJS){return function(){var C=CryptoJS,StreamCipher=C.lib.StreamCipher,C_algo=C.algo,S=[],C_=[],G=[],Rabbit=C_algo.Rabbit=StreamCipher.extend({_doReset:function(){for(var K=this._key.words,iv=this.cfg.iv,i=0;i<4;i++)K[i]=16711935&(K[i]<<8|K[i]>>>24)|4278255360&(K[i]<<24|K[i]>>>8);var X=this._X=[K[0],K[3]<<16|K[2]>>>16,K[1],K[0]<<16|K[3]>>>16,K[2],K[1]<<16|K[0]>>>16,K[3],K[2]<<16|K[1]>>>16],C=this._C=[K[2]<<16|K[2]>>>16,4294901760&K[0]|65535&K[1],K[3]<<16|K[3]>>>16,4294901760&K[1]|65535&K[2],K[0]<<16|K[0]>>>16,4294901760&K[2]|65535&K[3],K[1]<<16|K[1]>>>16,4294901760&K[3]|65535&K[0]];for(this._b=0,i=0;i<4;i++)nextState.call(this);for(i=0;i<8;i++)C[i]^=X[i+4&7];if(iv){var IV=iv.words,IV_0=IV[0],IV_1=IV[1],i0=16711935&(IV_0<<8|IV_0>>>24)|4278255360&(IV_0<<24|IV_0>>>8),i2=16711935&(IV_1<<8|IV_1>>>24)|4278255360&(IV_1<<24|IV_1>>>8),i1=i0>>>16|4294901760&i2,i3=i2<<16|65535&i0;for(C[0]^=i0,C[1]^=i1,C[2]^=i2,C[3]^=i3,C[4]^=i0,C[5]^=i1,C[6]^=i2,C[7]^=i3,i=0;i<4;i++)nextState.call(this)}},_doProcessBlock:function(M,offset){var X=this._X;nextState.call(this),S[0]=X[0]^X[5]>>>16^X[3]<<16,S[1]=X[2]^X[7]>>>16^X[5]<<16,S[2]=X[4]^X[1]>>>16^X[7]<<16,S[3]=X[6]^X[3]>>>16^X[1]<<16;for(var i=0;i<4;i++)S[i]=16711935&(S[i]<<8|S[i]>>>24)|4278255360&(S[i]<<24|S[i]>>>8),M[offset+i]^=S[i]},blockSize:4,ivSize:2});function nextState(){for(var X=this._X,C=this._C,i=0;i<8;i++)C_[i]=C[i];for(C[0]=C[0]+1295307597+this._b|0,C[1]=C[1]+3545052371+(C[0]>>>0<C_[0]>>>0?1:0)|0,C[2]=C[2]+886263092+(C[1]>>>0<C_[1]>>>0?1:0)|0,C[3]=C[3]+1295307597+(C[2]>>>0<C_[2]>>>0?1:0)|0,C[4]=C[4]+3545052371+(C[3]>>>0<C_[3]>>>0?1:0)|0,C[5]=C[5]+886263092+(C[4]>>>0<C_[4]>>>0?1:0)|0,C[6]=C[6]+1295307597+(C[5]>>>0<C_[5]>>>0?1:0)|0,C[7]=C[7]+3545052371+(C[6]>>>0<C_[6]>>>0?1:0)|0,this._b=C[7]>>>0<C_[7]>>>0?1:0,i=0;i<8;i++){var gx=X[i]+C[i],ga=65535&gx,gb=gx>>>16,gh=((ga*ga>>>17)+ga*gb>>>15)+gb*gb,gl=((4294901760&gx)*gx|0)+((65535&gx)*gx|0);G[i]=gh^gl}X[0]=G[0]+(G[7]<<16|G[7]>>>16)+(G[6]<<16|G[6]>>>16)|0,X[1]=G[1]+(G[0]<<8|G[0]>>>24)+G[7]|0,X[2]=G[2]+(G[1]<<16|G[1]>>>16)+(G[0]<<16|G[0]>>>16)|0,X[3]=G[3]+(G[2]<<8|G[2]>>>24)+G[1]|0,X[4]=G[4]+(G[3]<<16|G[3]>>>16)+(G[2]<<16|G[2]>>>16)|0,X[5]=G[5]+(G[4]<<8|G[4]>>>24)+G[3]|0,X[6]=G[6]+(G[5]<<16|G[5]>>>16)+(G[4]<<16|G[4]>>>16)|0,X[7]=G[7]+(G[6]<<8|G[6]>>>24)+G[5]|0}C.Rabbit=StreamCipher._createHelper(Rabbit)}(),CryptoJS.Rabbit}(__webpack_require__(1),__webpack_require__(5),__webpack_require__(6),__webpack_require__(4),__webpack_require__(3))},function(module,exports,__webpack_require__){module.exports=function(CryptoJS){return function(){var C=CryptoJS,StreamCipher=C.lib.StreamCipher,C_algo=C.algo,S=[],C_=[],G=[],RabbitLegacy=C_algo.RabbitLegacy=StreamCipher.extend({_doReset:function(){var K=this._key.words,iv=this.cfg.iv,X=this._X=[K[0],K[3]<<16|K[2]>>>16,K[1],K[0]<<16|K[3]>>>16,K[2],K[1]<<16|K[0]>>>16,K[3],K[2]<<16|K[1]>>>16],C=this._C=[K[2]<<16|K[2]>>>16,4294901760&K[0]|65535&K[1],K[3]<<16|K[3]>>>16,4294901760&K[1]|65535&K[2],K[0]<<16|K[0]>>>16,4294901760&K[2]|65535&K[3],K[1]<<16|K[1]>>>16,4294901760&K[3]|65535&K[0]];this._b=0;for(var i=0;i<4;i++)nextState.call(this);for(i=0;i<8;i++)C[i]^=X[i+4&7];if(iv){var IV=iv.words,IV_0=IV[0],IV_1=IV[1],i0=16711935&(IV_0<<8|IV_0>>>24)|4278255360&(IV_0<<24|IV_0>>>8),i2=16711935&(IV_1<<8|IV_1>>>24)|4278255360&(IV_1<<24|IV_1>>>8),i1=i0>>>16|4294901760&i2,i3=i2<<16|65535&i0;for(C[0]^=i0,C[1]^=i1,C[2]^=i2,C[3]^=i3,C[4]^=i0,C[5]^=i1,C[6]^=i2,C[7]^=i3,i=0;i<4;i++)nextState.call(this)}},_doProcessBlock:function(M,offset){var X=this._X;nextState.call(this),S[0]=X[0]^X[5]>>>16^X[3]<<16,S[1]=X[2]^X[7]>>>16^X[5]<<16,S[2]=X[4]^X[1]>>>16^X[7]<<16,S[3]=X[6]^X[3]>>>16^X[1]<<16;for(var i=0;i<4;i++)S[i]=16711935&(S[i]<<8|S[i]>>>24)|4278255360&(S[i]<<24|S[i]>>>8),M[offset+i]^=S[i]},blockSize:4,ivSize:2});function nextState(){for(var X=this._X,C=this._C,i=0;i<8;i++)C_[i]=C[i];for(C[0]=C[0]+1295307597+this._b|0,C[1]=C[1]+3545052371+(C[0]>>>0<C_[0]>>>0?1:0)|0,C[2]=C[2]+886263092+(C[1]>>>0<C_[1]>>>0?1:0)|0,C[3]=C[3]+1295307597+(C[2]>>>0<C_[2]>>>0?1:0)|0,C[4]=C[4]+3545052371+(C[3]>>>0<C_[3]>>>0?1:0)|0,C[5]=C[5]+886263092+(C[4]>>>0<C_[4]>>>0?1:0)|0,C[6]=C[6]+1295307597+(C[5]>>>0<C_[5]>>>0?1:0)|0,C[7]=C[7]+3545052371+(C[6]>>>0<C_[6]>>>0?1:0)|0,this._b=C[7]>>>0<C_[7]>>>0?1:0,i=0;i<8;i++){var gx=X[i]+C[i],ga=65535&gx,gb=gx>>>16,gh=((ga*ga>>>17)+ga*gb>>>15)+gb*gb,gl=((4294901760&gx)*gx|0)+((65535&gx)*gx|0);G[i]=gh^gl}X[0]=G[0]+(G[7]<<16|G[7]>>>16)+(G[6]<<16|G[6]>>>16)|0,X[1]=G[1]+(G[0]<<8|G[0]>>>24)+G[7]|0,X[2]=G[2]+(G[1]<<16|G[1]>>>16)+(G[0]<<16|G[0]>>>16)|0,X[3]=G[3]+(G[2]<<8|G[2]>>>24)+G[1]|0,X[4]=G[4]+(G[3]<<16|G[3]>>>16)+(G[2]<<16|G[2]>>>16)|0,X[5]=G[5]+(G[4]<<8|G[4]>>>24)+G[3]|0,X[6]=G[6]+(G[5]<<16|G[5]>>>16)+(G[4]<<16|G[4]>>>16)|0,X[7]=G[7]+(G[6]<<8|G[6]>>>24)+G[5]|0}C.RabbitLegacy=StreamCipher._createHelper(RabbitLegacy)}(),CryptoJS.RabbitLegacy}(__webpack_require__(1),__webpack_require__(5),__webpack_require__(6),__webpack_require__(4),__webpack_require__(3))},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var _src_models_call_model__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0);function _typeof(obj){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj})(obj)}angular.module("rainbow").factory("Conversation",["$log","$rootScope","$interval","$filter","contactService","xmppService","Message","uuid4","utilService","fileStorageService","fileServerService","$q","fileViewerFactory","roomService","pstnConferenceService",function($log,$rootScope,$interval,$filter,contactService,xmppService,Message,uuid4,utilService,fileStorageService,fileServerService,$q,fileViewerFactory,roomService,pstnConferenceService){function Conversation(conversationId){this.id=conversationId,this.dbId=null,this.type=null,this.owner=null,this.contact=null,this.room=null,this.capabilities=null,this.avatar=null,this.presenceStatus=null,this.name=function(){return{}},this.filterName="",this.missedCounter=0,this.missedCalls=0,this.messages=[],this.participantStatuses={},this.draft="",this.status=Conversation.Status.ACTIVE,this.historyIndex=-1,this.historyMessages=[],this.historyDefered=null,this.historyComplete=!1,this.lastModification=void 0,this.creationDate=new Date,this.lastMessageText="",this.lastMessageSender="",this.pip=!0,this.videoCall={status:_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.UNKNOWN},this.audioCall=null,this.pstnConferenceSession=null,this.webConferenceSession=null,this.isMutedAudio=!1,this.isMutedVideo=!1,this.infoVisible=!1,this.muted=!1,this.isFavorite=!1,this.lastEditableMsg=null,this.cacheMessages=[]}Conversation.ChatstatesNS="http://jabber.org/protocol/chatstates",Conversation.ReceiptNS="urn:xmpp:receipts",Conversation.AttentionNS="urn:xmpp:attention:0",Conversation.Type={ONE_TO_ONE:0,ROOM:1,BOT:2},Conversation.EventType={NEW:0,IM:1,CAPABILITIES:2,FILE:3},Conversation.Status={ACTIVE:{key:0,value:"active"},INACTIVE:{key:1,value:"inactive"},COMPOSING:{key:2,value:"composing"},PAUSED:{key:3,value:"paused"}},Conversation.createOneToOneConversation=function(participant){$log.info("[Conversation] Create one to one conversation ("+participant.id+")");var conversation=new Conversation(participant.id);return conversation.contact=participant,participant.conversation=conversation,participant.isBot?(conversation.avatar="",conversation.type=Conversation.Type.BOT):(conversation.avatar=participant.avatar?participant.avatar.src:null,conversation.type=Conversation.Type.ONE_TO_ONE),conversation.name=participant.name,participant.displayName&&(conversation.filterName=utilService.removeDiacritis(participant.displayName.toLowerCase())),conversation},Conversation.createRoomConversation=function(room){$log.info("[Conversation] Create room conversation ("+room.jid+")");var conversation=new Conversation(room.jid);return conversation.type=Conversation.Type.ROOM,conversation.room=room,conversation.filterName=utilService.removeDiacritis(room.name.toLowerCase()),conversation.infoVisible=!0,conversation};var randomBase=uuid4.generate(),messageId=0;return Conversation.getUniqueMessageId=function(){var messageToSendID="web_"+randomBase+messageId;return messageId++,messageToSendID},Conversation.stringToStatus=function(status){switch(status){case"composing":return Conversation.Status.COMPOSING;case"paused":return Conversation.Status.PAUSED;default:return Conversation.Status.ACTIVE}},Conversation.prototype.reset=function(){this.messages=[],this.historyIndex=-1,this.historyMessages=[],this.historyComplete=!1,this.currentHistoryId=null,this.lastMessageText=null,this.chatRenderer&&this.chatRenderer.removeAllMessages()},Conversation.prototype.isInCall=function(){return this.pstnConferenceSession?this.pstnConferenceSession.isParticipantConnectedByJid(contactService.userContact.jid):this.webConferenceSession?this.webConferenceSession.isParticipantConnectedByJid(contactService.userContact.jid):this.videoCall&&this.videoCall.status&&"Unknown"!==this.videoCall.status.value||this.audioCall&&this.audioCall.status&&"Unknown"!==this.audioCall.status.value&&"incommingCall"!==this.audioCall.status.value&&"queued"!==this.audioCall.status.value},Conversation.prototype.isNotInCall=function(){return!(this.videoCall&&this.videoCall.status&&"Unknown"!==this.videoCall.status.value||this.audioCall&&this.audioCall.status&&"Unknown"!==this.audioCall.status.value||"busy"===contactService.userContact.status&&""!==contactService.userContact.message)},Conversation.prototype.isActive=function(){return this.videoCall&&this.videoCall.status&&"active"===this.videoCall.status.value||this.audioCall&&this.audioCall.status&&"active"===this.audioCall.status.value},Conversation.prototype.isHeld=function(){return this.videoCall&&this.videoCall.status&&"held"===this.videoCall.status.value||this.audioCall&&this.audioCall.status&&"held"===this.audioCall.status.value},Conversation.prototype.getMessageById=function(messId,searchInCache){if(searchInCache){var foundMsg=this.cacheMessages.find((function(item){return item.id===messId}));if(foundMsg)return foundMsg}return this.messages.find((function(item){return item.id===messId||item.replaceMsgs.length>0&&item.replaceMsgs.find((function(replaceItem){return replaceItem.id===messId}))}))},Conversation.prototype.getMessageByIdInHistory=function(messId){return this.historyMessages.find((function(item){return item.id===messId}))},Conversation.prototype.sendChatMessage=function(data,answeredMsg,alternativeContent,mentions){var unicodeData=$filter("emojiShortToUnicode")(data),xmppMessage=null,that=this,messageToSendID=Conversation.getUniqueMessageId();if(this.type===Conversation.Type.ONE_TO_ONE){var to=this.contact.jid;xmppMessage=$msg({to:to,type:"chat",id:messageToSendID,"xml:lang":contactService.currentLanguage}).c("body",{"xml:lang":contactService.currentLanguage}).t(unicodeData).up().c("request",{xmlns:Conversation.ReceiptNS}).up().c("active",{xmlns:Conversation.ChatstatesNS}).up()}else xmppMessage=$msg({to:this.room.jid,type:"groupchat",id:messageToSendID}).c("body",{"xml:lang":contactService.currentLanguage}).t(unicodeData).up().c("request",{xmlns:Conversation.ReceiptNS}).up().c("active",{xmlns:Conversation.ChatstatesNS}).up();var answeredMsgId=null,answeredMsgDate=null;answeredMsg&&(xmppMessage=xmppMessage.c("answeredMsg",{stamp:answeredMsg.date.getTime()}).t(answeredMsg.id).up(),answeredMsgId=answeredMsg.id,answeredMsgDate=answeredMsg.date),alternativeContent&&(xmppMessage=xmppMessage.c("content",{type:alternativeContent.type}).t(alternativeContent.message).up()),mentions&&mentions.length&&(xmppMessage=xmppMessage.c("mention",{xmlns:Conversation.AttentionNS}),mentions.forEach((function(jidMentioned){xmppMessage=xmppMessage.c("jid",null,jidMentioned)})));var message=null;return(message=this.addChatMessage(contactService.userContact,new Date,unicodeData,messageToSendID,!0,null,null,answeredMsgId,answeredMsgDate,null,alternativeContent,mentions))?(message.serverAckTimer=$interval((function(){message.receiptStatus=Message.ReceiptStatus.ERROR,that.updateMessage(message)}),1e4),xmppService.send(xmppMessage),message):null},Conversation.prototype.sendCorrectedChatMessage=function(originalMessage,data,origMsgId){$log.info("[Conversation] >sendCorrectedChatMessage: origMsgId="+origMsgId),this.sendAckReadMessages();var unicodeData=$filter("emojiShortToUnicode")(data),xmppMessage=null,that=this,messageToSendID=Conversation.getUniqueMessageId();if($log.info("[Conversation] >sendCorrectedChatMessage: messageToSendID="+messageToSendID),this.type===Conversation.Type.ONE_TO_ONE){var to=this.contact.jid;xmppMessage=$msg({to:to,type:"chat",id:messageToSendID,"xml:lang":contactService.currentLanguage}).c("body",{"xml:lang":contactService.currentLanguage}).t(unicodeData).up().c("replace",{id:origMsgId,xmlns:"urn:xmpp:message-correct:0"}).up().c("store",{xmlns:"urn:xmpp:hints"}).up().c("request",{xmlns:Conversation.ReceiptNS}).up().c("active",{xmlns:Conversation.ChatstatesNS}).up()}else xmppMessage=$msg({to:this.room.jid,type:"groupchat",id:messageToSendID}).c("body",{"xml:lang":contactService.currentLanguage}).t(unicodeData).up().c("replace",{id:origMsgId,xmlns:"urn:xmpp:message-correct:0"}).t(unicodeData).up().c("store",{xmlns:"urn:xmpp:hints"}).up().c("request",{xmlns:Conversation.ReceiptNS}).up().c("active",{xmlns:Conversation.ChatstatesNS}).up();return originalMessage?(originalMessage.serverAckTimer=$interval((function(){originalMessage.receiptStatus=Message.ReceiptStatus.ERROR,that.updateMessage(originalMessage)}),1e4),originalMessage.addReplaceMsg(messageToSendID,data),xmppService.send(xmppMessage),messageToSendID):null},Conversation.prototype.sendIsTypingState=function(isTypingState){var xmppMessage=null,messageToSendID=Conversation.getUniqueMessageId(),state=isTypingState?"composing":"active";if(this.type===Conversation.Type.ONE_TO_ONE){var to=this.contact.jid;xmppMessage=$msg({to:to,type:"chat",id:messageToSendID,"xml:lang":contactService.currentLanguage}).c(state,{xmlns:Conversation.ChatstatesNS}).up()}else xmppMessage=$msg({to:this.room.jid,type:"groupchat",id:messageToSendID}).c(state,{xmlns:Conversation.ChatstatesNS}).up();xmppService.send(xmppMessage)},Conversation.prototype.sendRecordingMessage=function(message){var unicodeData=$filter("emojiShortToUnicode")(message),xmppMessage=null,that=this,messageToSendID=Conversation.getUniqueMessageId();if(this.type===Conversation.Type.ONE_TO_ONE){var to=this.contact.jid;xmppMessage=$msg({to:to,type:"chat",id:messageToSendID,"xml:lang":contactService.currentLanguage}).c("body",{"xml:lang":contactService.currentLanguage}).up().c("recording",{xmlns:"jabber:iq:recordingP2P"}).t(unicodeData).up().c("request",{xmlns:Conversation.ReceiptNS}).up().c("active",{xmlns:Conversation.ChatstatesNS}).up()}message=null;return(message=this.addRecordingMessage(contactService.userContact,new Date,unicodeData,messageToSendID))?(message.serverAckTimer=$interval((function(){message.receiptStatus=Message.ReceiptStatus.ERROR,that.updateMessage(message)}),1e4),xmppService.send(xmppMessage),message):null},Conversation.prototype.sendExistingFSMessage=function(message,fileDescriptor){if(!message)return null;var unicodeData=$filter("emojiShortToUnicode")(message.data),xmppMessage=null,messageToSendID=message.id;if(this.type===Conversation.Type.ONE_TO_ONE){var to=this.contact.jid;xmppMessage=$msg({to:to,type:"chat",id:messageToSendID,"xml:lang":contactService.currentLanguage}).c("body",{"xml:lang":contactService.currentLanguage}).t(unicodeData).up().c("request",{xmlns:Conversation.ReceiptNS}).up().c("active",{xmlns:Conversation.ChatstatesNS}).up()}else xmppMessage=$msg({to:this.room.jid,type:"groupchat",id:messageToSendID}).c("body",{"xml:lang":contactService.currentLanguage}).t(unicodeData).up().c("request",{xmlns:Conversation.ReceiptNS}).up().c("active",{xmlns:Conversation.ChatstatesNS}).up();var url=config.restServerUrl+"/api/rainbow/fileserver/v1.0/files/"+fileDescriptor.id;return xmppMessage.c("x",{xmlns:"jabber:x:oob"}).c("url",{},url).c("mime",{},fileDescriptor.typeMIME).c("filename",{},fileDescriptor.fileName).c("size",{},fileDescriptor.size).up(),fileDescriptor.tags&&"voicemail"===fileDescriptor.tags.purpose&&xmppMessage.c("voicemessage",{xmlns:"http://jabber.org/protocol/voicemessage"}).up(),xmppMessage.c("store",{xmlns:"urn:xmpp:hints"}),message.fileId=fileDescriptor.id,message.setReceiptStatus(Message.ReceiptStatus.SENT),this.updateMessage(message),xmppService.send(xmppMessage),message},Conversation.prototype.sendAckReadOrReceivedMessage=function(messageId,status){$log.info("[Conversation] "+this.id+" send "+status+" status for message "+messageId);var to=this.type===Conversation.Type.ONE_TO_ONE?this.contact.jid:this.room.jid,from=contactService.userContact.jid,msg=$msg({to:to,from:from,type:"chat"}).c("received",{xmlns:Conversation.ReceiptNS,event:status,entity:"client",type:"im",id:messageId});this.type!==Conversation.Type.ONE_TO_ONE&&(msg=$msg({to:to,from:from,type:"groupchat"}).c("received",{xmlns:Conversation.ReceiptNS,event:status,entity:"client",type:"muc",id:messageId})),xmppService.send(msg)},Conversation.prototype.sendAckReceivedMessage=function(message){if(!(message.receiptStatus>=Message.ReceiptStatus.UNREAD)){$log.info("[Conversation] "+this.id+" send received ack for message "+message.id);var to=this.type===Conversation.Type.ONE_TO_ONE?this.contact.jid:this.room.jid,from=contactService.userContact.jid,msg=null;msg=this.type===Conversation.Type.ONE_TO_ONE?$msg({to:to,from:from,type:"chat"}).c("received",{xmlns:Conversation.ReceiptNS,event:"received",entity:"client",type:"im",id:message.id}):$msg({to:to,from:from,type:"groupchat"}).c("received",{xmlns:Conversation.ReceiptNS,event:"received",entity:"client",type:"muc",id:message.id}),xmppService.send(msg),message.setReceiptStatus(Message.ReceiptStatus.UNREAD)}},Conversation.prototype.sendAckReadMessage=function(message){if(message.receiptStatus!==Message.ReceiptStatus.READ){$log.info("[Conversation] "+this.id+" send read ack for message "+message.id);var to=this.type===Conversation.Type.ONE_TO_ONE?this.contact.jid:this.room.jid,from=contactService.userContact.jid,msg=$msg({to:to,from:from,type:"chat"}).c("received",{xmlns:Conversation.ReceiptNS,event:"read",entity:"client",type:"im",id:message.id});if(this.type!==Conversation.Type.ONE_TO_ONE&&(msg=$msg({to:to,from:from,type:"groupchat"}).c("received",{xmlns:Conversation.ReceiptNS,event:"read",entity:"client",type:"muc",id:message.id})),xmppService.send(msg),message.setReceiptStatus(Message.ReceiptStatus.READ),message.replaceMsgs&&message.replaceMsgs.length){var that=this;message.replaceMsgs.forEach((function(message){that.sendAckReadOrReceivedMessage(message.id,"read")}))}}},Conversation.prototype.sendAckReadMessages=function(){$log.info("[Conversation] "+this.id+" sendAckReadMessages");var result=!1,that=this;return this.messages.forEach((function(message){message.receiptStatus!==Message.ReceiptStatus.SENT&&message.receiptStatus!==Message.ReceiptStatus.UNREAD||message.side!==Message.Side.LEFT&&message.side!==Message.Side.ADMIN||(that.sendAckReadMessage(message),result=!0)})),result},Conversation.prototype.sendFSMessage=function(file,data,voiceMessageData){$log.debug("[conversation] >sendFSMessage");var currentFileDescriptor,defered=$q.defer(),that=this,fileExtension=file.name.split(".").pop(),fileMimeType=file.type,viewers=[],message="object"===_typeof(data)?data:void 0;return viewers=this.type===Conversation.Type.ONE_TO_ONE?fileViewerFactory([{viewerId:this.contact.dbId,type:"user"}]):fileViewerFactory([{viewerId:this.room.dbId,type:"room"}]),fileStorageService.createFileDescriptor(file.name,fileExtension,file.size,viewers,voiceMessageData).then((function(fileDescriptor){return currentFileDescriptor=fileDescriptor,fileDescriptor.fileToSend=file,fileDescriptor.isImage()&&file.preview&&(fileDescriptor.previewBlob=file.preview),message||(message=that.addFSMessage(fileDescriptor.id,fileMimeType,data,"uploading",voiceMessageData)),message.fileId=fileDescriptor.id,message.fileName=fileDescriptor.fileName,fileDescriptor.state="uploading",$rootScope.$broadcast("ON_FILE_TRANSFER_EVENT",{fileDesc:fileDescriptor,cancelable:!0}),fileServerService.uploadAFileByChunk(fileDescriptor,file,message,null).then((function(fileDesc){return $log.debug("uploadAFileByChunk success"),$q.resolve(fileDescriptor)}),(function(error){$log.debug("uploadAFileByChunk error"),fileStorageService.deleteFileDescriptor(currentFileDescriptor.id);var msgKey=error.translatedMessage?error.translatedMessage:"Unable to share file";return $rootScope.$broadcast("ON_SHOW_INFO_MESSAGE",{type:"error",messageKey:msgKey}),currentFileDescriptor.state="uploadError",message.receiptStatus=Message.ReceiptStatus.ERROR,message.fileErrorMsg=msgKey,that.updateMessage(message),$q.reject(error)}))})).then((function(fileDescriptor){fileDescriptor.state="uploaded",fileDescriptor.chunkPerformed=0,fileDescriptor.chunkTotalNumber=0,$rootScope.$broadcast("ON_FILE_TRANSFER_EVENT",{fileDesc:fileDescriptor}),that.sendExistingFSMessage(message,fileDescriptor),defered.resolve(message)}),(function(error){$log.debug("createFileDescriptor error"),defered.reject(error)})),defered.promise},Conversation.prototype.sendEFSMessage=function(fileDescriptor,data,voiceMessage){var that=this,fileExtension=fileDescriptor.extension,viewerType="",viewerOrRoomId=null,message=this.addFSMessage(fileDescriptor.id,fileExtension,data,fileDescriptor.state,voiceMessage);return this.type===Conversation.Type.ONE_TO_ONE?(viewerType="user",viewerOrRoomId=this.contact.dbId):(viewerType="room",viewerOrRoomId=this.room.dbId),fileStorageService.addFileViewer(fileDescriptor.id,viewerOrRoomId,viewerType).then((function(){that.sendExistingFSMessage(message,fileDescriptor)})).catch((function(error){var msgKey=error.translatedMessage?error.translatedMessage:"Unable to share file";$rootScope.$broadcast("ON_SHOW_INFO_MESSAGE",{type:"error",messageKey:msgKey}),message.receiptStatus=Message.ReceiptStatus.ERROR,that.updateMessage(message)})),message},Conversation.prototype.addAdminBubbleMessage=function(from,date,type,messageID){if(this.getMessageById(messageID))return $log.info("[Conversation] "+this.id+" add addAdminBubbleMessage message ("+messageID+") already exists."),null;$log.info("[Conversation] "+this.id+" add addAdminBubbleMessage from "+from.jid+" : "+type);var data=type+"MsgRoom",side=Message.Side.ADMIN,message=Message.create(messageID,date,from,side,data,!1);return message.setReceiptStatus(Message.ReceiptStatus.SENT),this.addMessage(message)},Conversation.prototype.addFTMessage=function(from,date,fileTransfert,messageID){$log.info("[Conversation] "+this.id+" add FT message from "+from.jid+" : "+fileTransfert.message);var side=contactService.isUserContact(from)?"R":"L",message=Message.createFTMessage(messageID,date,from,side,fileTransfert.message,!1,fileTransfert);return this.addMessage(message)},Conversation.prototype.addFSMessage=function(fileId,mime,data,status,voiceMessage){$log.info("[Conversation] "+this.id+" add FS message from me");var messageToSendID=Conversation.getUniqueMessageId(),unicodeData=$filter("emojiShortToUnicode")(data),date=new Date;if($log.info("[Conversation] "+this.id+" add FILE SHARING message from me"),voiceMessage)var message=Message.createVoiceMessage(messageToSendID,date,contactService.userContact,"R",unicodeData,status,fileId,voiceMessage);else message=Message.createFileSharingMessage(messageToSendID,date,contactService.userContact,"R",unicodeData,status,fileId);return message.setReceiptStatus(Message.ReceiptStatus.IN_PROGRESS),this.addMessage(message)},Conversation.prototype.addChatMessage=function(from,date,data,messageID,isSender,isMarkdown,subject,answeredMsgId,answeredMsgDate,additionalContent,alternativeContent,attention){if(this.getMessageById(messageID))return $log.info("[Conversation] "+this.id+" add CHAT message ("+messageID+") already exists."),null;$log.info("[Conversation] "+this.id+" add CHAT message ("+messageID+") from "+from.jid);var side=contactService.isUserContact(from)?"R":"L",message=Message.create(messageID,date,from,side,data,!1,isMarkdown,subject,answeredMsgId,answeredMsgDate,additionalContent,alternativeContent,attention);return isSender?message.setReceiptStatus(Message.ReceiptStatus.IN_PROGRESS):message.setReceiptStatus(Message.ReceiptStatus.SENT),this.addMessage(message)},Conversation.prototype.addRecordingMessage=function(from,date,data,messageID){var message=Message.createRecordingAdminMessage(messageID,date,from,"ADMIN",data);return this.addMessage(message)},Conversation.prototype.addFileMessage=function(from,date,data,messageID){$log.info("[Conversation] "+this.id+" add FILE message from "+from.jid+" : "+data);var side=contactService.isUserContact(from)?"R":"L",message=Message.createFileMessage(messageID,date,from,side,data,!1);return this.addMessage(message)},Conversation.prototype.addFileSharingMessage=function(from,date,data,messageID,fileId,fileName,geoloc,voiceMessage){$log.info("[Conversation] "+this.id+" add FILE SHARING message from "+from.jid+" message ID "+messageID);var side=contactService.isUserContact(from)?"R":"L";if(voiceMessage)var message=Message.createVoiceMessage(messageID,date,from,side,data,!1,fileId,fileName,voiceMessage);else message=Message.createFileSharingMessage(messageID,date,from,side,data,!1,fileId,fileName,geoloc);return this.addMessage(message)},Conversation.prototype.addConferenceMessage=function(from,date,messageID,conferenceDescriptor){if("reminder"===conferenceDescriptor.type){var room=roomService.getRoomByJid(conferenceDescriptor.roomjid),confSession=pstnConferenceService.conferenceSessions[room.getPstnConfEndpointId()];if(confSession&&confSession.isActive()&&confSession.isParticipantConnectedByJid(contactService.userContact.jid))return}$log.info("[Conversation] "+this.id+" add CONFERENCE message from "+from.jid);var message=Message.createConferenceMessage(messageID,date,from,"ADMIN",!1,conferenceDescriptor);return this.addMessage(message)},Conversation.prototype.addWebRTCMessage=function(from,date,data,messageID){if(this.getMessageById(messageID))return $log.info("[Conversation] "+this.id+" add addWebRTCMessage message ("+messageID+") already exists."),null;$log.info("[Conversation] "+this.id+" add WebRTC message from "+from.jid+" : "+data);var side=contactService.isUserContact(from)?Message.Side.RIGHT:Message.Side.LEFT,message=Message.createWebRTCMessage(messageID,date,from,side,data,!1);return this.addMessage(message)},Conversation.prototype.updateMessage=function(message){this.chatRenderer&&this.chatRenderer.updateMessage(message,this.room)},Conversation.prototype.addMessage=function(message){if(this.messages.find((function(item){return item.id===message.id})))return $log.info("[Conversation] "+this.id+" try to add an already stored message with id "+message.id),message;if(message.side===Message.Side.LEFT)message.type===Message.Type.WEBRTC&&(this.missedCalls+=1),this.setStatusMessage(message.from,Conversation.Status.ACTIVE);else{var oldEditableMsg=this.lastEditableMsg;this.lastEditableMsg=message,this.updateMessage(oldEditableMsg)}if(this.messages.push(message),this.chatRenderer&&(this.chatRenderer.appendMessages([message],this.room),this.contact&&this.contact._lastActivityDate)){var daysOffline=Math.abs(new Date-this.contact._lastActivityDate)/1e3/3600/24;if(this.contact.roster&&"offline"===this.contact.status&&daysOffline>=14){var chatRenderer=this.chatRenderer;chatRenderer.displayInfoMessage($filter("translate")("offlineSendMail"),$filter("translate")("warningOfflineSendMail"),(function(action,contact){action?(chatRenderer.sendingInfoMessage($filter("translate")("sendingMail")),contactService.notifyImByEmail(contact).then((function(){chatRenderer.displayInfoMessage($filter("translate")("sendMailSuccess")),$interval((function(){chatRenderer.hideInfoMessage()}),3e3,1)})).catch((function(error){chatRenderer.displayErrorMessage(error),$interval((function(){chatRenderer.hideInfoMessage()}),5e3,1)}))):chatRenderer.hideInfoMessage()}))}}return this.lastModification=new Date,this.room&&(this.room.lastActivityDate=this.lastModification),this.lastMessageText=message.data,$rootScope.$broadcast("ON_CONVERSATION_UPDATED_EVENT",this.id),message},Conversation.prototype.addMessageInHistoryMessages=function(message){if(message&&(this.historyMessages.push(message),message.side===Message.Side.RIGHT&&(!this.lastEditableMsg||message.date.getTime()>this.lastEditableMsg.date.getTime()))){var oldEditableMsg=this.lastEditableMsg;this.lastEditableMsg=message,this.updateMessage(oldEditableMsg)}},Conversation.prototype.addMessageInCacheMessages=function(message){message&&this.cacheMessages.push(message)},Conversation.prototype.removeMessage=function(message){var index=this.messages.lastIndexOf(message);-1!==index&&this.messages.splice(index,1)},Conversation.prototype.sendChatStatus=function(status){if($log.info("[Conversation] "+this.id+" setStatus "+status.value),this.status!==status&&(this.status=status,status!==Conversation.Status.IDLE)){var xmppMessage=null,to="";this.type===Conversation.Type.ONE_TO_ONE?(to=this.contact.jid,xmppMessage=$msg({to:to,type:"chat"}).c(status.value,{xmlns:Conversation.ChatstatesNS})):(to=this.room.jid,xmppMessage=$msg({to:to,type:"groupchat"}).c(status.value,{xmlns:Conversation.ChatstatesNS}));try{xmppService.connection.send(xmppMessage)}catch(error){$log.error("[Conversation] sendChatStatus error "+error)}}},Conversation.prototype.setStatusMessage=function(from,status){$log.info("[Conversation] "+this.id+" add status message from "+from.jid+" : "+status.value),this.participantStatuses[from.jid]=status,this.chatRenderer&&this.chatRenderer.updateStatuses&&this.chatRenderer.updateStatuses()},Conversation.prototype.sendInvitation=function(participant){try{var to=participant.jid,attrs={xmlns:"jabber:x:conference",jid:this.id},invitation=$msg({from:xmppService.connection.jid,to:to}).c("x",attrs);xmppService.connection.send(invitation)}catch(error){$log.error("[Conversation] sendInvitation error "+error)}},Conversation.prototype.ackReadAllMessages=function(){var that=this;this.messages.forEach((function(message){message.receiptStatus!==Message.ReceiptStatus.SENT&&message.receiptStatus!==Message.ReceiptStatus.UNREAD||(message.setReceiptStatus(Message.ReceiptStatus.READ),that.chatRenderer&&that.chatRenderer.updateMessage(message,that.room))}))},Conversation}])},function(module,exports){angular.module("rainbow").factory("Message",["$log","$filter","$interval","ReplaceMsg","roomService",function($log,$filter,$interval,ReplaceMsg,roomService){"use strict";function Message(id,type,date,from,side,data,status,fileId,isMarkdown,subject,fileName,answeredMsgId,answeredMsgDate,geoloc,additionalContent,alternativeContent,voiceMessage,attention){this.id=id,this.index=null,this.type=type,this.date=date,this.from=from,this.side=side,this.data=data,this.status=status,this.receiptStatus=Message.ReceiptStatus.NONE,this.serverAckTimer=null,this.fileId=fileId,this.fileName=fileName,this.isMarkdown=isMarkdown,this.subject=subject,this.answeredMsgId=answeredMsgId,this.answeredMsgDate=answeredMsgDate,this.geoloc=geoloc,this.additionalContent=additionalContent,this.alternativeContent=alternativeContent,this.voiceMessage=voiceMessage,this.attention=attention,this.replaceMsgs=[]}return Message.Type={CHAT:{key:0,value:"Chat"},FILE:{key:1,value:"File"},FS:{key:2,value:"FileSharing"},FT:{key:3,value:"FileTransfert"},WEBRTC:{key:4,value:"WebRTC CAll"},RECORDING:{key:5,value:"Recording"},VM:{key:6,value:"VoiceMessage"}},Message.ReceiptStatus={NONE:0,ERROR:1,IN_PROGRESS:2,SENT:3,UNREAD:4,READ:5},Message.Side={LEFT:"L",RIGHT:"R",ADMIN:"ADMIN"},Message.ReceiptStatusText=["none","ko","inProgress","sent","received","read"],Message.create=function(id,date,from,side,data,status,isMarkdown,subject,answeredMsgId,answeredMsgDate,additionalContent,alternativeContent,attention){var message=$filter("emojiUnicodeToShort")(data);return new Message(id,Message.Type.CHAT,date,from,side,message,status,null,isMarkdown,subject,null,answeredMsgId,answeredMsgDate,null,additionalContent,alternativeContent,null,attention)},Message.createFileSharingMessage=function(id,date,from,side,data,status,fileId,fileName,geoloc){var message=$filter("emojiUnicodeToShort")(data);return new Message(id,Message.Type.FS,date,from,side,message,status,fileId,null,null,fileName,null,null,geoloc)},Message.createVoiceMessage=function(id,date,from,side,data,status,fileId,fileName,voiceMessage){var message=$filter("emojiUnicodeToShort")(data);return new Message(id,Message.Type.VM,date,from,side,message,status,fileId,null,null,fileName,null,null,null,null,voiceMessage)},Message.createConferenceMessage=function(id,date,from,side,status,conferenceDescriptor){var room=roomService.getRoomByJid(conferenceDescriptor.roomjid),headerConferenceMessage="";switch(conferenceDescriptor.type){case"invite":headerConferenceMessage=$filter("translate")("headerConferenceMessage",{sender:from._displayName,firstname:from.firstname,bubblename:room.name});break;case"reminder":headerConferenceMessage=room&&room.owner?$filter("translate")("conferenceReminderMessageforOwner",{sender:from._displayName}):$filter("translate")("conferenceReminderMessage",{sender:from._displayName});break;default:headerConferenceMessage=$filter("translate")("headerConferenceMessage",{sender:from._displayName,firstname:from.firstname,bubblename:room.name})}room.desc&&(headerConferenceMessage+="<br>"+$filter("translate")("conferenceSuject")+room.desc);var message=headerConferenceMessage;return new Message(id,Message.Type.CHAT,date,from,side,message,status)},Message.createFileMessage=function(id,date,from,side,data,status){return new Message(id,Message.Type.FILE,date,from,side,data,status)},Message.createWebRTCMessage=function(id,date,from,side,data,status){return new Message(id,Message.Type.WEBRTC,date,from,side,data,status)},Message.createFTMessage=function(id,date,from,side,data,status,fileTransfert){var message=new Message(id,Message.Type.FT,date,from,side,data,status);return message.fileTransfert=fileTransfert,message},Message.createBubbleAdminMessage=function(id,date,from,type){var data=type+"MsgRoom",side=Message.Side.ADMIN;return Message.create(id,date,from,side,data,!1)},Message.createRecordingAdminMessage=function(id,date,from,type,cmd){var data=type+"Recording";cmd&&(data+=cmd);var side=Message.Side.ADMIN;return new Message(id,Message.Type.RECORDING,date,from,side,data,!1)},Message.prototype.addReplaceMsg=function(messageId,replacedMsgBody){var replacedMsg=ReplaceMsg.create(messageId,replacedMsgBody);this.replaceMsgs.push(replacedMsg)},Message.prototype.isTextModified=function(){return this.replaceMsgs.length>0},Message.prototype.getLastTextModified=function(){return this.replaceMsgs.length>0?this.replaceMsgs[this.replaceMsgs.length-1].body:this.data},Message.prototype.isDeleted=function(){return 0===this.getLastTextModified().length},Message.prototype.setReceiptStatus=function(receiptStatus){return this.serverAckTimer&&receiptStatus>Message.ReceiptStatus.IN_PROGRESS&&($interval.cancel(this.serverAckTimer),this.serverAckTimer=null),receiptStatus>this.receiptStatus&&(this.receiptStatus=receiptStatus,$log.info("[Message] "+this.id+" : "+Message.ReceiptStatusText[receiptStatus])),this},Message}])},function(module,exports){angular.module("rainbow").factory("Room",[function(){"use strict";function Room(dbId,jid,name,topic,date,conferenceEndpoints,history,customdata,conference,avatar,isActive,lastActivityDate,autoRegister,autoAcceptInvitation){this.dbId=dbId,this.jid=jid,this.name=name,this.nameForLogs="",this.desc=topic,this.type=Room.Type.PRIVATE,this.users=[],this.history=history||Room.History.NONE,this.customData=customdata||{},this.ownerContact=null,this.organizers=[],this.members=[],this.avatarContacts=[],this.owner=!1,this.isModerator=!1,this.confEndpoints=conferenceEndpoints||[],this.conference=void 0!==conference?conference:null,this.status="none",this.creationDate=date,this.initPresPromise=null,this.avatar=avatar,this.guestEmails=[],this.isActive=isActive,this.lastActivityDate=lastActivityDate,this.autoRegister=autoRegister,this.autoAcceptInvitation=autoAcceptInvitation,Room.prototype.toString=function(){return"Room "+this.dbId+" "+this.name+" "+this.jid},Room.prototype.updateAvatarInfo=function(){var avatarContacts=[],orderedContacts=this.users.slice();if(!this.avatar){orderedContacts.sort((function(aa,bb){return new Date(aa.date)-new Date(bb.date)}));for(var index=0;index<orderedContacts.length;index++){var contact=orderedContacts[index].contact,status=orderedContacts[index].status;if(contact&&contact.dbId!==this.ownerContact.dbId&&"A"!==contact.initials&&"Anonymous"!==contact.displayName&&("accepted"!==status&&"invited"!==status||avatarContacts.push(contact),2===avatarContacts.length))break}this.avatarContacts=avatarContacts}},Room.prototype.isUserOwner=function(contact){return!!contact&&this.ownerContact.jid===contact.jid},Room.prototype.isUserModerator=function(contact){return void 0!==this.getOrganizerFromContactJid(contact.jid)},Room.prototype.isUserStatusAccepted=function(contact){var user=this.getUserByJid(contact.jid);return void 0!==user&&"accepted"===user.status},Room.prototype.isUserStillBelongToRoom=function(userJid){var ownUser=this.getUserByJid(userJid);return!ownUser||"unsubscribed"!==ownUser.status&&"deleted"!==ownUser.status},Room.prototype.getOrganizerFromContactJid=function(contactJid){var user;return this.organizers.forEach((function(organizer){organizer.contact.jid===contactJid&&(user=organizer)})),user},Room.prototype.getUserByJid=function(userJid){for(var i=0;i<this.users.length;i++)if(userJid===this.users[i].contact.jid)return this.users[i];return null},Room.prototype.getPstnConfEndpointId=function(){if(this.confEndpoints&&this.confEndpoints.length)for(var i=0;i<this.confEndpoints.length;i++)if("pstnAudio"===this.confEndpoints[i].mediaType)return this.confEndpoints[i].confEndpointId;return null},Room.prototype.getSFUConfEndpointId=function(){if(this.confEndpoints&&this.confEndpoints.length)for(var i=0;i<this.confEndpoints.length;i++)if("webrtc"===this.confEndpoints[i].mediaType)return this.confEndpoints[i].confEndpointId;return null},Room.prototype.getSFUSharingConfEndpointId=function(){if(this.confEndpoints&&this.confEndpoints.length)for(var i=0;i<this.confEndpoints.length;i++)if("webrtcSharingOnly"===this.confEndpoints[i].mediaType)return this.confEndpoints[i].confEndpointId;return null},Room.prototype.isMyPersonalMeetingRoom=function(){return this.conference&&"pstnAudio"===this.conference.mediaType&&!this.conference.scheduled&&this.conference.personalMeeting&&this.owner},Room.prototype.isMeetingRoom=function(){return this.conference&&"pstnAudio"===this.conference.mediaType},Room.prototype.isWebConferenceRoom=function(){return this.conference&&"pstnAudio"!==this.conference.mediaType&&this.getSFUConfEndpointId()},Room.prototype.isMeetingOrWebConferenceRoom=function(){return this.isMeetingRoom()||this.getSFUConfEndpointId()},Room.prototype.getNameForLogs=function(){if(!this.nameForLogs&&this.name){var temp=this.name.replace(/[^\s](?=.{1,}$)/g,"*");this.nameForLogs=this.name.charAt(0)+temp.substr(1)}return this.nameForLogs},Room.prototype.getInvitedUsers=function(audioUserJids){var audioUserJidsList=[];audioUserJids&&(audioUserJidsList=audioUserJids);var ctrl=this;return this.members.filter((function(user){return!(user.contact.displayName.startsWith("__guest__")||user.contact.displayName.startsWith("__##__guest__##__")||user.contact.displayName.startsWith("Anonymous")||audioUserJidsList.contains(user.contact.jid)||ctrl.isUserModerator(user.contact)||user.contact.isTerminated||"accepted"!==user.status&&"invited"!==user.status)}))},Room.prototype.getAutoRegister=function(){return this.autoRegister?this.autoRegister:"unlock"},Room.prototype.setAutoRegister=function(value){this.autoRegister=value},Room.prototype.setAutoAcceptInvitation=function(value){this.autoAcceptInvitation=value},Room.prototype.getAllAcceptedMembers=function(){return this.members.filter((function(user){return!(user.contact.displayName.startsWith("__guest__")||user.contact.displayName.startsWith("__##__guest__##__")||user.contact.displayName.startsWith("Anonymous")||user.contact.isTerminated||"accepted"!==user.status)}))},Room.prototype.getAllAcceptedUsers=function(){return this.users.filter((function(user){return!(user.contact.displayName.startsWith("__guest__")||user.contact.displayName.startsWith("__##__guest__##__")||user.contact.displayName.startsWith("Anonymous")||user.contact.isTerminated||user.contact.isTv||"accepted"!==user.status)}))}}return Room.Type={PRIVATE:0,PUBLIC:1},Room.Privilege={USER:"user",MODERATOR:"moderator",GUEST:"guest"},Room.History={ALL:"all",NONE:"none"},Room.create=function(dbId,jid,name,topic,date,conferenceEndpoints,history,customdata,conference,avatar,isActive,lastActivityDate,autoRegister,autoAcceptInvitation){return new Room(dbId,jid,name,topic,date,conferenceEndpoints,history,customdata,conference,avatar,isActive,lastActivityDate,autoRegister,autoAcceptInvitation)},Room}])},function(module,exports){!function(){"use strict";angular.module("rainbow").factory("RBNotification",["$log","$rootScope","$notification","$filter","notify",function($log,$rootScope,$notification,$filter,notify){var defaultDelay=8e5,notificationSaver=null;function RBNotification(attr){$log.info("[RBNotification] Create notification"),this.icon=attr.icon,this.displayName=attr.displayName,this.message=attr.body,this.type=attr.type,this.tag=attr.tag,this.title=attr.title,this.tooltip=attr.tooltip,this.delay=attr.delay?attr.delay:defaultDelay,this.focusAction=attr.focusAction,this.sound=null,this.answerAudioButton=null,this.answerVideoButton=null,this.answerSharingButton=null,this.answerAudioButtonDisabled=null,this.answerClick=!1,this.declineClick=!1,this.declineButton=null,this.answerWithIMButton=null,this.answerWithTemplateIMClick=!1,this.bottomRightButton=null,this.handler=null,this.ascope=null,this.isSent=!1}return RBNotification.notifs=[],RBNotification.create=function(attr){var notification=RBNotification.notifs[attr.id];return notification?(notification.update(attr),notification):(notification=new RBNotification(attr),RBNotification.notifs[attr.id]=notification,notification)},RBNotification.hide=function(notificationId){$log.info("[RBNotification] Hide notification");var notification=RBNotification.notifs[notificationId];notification&&notification.handler.close(),delete RBNotification.notifs[notificationId],0===Object.keys(RBNotification.notifs).length&&$rootScope.$broadcast("NOTIFICATION_HIDE_EVENT",this)},RBNotification.createNotificationListener=function(scope){$rootScope.$on("$destroy",$rootScope.$on("NOTIFICATION_SHOW_EVENT",(function(__event,notification){notification.display(scope)})))},RBNotification.prototype.update=function(attr){$log.info("[RBNotification] >update"),this.icon=attr.icon,this.displayName=attr.displayName,this.message=attr.body,this.type=attr.type,this.tag=attr.tag,this.delay=attr.delay?attr.delay:defaultDelay,this.focusAction=attr.focusAction},RBNotification.prototype.send=function(){this.isSent||(this.isSent=!0,$rootScope.$broadcast("NOTIFICATION_SHOW_EVENT",this))},RBNotification.prototype.addAnswerAudioButton=function(attr){this.answerAudioButton=attr},RBNotification.prototype.addDivertedCallButton=function(attr){this.divertedCallButton=attr},RBNotification.prototype.addAnswerVideoButton=function(attr){this.answerVideoButton=attr},RBNotification.prototype.addAnswerSharingButton=function(attr){this.answerSharingButton=attr},RBNotification.prototype.addAnswerAudioButtonDisabled=function(attr){this.answerAudioButtonDisabled=attr},RBNotification.prototype.addDeclineButton=function(attr){this.declineButton=attr},RBNotification.prototype.addAnswerWithIMButton=function(attr){this.answerWithIMButton=attr},RBNotification.prototype.addBottomRightButton=function(attr){this.bottomRightButton=attr},RBNotification.prototype.display=function(scope){if(!$rootScope.appVisible){var _notif=$notification(this.displayName,{tag:this.tag,body:this.message,icon:this.icon,delay:4e3});this.focusAction&&_notif.$on("click",this.focusAction)}this.ascope||(this.ascope=scope.$new(!0),this.ascope.notification=this,this.ascope.showIMTemplates=!1,this.ascope.showPhoneTemplates=!1,this.ascope.answerAudioButtonClick=function(notif){notif.answerClick||(notif.answerAudioButton.action(),notif.answerClick=!0)},this.ascope.divertedCallButtonClick=function(notif){if(notif.ascope.showPhoneTemplates)notif.ascope.showPhoneTemplates=!1,notif.ascope.templatesPhone=[];else{notificationSaver=notif;var templatesPhone=[];notif.divertedCallButton&&Array.isArray(notif.divertedCallButton.choice)&&notif.divertedCallButton.choice.forEach((function(item){templatesPhone.push(item)})),notif.ascope.templatesPhone=templatesPhone,notif.ascope.showPhoneTemplates=!0}},this.ascope.divertedCallWithTemplatePhone=function(template){notificationSaver.divertedCallButton.action(template.phonenumber)},this.ascope.answerVideoButtonClick=function(notif){notif.answerClick||(notif.answerVideoButton.action(),notif.answerClick=!0)},this.ascope.answerSharingButtonClick=function(notif){notif.answerClick||(notif.answerSharingButton.action(),notif.answerClick=!0)},this.ascope.declineButtonClick=function(notif){notif.declineClick||(notif.declineButton.action(),notif.declineClick=!0)},this.ascope.answerWithIMButtonClick=function(notif){if(notif.ascope.showIMTemplates)notif.ascope.showIMTemplates=!1,notif.ascope.templatesIM=[];else{notificationSaver=notif;var templatesIM=[];notif.answerWithIMButton&&Array.isArray(notif.answerWithIMButton.choice)&&notif.answerWithIMButton.choice.forEach((function(item){templatesIM.push(item)})),notif.ascope.templatesIM=templatesIM,notif.ascope.showIMTemplates=!0}},this.ascope.answerWithTemplateIM=function(template){if(!notificationSaver.answerWithTemplateIMClick){if(notificationSaver){var message="";notificationSaver.answerWithIMButton.label!==template.label&&(message=$filter("translate")(template.label)),notificationSaver.answerWithIMButton.action(message)}notificationSaver.answerWithTemplateIMClick=!0}},this.ascope.addBottomRightButtonClick=function(notif){notif.bottomRightButton.action()}),this.handler||(this.handler=notify({container:document.getElementById("leftArea"),position:"left",templateUrl:"notificationCallTemplate.html",message:this.title,duration:this.delay,startTop:80,scope:this.ascope}))},RBNotification}])}()},function(module,exports){angular.module("rainbow").factory("CallLog",[function(){"use strict";function CallLog(id,contact,state,duration,type,read,date,direction,callSubject,isLatestCall){this.id=id,this.contact=contact,this.state=state,this.duration=duration,this.direction=direction,this.callSubject=callSubject,this.isLatestCall=isLatestCall,type="unknown"===type||"audio"===type||"webrtc"===type?CallLog.Type.WEBRTC:"telephone"===type?CallLog.Type.TELEPHONE:CallLog.Type.CONFERENCE,this.type=type,this.read=read,this.date=date}return CallLog.create=function(id,contact,state,duration,type,read,date,direction,callSubject,isLatestCall){return new CallLog(id,contact,state,duration,type,read,date,direction,callSubject,isLatestCall)},CallLog.getNames=function(callLog){var result={firstname:"",lastname:""};return callLog&&callLog.contact&&(result.firstname=callLog.contact.firstname?callLog.contact.firstname.toUpperCase():"",result.lastname=callLog.contact.lastname?callLog.contact.lastname.toUpperCase():"",callLog&&callLog.date&&(result.date=callLog.date.getTime())),result},CallLog.getDate=function(callLog){return callLog&&callLog.date?callLog.date.getTime():0},CallLog.sortByContact=function(callLogA,callLogB){var res=-1;if(callLogA&&callLogA.value.lastname&&callLogB&&callLogB.value.lastname){var str1=callLogA.value.lastname,str2=callLogB.value.lastname;0===(res=str1.localeCompare(str2))&&(str1=callLogA.value.firstname,str2=callLogB.value.firstname,0===(res=str1.localeCompare(str2))&&callLogB.value.date&&callLogA.value.date&&(res=callLogB.value.date-callLogA.value.date))}return res},CallLog.sortByDate=function(callLogA,callLogB){var res=1;return callLogA&&callLogB&&(res=callLogB.value-callLogA.value),res},CallLog.Type={WEBRTC:"webrtc",TELEPHONE:"telephone",CONFERENCE:"conference"},CallLog}])},function(module,exports){!function(){"use strict";angular.module("rainbow").factory("Document",["$log","$filter",function($log,$filter){function Document(publisher,data,timestamp,authorjid,item_id,pub_id){this.publisher=publisher,this.item_id=item_id,this.data=data,this.timestamp=timestamp,this.authorjid=authorjid,this.pub_id=pub_id,$log.debug("[Document] createActu : "+this)}return Document.create=function(publisher,data){return new Document(publisher,data,Date.now(),publisher.jid)},Document.createForSharing=function(publisher,document){return console.log(document.item_id),""===document.item_id?new Document(publisher,"Repost",Date.now(),document.authorjid,document.pub_id):new Document(publisher,"Repost",Date.now(),document.authorjid,document.item_id)},Document.createFromXML=function(publisher,data){return new Document(publisher,data.childNodes[0].childNodes[0].nodeValue,parseInt(data.childNodes[1].childNodes[0].nodeValue,10),data.childNodes[2].childNodes[0].nodeValue,1!==data.childNodes[3].childNodes.length?"":data.childNodes[3].childNodes[0].nodeValue,data.parentNode.attributes.getNamedItem("id").nodeValue)},Document.prototype.messageFilter=function(message){return $filter("quoteFilter")($filter("emojione")($filter("linky")($filter("emojiUnicodeToShort")(message,"_blank"))))},Document.prototype.setPubId=function(pub_id){this.pub_id=pub_id},Document.prototype.setItemId=function(item_id){this.item_id=item_id},Document.prototype.getXML=function(){return[{data:$build("entry").c("data",this.data).up().c("timestamp",this.timestamp).up().c("jidauthor",this.authorjid).up().c("item_id",this.item_id).tree()}]},Document.prototype.getTime=function(format){return moment(this.timestamp).format(format)},Document.prototype.toString=function(){return"(jid:"+this.contact+", id:"+this.pub_id+", data:"+this.data+", tsmp:"+this.timestamp+" )"},Document}])}()},function(module,exports){angular.module("rainbow").factory("Group",[function(){"use strict";function Group(id,name,comment,isFavorite){this.id=id,this.name=name,this.comment=comment||"",this.isFavorite=isFavorite||!1,this.users=[],this.sortedUserList=[]}return Group.createFromData=function(data){return new Group(data.id,data.name,data.comment,data.isFavorite)},Group}])},function(module,exports){angular.module("rainbow").factory("Invitation",["userInfoService",function(userInfoService){"use strict";function Invitation(id,invitedUserId,invitedUserEmail,invitingUserId,invitingUserEmail,requestNotificationLanguage,invitingDate,lastNotificationDate,status,type,inviteToJoinMeeting,invitedPhoneNumber){this.id=id,this.invitedUserId=invitedUserId,this.invitedUserEmail=invitedUserEmail,this.invitedPhoneNumber=invitedPhoneNumber,this.invitingUserId=invitingUserId,this.invitingUserEmail=invitingUserEmail,this.requestNotificationLanguage=requestNotificationLanguage,this.invitingDate=invitingDate,this.lastNotificationDate=lastNotificationDate,this.status=status,this.type=type,this.defaultAvatar=null,this.inviteToJoinMeeting=inviteToJoinMeeting,this.createDefaultAvatar=function(){if(!this.defaultAvatar&&this.invitedUserEmail){var color=userInfoService.computeUserColor(this.invitedUserEmail),initials=this.invitedUserEmail.substring(0,2).toUpperCase();this.defaultAvatar=userInfoService.createDefaultAvatarImage(initials,color)}}}return Invitation.create=function(id,invitedUserId,invitedUserEmail,invitingUserId,invitingUserEmail,requestNotificationLanguage,invitingDate,lastNotificationDate,status,type,inviteToJoinMeeting){return new Invitation(id,invitedUserId,invitedUserEmail,invitingUserId,invitingUserEmail,requestNotificationLanguage,invitingDate,lastNotificationDate,status,type,inviteToJoinMeeting)},Invitation.createFromData=function(invitationData){var invitation=new Invitation(invitationData.id,invitationData.invitedUserId,invitationData.invitedUserEmail,invitationData.invitingUserId,invitationData.invitingUserEmail,invitationData.requestNotificationLanguage,invitationData.invitingDate,invitationData.lastNotificationDate,invitationData.status,invitationData.type,invitationData.inviteToJoinMeeting,invitationData.invitedPhoneNumber);return invitation.createDefaultAvatar(),invitation},Invitation}])},function(module,exports){angular.module("rainbow").factory("VoiceMail",["profileService",function(profileService){"use strict";function VoiceMail(){this.VMFlag=!1,this.VMCounter=0,this.infoMsg="",this.voiceMailFeatureEnabled=profileService.isFeatureEnabled(profileService.FeaturesEnum.TELEPHONY_VOICE_MAIL),this.setVMFlag=function(flag){this.VMFlag=flag},this.getVMFlag=function(){return this.VMFlag},this.setVMCounter=function(ct){ct>0?(this.VMFlag=!0,this.VMCounter=ct):this.VMCounter=0},this.getVMCounter=function(){return this.VMCounter},this.setInfoMsg=function(msg){this.infoMsg=msg},this.getInfoMsg=function(){return this.infoMsg},this.getDisplayState=function(){return this.voiceMailFeatureEnabled}}return VoiceMail.create=function(){return new VoiceMail},VoiceMail}])},function(module,exports){class VoiceMessage{constructor(id,contact,unread,duration,date,from,jid){this.id=id,this.contact=contact,this.unread=unread,this.duration=duration,this.date=date,this.from=from,this.jid=jid}static VoiceMessageFactory(){return(id,contact,unread,duration,date,from,jid)=>new VoiceMessage(id,contact,unread,duration,date,from,jid)}}angular.module("rainbow").factory("VoiceMessageFactory",VoiceMessage.VoiceMessageFactory)},function(module,exports){angular.module("rainbow").factory("ReplaceMsg",["$filter",function($filter){"use strict";function ReplaceMsg(id,body){this.id=id,this.body=body}return ReplaceMsg.create=function(id,body){return new ReplaceMsg(id,$filter("emojiUnicodeToShort")(body))},ReplaceMsg}])},function(module,exports){angular.module("rainbow").factory("Organisation",[function(){"use strict";function Organisation(id,name,visibility){this.id=id,this.name=name,this.visibility=visibility,this.companies=[]}return Organisation.createFromData=function(data){return new Organisation(data.id,data.name,data.visibility)},Organisation}])},function(module,exports){angular.module("rainbowAdmin").factory("Bot",[function(){"use strict";function Bot(jid,name,id,avatarId,lastAvatarUpdateDate,isBotAvatarCustomized){this.jid=jid,this.name=name,this.id=id,this.avatarId=avatarId||id,this.lastAvatarUpdateDate=lastAvatarUpdateDate,this.isAvatarCustomized=isBotAvatarCustomized}return Bot.create=function(data){return new Bot(data.jid,data.name,data.id,data.avatarId,data.lastAvatarUpdateDate,data.isBotAvatarCustomized)},Bot}])},function(module,exports){angular.module("rainbow").factory("Site",[function(){"use strict";function Site(id,name,status,companyId,settings,isCentrex){this.id=id,this.name=name||"",this.status=status||"",this.companyId=companyId||"",this.settings=settings||"",angular.isDefined(isCentrex)&&(this.isCentrex=isCentrex)}return Site.createFromData=function(data){return new Site(data.id,data.name,data.status,data.companyId,data.settings,data.isCentrex)},Site.create=function(id,name,status,companyId){return new Site(id,name,status,companyId)},Site.StatusValues=["active","alerting","hold","terminated"],Site}])},function(module,exports){angular.module("rainbow").factory("System",[function(){"use strict";function System(id,pbxId,jid_pbxagent,jid_password,pbxMainBundlePrefix,serverPingTimeout,type,status,version,siteId,country,name,jid_pbxagent_password,jid_pbxagent_password_activating,usePbxMainBundlePrefix,pbxNumberingTranslator,isCentrex,isShared,bpId,cloudpbx,hasMediaPillar,isOxoManaged){this.id=id||null,this.type=type||null,this.type!==System.TypeEnum.CLOUD_PBX&&(this.jid_pbxagent=jid_pbxagent||"",this.jid_password=jid_password||"",this.jid_pbxagent_password=jid_pbxagent_password||"",this.jid_pbxagent_password_activating=jid_pbxagent_password_activating||"",this.pbxMainBundlePrefix=pbxMainBundlePrefix||["0"],this.usePbxMainBundlePrefix=!angular.isDefined(usePbxMainBundlePrefix)||usePbxMainBundlePrefix,this.pbxNumberingTranslator=pbxNumberingTranslator||[]),this.country=country||"FRA",this.name=name||"",siteId&&(this.siteId=siteId),pbxId&&(this.pbxId=pbxId),serverPingTimeout&&(this.serverPingTimeout=serverPingTimeout),status&&(this.status=status),version&&(this.version=version),angular.isDefined(isCentrex)&&(this.isCentrex=isCentrex),angular.isDefined(isShared)&&(this.isShared=isShared),bpId&&(this.bpId=bpId),angular.isDefined(hasMediaPillar)&&(this.hasMediaPillar=hasMediaPillar),angular.isDefined(isOxoManaged)&&(this.isOxoManaged=isOxoManaged),cloudpbx?(cloudpbx.domainName&&(this.domainName=cloudpbx.domainName),cloudpbx.numberingDigits&&(this.numberingDigits=cloudpbx.numberingDigits),cloudpbx.numberingPrefix&&(this.numberingPrefix=cloudpbx.numberingPrefix),cloudpbx.outgoingPrefix&&(this.outgoingPrefix=cloudpbx.outgoingPrefix),cloudpbx.externalTrunkId&&(this.externalTrunkId=cloudpbx.externalTrunkId),cloudpbx.installationNumber&&(this.installationNumber=cloudpbx.installationNumber),cloudpbx.installationNumberId&&(this.installationNumberId=cloudpbx.installationNumberId),cloudpbx.language&&(this.language=cloudpbx.language)):(this.numberingDigits=3,this.numberingPrefix="1")}return System.createFromData=function(data){return new System(data.id,data.pbxId,data.jid_pbxagent,data.jid_password,data.pbxMainBundlePrefix,data.serverPingTimeout,data.type,data.status,data.version,data.siteId,data.country,data.name,data.jid_pbxagent_password,data.jid_pbxagent_password_activating,data.usePbxMainBundlePrefix,data.pbxNumberingTranslator,data.isCentrex,data.isShared,data.bpId,data.cloudpbx,data.hasMediaPillar,data.isOxoManaged)},System.create=function(){return new System},System.TypeValues=["oxe","oxo","third_party","cloud_pbx","oxo_managed"],System.TypeEnum={OXE:"oxe",OXO:"oxo",THIRD_PARTY:"third_party",CLOUD_PBX:"cloud_pbx",OXO_MANAGED:"oxo_managed"},System.StatusValues=["created","activating","activated"],System}]),angular.module("rainbow").filter("serverTypeFilter",[function(){"use strict";return function(input){return"oxo"===input?"OXO Connect":"oxe"===input?"OmniPCX Enterprise":"third_party"===input?"Third party PBX":"cloud_pbx"===input?"Cloud PBX":"oxo_managed"===input?"Managed OXO Connect":input}}]),angular.module("rainbow").filter("systemStateFilter",[function(){"use strict";return function(input){return"created"===input?"pending":"activating"===input?"pending":"activated"===input?"systemStatusActivated":"connected"===input?"systemStatusConnected":"disconnected"===input?"systemStatusDisonnected":"degraded"===input?"systemStatusDegraded":void 0}}]),angular.module("rainbow").filter("systemStateColorFilter",[function(){"use strict";return function(input){return"created"===input?"color_blue":"activating"===input?"color_blue":"activated"===input?"color_blue":"connected"===input?"color_green":"disconnected"===input?"color_error":"degraded"===input?"color_warning":void 0}}]),angular.module("rainbow").filter("thirdPartySystemStateFilter",[function(){"use strict";return function(input){return"created"===input?"pending":"activating"===input?"pending":"activated"===input?"systemStatusConnected":void 0}}]),angular.module("rainbow").filter("thirdPartySystemStateColorFilter",[function(){"use strict";return function(input){return"created"===input?"color_blue":"activating"===input?"color_blue":"activated"===input?"color_green":void 0}}]),angular.module("rainbow").filter("cloudPbxStateFilter",[function(){"use strict";return function(input){return"created"===input?"systemStatusConnected":"disconnected"===input?"systemStatusDisonnected":void 0}}]),angular.module("rainbow").filter("cloudPbxStateColorFilter",[function(){"use strict";return function(input){return"created"===input?"color_green":"disconnected"===input?"color_error":void 0}}]),angular.module("rainbow").filter("gatewayStateFilter",[function(){"use strict";return function(input){return"true"===input?"systemStatusConnected":"false"===input?"systemStatusDisonnected":void 0}}]),angular.module("rainbow").filter("gatewayStateColorFilter",[function(){"use strict";return function(input){return"true"===input?"color_green":"false"===input?"color_error":"new_version"===input?"color_warning":void 0}}])},function(module,exports){angular.module("rainbow").factory("SystemsGroup",[function(){"use strict";function SystemsGroup(id,name,companies,systems){this.id=id||null,this.name=name,this.companies=companies||[],this.systems=systems,this.containsSystem=function(systemId){return!!this.systems&&this.systems.some((function(system){return system.systemId===systemId}))}}return SystemsGroup.createFromData=function(data){return new SystemsGroup(data.id,data.name,data.companies,data.systems)},SystemsGroup.create=function(id,name,companies,systems){return new SystemsGroup(id,name,companies,systems)},SystemsGroup}])},function(module,exports){angular.module("rainbow").factory("User",["Subscription","userInfoService",function(Subscription,userInfoService){"use strict";function User(data,noDefaultValues){var _this=this;User.attributes.forEach((function(attribute){data&&angular.isDefined(data[attribute.name])?_this[attribute.name]=data[attribute.name]:!noDefaultValues&&angular.isDefined(attribute.defaultValue)&&(_this[attribute.name]=attribute.defaultValue)})),this.subscriptions=[],this.updateFromData=function(newData){User.attributes.forEach((function(attribute){angular.isDefined(newData[attribute.name])&&(_this[attribute.name]=newData[attribute.name])}))},this.fillSubscriptionMap=function(){var subscriptionMap={};this.subscriptions.forEach((function(subscription){subscriptionMap[subscription.id]=subscription})),this.subscriptionMap=subscriptionMap},this.fillMainSubscriptionField=function(){var exclusiveSubscriptions=this.subscriptions.filter(Subscription.isExclusive).sort(Subscription.subscriptionComparator);exclusiveSubscriptions.length>0&&(this.mainSubscription=exclusiveSubscriptions[exclusiveSubscriptions.length-1],this.mainSubscriptionName=this.mainSubscription.offerName);var optionalSubscriptions=this.subscriptions.filter(Subscription.isOptional);optionalSubscriptions.length>0&&(this.optionalSubscriptionNames=optionalSubscriptions.map((function(optionalSubscription){return optionalSubscription.offerName})).join(", ")),this.subscriptionNames=this.mainSubscriptionName+(this.optionalSubscriptionNames?", "+this.optionalSubscriptionNames:"")},this.getMainSubscription=function(){return this.mainSubscription||this.fillMainSubscriptionField(),this.mainSubscription},this.getOptionalSubscriptions=function(){return this.subscriptions.filter(Subscription.isOptional)},this.getMainSubscriptionName=function(){return this.mainSubscriptionName||this.fillMainSubscriptionField(),this.mainSubscriptionName},this.getOptionalSubscriptionNames=function(){return this.mainSubscriptionName||this.fillMainSubscriptionField(),this.optionalSubscriptionNames},this.hasUserRoleOnly=function(){return 1===this.roles.length&&-1!==this.roles.indexOf(User.RoleValues.USER)},this.isAdmin=function(){return-1!==this.roles.indexOf(User.RoleValues.ADMIN)},this.isOrganizationAdmin=function(){return!!this.isAdmin()&&"organization_admin"===this.adminType},this.isSiteAdmin=function(){return!!this.isAdmin()&&"site_admin"===this.adminType},this.isCompanyAdmin=function(){return!!this.isAdmin()&&"company_admin"===this.adminType},this.isBPAdmin=function(){return this.isBPAdminOperations()||this.isBPAdminFinance()},this.isBPAdminOperations=function(){return-1!==this.roles.indexOf(User.RoleValues.BP_ADMIN_OPERATIONS)},this.isBPAdminFinance=function(){return-1!==this.roles.indexOf(User.RoleValues.BP_ADMIN_FINANCE)},this.isSuperadmin=function(){return-1!==this.roles.indexOf(User.RoleValues.SUPERADMIN)},this.isBusinessAdmin=function(){return-1!==this.roles.indexOf(User.RoleValues.BUSINESS_ADMIN)},this.isPublicChannelsAdmin=function(){return-1!==this.roles.indexOf(User.RoleValues.PUBLIC_CHANNELS_ADMIN)},this.isAllCompanyChannelsAdmin=function(){return-1!==this.roles.indexOf(User.RoleValues.ALL_COMPANY_CHANNELS_ADMIN)},this.isClosedChannelsAdmin=function(){return-1!==this.roles.indexOf(User.RoleValues.CLOSED_CHANNELS_ADMIN)},this.isDirectoryAdmin=function(){return-1!==this.roles.indexOf(User.RoleValues.DIRECTORY_ADMIN)},this.isRainbowTv=function(){return this.isTv||-1!==this.roles.indexOf(User.RoleValues.TV)},this.computeDisplayName=function(){var nameInfo=userInfoService.getNameInformation(this.firstName,this.lastName);this.displayName=nameInfo.displayName,this.initials=nameInfo.initials},this.getPhoneNumbers=function(type,deviceType){return this.phoneNumbers?this.phoneNumbers.filter((function(phoneNumber){return phoneNumber.type===type&&phoneNumber.deviceType===deviceType})):[]},this.getSystemPhoneNumber=function(){return this.phoneNumbers?this.phoneNumbers.find((function(phoneNumber){return angular.isDefined(phoneNumber.systemId)&&phoneNumber.isFromSystem})):void 0},this.isRvcpSubscriber=function(){var userSystemPhoneNumber=this.getSystemPhoneNumber();return userSystemPhoneNumber&&"RVCP Subscriber"===userSystemPhoneNumber.deviceName},this.getActivePhoneNumber=function(type,deviceType){var filteredPhoneNumbers=this.getPhoneNumbers(type,deviceType);if(filteredPhoneNumbers.length>1){var systemPhoneNumber=filteredPhoneNumbers.find((function(phoneNumber){return angular.isDefined(phoneNumber.systemId)}));if(systemPhoneNumber)return systemPhoneNumber}return filteredPhoneNumbers[0]},this.getDdiPhoneNumber=function(type,deviceType){var filteredPhoneNumbers=this.getPhoneNumbers(type,deviceType);if(filteredPhoneNumbers.length>1){var ddiPhoneNumber=filteredPhoneNumbers.find((function(phoneNumber){return phoneNumber.isCloudPbxDDI}));if(ddiPhoneNumber||(ddiPhoneNumber=filteredPhoneNumbers.find((function(phoneNumber){return phoneNumber.isFromSystem}))),ddiPhoneNumber)return ddiPhoneNumber}return filteredPhoneNumbers[0]}}return User.createFromData=function(data,noDefaultValues){data&&data.roles&&data.roles.includes("private_channels_admin")&&data.roles.splice(data.roles.indexOf("private_channels_admin"),1,User.RoleValues.ALL_COMPANY_CHANNELS_ADMIN);var user=new User(data,noDefaultValues);return data.profiles&&(data.profiles.forEach((function(subscriptionData){var subscription=Subscription.createFromData(subscriptionData);subscription.isTerminated()||user.subscriptions.push(subscription)})),user.fillMainSubscriptionField()),user.computeDisplayName(),user},User.create=function(){return new User},User.prune=function(data,userContact){return Object.assign({},data)},User.VisibilityValues=["same_than_company","public","private"],User.FileSharingCustomisationLevels=[{value:"same_than_company",label:"same_than_company"},{value:"enabled",label:"authorized"},{value:"disabled",label:"notAuthorized"}],User.UserTitleNameAccessLevels=[{value:"same_than_company",label:"same_than_company"},{value:"enabled",label:"authorized"},{value:"disabled",label:"notAuthorized"}],User.RoleValues={USER:"user",GUEST:"guest",SUPERADMIN:"superadmin",SUPPORT:"support",BUSINESS_ADMIN:"business_admin",ADMIN:"admin",BP_ADMIN_OPERATIONS:"bp_admin",BP_ADMIN_FINANCE:"bp_finance",DIRECTORY_ADMIN:"directory_admin",PUBLIC_CHANNELS_ADMIN:"public_channels_admin",ALL_COMPANY_CHANNELS_ADMIN:"all_company_channels_admin",CLOSED_CHANNELS_ADMIN:"closed_channels_admin",TV:"tv"},User.LoginPolicies=[{value:"RAINBOW",label:"rainbowLoginCredentials"},{value:"SAML",label:"ssoLoginCredentialsSAML",isSSO:!0},{value:"OIDC",label:"ssoLoginCredentialsOIDC",isSSO:!0},{value:"DEFAULT",label:"defaultLogin"}],User.attributes=[{name:"id",defaultValue:null},{name:"loginEmail",defaultValue:""},{name:"firstName",defaultValue:""},{name:"lastName",defaultValue:""},{name:"displayName",defaultValue:""},{name:"nickName",defaultValue:""},{name:"title",defaultValue:""},{name:"jobTitle",defaultValue:""},{name:"companyId",defaultValue:""},{name:"companyName",defaultValue:""},{name:"siteId",defaultValue:""},{name:"systemId",defaultValue:""},{name:"accountType",defaultValue:"free"},{name:"country",defaultValue:"FRA"},{name:"timezone",defaultValue:"Europe/Paris"},{name:"emails",defaultValue:[]},{name:"phoneNumbers",defaultValue:[]},{name:"roles",defaultValue:["user"]},{name:"adminType",defaultValue:"company_admin"},{name:"isActive",defaultValue:!1},{name:"isInitialized",defaultValue:!1},{name:"isTv",defaultValue:void 0},{name:"password",defaultValue:void 0},{name:"jid_im",defaultValue:""},{name:"jid_tel",defaultValue:""},{name:"language",defaultValue:"en"},{name:"lastAvatarUpdateDate",defaultValue:null},{name:"visibility",defaultValue:void 0},{name:"authenticationType",defaultValue:void 0},{name:"tags",defaultValue:void 0},{name:"userInfo1",defaultValue:void 0},{name:"userInfo2",defaultValue:void 0},{name:"fileSharingCustomisation",defaultValue:void 0},{name:"userTitleNameCustomisation",defaultValue:void 0}],User}])},function(module,exports){angular.module("rainbow").factory("Subscription",["Offer",function(Offer){"use strict";function Subscription(id,offerId,offerName,offerDescription,groupName,offerReference,profileId,profileName,maxNumberUsers,numberAssignedUsers,status,syncOngoing,updatingMaxNumberUsers,nbBPLicences,nbAssignedBPUsers,nbLicencesAssignedToECs,nbLicencesUsed,nbFreeLicences,businessModel,canBeSold,isDefault,isExclusive,isPrepaid,prepaidDuration,expirationDate,autoRenew,renewalTermOption,hasConference,hasVoice,isDemo,isChinaOffer){this.id=id,this.offerId=offerId,this.offerName=offerName||"",this.offerDescription=offerDescription||"Rainbow "+this.offerName,this.groupName=groupName||offerName,this.offerReference=offerReference,this.profileId=profileId,this.profileName=profileName,this.maxNumberUsers=maxNumberUsers,this.numberAssignedUsers=numberAssignedUsers,this.status=status,this.syncOngoing=syncOngoing||!1,this.updatingMaxNumberUsers=updatingMaxNumberUsers,void 0!==nbBPLicences&&(this.nbBPLicences=nbBPLicences),void 0!==nbAssignedBPUsers&&(this.nbAssignedBPUsers=nbAssignedBPUsers),void 0!==nbLicencesAssignedToECs&&(this.nbLicencesAssignedToECs=nbLicencesAssignedToECs),void 0!==nbLicencesUsed&&(this.nbLicencesUsed=nbLicencesUsed),void 0!==nbFreeLicences&&(this.nbFreeLicences=nbFreeLicences),this.businessModel=businessModel,this.canBeSold=canBeSold,this.isDefault=isDefault,this.isExclusive=isExclusive,this.isPrepaid=isPrepaid,this.prepaidDuration=prepaidDuration,this.expirationDate=expirationDate,this.autoRenew=autoRenew,this.renewalTermOption=renewalTermOption,this.hasConference=hasConference,this.hasVoice=hasVoice,this.isDemo=void 0===isDemo?!this.isDefault&&!this.canBeSold&&this.offerName.toLowerCase().includes("demo"):isDemo,this.isChinaOffer=isChinaOffer,this.isEnterprise=function(){return this.offerName.toLowerCase().startsWith("enterprise")},this.isBusiness=function(){return this.offerName.toLowerCase().startsWith("business")},this.isEssential=function(){return this.offerName.toLowerCase().startsWith("essential")},this.isTrial=function(){return this.isDemo},this.isTerminated=function(){return"terminated"===this.status},this.isTerminating=function(){return"terminating"===this.status},this.isUserLicense=function(){return this.isDefault||"nb_users"===this.businessModel||"usage"===this.businessModel}}return Subscription.createFromData=function(data){return new Subscription(data.id?data.id:data.subscriptionId,data.offerId,data.offerName,data.offerDescription,data.groupName,data.offerReference,data.profileId,data.profileName,data.maxNumberUsers,data.numberAssignedUsers,data.status,data.syncOngoing,data.updatingMaxNumberUsers,data.nbBPLicences,data.nbAssignedBPUsers,data.nbLicencesAssignedToECs,data.nbLicencesUsed,data.nbFreeLicences,data.businessModel,data.canBeSold,data.isDefault,data.isExclusive,data.isPrepaid,data.prepaidDuration,data.expirationDate,data.autoRenew,data.renewalTermOption,data.hasConference,data.hasVoice,data.isDemo,data.isChinaOffer)},Subscription.subscriptionComparator=function(subscription1,subscription2){var offer1=new Offer(subscription1.offerId,subscription1.offerName,subscription1.offerDescription,subscription1.groupName,subscription1.offerReference,subscription1.profileId,subscription1.canBeSold,subscription1.businessModel,subscription1.isDefault,subscription1.isExclusive,subscription1.isPrepaid,subscription1.prepaidDuration,subscription1.autoSubscribe,subscription1.hasConference,subscription1.hasVoice,subscription1.isDemo,subscription1.isBundle,subscription1.isChinaOffer),offer2=new Offer(subscription2.offerId,subscription2.offerName,subscription2.offerDescription,subscription2.groupName,subscription2.offerReference,subscription2.profileId,subscription2.canBeSold,subscription2.businessModel,subscription2.isDefault,subscription2.isExclusive,subscription2.isPrepaid,subscription2.prepaidDuration,subscription2.autoSubscribe,subscription2.hasConference,subscription2.hasVoice,subscription2.isDemo,subscription2.isBundle,subscription2.isChinaOffer);return Offer.offerComparator(offer1,offer2)},Subscription.isUserLicense=function(subscription){return subscription.isDefault||"nb_users"===subscription.businessModel||"usage"===subscription.businessModel},Subscription.isTvLicense=function(subscription){return"Room"===subscription.groupName},Subscription.excludeTvLicense=function(subscription){return!Subscription.isTvLicense(subscription)},Subscription.isExclusive=function(subscription){return subscription.isDefault||subscription.isExclusive},Subscription.isOptional=function(subscription){return!Subscription.isExclusive(subscription)},Subscription.isConference=function(subscription){return Subscription.isOptional(subscription)&&(subscription.hasConference||"usage"===subscription.businessModel)},Subscription.isNotConference=function(subscription){return Subscription.isOptional(subscription)&&!(subscription.hasConference||"usage"===subscription.businessModel)},Subscription.withLicenses=function(subscription){return subscription.isDefault||"usage"===subscription.businessModel||"nb_users"===subscription.businessModel&&subscription.maxNumberUsers>0},Subscription.isPrepaid=function(subscription){return subscription.isPrepaid},Subscription.isMonthly=function(subscription){return!subscription.isPrepaid},Subscription}])},function(module,exports){angular.module("rainbow").factory("IceServer",[function(){"use strict";function IceServer(id,urls,username,credential){this.id=id,this.urls=urls,this.username=username,this.credential=credential}return IceServer.createFromData=function(data){return new IceServer(data.id,data.urls,data.username,data.credential)},IceServer}])},function(module,exports){angular.module("rainbow").factory("PhoneNumber",[function(){"use strict";function PhoneNumber(id,shortNumber,number,numberE164,pbxUserId,userId,type,deviceType,pbxId,isFromSystem,isMonitored,systemId,country,voiceMailNumber,deviceName,firstName,lastName,internalNumber,isCloudPbxDDI,isCloudPbxDefault,password){this.id=id,this.shortNumber=shortNumber,this.number=number,this.numberE164=numberE164,this.pbxUserId=pbxUserId,this.userId=userId,this.type=type,this.deviceType=deviceType,this.pbxId=pbxId,this.isFromSystem=isFromSystem,this.isMonitored=isMonitored,this.systemId=systemId,this.country=country,this.voiceMailNumber=voiceMailNumber,this.deviceName=deviceName,this.firstName=firstName,this.lastName=lastName,this.internalNumber=internalNumber,angular.isDefined(isCloudPbxDDI)&&(this.isCloudPbxDDI=isCloudPbxDDI),angular.isDefined(isCloudPbxDefault)&&(this.isCloudPbxDefault=isCloudPbxDefault),password&&(this.password=password)}return PhoneNumber.SelectTypeEnum={EXTENSION:"extension",EXTENSION_CLOUD:"extension-cloud",GROUP_CLOUD:"group-cloud",DDI_CLOUD:"ddi-cloud",FREE_DDI_CLOUD:"free-ddi-cloud",FREE_DDI_GROUP_CLOUD:"free-ddi-group-cloud"},PhoneNumber.createFromData=function(data){return new PhoneNumber(data.id?data.id:data.phoneNumberId,data.shortNumber,data.number,data.numberE164,data.pbxUserId,data.userId,data.type,data.deviceType,data.pbxId,data.isFromSystem,data.isMonitored,data.systemId,data.country,data.voiceMailNumber,data.deviceName,data.firstName,data.lastName,data.internalNumber,data.isCloudPbxDDI,data.isCloudPbxDefault,data.password)},PhoneNumber}])},function(module,exports){angular.module("rainbow").service("helpersService",[function(){"use strict";this.chars="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz",this.findIndex=function(array,predicate){return array.findIndex(predicate)},this.checkBrowser=function(browser){return-1!==navigator.userAgent.indexOf(browser)},this.randomString=function(length){length=length||10;for(var rnd,string="";length>0;)rnd=Math.floor(Math.random()*this.chars.length),string+=this.chars.charAt(rnd),length--;return string}}])},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var crypto_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(2);angular.module("rainbow").service("userInfoService",["$q","$log","$interval","$rootScope","settingsService",function($q,$log,$interval,$rootScope,settingsService){var service=this;service.userColors=["#ff4500","#d38700","#348833","#007356","#00b2a9","#00b0e5","#0085ca","#6639b7","#91278a","#cf0072","#a50034","#d20000"],service.getAvatarImage=function(objId,initials,color,size,lastAvatarUpdate){return $q((function(resolve){lastAvatarUpdate=void 0!==lastAvatarUpdate&&lastAvatarUpdate;var defaultAvatarImage=initials?service.createDefaultAvatarImage(initials,color):null;if(lastAvatarUpdate){var serverURL=config.webservices.protocol+"://"+config.webservices.currentServer;$rootScope.cdn&&(serverURL=$rootScope.cdnServer);var imgSrc=serverURL+"/api/avatar/"+objId+"?size="+(size||256);lastAvatarUpdate&&(imgSrc+="&update="+Object(crypto_js__WEBPACK_IMPORTED_MODULE_0__.MD5)(crypto_js__WEBPACK_IMPORTED_MODULE_0__.enc.Latin1.parse(lastAvatarUpdate)).toString(crypto_js__WEBPACK_IMPORTED_MODULE_0__.enc.Hex));var image=new Image;image.onload=function(){var loadedImage=this;$interval((function(){$log.log("[avatarService] Load avatar for "+objId+" success"),resolve(loadedImage)}),1,1)},image.onerror=function(){$interval((function(){$log.warn("[avatarService] Load avatar for "+objId+" failure : use text avatar"),resolve(defaultAvatarImage)}),1,1)},image.src=imgSrc}else resolve(defaultAvatarImage)}))},service.getNameInformation=function(firstName,lastName){var result={displayName:"",initials:""};return 1!==lastName.length&&2!==firstName.length?"FL"===settingsService.getSetting("displayOrder")?(result.displayName=firstName+" "+lastName,result.initials=firstName.charAt(0).toUpperCase()+lastName.charAt(0).toUpperCase()):(result.displayName=lastName+" "+firstName,result.initials=lastName.charAt(0).toUpperCase()+firstName.charAt(0).toUpperCase()):("FL"===settingsService.getSetting("displayOrder")?result.displayName=firstName+" "+lastName:result.displayName=lastName+" "+firstName,result.initials=firstName.charAt(0).toUpperCase()+firstName.charAt(1).toUpperCase()),result},service.createDefaultAvatarImage=function(initials,color){var image=new Image,canvas=document.createElement("canvas");canvas.width=image.width=225,canvas.height=image.height=225;var ctx=canvas.getContext("2d");return ctx.rect(0,0,225,225),ctx.fillStyle=color,ctx.fill(),ctx.font="bold 100px Helvetica",ctx.textAlign="center",ctx.fillStyle="white",ctx.fillText(initials,110,150),image.src=canvas.toDataURL("image/png"),image},service.computeUserColor=function(displayName){try{for(var result={colorIndex:0,color:service.userColors[0]},upperCaseDisplayName=displayName.toUpperCase(),sum=0,i=0;i<upperCaseDisplayName.length;i++)sum+=upperCaseDisplayName.charCodeAt(i);result.colorIndex=sum%12,result.color=service.userColors[result.colorIndex]}catch(error){$log.error("[UserInfoService] computeUserColor failure"),result.colorIndex=1,result.color=service.userColors[result.colorIndex]}return result}}])},function(module,exports){angular.module("rainbow").service("errorHelperService",["$filter",function($filter){"use strict";var service=this;service.ErrorCodeLabels={"-1":"unknownError",0:"errorNoServerResponse",400:"Bad request",4e5:"Bad request",400210:"invalidPhoneNumber",400400:"errorWrongPassword",400500:"invalidFile",400504:"companyNameAlreadyExist",400505:"BPCompanyWithoutPaymentConfigurationData",400506:"NoActiveSubscriptionToOffer",400511:"ActiveDirectoryDomainAlreadyUsed",400552:"BPCompanyAndECCompanyMustNotBeSame",400973:"noCreateUserPermission",400975:"userAlreadyExistsInOtherCompany",400983:"userAlreadyExistsInOtherCompany",400990:"noUserFound",400993:"noUserFound",401:"Authorization failure",401102:"Authorization failure",401202:"errorInvalidToken",401500:"errorUnauthorized",401501:"errorLoginForbidden",401510:"errorUnauthorized",401520:"errorUserNotActive",401521:"errorUserNotActive",403:"Forbidden",403e3:"accessDeniedNotRequiredRole",403001:"accessDeniedNotOwner",403034:"cantDeselectDefaultWebRTCGateway",403035:"cantDeleteDefaultWebRTCGateway",403060:"confLockMsg",403072:"errorIsoMd5Mismatch",403200:"notAllowedToChangeRole",403203:"notAllowedToChangeRole",403204:"notAllowedToMoveExistingUserToThisCompany",403205:"notAllowedToManageUser",403301:"notAllowedToManageCompany",403304:"notAllowedToAddAnotherAdmin",403311:"errorRemoveSyncOngoingSubscriptionForbidden",403315:"errorRemoveSubscriptionForbidden",403316:"errorRemoveAdminAllocatedSubscriptionForbidden",403317:"errorRemoveClientAllocatedSubscriptionForbidden",403500:"notAllowedBlacklistedEmail",403501:"notAllowedBlacklistedEmail",403503:"NotAllowedSelfRegistrationEmail",403504:"notAllowedLoggedInUserEmail",403507:"notAllowedSupportEmail",403513:"companyNotABpCompany",403516:"companyNotABpCompany",403517:"companySeenAsTerminated",403518:"companyBpTypeIncompatible",403519:"companyAlreadyLinkedToBp",403520:"companyNotVadBp",403531:"resetPasswordBlocked",403532:"resetPasswordForbidden",403608:"errorAssignSubscriptionSyncOngoing",403609:"errorAssignSubscriptionSyncOngoing",403610:"maxSubscriptionAllocationReached",403611:"notAllowedToCreateAnEquipment",403615:"maximumNumberConferenceParticipantsReach",403616:"subscriptionCompanyAdminEssentialAlreadyExists",403617:"roleCompanyAdminEssentialAlreadyExists",403620:"MaximumNumberRoomUsersReach",403621:"MaximumNumberConvUsersReach",403624:"notAllowedRemoveService",403625:"errorAllocatedSubscriptionRemoveForbidden",403626:"restrictedConvAccess",403630:"uploadErrorMaxQuotaReached",403655:"userAlreadyCompanyMember",403700:"errorDeleteSiteWithSystems",403701:"errorDeleteOrganisationLinkedCompany",403702:"errorDeleteCompanyWithSubscriptions",403703:"errorDeleteCompanyWithSites",403704:"errorDeleteCompanyWithUsers",403705:"errorDeleteCompanyStillTerminated",403706:"errorRemoveBusinessPartnerRole",403719:"externalTrunkChangeForbidden",403721:"numberingPlanCantBeUpdated",403722:"outgoingPrefixChangeForbidden",403723:"cannotRemoveCompanyPublicNumber",403724:"notAllowedDeleteCloudPbxWithPublicNumbers",403725:"notAllowedDeleteCloudPbxWithUsedExtensions",404:"resourceNotFound",404e3:"resourceNotFound",404001:"resourceNotFoundUpdateImpossible",404002:"resourceNotFoundDeleteImpossible",404116:"archivedOrDeletedConversation",404300:"noValidOfferReferenceInACTISFile",404301:"offerNotFound",409e3:"userAlreadyCreated",409011:"noMessagesToExport",409552:"internalNumberAlreadyUsed",409557:"notAllowedDeleteUserAssociatedToCloudPbx",409600:"userAlreadyExist",409601:"invitationReSentConflict",409602:"userAlreadyNetworkMember",409603:"invitationReSentConflict",409620:"offerAlreadySubscribed",409623:"conferenceOfferAlreadySubscribed",409625:"errorUpdateSyncOngoingSubscriptionForbidden",409800:"companyNotIrBp",409801:"companyNotLinkedToBp",409802:"actisCompanyAdminMismatch",409803:"actisCompanyNameMismatch",413e3:"uploadErrorTooLarge",500:"errorInternalServerError",1001:"extensionNotLinkedToEquipment",1002:"extensionHasNoIdentifier",1003:"extensionDoesNotExist",1004:"extensionLookupFailure",1005:"extensionConflict",1006:"nonUniqueEquipmentForExtension",1007:"userAlreadyAssociatedToExtension",1008:"extensionAssociatedToAnotherUser",1009:"failedToAttachExtension",1010:"userHasNoExtension",1011:"userHasTooManyExtensions",1012:"failedToDetachExtension"},service.portalErrorCodeLabels={massprovisioning:{4e5:"invalidValue",400501:"invalidFile",400502:"invalidColumnName",400504:"invalidFile",400506:"invalidValueInActionColumn",400600:"deviceTypeCannotBeUpdated",400601:"duplicateDeviceIds",400602:"duplicateMacAdresses",400603:"invalidDeviceTypes",400604:"missingDeviceTypeInLines",400605:"invalidEquipment",403610:"errorMaxSubscriptionReached",404600:"deviceDoesNotExist",404601:"noCloudPbxInCompany",409555:"sipDeviceAlreadyExistsWithMacAddress"},rvcpprovisioning:{403622:"noVoiceLicenceAllocatedToUser",403728:"forbiddenOperationEquipmentHasDevices",409556:"companyHasAlreadyACloudPbx"},authentication:{401102:"Authorization failure",401103:"Authorization failure",401500:"Authorization failure",401520:"Forbidden",401521:"Forbidden",401522:"Forbidden",401523:"Forbidden",401530:"Authorization failure",401600:"Authorization failure",401700:"Authorization failure",403e3:"Authorization failure",5e5:"errorInternalServerError",503e3:"resourceNotFound"}},service.handleErrorMessage=function(response,context){service.getErrorFullMessage(response,context)},service.handleError=function(response,params){var portal=service.getPortal(response),errorDetailsCode=response.status;response.data&&response.data.errorDetailsCode&&(errorDetailsCode=response.data.errorDetailsCode);var error=new Error(service.getDetailedErrorMessage(response));return error.status=response.status,error.fieldErrors=service.getBadRequestFieldErrors(response),error.errorDetailsCode=errorDetailsCode,error.errorDetailsLabel=service.getErrorCodeLabel(errorDetailsCode,portal),error.translatedMessage=service.getTranslatedErrorMessage(response,params,portal),error.portal=portal,error},service.getPortal=function(response){var url=response.config?response.config.url:void 0,res=url?url.match(/api\/rainbow\/(\w+)\//):void 0;return res?res[1]:void 0},service.getBadRequestFieldErrors=function(response){var fieldErrors={};if(400===response.status){if(response.data&&response.data.errorDetails instanceof Array)response.data.errorDetails.forEach((function(details){fieldErrors[details.param]||(fieldErrors[details.param]={ok:!1,message:details.msg,value:details.value})}));else if(response.data&&response.data.errorDetails&&response.data.errorDetails.param){var details=response.data.errorDetails;fieldErrors[details.param]={ok:!1,message:details.msg,value:details.value}}response.data&&400511===response.data.errorDetailsCode&&(fieldErrors.office365Tenant={ok:!1,message:service.ErrorCodeLabels[400511]})}return fieldErrors},service.getErrorMessage=function(response){var errorMessage=service.getStatusErrorMessage(response);return response.data&&response.data.errorMsg&&(errorMessage="",response.data.errorDetails?response.data.errorDetails instanceof Array?errorMessage+="one or more fields are invalid":response.data.errorDetails.msg?errorMessage+=response.data.errorDetails.msg:errorMessage+=response.data.errorDetails:errorMessage+=response.data.errorMsg),errorMessage},service.getStatusErrorMessage=function(response){return 500===response.status?"Internal server error":415===response.status?"Unsupported Media Type":413===response.status?"Request Entity Too Large":404===response.status?"Resource not found":403===response.status?"Access is forbidden":401===response.status?"Authorization failure":400===response.status?"Bad request":response.statusText?response.statusText:"Unknown error"},service.getDetailedErrorMessage=function(response){var errorMessage=service.getErrorMessage(response);return response.data&&response.data.errorDetails&&response.data.errorDetails instanceof Array&&response.data.errorDetails.length>0&&(errorMessage+=" : "+response.data.errorDetails[0].msg),errorMessage},service.getTranslatedErrorMessage=function(response,params,portal){if(500===response.status)return service.getLocalizedError("500");var errorDetailsCode=null;response.data&&response.data.errorDetailsCode&&(errorDetailsCode=response.data.errorDetailsCode);var errorDetailsData=null;return errorDetailsData=response.data&&response.data.errorDetailsData?Object.assign(response.data.errorDetailsData,params):params,service.getTranslatedErrorMessageByDetailsCode(errorDetailsCode,errorDetailsData,service.getErrorMessage(response),portal)},service.getTranslatedErrorMessageByDetailsCode=function(errorDetailsCode,errorDetailsParams,errorInfoMessage,portal){var errorMessage;return errorDetailsCode&&(errorMessage=service.getLocalizedError(errorDetailsCode,errorDetailsParams,portal)),errorMessage||(errorMessage=errorDetailsCode?$filter("translate")("anErrorOccurred",{errorcode:errorDetailsCode}):$filter("translate")("anErrorOccurred"),errorInfoMessage&&(errorMessage+=" ("+$filter("translate")(errorInfoMessage)+")")),errorMessage},service.getLocalizedError=function(errorCode,params,portal){var errorMessage;if(errorCode){var errorLabel=service.getErrorCodeLabel(errorCode,portal);if(errorLabel){var translation=$filter("translate")(errorLabel,params);translation!==errorLabel&&(errorMessage=translation)}}return errorMessage},service.getErrorCodeLabel=function(errorCode,portal){return portal&&service.portalErrorCodeLabels[portal]&&service.portalErrorCodeLabels[portal][errorCode]?service.portalErrorCodeLabels[portal][errorCode]:service.ErrorCodeLabels[errorCode]},service.getErrorFullMessage=function(response,context){var errorMessage=context?context+" failure : ":"";return response&&response.data?(errorMessage+=response.data.errorMsg,response.data.errorDetails&&(errorMessage+=" - ",response.data.errorDetails instanceof Array?response.data.errorDetails.forEach((function(details){errorMessage+=details.msg})):response.data.errorDetails.msg?errorMessage+=JSON.stringify(response.data.errorDetails.msg):errorMessage+=response.data.errorDetails)):errorMessage+="Unknow error - Something goes really wrong",errorMessage}}])},function(module,exports){angular.module("rainbow").service("pushImageHelperService",["$log","$q","$http","authService","errorHelperService",function($log,$q,$http,authService,errorHelperService){"use strict";var service=this;service.pushImage=function(pushServiceURL,avatarImg,params){return $q((function(resolve,reject){var resizePromise=null;if(params&&params.nosize)resizePromise=function(){var image=new Image;return image.src=avatarImg,$q.when(image)};else{var width=params&&params.width?params.width:512,height=params&&params.height?params.height:512;resizePromise=function(){return service.resizeImage(avatarImg,width,height)}}resizePromise().then((function(resizedImage){var binaryData=service.getBinaryData(resizedImage);$http({method:"POST",url:pushServiceURL,headers:authService.getPostHeader("image/"+binaryData.type),data:binaryData.data,transformRequest:[]}).then((function(){$log.info("[pushImageHelperService] pushImage : success"),resolve()}),(function(response){var error=errorHelperService.handleError(response);reject(error),$log.error("[pushImageHelperService] "+errorHelperService.getErrorFullMessage(response,"pushImage"))}))}))}))},service.resizeImage=function(avatarImg,maxWidth,maxHeight){return $q((function(resolve){var image=new Image;image.src=avatarImg,image.onload=function(){var imageWidth=image.width,imageHeight=image.height;imageWidth>imageHeight?imageWidth>maxWidth&&(imageHeight*=maxWidth/imageWidth,imageWidth=maxWidth):imageHeight>maxHeight&&(imageWidth*=maxHeight/imageHeight,imageHeight=maxHeight);var canvas=document.createElement("canvas");canvas.width=imageWidth,canvas.height=imageHeight,image.width=imageWidth,image.height=imageHeight,canvas.getContext("2d").drawImage(this,0,0,imageWidth,imageHeight);var resizedImage=new Image;resizedImage.src=canvas.toDataURL("image/png"),resolve(resizedImage)}}))},service.getBinaryData=function(image){for(var typeIndex=image.src.indexOf("image/")+6,binaryIndex=image.src.indexOf(";base64,"),binaryData=image.src.slice(binaryIndex+8),imageType=image.src.slice(typeIndex,binaryIndex),binary_string=window.atob(binaryData),len=binary_string.length,bytes=new Uint8Array(len),i=0;i<len;i++)bytes[i]=binary_string.charCodeAt(i);return{type:imageType,data:bytes}}}])},function(module,exports){angular.module("rainbow").service("$localStorage",["$q",function($q){"use strict";this.get=function(keys){for(var result={},i=0;i<keys.length;i++)result[keys[i]]=localStorage.getItem(keys[i]);return $q.when(result)},this.set=function(object){for(var keys=Object.keys(object),i=0;i<keys.length;i++)localStorage.setItem(keys[i],object[keys[i]]);return $q.when()},this.remove=function(keys){for(var i=0;i<keys.length;i++)localStorage.removeItem(keys[i]);return $q.when()}}])},function(module,exports){angular.module("rainbow").service("authService",["$http","$q","$window","$log","$localStorage","$interval","$rootScope","$translate","jwtHelper","settingsService","AuthSettings",function($http,$q,$window,$log,$localStorage,$interval,$rootScope,$translate,jwtHelper,settingsService,AuthSettings){"use strict";var service=this;try{window.SHA256=CryptoJS.SHA256}catch(e){}service.onInit=function(){$log.info("[authService] === INITIALIZATION ==="),service.SSO_LOGIN_POPUP_WINDOW_NAME="Single Sign-On Login",service.login=null,service.token=null,service.jidIm=null,service.jidTel=null,service.jidPwd=null,service.initialized=null,service.renewAppTokenInterval=null,service.renewTokenInterval=null,service.userData=null,service.firstUse=null===localStorage.getItem("firstUse"),service.browserFingerprint=null,service.isGuest=!1,service.logingItself=!1,service.trueLoging=!1,config.appModuleKey||(config.appModuleKey=angular.module("rainbow").moduleIds?angular.module("rainbow").moduleIds.join(""):"default"),service.sdkHostForced=null,service.appToken=null,service.fromSDK=!1,service.firstUseNewVersion=!1;var storedVersion=localStorage.getItem("version");service.getMajorVersion(storedVersion)!==service.getMajorVersion(version)&&(service.firstUseNewVersion=!0),$localStorage.set({version:version})},service.getMajorVersion=function(version){if(!version)return null;var result=/\d+\.\d+/g.exec(version);return result&&result.length>0?result[0]:null},service.registerEventsHandler=function(){service.visibilityHandlerRemoval&&service.visibilityHandlerRemoval(),service.visibilityHandlerRemoval=$rootScope.$on("ON_APP_VISIBLE_CHANGE_EVENT",(function(__event,visible){visible&&service.startTokenSurvey()}))},service.isInitialized=function(){return service.initialized},service.isFirstUse=function(){return service.firstUse},service.getRequestHeader=function(){var headers={Authorization:"Bearer "+service.token,Accept:"application/json"};return service.fromSDK&&service.appToken,headers},service.getRequestHeaderWithRange=function(range){var header=service.getRequestHeader();return header.Range=range,header},service.getPostHeader=function(contentType){var header=service.getRequestHeader(),type=contentType||"application/json";return header["Content-Type"]=type,header},service.getPostHeaderWithRange=function(range,contentType){var header=service.getPostHeader(contentType);return header["Content-Range"]=range,header},service.authenticateOnHost=function(login,password,host,appToken,token){return service.sdkHostForced=host,service.appToken=appToken,service.fromSDK=!0,token?(config.xmpp.currentServer=service.sdkHostForced,config.webservices.currentServer=service.sdkHostForced,config.restServerUrl=config.webservices.protocol+"://"+config.webservices.currentServer+":"+config.webservices.port,service.authenticateWithToken(token)):service.authenticate(login,password,!1)},service.authenticate=function(login,password,rememberMe,authSettings){return $q((function(resolve,reject){if($log.info('[authService] authenticate with "'+login+'"'),service.validateLogin(login))service.getLocalStorageAuthInfo(!1).then((function(){return service.logon(login,password,rememberMe,authSettings)})).then((function(){service.registerEventsHandler(),resolve()})).catch((function(error){$log.error("[authService] authenticate failure -- "+error.message),reject(error)}));else{reject(new RBError('authenticate for login "'+login+'" failure : ',"errorUnauthorized",401500,null))}}))},service.getUserEnvironments=function(login){return config.multiEnvServer?new Promise((function(resolve){config.defaultEnvironment||(config.defaultEnvironment=config.xmpp.server);var url=config.webservices.protocol+"://"+config.multiEnvServer+":"+config.webservices.port+"/api/rainbow/multienvironments/v1.0/environments?loginEmail="+encodeURIComponent(login);$http({method:"GET",url:url,timeout:15e3}).then((function(response){response&&response.data&&response.data.data&&resolve(response.data.data)})).catch((function(error){var errorMessage='getUserEnvironments for login "'+login+'" failure : ';error||(errorMessage+="Ultimate unknown error"),0===error.status||-1===error.status?errorMessage+="No server response":500===error.status&&(errorMessage+=error.data.errorDetails),$log.info("[authService] "+errorMessage),$log.info("[authService] getUserEnvironment -- continue with default environment"),resolve()}))})):Promise.resolve([{environmentApiUrl:"https://"+config.xmpp.server}])},service.getUserAuthenticationSettings=function(login,inAppAuth){return $q((function(resolve,reject){var defaultLoginUrl=config.webservices.protocol+"://"+config.webservices.currentServer+":"+config.webservices.port+"/api/rainbow/authentication/v1.0/login";if(inAppAuth){var authSettings=AuthSettings.createFromData([{type:"RAINBOW",loginUrl:defaultLoginUrl}]);resolve(authSettings)}else{var headers={};service.setInformationHeaders(headers),$http({method:"GET",url:config.webservices.protocol+"://"+config.webservices.currentServer+":"+config.webservices.port+"/api/rainbow/authentication/v1.0/urls?uid="+encodeURIComponent(login),headers:headers,timeout:15e3}).then((function(response){var authSettings=AuthSettings.createFromData(response.data.data);authSettings.setParameter("uid",(function(){return login})),authSettings.setParameter("x-rainbow-app-auth",service.getRainbowAppAuth.bind(this,config.rainbowApiClientKey,config.appModuleKey)),!$window||-1===$window.location.href.indexOf("localhost")&&-1===$window.location.href.indexOf("openrainbow.red")||authSettings.setParameter("safetyUrl",(function(){return defaultLoginUrl})),resolve(authSettings)}),(function(response){var errorMessage='authenticate for login "'+login+'" failure : ',errorStatus="errorUltimateUnknownError";response||(errorMessage+="Ultimate unknown error"),0===response.status||-1===response.status?(errorMessage+="No server response",errorStatus="errorNoServerResponse"):400===response.status||404===response.status?(errorMessage+=response.data.errorDetails,errorStatus="noMatchingAccount"):500===response.status&&(errorMessage+=response.data.errorDetails,errorStatus="errorInternalServerError"),$log.info("[authService] "+errorMessage),reject(new RBError(errorMessage,errorStatus))}))}}))},service.getBasicAuthorizationCredentials=function(login,password){return $window.btoa(unescape(encodeURIComponent((login||"")+":"+(password||""))))},service.getRainbowAppAuth=function(appId,appSecret,password){return $window.btoa(unescape(encodeURIComponent((appId||"")+":"+SHA256((appSecret||"")+(password||"")))))},service.logon=function(login,password,rememberMe,authSettings){return $q((function(resolve,reject){var headers={Authorization:"Basic "+$window.btoa(unescape(encodeURIComponent(login+":"+password))),Accept:"application/json"};service.setInformationHeaders(headers),config.rainbowApiClientKey&&(headers["x-rainbow-app-auth"]="Basic "+$window.btoa(unescape(encodeURIComponent(config.rainbowApiClientKey+":"+SHA256(config.appModuleKey+password))))),service.fromSDK&&service.appToken&&service.appToken.appID&&(headers["x-rainbow-app-auth"]="Basic "+$window.btoa(unescape(encodeURIComponent(service.appToken.appID+":"+SHA256(service.appToken.appSecret+password)))));var url=config.webservices.protocol+"://"+config.webservices.currentServer+":"+config.webservices.port+"/api/rainbow/authentication/v1.0/login";if(authSettings)switch(authSettings.type){case"RAINBOW":url=authSettings.loginUrl;break;case"SAML":case"OIDC":default:authSettings.safetyUrl&&(url=authSettings.safetyUrl)}$http({method:"GET",withCredentials:!0,url:url,headers:headers,timeout:15e3}).then((function(response){$log.info('[authService] authenticate with "'+login+'" success'),$rootScope.disconnected=!1,service.userData=response.data.loggedInUser,service.token=response.data.token,service.userId=response.data.loggedInUser.id,service.login=response.data.loggedInUser.loginEmail,service.jidIm=response.data.loggedInUser.jid_im,service.jidTel=response.data.loggedInUser.jid_tel,service.jidPwd=response.data.loggedInUser.jid_password,service.initialized=response.data.loggedInUser.isInitialized,service.companyId=response.data.loggedInUser.companyId,service.logingItself=!0,service.trueLoging=!0,service.isGuest=response.data.loggedInUser.guestMode,service.creationDate=response.data.loggedInUser.creationDate,service.xmppDomain=service.jidIm.split("@")[1],service.handleUserLanguage(),$localStorage.get(["firstUse"]).then((function(result){"false"!==result.firstUse&&!1!==result.firstUse||(service.firstUse=!1)})),$localStorage.set({firstUse:"false"}),service.rememberMe=rememberMe,rememberMe?($log.info("[authService] store credentials"),$localStorage.set({token:service.token,login:service.login,id:service.userId})):service.removeCredentials(),service.startTokenSurvey(),resolve()}),(function(response){var errorCode,errorData,errorMessage='authenticate for login "'+login+'" failure : ',errorStatus="errorUltimateUnknownError";response||(errorMessage+="Ultimate unknown error"),0===response.status||-1===response.status?(errorMessage+="No server response",errorStatus="errorNoServerResponse"):401===response.status?(service.removeCredentials(),errorMessage+=response.data.errorDetails,errorCode=response.data.errorDetailsCode,401500===response.data.errorDetailsCode?errorStatus=$translate.instant("errorUnauthorized"):401501===response.data.errorDetailsCode&&(errorStatus="errorLoginForbidden",response.data.errorDetailsData&&(errorData={delay:response.data.errorDetailsData.forbiddenDelay}))):500===response.status&&(errorMessage+=response.data.errorDetails,errorStatus="errorInternalServerError"),$log.info("[authService] "+errorMessage),reject(new RBError(errorMessage,errorStatus,errorCode,errorData))}))}))},service.logout=function(){return $q((function(resolve,reject){var authType=localStorage.getItem("authType");service.removeCredentials(),service.authSettings&&service.authSettings.logoutUrl&&authType&&"RAINBOW"!==authType?($log.info("[authService] logout "+authType),service.authSettings.setParameter("token",(function(){return service.token})),resolve(service.authSettings.logoutUrl)):($log.info("[authService] logout"),resolve())}))},service.setInformationHeaders=function(headers){headers["x-rainbow-client"]=service.getInformationHeadersApp(),headers["x-rainbow-client-version"]=service.getInformationHeadersAppVersion()},service.getInformationHeadersApp=function(){return"web_sdk"},service.getInformationHeadersAppVersion=function(){return window.sdkversion?window.sdkversion:"9.9.99"},service.authenticateWithToken=function(strToken,rememberMe){return $q((function(resolve,reject){if(strToken){var decodedToken=jwtHelper.decodeToken(strToken);if(service.token=strToken,service.login=decodedToken.user.loginEmail,service.userId=decodedToken.user.id,decodedToken.saml)var authType="SAML";if(decodedToken.oidc)authType="OIDC";rememberMe||authType&&"RAINBOW"!==authType?($log.info("[authService] store credentials"),$localStorage.set({token:service.token,login:service.login,id:service.userId,authType:authType})):service.removeCredentials(),service.startTokenSurvey().then((function(){return service.getUserData()})).then((function(){return service.getUserAuthenticationSettings(service.login)})).then((function(authSettings){service.authSettings=authSettings})).then((function(){service.registerEventsHandler(),resolve()})).catch((function(error){var errorMessage=error?error.message:"unknown error";$log.error("[authService] authenticateWithToken failure -- "+errorMessage),reject(new Error(errorMessage))}))}else reject(new Error("No token provided"))}))},service.authenticateWithProvidedCredentials=function(token){return token?service.getLocalStorageAuthInfo(!1).then((function(){return service.authenticateWithToken(token,service.rememberMe)})):service.authenticateWithLocalCredentials()},service.authenticateWithLocalCredentials=function(email){return $q((function(resolve,reject){service.getLocalStorageAuthInfo(!0).then((function(){return email&&service.login!==email?$q.reject(new Error("Login account mismatch")):$q.resolve()})).then((function(){return service.startTokenSurvey()})).then((function(){return service.getUserData()})).then((function(){return service.getUserAuthenticationSettings(service.login)})).then((function(authSettings){service.authSettings=authSettings})).then((function(){service.registerEventsHandler(),resolve()})).catch((function(error){$log.error("[authService] authenticateWithLocalCredentials failure -- "+error.message),reject(error)}))}))},service.getLocalStorageAuthInfo=function(getToken){return $q((function(resolve,reject){$localStorage.get(["token","appToken","login","server","support","id","rememberMe","userEnvironment"]).then((function(result){$log.info("[authService] get authentication token"),result.server&&"null"!==result.server&&"undefined"!==result.server?(config.xmpp.currentServer=result.server,config.webservices.currentServer=result.server,"openrainbow.net"===result.server&&(config.appModuleKey=config.dotNetAppModuleKey,config.rainbowApiClientKey=config.dotNetRainbowApiClientKey,config.multiEnvServer="openrainbow.net"),"openrainbow.com"===result.server&&(config.appModuleKey=config.dotComAppModuleKey,config.rainbowApiClientKey=config.dotComRainbowApiClientKey,config.multiEnvServer="openrainbow.com"),config.defaultEnvironment||(config.defaultEnvironment=config.xmpp.currentServer)):service.sdkHostForced?(config.xmpp.currentServer=service.sdkHostForced,config.webservices.currentServer=service.sdkHostForced):(config.xmpp.currentServer=config.xmpp.server,config.webservices.currentServer=config.webservices.server),result.userEnvironment&&(config.defaultEnvironment||(config.defaultEnvironment=config.xmpp.server),$log.info("[authService] getUserEnvironment from local storage -- "+result.userEnvironment),config.xmpp.currentServer=result.userEnvironment,config.xmpp.server=result.userEnvironment,config.webservices.currentServer=result.userEnvironment,config.webservices.server=result.userEnvironment),config.restServerUrl=config.webservices.protocol+"://"+config.webservices.currentServer+":"+config.webservices.port,service.rememberMe=result.rememberMe,service.logingItself=!0,getToken?(service.token=result.token,service.appToken=result.appToken,service.login=result.login,service.userId=result.id,service.token&&service.login?resolve():reject(new Error("No existing token"))):resolve()}))}))},service.startTokenSurvey=function(){return $q((function(resolve,reject){service.startAppTokenSurvey().then((function(){return service.startUserTokenSurvey()})).then((function(){$log.debug("[authService] startTokenSurvey success"),resolve()})).catch((function(error){error&&error.message||(error=new Error("Unknown error")),$log.error("[authService] startTokenSurvey failure -- "+error.message),reject(error)}))}))},service.startUserTokenSurvey=function(first){var decodedToken=jwtHelper.decodeToken(service.token),tokenExpirationTimestamp=1e3*decodedToken.exp,halfTokenDuration=(tokenExpirationTimestamp-1e3*decodedToken.iat)/2,expirationDate=new Date(tokenExpirationTimestamp),tokenExpirationDuration=tokenExpirationTimestamp-(new Date).valueOf();if(first&&$log.info("[authService] on logon"),$log.info("[authService] Extract auth token info (countRenewed: "+decodedToken.countRenewed+", maxTokenRenew: "+decodedToken.maxTokenRenew+", tokenExpirationDuration: "+tokenExpirationDuration+")"),tokenExpirationDuration<0)return $log.info("[authService] auth token has already expired, display login page"),service.renewTokenInterval&&$interval.cancel(service.renewTokenInterval),service.token=null,$rootScope.$broadcast("ON_AUTH_TOKEN_EXPIRE"),$q.reject(new Error("Token expired"));if(tokenExpirationDuration<halfTokenDuration)return $log.info("[authService] auth token will expire in less "+halfTokenDuration/1e3+" seconds, re-new it immediately"),service.renewAuthToken();var usedExpirationDuration=tokenExpirationDuration-halfTokenDuration;return $log.info("[authService] start auth token survey (expirationDate: "+expirationDate+" tokenExpirationDuration: "+tokenExpirationDuration+"ms usedExpirationDuration: "+usedExpirationDuration+"ms)"),service.renewTokenInterval&&$interval.cancel(service.renewTokenInterval),service.renewTokenInterval=$interval((function(){service.renewAuthToken()}),usedExpirationDuration),$q.resolve()},service.renewAuthToken=function(restartTokenSurvey){return $q((function(resolve,reject){$log.info("[authService] re-new authentication token"),$http({method:"GET",url:config.webservices.protocol+"://"+config.webservices.currentServer+":"+config.webservices.port+"/api/rainbow/authentication/v1.0/renew",headers:service.getRequestHeader()}).then((function(response){$log.info("[authService] renew authentication token success"),service.token=response.data.token,$localStorage.set({token:service.token}),$rootScope.$broadcast("ON_AUTH_TOKEN_RENEW"),restartTokenSurvey&&!0!==restartTokenSurvey||service.startTokenSurvey(),resolve()}),(function(response){var errorMessage="renew authentication token failure -- "+(response.data&&response.data.errorDetails?response.data.errorDetails:"no details"),error=new Error(errorMessage);error.details="AUTH_TOKEN_EXPIRED",$log.error("[authService] "+errorMessage),service.renewTokenInterval&&$interval.cancel(service.renewTokenInterval),$rootScope.$broadcast("ON_AUTH_TOKEN_EXPIRE"),reject(error)}))}))},service.startAppTokenSurvey=function(){if(!service.appToken||"string"!=typeof service.appToken||!service.appToken.length)return $log.info("[authService] No application token."),$q.resolve();var decodedToken=jwtHelper.decodeToken(service.appToken),tokenExpirationTimestamp=1e3*decodedToken.exp,expirationDate=new Date(tokenExpirationTimestamp),tokenExpirationDuration=tokenExpirationTimestamp-(new Date).valueOf();if($log.info("[authService] Extract application token info (countRenewed: "+decodedToken.countRenewed+", maxTokenRenew: "+decodedToken.maxTokenRenew+")"),tokenExpirationDuration<0)return $log.info("[authService] application token has already expired, re-new it immediately"),service.renewAppToken();if(tokenExpirationDuration<3e4)return $log.info("[authService] application token will expire in less 5 minutes, re-new it immediately"),service.renewAppToken();var usedExpirationDuration=tokenExpirationDuration-24e3;return $log.info("[authService] start application token survey (expirationDate: "+expirationDate+" tokenExpirationDuration: "+tokenExpirationDuration+"ms usedExpirationDuration: "+usedExpirationDuration+"ms)"),service.renewAppTokenInterval&&$interval.cancel(service.renewAppTokenInterval),service.renewAppTokenInterval=$interval((function(){service.renewAppToken()}),usedExpirationDuration),$q.when()},service.renewAppToken=function(){return $q((function(resolve,reject){$log.info("[authService] re-new application token"),$http({method:"GET",url:config.webservices.protocol+"://"+config.webservices.currentServer+":"+config.webservices.port+"/api/rainbow/applications/v1.0/authentication/renew",headers:service.getRequestHeader()}).then((function(response){$log.info("[authService] renew application token success"),service.appToken=response.data.token,$localStorage.set({appToken:service.appToken}),$rootScope.$broadcast("ON_APP_TOKEN_RENEW"),service.startAppTokenSurvey(),resolve()}),(function(response){var errorMessage="renew application token failure -- "+(response.data&&response.data.errorDetails?response.data.errorDetails:"no details"),error=new Error(errorMessage);error.details="APP_TOKEN_EXPIRED",$log.error("[authService] "+errorMessage),$interval.cancel(service.renewAppTokenInterval),$rootScope.$broadcast("ON_APP_TOKEN_EXPIRE"),reject(error)}))}))},service.getUserData=function(){return $q((function(resolve,reject){$http({method:"GET",url:config.restServerUrl+"/api/rainbow/enduser/v1.0/users/"+service.userId,headers:service.getRequestHeader()}).then((function(response){service.userData=response.data.data,service.login=response.data.data.loginEmail,service.jidIm=response.data.data.jid_im,service.jidTel=response.data.data.jid_tel,service.jidPwd=response.data.data.jid_password,service.initialized=response.data.data.isInitialized,service.companyId=response.data.data.companyId,service.isGuest=response.data.data.guestMode,service.xmppDomain=service.jidIm.split("@")[1],service.handleUserLanguage(),resolve(service.userData)}),(function(error){service.removeCredentials(),reject(new Error("Wrong token -- "+error.message))}))}))},service.getCompanySAMLConfiguration=function(companyId){return $q((function(resolve,reject){$log.debug("[authService] Get assertion configuration for a company"),$http({method:"GET",url:config.webservices.protocol+"://"+config.webservices.currentServer+":"+config.webservices.port+"/api/rainbow/authentication/v1.0/saml/"+companyId+"/metadata.xml",headers:service.getRequestHeader()}).then((function(response){$log.debug("[authService] getCompanySAMLConfiguration success"),resolve(response.data)}),(function(response){$log.error("[authService] getCompanySAMLConfiguration failure -- "+JSON.stringify(response)),reject(response)}))}))},service.getFingerPrint=function(){return $q((function(resolve){if(service.browserFingerprint)resolve(service.browserFingerprint);else{imprint.test(["audio","availableScreenResolution","canvas","colorDepth","cookies","cpuClass","deviceDpi","doNotTrack","indexedDb","installedFonts","language","localStorage","pixelRatio","platform","plugins","processorCores","screenResolution","sessionStorage","timezoneOffset","touchSupport","userAgent","webGl"]).then((function(browserFingerprint){service.browserFingerprint=browserFingerprint,resolve(browserFingerprint)}))}}))},service.handleUserLanguage=function(){var userServerLanguage=service.userData.language;userServerLanguage&&settingsService.setAppliLangageCodeFromServer(userServerLanguage)},service.removeCredentials=function(){$log.info("[authService] remove credentials");var dataToRemove=["token","id","authType","userEnvironment"];service.isGuest&&dataToRemove.push("login"),$localStorage.remove(dataToRemove),$localStorage.set({token:null}),service.isGuest=!1,service.resetUserEnvironment()},service.resetUserEnvironment=function(){settingsService.setSetting("userEnvironment",""),config.defaultEnvironment&&($log.info("[authService] resetUserEnvironment"),config.xmpp.currentServer=config.defaultEnvironment,config.xmpp.server=config.defaultEnvironment,config.webservices.currentServer=config.defaultEnvironment,config.webservices.server=config.defaultEnvironment)},service.validateLogin=function(login){return-1!==login.indexOf("@")},service.onInit()}])},function(module,exports){angular.module("rainbow").service("xmppService",["$rootScope","$log","$q","$interval","authService","helpersService","settingsService","utilService",function($rootScope,$log,$q,$interval,authService,helpersService,settingsService,utilService){"use strict";var service=this;service.disconnectionHandler=null,Strophe.log=function(level,msg){switch(level){case Strophe.LogLevel.WARN:$log.warn(msg);break;case Strophe.LogLevel.ERROR:case Strophe.LogLevel.FATAL:$log.error(msg);break;default:$log.debug(msg)}},service.start=function(stats){$log.info(""),$log.info("[xmppService] === STARTING ===");var startDate=performance.now();service.showBodyMessage="true"===settingsService.getSetting("showBodyMessage"),service.started=!1,service.connected=!1,service.stropheStatus=null,service.presenceStatus="offline";var pingInterval=config.xmpp.pingInterval?config.xmpp.pingInterval:6e4;return this.pingTimeout=2*pingInterval,service.serverURL=config.xmpp.protocol+"://"+config.xmpp.currentServer+":"+config.xmpp.port+"/websocket",service.presenceWaitingList=[],service.jidsToRemove=[],service.fullJid=null,authService.jidIm&&authService.jidPwd?this.connect().then((function(){service.started=!0;var startDuration=Math.round(performance.now()-startDate);stats.push({service:"xmppService",startDuration:startDuration}),$log.info("[xmppService] === STARTED ("+startDuration+" ms) ===")})).catch((function(error){return $log.error("[xmppService] === STARTING FAILURE ("+error.message+") === "),$q.reject(new Error("Starting failure : "+error.message))})):($log.info("Starting failure : No valid XMPP credentials"),$q.reject(new Error("No valid XMPP credentials")))},service.stop=function(){try{return this.disconnect("Stop service").finally((function(){service.connection=null,service.started=!1,service.stropheStatus=null,service.presenceWaitingList=[],service.deferDisconnect=null,service.fullJid=null}))}catch(error){return $log.error("XMPP disconnect error : "+error),service.connection=null,service.started=!1,service.stropheStatus=null,service.presenceWaitingList=[],service.deferDisconnect=null,service.fullJid=null,$q.when()}},service.connect=function(){$log.info("[xmppService] -- ASK CONNECTION --");try{if(service.stropheStatus===Strophe.Status.CONNECTING||service.stropheStatus===Strophe.Status.CONNECTED||service.stropheStatus===Strophe.Status.AUTHENTICATING){$log.info("[xmppService] already connecting");var error=new Error("XMPP service already-connected");return error.details=service.stropheStatus===Strophe.Status.CONNECTING?"XMPP_IN_CONNECTING_STATE":"XMPP_ALREADY_CONNECTED",$q.reject(error)}var deferred=$q.defer();return service.connection=new Strophe.Connection(service.serverURL+"?x-rainbow-client="+authService.getInformationHeadersApp()+"&x-rainbow-client-version="+authService.getInformationHeadersAppVersion()+"&x-rainbow-xmpp-dom="+authService.xmppDomain),service.connection.rawInput=function(data){return service.handleRawXmppMessage(data,"Recv: ")},service.connection.rawOutput=function(data){return service.handleRawXmppMessage(data,"Sent: ")},service.connecting=!0,service.generateRandomFullJid(authService.jidIm).then((function(fullJid){service.fullJid&&(fullJid=service.fullJid),service.connection.connect(fullJid,authService.jidPwd,(function(status,reason){switch(service.stropheStatus=status,reason=angular.isUndefined(reason)?"":reason,status){case Strophe.Status.CONNECTING:$log.info("[xmppService] -- Connecting --"),$rootScope.$broadcast("ON_CONNECTION_STATE_CHANGE_EVENT","inProgress");break;case Strophe.Status.AUTHFAIL:$log.error("[xmppService] -- Authentication failure -- "+reason),deferred.reject(new Error("Authentication failure -- "+reason));break;case Strophe.Status.CONNFAIL:service.connecting&&($log.error("[xmppService] -- Connection failure -- "+reason),deferred.reject(new Error("Connection failure -- "+reason)));break;case Strophe.Status.CONNECTED:$log.info("[xmppService] -- Connected -- "+service.connection.jid),service.connecting=!1,service.connected=!0,service.jid=authService.jidIm,service.fullJid=service.connection.jid,service.connection.addHandler(service.onRosterChanged,"jabber:iq:roster","iq","set"),service.connection.addHandler(service.onMamMessageReceived,Strophe.NS.MAM,"message",null),service.connection.addHandler(service.onMamMessageReceived,Strophe.NS.MAM,"iq",null),service.connection.addHandler(service.onSearchTextMessageReceived,"urn:xmpp:mam:tmp","message",null),service.connection.jingle&&service.connection.jingle.attachHandlers(),service.addPresenceHandler(),service.presenceWaitingList=[],service.connection.ping.addPingHandler((function(ping){var date=new Date;return $log.info("[xmppService] -- Receive keepAlive Ping request ("+date+")"),service.connected&&service.connection.ping.pong(ping),!0})),service.enableCarbon(),deferred.resolve();break;case Strophe.Status.DISCONNECTING:$log.info("[xmppService] -- Disconnecting -- "+reason);break;case Strophe.Status.DISCONNECTED:$log.info("[xmppService] -- Disconnected -- "+service.fullJid),service.started?($rootScope.$broadcast("ON_CONNECTION_STATE_CHANGE_EVENT","disconnected"),-1===service.jidsToRemove.indexOf(service.fullJid)&&(service.jidsToRemove.push(service.fullJid),service.jidsToRemove.forEach((function(jidToRemove){$log.info("[xmppService] -- invalid jid to remove -- "+jidToRemove)}))),service.deferDisconnect?($log.info("[xmppService] -- disable ping connection watcher"),service.connectionWatcherPromise&&$interval.cancel(service.connectionWatcherPromise),service.connected=!1,service.deferDisconnect.resolve()):service.connected&&!service.connecting?($log.error("[xmppService] -- Unexpected disconnection"),service.connecting=!0,service.connected=!1,$rootScope.disconnected=!0,service.disconnectionHandler()):service.connected||service.connecting||!service.fullJid?service.connected||service.connecting||service.fullJid?service.connecting&&deferred.reject(new Error("Connection failure -- "+reason)):($log.error("[xmppService] -- Unexpected disconnection without fullJid"),service.connecting=!0,service.disconnectionHandler()):($log.error("[xmppService] -- Unexpected disconnection with fullJid"),service.connecting=!0,service.disconnectionHandler())):($log.info("[xmppService] -- received disconnect event but service not started !!"),$log.info("[xmppService] -- disable ping connection watcher"),service.connectionWatcherPromise&&$interval.cancel(service.connectionWatcherPromise),$rootScope.disconnected=!0);break;default:$log.error("[xmppService] -- Connection to the xmpp server failure -- "+status+" -- "+reason)}}))})),deferred.promise}catch(error){return $log.error("XMPP service connect error : "+error),$q.reject("catch-connect-error")}},service.handleRawXmppMessage=function(data,direction){if(service.connectionWatcherPromise&&$interval.cancel(service.connectionWatcherPromise),service.connectionWatcherPromise=$interval(service.connectionWatcher,service.pingTimeout),!(data.indexOf("<PHOTO>")>-1)){var log=direction;if(data.indexOf("xmlns='jabber:x:bubble:conference'")>-1&&(data.indexOf("name='invitation'")>-1||data.indexOf("name='conferenceAdd'")>-1||data.indexOf("name='conferenceRemove'")>-1))log+="Hidden content";else if(data.indexOf("xmlns='urn:xmpp:jingle:1'")>-1&&(data.indexOf("displayname")>-1||data.indexOf("number")>-1))log+="Hidden content";else if(data.indexOf("urn:xmpp:janus:1")>-1&&(data.indexOf("displayName")>-1||data.indexOf("displayname")>-1||data.indexOf("number")>-1))log+="Hidden content";else if(data.indexOf("<message")>-1&&(data.indexOf("<body")>-1||data.indexOf("<content>")>-1))log+=service.messageBodyDiscretion(data);else{var result=data,dataElem=$(data).find("data");if(dataElem&&"http://jabber.org/protocol/ibb"===dataElem.attr("xmlns")&&(dataElem.html("Encoded file in base 64"),log+=dataElem.html()),!service.showBodyMessage){if(-1!==data.indexOf("<identity")){var firstName=data.indexOf("firstName="),firstNameIndex=data.indexOf("'",firstName);if(-1!==firstName&&-1!==firstNameIndex){var firstNameLastIndex=data.indexOf("'",firstNameIndex+1);firstNameIndex+1!==firstNameLastIndex&&(result=data.substr(0,firstNameIndex+2)+"***"+data.substr(firstNameLastIndex))}var lastName=result.indexOf("lastName="),lastNameIndex=result.indexOf("'",lastName);if(-1!==lastName&&-1!==lastNameIndex){var lastNameLastIndex=result.indexOf("'",lastNameIndex+1);lastNameIndex+1!==lastNameLastIndex&&(result=result.substr(0,lastNameIndex+2)+"***"+result.substr(lastNameLastIndex))}}if(-1!==result.indexOf("<caller_info")||-1!==result.indexOf("<callee_info")){var number=result.indexOf("number="),numberIndex=result.indexOf("'",number);if(-1!==number&&-1!==numberIndex){var numberLastIndex=result.indexOf("'",numberIndex+1);if(numberIndex+1!==numberLastIndex){var numberText=result.substr(numberIndex+1,numberLastIndex-numberIndex-1);result=result.substr(0,numberIndex+1)+utilService.anonymizePhoneNumber(numberText)+result.substr(numberLastIndex)}}}if(-1!==result.indexOf("<caller>")){var caller=result.indexOf("<caller>"),endCaller=result.indexOf("</caller>",caller);-1===(numberText=result.substring(caller+8,endCaller)).indexOf("@")&&-1===numberText.indexOf("janus")&&(result=result.substr(0,caller+8)+utilService.anonymizePhoneNumber(numberText)+result.substr(endCaller))}if(-1!==result.indexOf("<callee>")){var callee=result.indexOf("<callee>"),endCallee=result.indexOf("</callee>",callee);-1===(numberText=result.substring(callee+8,endCallee)).indexOf("@")&&-1===numberText.indexOf("janus")&&(result=result.substr(0,callee+8)+utilService.anonymizePhoneNumber(numberText)+result.substr(endCallee))}if(-1!==result.indexOf("<event")){var message=result.indexOf("<message>"),endMessage=result.indexOf("</message>",message);result=result.substr(0,message+9)+"***"+result.substr(endMessage)}var endpointTel=result.indexOf("endpointTel='");if(-1!==endpointTel){var endEndpointTel=result.indexOf("'",endpointTel+13);numberText=result.substring(endpointTel+13,endEndpointTel);result=result.substr(0,endpointTel+13)+utilService.anonymizePhoneNumber(numberText)+result.substr(endEndpointTel)}var destination=result.indexOf("destination='");if(-1!==destination){var endDestination=result.indexOf("'",destination+13);numberText=result.substring(destination+13,endDestination);result=result.substr(0,destination+13)+utilService.anonymizePhoneNumber(numberText)+result.substr(endDestination)}}log+=result}$log.debug(log)}},service.messageBodyDiscretion=function(data){return service.showBodyMessage?data:(data=service.messageTagDiscretion("content",data),data=service.messageTagDiscretion("body",data),data=service.messageTagDiscretion("subject",data),data=service.messageTagDiscretion("filename",data))},service.messageTagDiscretion=function(tag,data){var startTagIndex=data.indexOf("<"+tag);if(-1!==startTagIndex){var endTagIndex=data.indexOf(">",startTagIndex),endEmptyTagIndex=data.indexOf("/>",startTagIndex);if(-1!==endTagIndex&&endTagIndex!==endEmptyTagIndex+1)return data.substr(0,endTagIndex+2)+"***"+data.substr(data.indexOf("</"+tag+">")-1)}return data},this.connectionWatcher=function(){try{if($log.error("[xmppService] -- Connection watcher : so bad, no message since "+service.pingTimeout/1e3+" seconds (no ping)"),service.connection){var message=service.stropheStatus===Strophe.Status.CONNECTED?"Have lost connectivity":"Stuck in reconnecting state";$log.info("[xmppService] -- Connection watcher -- "+message),service.stropheStatus=null,service.connection.disconnect("No ping")}}catch(error){$log.error("connectionWatcher error "+error)}},service.disconnect=function(reason){return service.deferDisconnect=$q.defer(),$log.info("[xmppService] -- ASK DISCONNECTION --"),this.connected?service.stropheStatus===Strophe.Status.CONNECTED&&service.connection.disconnect(reason):($log.info("[xmppService] -- disconnect - service is not started"),service.deferDisconnect.resolve()),service.deferDisconnect.promise},service.generateRandomFullJid=function(jid){return service.generateRandomFullJidForWeb(jid)},service.generateRandomFullJidForWeb=function(jid){return $q.when(jid+"/web_sdk_"+version+"_"+helpersService.randomString(8))},service.removeOldConnection=function(){$interval((function(){var disconnectJidPromises=service.jidsToRemove.map((function(jid){if(jid&&""!==jid){if(jid!==service.fullJid)return service.disconnectObsoleteJid(jid).then((function(){$log.info("[xmppService] -- disconnect obsolete jid -- "+jid+" done")}));$log.info("[xmppService] -- ignore disconnect obsolete jid for "+jid)}else $log.info("[xmppService] -- ignore disconnect obsolete jid for empty jid")}));service.jidsToRemove=[],$q.all(disconnectJidPromises).catch((function(error){$log.warn("[xmppService] -- somethings goes wrong during obsolete jid removal -- "+error.message)}))}),1e4,1)},service.disconnectObsoleteJid=function(jid){var iq=$iq({type:"set",id:helpersService.randomString(8),from:service.fullJid}).c("disconnect",{xmlns:"jabber:iq:configuration"}).c("to").t(jid);return service.sendIQ(iq)},this.onRosterChanged=function(iq){try{return angular.element(iq).find("item").each((function(){var jid=Strophe.getBareJidFromJid(angular.element(this).attr("jid")),favorite="favorites"===angular.element(this).find("group").first().text(),sub=angular.element(this).attr("subscription"),ask=angular.element(this).attr("ask");$rootScope.$apply((function(){$rootScope.$broadcast("ON_ROSTER_CHANGED_EVENT",{jid:jid,subscription:sub||"none",favorite:favorite,ask:ask||"none"})}))})),!0}catch(error){return!0}},this.addHistoryHandler=function(handler){this.historyHandler=handler},this.addSearchTextHandler=function(handler){this.searchTextHandler=handler},this.addHistoryCallLogsHandler=function(handler){this.callLogHandler=handler},this.onMamMessageReceived=function(stanza){$log.info("[XmppService] onMamMessageReceived");try{var queryId=angular.element(stanza).find("result").attr("queryid");return queryId||(queryId=angular.element(stanza).find("fin").attr("queryid")),queryId&&0!==queryId.indexOf("tel_")&&service.historyHandler?service.historyHandler(stanza):service.callLogHandler&&service.callLogHandler(stanza),!0}catch(error){return!0}},this.onSearchTextMessageReceived=function(stanza){$log.info("[XmppService] onSearchTextMessageReceived");try{var queryId=angular.element(stanza).find("result").attr("queryid");return queryId||(queryId=angular.element(stanza).find("fin").attr("queryid")),service.searchTextHandler&&service.searchTextHandler(queryId,stanza),!0}catch(error){return $log.warn("[XmppService] onSearchTextMessageReceived error : "+error.message),!0}},this.addPresenceHandler=function(){return $log.info("[xmppService] -- Add presence handler"),this.connection.addHandler(service.onPresence,null,"presence"),$q.when()},this.sendPresence=function(show,message,auth){if(this.connection||service.stropheStatus===Strophe.Status.CONNECTED)try{$log.info("Send presence "+show+" - "+message+" ("+service.jid+")");var presenceIq=$pres();if(presenceIq.c("priority").t("5"),presenceIq.up(),show&&"online"!==show&&presenceIq.c("show").t(show),!message||show&&"online"!==show?message&&presenceIq.up().c("status").t(message):presenceIq.c("status").t(message),!this.connection||!this.connection.send)return void $log.error('Try to send "presence IQ" but no xmpp connection');!0===auth&&(presenceIq.c("application",{xmlns:"jabber:iq:application"}),presenceIq.c("appid").t(config.rainbowApiClientKey).up(),presenceIq.c("userid").t(authService.userId)),this.connection.send(presenceIq)}catch(error){return void $log.error("this.connection.send error : "+error)}else $log.error('[xmppService] Try to send "presence IQ" but no xmpp connection')},this.resetPresence=function(status){$log.info("Reset presence to "+service.presenceStatus+" ("+service.jid+")"),service.sendPresence(status.show,status.status)},this.onPresence=function(presence){try{var fromJid=angular.element(presence).attr("from"),fromBareJid=Strophe.getBareJidFromJid(fromJid),namespace=angular.element(presence).find("x").attr("xmlns"),ptype=angular.element(presence).attr("type"),show=angular.element(presence).find("show").text();if(namespace&&0===namespace.indexOf(Strophe.NS.MUC))return!0;if(angular.element(presence).find("actor").length>0&&"jabber:iq:configuration"===angular.element(presence).find("actor").attr("xmlns")&&(angular.element(presence).find("avatar").length>0?$rootScope.$broadcast("ON_VCARD_UPDATE_EVENT",fromBareJid,"avatar"):angular.element(presence).find("data").length>0&&$rootScope.$broadcast("ON_VCARD_UPDATE_EVENT",fromBareJid,"data"),angular.element(presence).find("x").length&&"vcard-temp:x:update"===angular.element(presence).find("x").attr("xmlns")))return!0;if("error"===ptype)$log.error("Receive error presence message");else if("subscribe"===ptype)$log.info("Receive subscribe from ("+fromBareJid+")"),$rootScope.$broadcast("ON_ROSTER_SUBSCRIBE_EVENT",fromBareJid);else{var presenceElem=$(presence),presenceStatus="offline",presenceMessage="";"unavailable"!==ptype&&(show=presenceElem.find("show").text(),presenceMessage=presenceElem.find("status").text(),presenceStatus=""===show||"chat"===show?"online":"dnd"===show?"dnd":"xa"===show?"xa":"away");var stamp=presenceElem.find("delay").attr("stamp"),presStamp=stamp?new Date(stamp):new Date,until=presenceElem.find("until").text(),eventAttr={jid:fromJid,status:presenceStatus,message:presenceMessage,stamp:presStamp,until:until=until?new Date(until):null};$rootScope.$$listeners&&$rootScope.$$listeners.ON_ROSTER_PRESENCE_CHANGED_EVENT?$rootScope.$broadcast("ON_ROSTER_PRESENCE_CHANGED_EVENT",eventAttr):($log.info("[XMPP Service] Receive presence message but contact service is not ready yet"),service.presenceWaitingList.push(eventAttr))}return!0}catch(error){return!0}},this.getPresenceWaitingList=function(){return service.presenceWaitingList},this.resetPresenceWaitingList=function(){service.presenceWaitingList=[]},this.enableCarbon=function(){var iq=$iq({type:"set"});return iq.c("enable",{xmlns:"urn:xmpp:carbons:2"}),service.sendIQ(iq)},this.send=function(stanza){if(!service.connection&&service.stropheStatus!==Strophe.Status.CONNECTED)return $log.error('[xmppService] Try to send "stanza" but no xmpp connection'),$q.reject(new Error("No XMPP connection"));try{this.connection.send(stanza)}catch(error){return $log.error("[xmppService] this.connection.send error : "+error),$q.when()}return $q.when()},this.sendIQ=function(iq,timeout){if(!this.connection&&service.stropheStatus!==Strophe.Status.CONNECTED)return $log.error('[xmppService] Try to send "iq" but no xmpp connection'),$q.reject(new Error("No XMPP connection"));var defered=$q.defer();try{this.connection.sendIQ(iq,(function(data){defered.resolve(data)}),(function(data){null===data?defered.reject(new Error("XMPP request timeout")):defered.reject(new Error(data.innerHTML))}),timeout&&timeout>1e4?timeout:1e4)}catch(error){return $log.error("[xmppService] this.connection.sendIQ error : "+error),$q.reject(new Error("this.connection.sendIQ error"))}return defered.promise},this.getBareJidFromJid=function(jId){return Strophe.getBareJidFromJid(jId)},this.getResourceFromJid=function(jid){return Strophe.getResourceFromJid(jid)},this.addHandler=function(handler,ns,name,type,id,from,options){return this.connection.addHandler(handler,ns,name,type,id,from,options)},this.deleteHandler=function(handRef){this.connection&&this.connection.deleteHandler(handRef)},this.addFileTransfertHandlers=function(ibbHandler,fileHandler){this.connection.ibb.addIBBHandler(ibbHandler),this.connection.si_filetransfer.addFileHandler(fileHandler)},this.addCallLogsHandler=function(handler){this.rtcStartRef&&(this.connection.deleteHandler(this.rtcStartRef),this.rtcStartRef=null),this.rtcEndRef&&(this.connection.deleteHandler(this.rtcEndRef),this.rtcEndRef=null),this.rtcRingingRef&&(this.connection.deleteHandler(this.rtcRingingRef),this.rtcRingingRef=null),this.rtcStartRef=this.connection.addHandler(handler,null,"message","webrtc-start"),this.rtcEndRef=this.connection.addHandler(handler,null,"message","webrtc-end"),this.rtcRingingRef=this.connection.addHandler(handler,null,"message","webrtc-ringing")},this.addTelephonyCallLogsHandler=function(handler){this.telephonyMessageRef&&(this.connection.deleteHandler(this.telephonyMessageRef),this.telephonyMessageRef=null),this.telephonyIqRef&&(this.connection.deleteHandler(this.telephonyIqRef),this.telephonyIqRef=null),this.telephonyMessageRef=service.connection.addHandler(handler,Strophe.NS.CALLLOG,"message",null),this.telephonyIqRef=service.connection.addHandler(handler,Strophe.NS.CALLLOG,"iq",null)},this.addPubSubPublishHandler=function(handler){service.connection.addHandler(handler,"jabber:client","message","headline",null,"pubsub.demo-all-in-one-dev-1.opentouch.cloud")},this.getIpAddress=function(){return $q((function(resolve,reject){if(RTCPeerConnection){var pc=new RTCPeerConnection({iceServers:[]}),noop=function(){},result=[],timer=setTimeout((function(result){pc.onicecandidate=noop,result.length?resolve(result):reject()}),5e3,result);pc.createDataChannel(""),pc.createOffer(pc.setLocalDescription.bind(pc),noop),pc.onicecandidate=function(ice){if(ice&&ice.candidate&&ice.candidate.candidate){var candidateInfo=/([0-9]{1,3}(\.[0-9]{1,3}){3}|[a-f0-9]{1,4}(:[a-f0-9]{1,4}){7})/.exec(ice.candidate.candidate);if(candidateInfo&&candidateInfo.length>=2){var myIP=candidateInfo[1];$log.info("[xmppService] IP found: "+myIP),result.push(myIP)}}else{if(pc.onicecandidate=noop,clearTimeout(timer),!result.length)return void reject();resolve(result)}}}else reject()}))}}])},function(module,exports,__webpack_require__){angular.module("rainbow").service("contactService",["$q","$rootScope","$translate","$log","$injector","$http","xmppService","authService","Contact","$interval","settingsService","PromiseQueue","companyService","errorHelperService","utilService",function($q,$rootScope,$translate,$log,$injector,$http,xmppService,authService,Contact,$interval,settingsService,PromiseQueue,companyService,errorHelperService,utilService){"use strict";var that=this;that.start=function(stats){$log.info(""),$log.info("[contactService] === STARTING ===");var startDate=performance.now();return $q((function(resolve,reject){if(that.userContact=null,that.contacts=[],that.dbContacts=[],that.jtelContacts={},that.contactPromises=[],that.getOrCreateContactPromises=[],that.networkSize=0,that.started=!1,that.changePasswordInfo=null,that.subscriptionPromiseQueue=PromiseQueue.create(),that.presentationModeActive=!1,that.awayStateActive=!1,that.busyState={status:null,message:null},that.forcedState=!1,that.manualState=!1,that.currentLanguage=settingsService.getSetting("lang"),that.langUpdateEventHandlerCleaner&&that.langUpdateEventHandlerCleaner(),that.langUpdateEventHandlerCleaner=$rootScope.$on("ON_LANGUAGE_UPDATED_EVENT",(function(__event,lang){that.currentLanguage=lang,that.updateContactsLastActivity()})),that.rosterUpdateEventHandlerCleaner&&that.rosterUpdateEventHandlerCleaner(),that.rosterUpdateEventHandlerCleaner=$rootScope.$on("ON_ROSTER_CHANGED_EVENT",that.rosterChangedHandler),that.presenceUpdateEventHandlerCleaner&&that.presenceUpdateEventHandlerCleaner(),that.presenceUpdateEventHandlerCleaner=$rootScope.$on("ON_ROSTER_PRESENCE_CHANGED_EVENT",that.contactPresenceChangedHandler),that.calendarPresenceEventHandlerCleaner&&that.calendarPresenceEventHandlerCleaner(),that.calendarPresenceEventHandlerCleaner=$rootScope.$on("ON_CONTACT_CALENDAR_STATUS_CHANGE",that.contactCalendarPresenceChangedHandler),$log.info("[contactService] Create userContact ("+xmppService.jid+")"),that.userContact=new Contact,that.userContact.ask=null,that.userContact.subscription=null,that.userContact.id=xmppService.jid,that.userContact.jid=xmppService.jid,that.userContact.fullJid=xmppService.fullJid,that.userContact.language=that.currentLanguage,that.userContact.updateFromUserData(authService.userData),that.userContact.getAvatar(),that.userContact.updateRichStatus(),that.dbContacts[that.userContact.dbId]=that.userContact,that.contacts[that.userContact.id]=that.userContact,that.jtelContacts[that.userContact.jidtel]=that.userContact,!authService.userData.language){var serverLanguageCode=settingsService.getAppliLanguageCodeForServer();that.updateUserContact({language:serverLanguageCode})}that.getUserSettings().then((function(settings){return that.manageCalendarPresencePrompt(settings),settingsService.settings.activeAlarm=settings.activeAlarm,settingsService.settings.activeNotif=settings.activeNotif,$log.info("[contactService] Get alarm & notif data ("+settingsService.settings.activeAlarm+" / "+settingsService.settings.activeNotif+")"),settingsService.settings.protectionAgainstMailTypeOffline=settings.protectionAgainstMailTypeOffline,$log.info("[contactService] Get mail setting data ("+settingsService.settings.protectionAgainstMailTypeOffline+")"),$q.resolve()})).then((function(){return companyService.getCompanyById(that.userContact.company.id)})).then((function(userCompany){return that.userContact.company=userCompany,that.attachHandlers(),that.getMyNetwork()})).then((function(){return that.updateNetworkWithRosterInfo()})).then((function(){that.appActiveEventHandlerCleaner&&that.appActiveEventHandlerCleaner(),that.appActiveEventHandlerCleaner=$rootScope.$watch("appActive",(function(appActive){return $log.info("[contactService] AppActive changed : "+appActive),!appActive&&that.userContact&&"online"===that.userContact.status&&(that.awayStateActive=!0),appActive&&that.awayStateActive&&(that.awayStateActive=!1),angular.isDefined(appActive)&&that.updatePresence(!0),!0})),that.vcardUpdateEventHandlerCleaner&&that.vcardUpdateEventHandlerCleaner(),that.vcardUpdateEventHandlerCleaner=$rootScope.$on("ON_VCARD_UPDATE_EVENT",that.onVCardChangeEvent),that.getMissedPresenceMessages();var startDuration=Math.round(performance.now()-startDate);stats.push({service:"contactService",startDuration:startDuration}),$log.info("[contactService] === STARTED ("+startDuration+" ms) ==="),that.started=!0,resolve()})).catch((function(error){$log.error("[contactService] === STARTING FAILURE === "+error.message),reject(error)})),that.connectionStateEventHandlerCleaner&&that.connectionStateEventHandlerCleaner(),that.connectionStateEventHandlerCleaner=$rootScope.$on("ON_CONNECTION_STATE_CHANGE_EVENT",that.onConnectionStateChangeEvent),that.contactLastActivityTimerInterval=$interval(that.updateContactsLastActivity,6e4)}))},that.manageCalendarPresencePrompt=function(settings){if(void 0!==settings.promptForCalendarPresence)settingsService.setSetting("disableCalendarPresence",settings.promptForCalendarPresence?"false":"true"),$log.info("[contactService] promptForCalendarPresence -- "+settings.promptForCalendarPresence);else{var promptForCalendarPresence="true"!==settingsService.getSetting("disableCalendarPresence");$log.info("[contactService] MIGRATION NECESSARY -- promptForCalendarPresence : "+promptForCalendarPresence),that.setUserSettings({promptForCalendarPresence:promptForCalendarPresence})}},that.getMyNetwork=function(){return $q((function(resolve,reject){var serverUrl=config.restServerUrl+"/api/rainbow/enduser/v1.0/users/networks?limit=2000";$http({method:"GET",url:serverUrl,headers:authService.getRequestHeader()}).then((function(response){var contactsData=response.data.data;$log.info("[contactService] GetMyNetwork success -- find "+contactsData.length+" contact(s)"),contactsData.forEach((function(contactData){var contact=new Contact;contact.updateFromUserData(contactData),that.contacts[contact.id]=contact,that.dbContacts[contact.dbId]=contact,that.jtelContacts[contact.jidtel]=contact,contact.updateRichStatus(),contact.getAvatar(),that.sendUpdateEvent(contact)})),that.networkSize=contactsData.length,resolve()}),(function(){$log.error("[contactService] GetMyNetwork failure"),reject(new Error("GetMyNetwork failure"))}))}))},that.updateNetworkWithRosterInfo=function(){return $q((function(resolve,reject){xmppService.sendIQ($iq({type:"get"}).c("query",{xmlns:"jabber:iq:roster"})).then((function(stanza){$log.info("[contactService] Get rosters info successfully"),$(stanza).find("item").each((function(){var rosterElem=$(this),jid=xmppService.getBareJidFromJid(rosterElem.attr("jid"));if(jid&&jid.length&&!that.isTelJid(jid)){var contact=that.contacts[jid];if(contact){var ask=rosterElem.attr("ask"),subscription=rosterElem.attr("subscription");contact.ask=angular.isDefined(ask)?ask:"none",contact.subscription=angular.isDefined(subscription)?subscription:"none",contact.roster=!0,contact.updateRichStatus(),$log.info("[contactService] Update contact from roster ("+contact.ask+", "+contact.subscription+") "+jid)}}})),resolve()})).catch((function(error){$log.error("[contactService] Get rosters failure : "+error.message),reject(error)}))}))},that.getMissedPresenceMessages=function(){$log.info("[contactService] GetMissedPresenceMessages");try{var list=xmppService.getPresenceWaitingList();if(list.length){for($log.info("[contactService] GetMissedPresenceMessages length "+list.length);list.length>0;){var item=list.pop();that.contactPresenceChangedHandler(null,item)}xmppService.resetPresenceWaitingList()}}catch(error){$log.error("[contactService] GetMissedPresenceMessages error "+error)}},that.attachHandlers=function(){$log.info("[contactService] AttachHandlers"),this.contactConfigRef&&(xmppService.connection.deleteHandler(this.contactConfigRef),this.contactConfigRef=null),this.contactConfigRef=xmppService.connection.addHandler(that.onUserManagementEvent,null,"message","management")},that.stop=function(){return $log.info("[contactService] Stopping"),that.userContact=null,that.contacts=null,that.dbContacts=null,that.started=!1,that.presentationModeActive=!1,that.awayStateActive=!1,that.busyState={status:null,message:null},that.forcedState=!1,that.manualState=!1,$log.info("[contactService] Stopped"),that.vcardUpdateEventHandlerCleaner&&(that.vcardUpdateEventHandlerCleaner(),that.vcardUpdateEventHandlerCleaner=null),that.connectionStateEventHandlerCleaner&&(that.connectionStateEventHandlerCleaner(),that.connectionStateEventHandlerCleaner=null),that.contactLastActivityTimerInterval&&($interval.cancel(that.contactLastActivityTimerInterval),that.contactLastActivityTimerInterval=null),$q.when()},that.onConnectionStateChangeEvent=function(__event,status){if("disconnected"===status&&that.userContact){for(var key in that.userContact.resources={},that.contacts)that.contacts.hasOwnProperty(key)&&!that.contacts[key].isBot&&(that.contacts[key].resources={},"unknown"!==that.contacts[key].status&&"none"!==that.contacts[key].subscription&&(that.contacts[key].status="offline",that.contacts[key].imStatusStamp={}));that.presentationModeActive=!1,that.awayStateActive=!1,that.busyState={status:null,message:null},that.forcedState=!1,that.manualState=!1}},that.onVCardChangeEvent=function(event,jid,type){$log.info("[contactService] onVCardChangeEvent event: "+event+" || status: "+jid+" || type: "+type),$interval((function(){var contact=that.getContactByJid(jid);contact&&("avatar"===type||"data"===type?that.getVCardByDbId(contact.dbId,!0).then((function(){return"avatar"===type?contact.getAvatar(256,!0):$q.when()})).then((function(){that.sendUpdateEvent(contact)})):that.sendUpdateEvent(contact))}),2e3,1)},that.onUserManagementEvent=function(stanza){try{var userSettingsElem=$(stanza).find("usersettings");if(userSettingsElem.length&&"update"===userSettingsElem.attr("action"))return $log.info("[contactService] onUserManagementEvent - should update the presence"),that.sendPresenceFromConfiguration(),!0;var userPasswordElem=$(stanza).find("userpassword");return!userPasswordElem.length||"update"!==userPasswordElem.attr("action")||($log.info("[contactService] onUserManagementEvent - userPassword updated"),that.changePasswordInfo||(that.changePasswordInfo={fromThirdParty:!0}),!0)}catch(error){return!0}},that.updateUserContactFullJid=function(){that.userContact.fullJid=xmppService.fullJid,that.attachHandlers()},this.getMinimumContactByDBId=function(dbId){return $q((function(resolve){resolve(that.createEmptyContactContact(dbId))}))},that.createEmptyContactContact=function(jid){var contact=that.createBasicContact(jid);return contact.initials="?",contact.displayName="Unknown contact",contact.lastname="Unknown contact",contact.firstname="",contact.temp=!0,contact.avatar=new Image,contact.avatar.src="/resources/skins/rainbow/images/conversations/unknownContact.png",contact},that.getContact=function(jid,phoneNumber){var contactId=jid||phoneNumber;return this.isUserContactJid(contactId)?that.userContact:this.contacts[contactId]},that.getOrCreateContact=function(jid,phoneNumber){if(!jid&&!phoneNumber)return $q.reject(new Error("No jid or no phoneNumber"));that.contacts||(that.contacts=[]);var contact=that.getContact(jid,phoneNumber);if(contact)return $q.resolve(contact);if(jid&&-1===jid.indexOf("@"))return $q.reject(new Error("Invalid jid "+jid));var contactId=jid||phoneNumber;return jid?(that.getOrCreateContactPromises[contactId]||(that.getOrCreateContactPromises[contactId]=$q((function(resolve,reject){that.getVCardInfoByJid(jid).then((function(userData){(contact=that.createBasicContact(jid,phoneNumber,!1)).updateFromUserData(userData),contact.updateRichStatus(),contact.getAvatar(),that.contacts[contact.id]=contact,that.dbContacts[contact.dbId]=contact,that.jtelContacts[contact.jidtel]=contact,that.sendUpdateEvent(contact),resolve(contact),delete that.getOrCreateContactPromises[contactId]})).catch((function(error){$log.error("[contactService] getOrCreateContact -- failure -- "+error.message),reject(error),delete that.getOrCreateContactPromises[contactId]}))}))),that.getOrCreateContactPromises[contactId]):$q.resolve(contact=that.createBasicContact(null,phoneNumber))},this.createBasicContact=function(jid,phoneNumber,append){$log.debug("[contactService] CreateContact "+jid+" "+utilService.anonymizePhoneNumber(phoneNumber));var contact=new Contact;if(!jid)return contact.id=phoneNumber,contact.initials="?",contact.displayName=phoneNumber||"Unknown contact",contact.lastname=phoneNumber||"Unknown contact",contact.firstname="",contact.phoneProCan=phoneNumber||"",contact.temp=!0,contact.avatar=new Image,contact.avatar.src="/resources/skins/rainbow/images/conversations/unknownContact.png",contact.setNameUpdatePrio(Contact.NameUpdatePrio.NO_UPDATE_PRIO),contact;var contactId=jid;return contactId||(contactId=phoneNumber,contact.phoneProCan=phoneNumber),contactId||(contactId="anonymous"),contact.jid=jid,contact.id=contactId,contact.ask="none",contact.subscription="none",contact.updateRichStatus(),!1!==append&&(that.contacts[contact.id]=contact),contact},this.getContactByJid=function(jid){var contact=null;return this.isUserContactJid(jid)?contact=that.userContact:this.contacts?contact=this.contacts[jid]:this.contacts=[],contact},this.getContactByEmail=function(email){var contact=null;for(var prop in this.contacts)this.contacts.hasOwnProperty(prop)&&this.contacts[prop].containsEmail(email)&&(contact=this.contacts[prop]);return contact},this.getContacts=function(){var contactArray=[];for(var key in this.contacts)this.contacts.hasOwnProperty(key)&&contactArray.push(this.contacts[key]);return contactArray},this.searchContacts=function(criteria){return this.getContacts().filter((function(contact){return(contact.roster||contact.isBot)&&!contact.isTerminated&&that.contactMatcher(contact,criteria)}))},this.contactMatcher=function(contact,criteria){var displayname=contact.firstname+" "+contact.lastname,queries=criteria.toLowerCase().trim().normalize("NFD").replace(/[\u0300-\u036f]/g,"").split(/[ ]+/),names=displayname.toLowerCase().trim().normalize("NFD").replace(/[\u0300-\u036f]/g,"").split(/[ ]+/);return queries.every((function(query){return names.some((function(name,index){return!(!name.length||0!==name.indexOf(query))&&(names[index]="",!0)}))}))},that.getContactById=function(id){return that.dbContacts[id]},that.getContactByDBId=function(dbId,force){var existingContact=that.dbContacts[dbId];if(!force&&existingContact)return $q.when(existingContact);var existingPromise=that.contactPromises[dbId];if(existingPromise)return $log.debug("[contactService] getContactByDBId for "+dbId+" already lauched"),existingPromise.promise;var defered=$q.defer();that.contactPromises[dbId]=defered;var url=config.restServerUrl+"/api/rainbow/enduser/v1.0/users/"+dbId;return $http({method:"GET",url:url,headers:authService.getRequestHeader()}).then((function(response){var user=response.data.data;$log.info("[contactService] GetContactByDBId ("+dbId+") -- "+user.jid_im+" -- success");var contact=existingContact||that.createBasicContact(user.jid_im);contact.updateFromUserData(user),contact.getAvatar(),that.dbContacts[contact.dbId]=contact,that.jtelContacts[contact.jidtel]=contact,defered.resolve(contact),delete that.contactPromises[dbId]}),(function(response){var error=errorHelperService.handleError(response);defered.reject(error),delete that.contactPromises[dbId],$log.error("[contactService] "+errorHelperService.getErrorFullMessage(response,"GetContactByDBId"))})),defered.promise},that.completeContactPhoneNumbers=function(contact){return $q((function(resolve,reject){contact.isBot?reject(new Error("No phone numbers for bot contacts")):contact.phoneNumbersInitialized?resolve(contact):that.getContactByDBId(contact.dbId,!0).then((function(updatedContact){resolve(updatedContact)})).catch((function(error){reject(error)}))}))},this.getContactsByJids=function(jids){return $q((function(resolve,reject){$log.info("[contactService] getContactsByJids with ["+jids.join()+"]");var serverUrl=config.webservices.protocol+"://"+config.webservices.currentServer+":"+config.webservices.port;$http({method:"POST",headers:authService.getPostHeader(),url:serverUrl+"/api/rainbow/enduser/v1.0/users/jids?limit=1000",data:{jid_im:jids}}).then((function(response){response.data.data.forEach((function(userData){var contact=that.getContactByJid(userData.jid_im);contact||(contact=new Contact),contact.updateFromUserData(userData),that.contacts[contact.id]=contact,that.dbContacts[contact.dbId]=contact,that.jtelContacts[contact.jidtel]=contact,contact.getAvatar(),contact.temp=!1})),resolve()}),(function(response){var error=errorHelperService.handleError(response);reject(error),$log.error("[contactService] "+errorHelperService.getErrorFullMessage(response,"getContactsByJids"))}))}))},this.getContactsByEmails=function(emails){return $q((function(resolve,reject){$log.info("[contactService] getContactsByEmails with ["+emails.join()+"]");var serverUrl=config.restServerUrl+"/api/rainbow/enduser/v1.0/users/loginemails",lowerCaseEmails=emails.map((function(email){return email.toLowerCase()}));$http({method:"POST",headers:authService.getPostHeader(),url:serverUrl,data:{loginEmail:lowerCaseEmails}}).then((function(response){var contacts={},contactsArray=[];response.data.data.forEach((function(userData){var contact=that.dbContacts[userData.id];contact||(contact=new Contact,that.contacts[contact.id]=contact,that.dbContacts[contact.dbId]=contact,that.jtelContacts[contact.jidtel]=contact),contact.updateFromUserData(userData),contact.getAvatar(),contacts[contact.loginEmail]=contact,contactsArray.push(contact),lowerCaseEmails.splice(lowerCaseEmails.indexOf(contact.loginEmail.toLowerCase()),1)})),resolve({contacts:contacts,contactsArray:contactsArray,emails:lowerCaseEmails})}),(function(response){var error=errorHelperService.handleError(response);reject(error),$log.error("[contactService] "+errorHelperService.getErrorFullMessage(response,"getContactsByEmails"))}))}))},that.getUserSettings=function(){return $q((function(resolve){var url=config.restServerUrl+"/api/rainbow/enduser/v1.0/users/"+that.userContact.dbId+"/settings";$http({method:"GET",url:url,headers:authService.getRequestHeader()}).then((function(response){$log.info("[contactService] GetUserSettings success");var presence=response.data.data.presence||"online",activeAlarm=response.data.data.activeAlarm||"relax1",activeNotif=response.data.data.activeNotif||"notif1",promptForCalendarPresence=response.data.data.promptForCalendarPresence,protectionAgainstMailTypeOffline=response.data.data.protectionAgainstMailTypeOffline;resolve({presence:presence,activeAlarm:activeAlarm,activeNotif:activeNotif,promptForCalendarPresence:promptForCalendarPresence,protectionAgainstMailTypeOffline:protectionAgainstMailTypeOffline})}),(function(response){$log.error("[contactService] "+errorHelperService.getErrorFullMessage(response,"GetUserSettings")),resolve({presence:"online",activeAlarm:"relax1",activeNotif:"notif1",promptForCalendarPresence:!1})}))}))},that.setUserSettings=function(params){return $q((function(resolve,reject){var url=config.restServerUrl+"/api/rainbow/enduser/v1.0/users/"+that.userContact.dbId+"/settings";$http({method:"PUT",url:url,headers:authService.getRequestHeader(),data:params}).then((function(){$log.info("[contactService] SetUserSettings "+JSON.stringify(params)+" -- success"),resolve()}),(function(response){var error=errorHelperService.handleError(response);$log.error("[contactService] "+errorHelperService.getErrorFullMessage(response,"SetUserSettings")),reject(error)}))}))},that.getVCardByDbId=function(dbId,shouldSkipAvatar){return $q((function(resolve,reject){var url=config.restServerUrl+"/api/rainbow/enduser/v1.0/users/"+dbId;$http({method:"GET",url:url,headers:authService.getRequestHeader()}).then((function(response){var user=response.data.data,contact=that.contacts[user.jid_im];contact.updateFromUserData(user),contact.updateRichStatus(that.isUserContactJid(user.jid_im)),shouldSkipAvatar||contact.getAvatar(),that.sendUpdateEvent(contact),resolve(contact)}),(function(response){var error=errorHelperService.handleError(response);reject(error),$log.error("[contactService] "+errorHelperService.getErrorFullMessage(response,"getVCardByDbId"))}))}))},that.getVCardInfoByJid=function(jid){return $q((function(resolve,reject){var url=config.restServerUrl+"/api/rainbow/enduser/v1.0/users/jids/"+jid;$http({method:"GET",url:url,headers:authService.getRequestHeader()}).then((function(response){resolve(response.data.data)})).catch((function(response){$log.error("[contactService] "+errorHelperService.getErrorFullMessage(response,"getVCardInfoByJid")),reject(errorHelperService.handleError(response))}))}))},that.getVCardInfoByEmail=function(email){return $q((function(resolve,reject){var url=config.restServerUrl+"/api/rainbow/enduser/v1.0/users/loginemails?format=full";$http({method:"POST",url:url,headers:authService.getRequestHeader(),data:{loginEmail:[email]}}).then((function(response){resolve(response.data.data)})).catch((function(response){$log.error("[contactService] "+errorHelperService.getErrorFullMessage(response,"getVCardsByEmail")),reject()}))}))},this.pushAvatarImage=function(avatarImg){var defered=$q.defer(),serverURL=config.webservices.protocol+"://"+config.webservices.currentServer+":"+config.webservices.port;$log.info("[contactService] Push avatar image ");var oldImage=that.userContact.avatar;return that.resizeImage(avatarImg,512,512).then((function(resizedImage){that.userContact.avatar=resizedImage;var binaryData=that.getBinaryData(resizedImage);$http({method:"POST",url:serverURL+"/api/rainbow/enduser/v1.0/users/"+that.userContact.dbId+"/avatar",headers:authService.getPostHeader("image/"+binaryData.type),data:binaryData.data,transformRequest:[]}).then((function(){defered.resolve()}),(function(response){that.userContact.avatar=oldImage;var error=errorHelperService.handleError(response);defered.reject(error),$log.error("[contactService] "+errorHelperService.getErrorFullMessage(response,"pushAvatarImage"))}))})),defered.promise},this.resizeImage=function(avatarImg,maxWidth,maxHeight){var defered=$q.defer(),image=new Image;return image.src=avatarImg,image.onload=function(){var imageWidth=image.width,imageHeight=image.height;imageWidth>imageHeight?imageWidth>maxWidth&&(imageHeight*=maxWidth/imageWidth,imageWidth=maxWidth):imageHeight>maxHeight&&(imageWidth*=maxHeight/imageHeight,imageHeight=maxHeight);var canvas=document.createElement("canvas");canvas.width=imageWidth,canvas.height=imageHeight,image.width=imageWidth,image.height=imageHeight,image.crossOrigin="Anonymous",canvas.getContext("2d").drawImage(this,0,0,imageWidth,imageHeight);var resizedImage=new Image;resizedImage.src=canvas.toDataURL("image/png"),defered.resolve(resizedImage)},defered.promise},this.getBinaryData=function(image){for(var typeIndex=image.src.indexOf("image/")+6,binaryIndex=image.src.indexOf(";base64,"),binaryData=image.src.slice(binaryIndex+8),imageType=image.src.slice(typeIndex,binaryIndex),binary_string=window.atob(binaryData),len=binary_string.length,bytes=new Uint8Array(len),i=0;i<len;i++)bytes[i]=binary_string.charCodeAt(i);return{type:imageType,data:bytes}},this.sendSubscription=function(contact){return"to"===contact.subscribe||"both"===contact.subscribe?$q.when(contact):(that.sendSubscribeInvitation(contact.jid),that.sendSubscribeInvitation(contact.jidtel),$q.when(contact))},that.sendSubscribeInvitation=function(jid){return $log.info("[contactService] Send subscribe invitation to "+jid),xmppService.send($pres({to:jid,type:"subscribe"}))},that.rosterChangedHandler=function(__event,attr){that.subscriptionPromiseQueue.add((function(){return that.rosterChangedHandlerPromise(attr)}))},that.rosterChangedHandlerPromise=function(attr){return that.isTelJid(attr.jid)?($log.debug("[contactService] Contact changed ("+attr.jid+") ignored"),$q.when()):$q((function(resolve){var subscription=attr.subscription,ask=attr.ask,jid_im=attr.jid;that.getOrCreateContact(jid_im).then((function(contact){"remove"===subscription?(contact.ask="none",contact.subscription="none",contact.roster=!1):(contact.ask=ask,contact.subscription=subscription,contact.roster=!0,"both"===subscription&&that.updatePresence(!0)),contact.updateRichStatus(),that.sendUpdateEvent(contact),$rootScope.$broadcast("ON_CONTACT_ROSTER_UPDATE_EVENT"),$log.info("[contactService] rosterChangedHandler - contact "+attr.jid+" changed ("+ask+", "+subscription+") success"),resolve()})).catch((function(error){$log.error("[contactService] rosterChangedHandler - contact "+attr.jid+" failure - "+error.message),resolve()}))}))},this.updateUserContact=function(userData){$log.info("[contactService] updateUserContact");var defered=$q.defer(),portalURL=config.restServerUrl+"/api/rainbow/enduser/v1.0/";return $http({method:"PUT",url:portalURL+"users/"+authService.userId,headers:authService.getPostHeader(),data:userData}).then((function(response){$log.info("[contactService] updateUserContact successfully"),that.userContact.updateFromUserData(response.data.data),defered.resolve()}),(function(response){var error=errorHelperService.handleError(response);defered.reject(error),$log.error("[contactService] "+errorHelperService.getErrorFullMessage(response,"updateUserContact"))})),defered.promise},that.updateUserPassword=function(oldPassword,newPassword,async){var defered=$q.defer();return that.changePasswordInfo={defered:defered,newPassword:newPassword},$http({method:"PUT",url:config.restServerUrl+"/api/rainbow/enduser/v1.0/users/"+authService.userId+"/change-password",headers:authService.getPostHeader(),data:{oldPassword:oldPassword,newPassword:newPassword}}).then((function(){$log.info("[contactService] updateUserPasswordRequest -- success"),async||defered.resolve()})).catch((function(response){$log.error("[contactService] "+errorHelperService.getErrorFullMessage(response,"updateUserPasswordRequest")),that.changePasswordInfo=null,defered.reject(errorHelperService.handleError(response))})),defered.promise},this.deleteUserAccount=function(){return $q((function(resolve,reject){$log.info("[contactService] deleteUserAccount"),$http({method:"DELETE",url:config.restServerUrl+"/api/rainbow/enduser/v1.0/users/"+that.userContact.dbId,headers:authService.getRequestHeader()}).then((function(){$log.info("[contactService] deleteUserAccount -- success"),resolve()})).catch((function(response){$log.error("[contactService] "+errorHelperService.getErrorFullMessage(response,"deleteUserAccount")),reject(errorHelperService.handleError(response))}))}))},this.isTelJid=function(jid){return 0===jid.indexOf("tel_")},this.getImJid=function(jid){var bareJid=xmppService.getBareJidFromJid(jid);if(this.isTelJid(bareJid)){var contact=this.jtelContacts[bareJid];return contact?contact.jid:($log.warn("[contactService] -- getIMJid("+jid+") -- failure -- no associated contact"),null)}return bareJid},this.getRessourceFromJid=function(jid){var result="";if(jid){var index=jid.indexOf("/");-1!==index&&(result=jid.substr(index+1))}return result},this.isUserContactJid=function(jid){return!(!that.userContact||!jid||0===jid.length)&&jid.startsWith(that.userContact.jid)},this.isUserContact=function(contact){return!(!contact||!contact.jid||0===contact.jid.length)&&(that.userContact?contact.jid.startsWith(that.userContact.jid):contact.jid.startsWith(xmppService.jid))},that.updateContactsLastActivity=function(){that.contacts&&Object.keys(that.contacts).forEach((function(key){that.contacts[key].updateLastActivityMessage()}))},that.updateLastActivity=function(contact){"offline"===contact.status||"away"===contact.status?contact.lastActivityDate=contact.getLastAvailableDate():contact.lastActivityDate=null},this.createBotContact=function(jid,name,id,botAvatarUrl){var contact;return contact=that.contacts[jid]?Contact.updateContactToBot(that.contacts[jid],name,id,botAvatarUrl):Contact.createBotContact(jid,name,id,botAvatarUrl),that.contacts[contact.id]=contact,that.dbContacts[id]=contact,contact},this.contactPresenceChangedHandler=function(__event,attr){if("calendar"!==that.getRessourceFromJid(attr.jid)){var jid_im=that.getImJid(attr.jid);jid_im&&(jid_im.startsWith("room")||that.getOrCreateContact(jid_im).then((function(contact){that.isTelJid(attr.jid)?($log.info("[contactService] Update telephony presence ("+jid_im+") Source = "+contact.getPCGPresenceSource(attr.jid)),$log.info("[contactService] Update telephony presence ("+jid_im+") msg : "+attr.message+" / status : "+attr.status),contact.updateTelephonyStatus(attr,that.isUserContact(contact))):($log.info("[contactService] Update im presence contact ("+jid_im+") : "+attr.status+" "+attr.stamp),that.isUserContact(contact)&&"mode=auto"===attr.message&&"online"!==contact.status&&contact.resources.hasOwnProperty(attr.jid)&&attr.jid!==contact.fullJid&&"EVT_SERVICE_INITIATED"!==contact.telStatus&&"EVT_ESTABLISHED"!==contact.telStatus&&(contact.resources[contact.fullJid]&&"online"===contact.resources[contact.fullJid].show?$log.info("[contactService] Current ressource is already online, ignore message!"):(that.manualState&&($log.info("[contactService] User is in manual state, leave it"),that.setUserContactStatus("online","mode=auto")),that.busyState&&"dnd"===that.busyState.status&&"busy"!==that.userContact.status&&($log.info("[contactService] User is in call, re-update presence state"),$interval((function(){that.updatePresence(!0)}),500,1,!0)))),contact.updateIMStatus(attr,that.isUserContact(contact)),that.updateLastActivity(contact)),that.sendUpdateEvent(contact)})))}},this.contactCalendarPresenceChangedHandler=function(__event,contact){contact.updateCalendarPresenceInfo()},this.setUserContactStatus=function(status,message,withAuthInfo){try{if($log.info("[contactService] Set userContact status : "+status+(message?"("+message+")":"")),xmppService.started)"online"===status?(that.manualState=!1,xmppService.sendPresence(null,message,withAuthInfo)):(that.manualState=!0,"away"===status?xmppService.sendPresence("away",message):"dnd"===status?xmppService.sendPresence("dnd",message):"xa"===status&&xmppService.sendPresence("xa",message));else if("online"===status){$injector.get("serviceLauncher").startServices()}}catch(error){$log.error("[contactService] Set userContact status error : "+error)}},this.sendPresenceFromConfiguration=function(sendAuthInfo){$log.info("(with auth info)");var defered=$q.defer();return that.getUserSettings().then((function(setting){var message="",presence=setting.presence;if("invisible"===presence?presence="xa":"away"===presence&&(presence="xa",message="away"),$log.info("[contactService] sendPresenceFromConfiguration -> getUserSettings are "+presence+" || message : "+message),that.userContact&&that.userContact.resources&&that.userContact.resources[that.userContact.fullJid]){var myRessource=that.userContact.resources[that.userContact.fullJid];myRessource&&(myRessource.show!==presence||"xa"===myRessource.show&&myRessource.status!==message)?that.busyState&&"dnd"===that.busyState.status&&!that.manualState||($log.info("[contactService] sendPresenceFromConfiguration should update my status from "+myRessource.show+" to "+presence+" ("+message+")"),that.setUserContactStatus(presence,message,sendAuthInfo)):$rootScope.$broadcast("ON_RELOAD_CAPABILITIES_FOR_MY_CONYTACT")}else $log.info("[contactService] sendPresenceFromConfiguration set initial presence "),that.setUserContactStatus(presence,message,sendAuthInfo);defered.resolve()})).catch((function(){$log.info("[contactService] sendPresenceFromConfiguration failure, send online"),that.setUserContactStatus("online",null,sendAuthInfo),defered.resolve()})),defered.promise},that.updateUserSettings=function(status,message){var presence="online";"xa"===status&&"away"===message?presence="away":"dnd"===status?presence="dnd":"xa"===status&&(presence="invisible"),that.setUserSettings({presence:presence})};var presentationModeIntervalPromise,lastUpdatePresentationMode=null;this.onPresentationModeChangedEvent=function(__event,status){"active"===status?that.presentationModeActive=!0:"disable"===status&&(that.presentationModeActive=!1),null===lastUpdatePresentationMode&&($log.debug("[contactService] onPresentationModeChangedEvent status:"+status+" request presence update"),lastUpdatePresentationMode=that.presentationModeActive,that.updatePresence()),function startUpdatePresentationModeRefreshTimer(){$log.debug("[contactService] startUpdatePresentationModeRefreshTimer"),null!==presentationModeIntervalPromise&&($interval.cancel(presentationModeIntervalPromise),presentationModeIntervalPromise=null),presentationModeIntervalPromise=$interval((function(){$log.debug("[contactService] startUpdatePresentationModeRefreshTimer interval reach"),lastUpdatePresentationMode!==that.presentationModeActive?($log.debug("[contactService] startUpdatePresentationModeRefreshTimer interval - request presence update"),lastUpdatePresentationMode=that.presentationModeActive,that.updatePresence(),startUpdatePresentationModeRefreshTimer()):($log.debug("[contactService] startUpdatePresentationModeRefreshTimer interval - no presence update needed"),lastUpdatePresentationMode=null)}),1e3,1,!0)}()},this.changeMyPresence=function(status){if($log.info("[contactService] changeMyPresence "+status+" "+that.userContact.message),("dnd"!==status||"presentation"!==that.userContact.message)&&"busy"!==status){var message="";"online"===status&&(message="mode=auto"),"away"===status&&(status="xa",message="away"),that.setUserContactStatus(status,message),"online"===status&&$interval((function(){that.manualState=!1,that.updatePresence()}),1e3,1,!0),that.updateUserSettings(status,message)}},this.computeStatusList=function(){var list=[];return that.userContact&&that.userContact.status&&($log.info("[contactService] computeStatusList "+that.userContact.status+" "+that.userContact.message),list="offline"===that.userContact.status?["online"]:"busy"===that.userContact.status?["busy"]:"dnd"===that.userContact.status&&"presentation"===that.userContact.message?["dnd"]:["online","away","xa","dnd"]),list},this.resetBusyState=function(){$log.info("[contactService] resetBusyState"),that.setBusyState(null,null,!0),that.sendPresenceFromConfiguration()},this.setBusyState=function(status,message,noUpdate){$log.info("[contactService] setBusyState -- "+status+" -- "+message),that.busyState={status:status,message:message},noUpdate||that.updatePresence()},$rootScope.$on("$destroy",$rootScope.$on("ON_PRESENTATION_MODE_CHANGED_EVENT",that.onPresentationModeChangedEvent)),this.updatePresence=function(forced){$log.info("[contactService] updatePresence"),that.manualState?($log.info("[contactService] updatePresence manualState"),"away"===that.userContact.status&&that.busyState&&"dnd"===that.busyState.status&&(that.setUserContactStatus("online","mode=auto"),$interval((function(){that.updatePresence()}),1e3,1,!0))):!that.presentationModeActive||that.busyState&&that.busyState.status?that.busyState&&"dnd"===that.busyState.status?($log.info("[contactService] updatePresence dnd "+that.busyState.message),xmppService.sendPresence("dnd",that.busyState.message)):that.awayStateActive?($log.info("[contactService] updatePresence away"),xmppService.sendPresence("away","")):that.userContact&&"online"!==that.userContact.status?($log.info("[contactService] updatePresence online"),that.setUserContactStatus("online")):forced&&that.userContact&&"online"===that.userContact.status&&($log.info("[contactService] updatePresence forced online"),that.setUserContactStatus("online")):($log.info("[contactService] updatePresence dnd presentation"),xmppService.sendPresence("dnd","presentation"))},this.removeContact=function(contact){return $q((function(resolve,reject){if(!contact)return $log.error("[contactService] removeContact : missing contact !"),void reject();$log.info("[contactService] removeContact : "+contact.displayNameForLog()),that.removeContactFromRoster(contact.dbId).then((function(){$log.info("[contactService] removeContact : "+contact.displayNameForLog()+" success"),resolve()})).catch((function(error){$log.error("[contactService] removeContact: "+contact.displayNameForLog()+" failure : "+error.message),reject(error)}))}))},this.removeContactFromRoster=function(dbId){return $q((function(resolve,reject){if(!dbId)return $log.error("[contactService] removeContactFromRoster : missing id !"),void reject();$log.info("[contactService] removeContactFromRoster for id "+dbId);var serverUrl=config.restServerUrl+"/api/rainbow/enduser/v1.0/users/networks/"+dbId;$http({method:"DELETE",url:serverUrl,headers:authService.getRequestHeader()}).then((function(){$log.info("[contactService] removeContactFromRoster success for id "+dbId),resolve()}),(function(response){var errorMessage="removeContactFromRoster failure: no server response";response&&(errorMessage="removeContactFromRoster failure: "+JSON.stringify(response)),$log.error("[contactService] "+errorMessage),reject(new Error(errorMessage))}))}))},this.sendUpdateEvent=function(contact){var event=that.isUserContact(contact)?"ON_USER_CONTACT_UPDATED_EVENT":"ON_CONTACT_UPDATED_EVENT";$rootScope.$broadcast(event,contact)},this.myMobileAvailable=function(){return that.userContact?that.userContact.mobileResource:null},this.notifyImByEmail=function(contact){return $q((function(resolve,reject){$http({method:"POST",url:config.restServerUrl+"/api/rainbow/enduser/v1.0/notifications/emails/offline",headers:authService.getRequestHeader(),data:{userId:contact.dbId}}).then((function(response){var mail="";response.data&&response.data.data&&response.data.data.email&&(mail=response.data.data.email.substr(0,3)+"***"+response.data.data.email.substr(-3)),$log.info("[contactService] notifyImByEmail "+mail+" - success"),resolve()}),(function(response){$log.error("[contactService] notifyImByEmail failure ("+response.data.errorDetailsCode+") : "+response.data.errorDetails.errorMsg),reject(response)}))}))}}])},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var crypto_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(2);angular.module("rainbow").service("botService",["$http","$q","$log","$rootScope","$interval","authService","contactService","conversationService",function($http,$q,$log,$rootScope,$interval,authService,contactService,conversationService){var service=this;service.listeners=[],service.start=function(stats){$log.info("[botService] === STARTING ===");var startDate=performance.now();return $q((function(resolve,reject){service.init(),service.startListeners(),service.getBots().then((function(bots){$log.info(""),service.findEmily(bots),service.unlockWaitingConversations();var startDuration=Math.round(performance.now()-startDate);stats.push({service:"botService",startDuration:startDuration}),$log.info("[botService] === STARTED ("+startDuration+" ms) ==="),$log.info(""),resolve()})).catch((function(error){$log.info("[botService] === STARTING FAILURE === "+error.message),reject()}))}))},service.stop=function(){$log.info("[botService] === STOPPED ===")},service.init=function(){service.emily=null,this.portalURL=config.restServerUrl+"/api/rainbow/enduser/v1.0/"},service.startListeners=function(){service.listeners.push($rootScope.$on("ON_COMPANY_SUPPORT_AVATAR_CHANGE_EVENT",service.onSupportAvatarChange))},service.stopListeners=function(){for(var listener;listener=listeners.pop();)listener()},service.onSupportAvatarChange=function(__event,supportAvatarInfo){$log.info("[botService] Emily avatar has been changed"),supportAvatarInfo.companyId===contactService.userContact.company.id&&service.getEmilyBot().then((function(supportBot){service.updateEmily(supportBot)})).catch((function(error){$log.warn("[botService] Impossible to update Emily - "+error.stack||!1)}))},service.getBots=function(format){return $q((function(resolve,reject){var url=service.portalURL+"bots?format="+(format||"full");$http({method:"GET",url:url,headers:authService.getRequestHeader()}).then((function(response){$log.info("[botService] getBots success"),resolve(response.data.data)})).catch((function(response){var errorMessage="getBots failure "+response.data.errorDetails+" with status "+response.status;$log.error("[botService] "+errorMessage),reject(new Error(errorMessage))}))}))},service.getEmilyBot=function(){return $q((function(resolve,reject){var url=service.portalURL+"bots/rainbow-support";$http({method:"GET",url:url,headers:authService.getRequestHeader()}).then((function(response){$log.info("[botService] getEmilyBot success"),resolve(response.data.data)})).catch((function(response){var errorMessage="getEmilyBot failure "+response.data.errorDetails+" with status "+response.status;$log.error("[botService] "+errorMessage),reject(new Error(errorMessage))}))}))},service.findEmily=function(bots){bots.forEach((function(bot){"Emily"===bot.name&&($log.info("[botService] Emily is found"),service.updateEmily(bot))}))},service.updateEmily=function(bot){service.emily=service.emily||bot,service.emily.name=bot.name,service.emily.id=bot.id,service.emily.avatarId=bot.avatarId||bot.id,service.emily.lastAvatarUpdateDate=bot.lastAvatarUpdateDate,service.emily.avatarUrl=service.getBotAvatarUrl(service.emily.avatarId,service.emily.lastAvatarUpdateDate),contactService.createBotContact(service.emily.jid,service.emily.name,service.emily.id,service.emily.avatarUrl),$log.info("[botService] Emily contact has been updated")},service.getEmily=function(){return service.emily},service.openConversationWithEmily=function(){return $q((function(resolve,reject){$log.info("[botService] openConversationWithEmily");var botContact=contactService.getContactByJid(service.emily.jid);conversationService.getOrCreateOneToOneConversation(botContact.jid).then((function(conversation){conversationService.setActiveConversation(conversation),resolve(conversation)})).catch((function(){$log.error("[botService] openConversationWithEmily failure"),reject()}))}))},service.unlockWaitingConversations=function(){conversationService.unlockWaitingBotConversations(!0)},service.getBotAvatarImage=function(avatarId,lastAvatarUpdateDate){return $q((function(resolve,reject){$log.info("[botService] getBotAvatarImage");var imgSrc=service.getBotAvatarUrl(avatarId,lastAvatarUpdateDate),image=new Image,nbErrors=0;image.onload=function(){var loadedImage=this;$interval((function(){$log.log("[botService] Load bot avatar "+avatarId+" lastAvatarUpdateDate "+lastAvatarUpdateDate+" success"),resolve(loadedImage)}),1,1)},image.onerror=function(){nbErrors++,$interval((function(){$log.warn("[botService] Load bor avatar "+avatarId+" lastAvatarUpdateDate "+lastAvatarUpdateDate+" failure"),1===nbErrors?($log.warn("[botService] Fallback to default emily avatar"),image.src="/resources/skins/rainbow/images/conversation/icon_headset.png"):reject(new Error("No image found"))}),1,1)},image.src=imgSrc}))},service.getBotAvatarUrl=function(botId,lastAvatarUpdateDate){var serverURL=config.webservices.protocol+"://"+config.webservices.currentServer;$rootScope.cdn&&(serverURL=$rootScope.cdnServer);var imgSrc=serverURL+"/api/avatar/"+botId+"?size=120";return imgSrc+=lastAvatarUpdateDate?"&update="+Object(crypto_js__WEBPACK_IMPORTED_MODULE_0__.MD5)(crypto_js__WEBPACK_IMPORTED_MODULE_0__.enc.Latin1.parse(lastAvatarUpdateDate)).toString(crypto_js__WEBPACK_IMPORTED_MODULE_0__.enc.Hex):"&update="+Date.now()}}])},function(module,exports,__webpack_require__){"use strict";var __awaiter=this&&this.__awaiter||function(thisArg,_arguments,P,generator){return new(P||(P=Promise))((function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){var value;result.done?resolve(result.value):(value=result.value,value instanceof P?value:new P((function(resolve){resolve(value)}))).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())}))};Object.defineProperty(exports,"__esModule",{value:!0});const call_model_1=__webpack_require__(0);angular.module("rainbow").service("conversationService",["$q","$log","$rootScope","$http","$interval","$translate","xmppService","authService","contactService","Conversation","videoService","telephonyService","roomService","settingsService","ConversationServiceEventHandler","ConversationServiceHistoryHandler","utilService","profileService","SearchTextConvResultsFactory","pstnConferenceService","webConferenceService","webrtcGatewayService",function($q,$log,$rootScope,$http,$interval,$translate,xmppService,authService,contactService,Conversation,videoService,telephonyService,roomService,settingsService,ConversationServiceEventHandler,ConversationServiceHistoryHandler,utilService,profileService,SearchTextConvResultsFactory,pstnConferenceService,webConferenceService,webrtcGatewayService){var service=this;this.started=!1;service.start=stats=>{$log.info(""),$log.info("[conversationService] === STARTING ===");var defered=$q.defer(),startDate=performance.now();return this.pendingMessages={},this.activeConversation=null,this.conversations=[],this.conversationCreationPromise={},this.inCallConversations=[],this.idleConversations=[],this.involvedContactIds=[],this.searchTextResults=SearchTextConvResultsFactory(),this.waitingBotConversations=[],this.botServiceReady=!1,this.isBasicCallAllowed=profileService.isFeatureEnabled(profileService.FeaturesEnum.TELEPHONY_BASIC_CALL),this.isSecondCallAllowed=profileService.isFeatureEnabled(profileService.FeaturesEnum.TELEPHONY_SECOND_CALL),this.attachHandlers(),$log.info("[conversationService] getServerConversations"),service.getServerConversations().then(()=>{service.started=!0,service.linkAllActiveCallsToConversations();var startDuration=Math.round(performance.now()-startDate);stats.push({service:"conversationService",startDuration:startDuration}),$log.info("[conversationService] === STARTED ("+startDuration+" ms) ==="),defered.resolve()}).catch(error=>{$log.info("[conversationService] === STARTING FAILURE === "+error.message),defered.reject(error)}),this.contactUpdateEventHandlerCleaner&&($log.warn("[conversationService] already subscribed to event ON_CONTACT_UPDATED_EVENT, rehandle it"),this.contactUpdateEventHandlerCleaner()),this.contactUpdateEventHandlerCleaner=$rootScope.$on("ON_CONTACT_UPDATED_EVENT",this.onContactChangedEvent),this.roomUpdateEventHandlerCleaner&&($log.warn("[conversationService] already subscribed to event "+roomService.ROOM_UPDATE_EVENT+", rehandle it"),this.roomUpdateEventHandlerCleaner()),this.roomUpdateEventHandlerCleaner=$rootScope.$on(roomService.ROOM_UPDATE_EVENT,this.onRoomChangedEvent),this.roomAddConferenceEventHandlerCleaner&&($log.warn("[conversationService] already subscribed to event "+roomService.ROOM_ADD_CONF_ENDPOINT_EVENT+", rehandle it"),this.roomAddConferenceEventHandlerCleaner()),this.roomAddConferenceEventHandlerCleaner=$rootScope.$on(roomService.ROOM_ADD_CONF_ENDPOINT_EVENT,this.onRoomAddConferenceEvent),this.roomHistoryUpdateEventHandlerCleaner&&($log.warn("[conversationService] already subscribed to event "+roomService.ROOM_HISTORY_UPDATE_EVENT+", rehandle it"),this.roomHistoryUpdateEventHandlerCleaner()),this.roomHistoryUpdateEventHandlerCleaner=$rootScope.$on(roomService.ROOM_HISTORY_UPDATE_EVENT,this.onRoomHistoryChangedEvent),this.roomAdminMessageEventHandlerCleaner&&($log.warn("[conversationService] already subscribed to event "+roomService.ROOM_ADMIN_MESSAGE_EVENT+", rehandle it"),this.roomAdminMessageEventHandlerCleaner()),this.roomAdminMessageEventHandlerCleaner=$rootScope.$on(roomService.ROOM_ADMIN_MESSAGE_EVENT,this.onRoomAdminMessageEvent),this.callUpdateEventHandlerCleaner&&($log.warn("[conversationService] already subscribed to event ON_CALL_UPDATED_EVENT, rehandle it"),this.callUpdateEventHandlerCleaner()),this.callUpdateEventHandlerCleaner=$rootScope.$on("ON_CALL_UPDATED_EVENT",this.onCallEvent),this.conversationUpdateEventHandlerCleaner&&($log.warn("[conversationService] already subscribed to event ON_CONVERSATIONS_UPDATED_EVENT, rehandle it"),this.conversationUpdateEventHandlerCleaner()),this.conversationUpdateEventHandlerCleaner=$rootScope.$on("ON_CONVERSATIONS_UPDATED_EVENT",this.onConversationEvent),this.capacityUpdateEventHandlerCleaner&&($log.warn("[conversationService] already subscribed to event ON_UPDATE_MYCONTACT_EVENT, rehandle it"),this.capacityUpdateEventHandlerCleaner()),this.capacityUpdateEventHandlerCleaner=$rootScope.$on("ON_UPDATE_MYCONTACT_EVENT",this.onMyContactChangedEvent),this.telephonyStateEventHandlerCleaner&&($log.warn("[conversationService] already subscribed to event ON_TELEPHONY_STATUS_CHANGED_EVENT, rehandle it"),this.telephonyStateEventHandlerCleaner()),this.telephonyStateEventHandlerCleaner=$rootScope.$on("ON_TELEPHONY_STATUS_CHANGED_EVENT",this.onTelephonyStateChangeEvent),this.conferenceStateEventHandlerCleaner&&($log.warn("[conversationService] already subscribed to event ON_CONFERENCE_STATE_EVENT, rehandle it"),this.conferenceStateEventHandlerCleaner()),this.conferenceStateEventHandlerCleaner=$rootScope.$on("ON_CONFERENCE_STATE_EVENT",this.onConferenceStateChangeEvent),this.conferenceParticipantsEventHandlerCleaner&&($log.warn("[conversationService] already subscribed to event ON_CONFERENCE_PARTICIPANT_EVENT, rehandle it"),this.conferenceParticipantsEventHandlerCleaner()),this.conferenceParticipantsEventHandlerCleaner=$rootScope.$on("ON_CONFERENCE_PARTICIPANT_EVENT",this.onConferenceParticipantChangeEvent),this.reloadCapabilitiesForMyContactEventHandlerCleaner&&($log.warn("[conversationService] already subscribed to event ON_RELOAD_CAPABILITIES_FOR_MY_CONYTACT, rehandle it"),this.reloadCapabilitiesForMyContactEventHandlerCleaner()),this.reloadCapabilitiesForMyContactEventHandlerCleaner=$rootScope.$on("ON_RELOAD_CAPABILITIES_FOR_MY_CONYTACT",this.onReloadCapabilitiesForMyContactEvent),defered.promise},this.attachHandlers=()=>{this.removeHandlers(),$log.info("[conversationService] attachHandlers"),this.conversationHistoryHandler=ConversationServiceHistoryHandler.create(this),this.conversationServiceEventHandler=ConversationServiceEventHandler.create(this),xmppService.addHistoryHandler(stanza=>service.conversationHistoryHandler.onHistoryMessageReceived(stanza)),xmppService.addSearchTextHandler((queryId,stanza)=>{if($log.info("[conversationService] addSearchTextHandler"),service.searchTextResults.isCurrentQuery(queryId)){$log.info("[conversationService] searchText: queryId are matching");var searchTextItem=service.conversationHistoryHandler.onSearchTextMessageReceived(stanza);searchTextItem&&($log.info("[conversationService] searchText: save item result"),service.searchTextResults.addNewItemResult(searchTextItem.otherJid,searchTextItem))}else $log.info("[conversationService] searchText: queryId are NOT matching : "+queryId)}),this.messageHandlerRef||(this.messageHandlerRef=xmppService.addHandler(stanza=>(service.conversationServiceEventHandler.onChatMessageReceived(stanza),!0),null,"message","chat")),this.messageMucHandlerRef||(this.messageMucHandlerRef=xmppService.addHandler(stanza=>(service.conversationServiceEventHandler.onChatMessageReceived(stanza),!0),null,"message","groupchat")),this.fileMessageHandlerRef||(this.fileMessageHandlerRef=xmppService.addHandler(stanza=>(service.conversationServiceEventHandler.onFileMessageReceived(stanza),!0),null,"message","file")),this.webrtcMessageHandlerRef||(this.webrtcMessageHandlerRef=xmppService.addHandler(stanza=>(service.conversationServiceEventHandler.onWebRTCMessageReceived(stanza),!0),null,"message","webrtc")),this.convMessageHandlerRef||(this.convMessageHandlerRef=xmppService.addHandler(stanza=>(service.conversationServiceEventHandler.onManagementMessageReceived(stanza),!0),null,"message","management")),this.receiptMessageHandlerRef||(this.receiptMessageHandlerRef=xmppService.addHandler(stanza=>(service.conversationServiceEventHandler.onReceiptMessageReceived(stanza),!0),null,"message")),this.audioConfMessageHandlerRef||(this.audioConfMessageHandlerRef=xmppService.addHandler(stanza=>(service.conversationServiceEventHandler.onConferenceMessageReceived(stanza),!0),"jabber:x:audioconference","message","chat"))},this.removeHandlers=()=>{$log.info("[conversationService] removeHandlers "),this.conversationHistoryHandler&&(this.conversationHistoryHandler=null),this.conversationServiceEventHandler&&(this.conversationServiceEventHandler=null),this.messageHandlerRef&&(xmppService.deleteHandler(this.messageHandlerRef),this.messageHandlerRef=null),this.fileMessageHandlerRef&&(xmppService.deleteHandler(this.fileMessageHandlerRef),this.fileMessageHandlerRef=null),this.webrtcMessageHandlerRef&&(xmppService.deleteHandler(this.webrtcMessageHandlerRef),this.webrtcMessageHandlerRef=null),this.convMessageHandlerRef&&(xmppService.deleteHandler(this.convMessageHandlerRef),this.convMessageHandlerRef=null),this.receiptMessageHandlerRef&&(xmppService.deleteHandler(this.receiptMessageHandlerRef),this.receiptMessageHandlerRef=null),this.messageMucHandlerRef&&(xmppService.deleteHandler(this.messageMucHandlerRef),this.messageMucHandlerRef=null),this.recordingMessageHandlerRef&&(xmppService.deleteHandler(this.recordingMessageHandlerRef),this.recordingMessageHandlerRef=null),this.audioConfMessageHandlerRef&&(xmppService.deleteHandler(this.audioConfMessageHandlerRef),this.audioConfMessageHandlerRef=null)},service.stop=()=>($log.info("[conversationService] === STOPPING ==="),this.conversations=null,this.messageHandlerRef&&(xmppService.deleteHandler(this.messageHandlerRef),this.messageHandlerRef=null),this.fileMessageHandlerRef&&(xmppService.deleteHandler(this.fileMessageHandlerRef),this.fileMessageHandlerRef=null),this.webrtcMessageHandlerRef&&(xmppService.deleteHandler(this.webrtcMessageHandlerRef),this.webrtcMessageHandlerRef=null),this.recordingMessageHandlerRef&&(xmppService.deleteHandler(this.recordingMessageHandlerRef),this.recordingMessageHandlerRef=null),this.audioConfMessageHandlerRef&&(xmppService.deleteHandler(this.audioConfMessageHandlerRef),this.audioConfMessageHandlerRef=null),this.contactUpdateEventHandlerCleaner&&(this.contactUpdateEventHandlerCleaner(),this.contactUpdateEventHandlerCleaner=null),this.roomUpdateEventHandlerCleaner&&(this.roomUpdateEventHandlerCleaner(),this.roomUpdateEventHandlerCleaner=null),this.roomAddConferenceEventHandlerCleaner&&(this.roomAddConferenceEventHandlerCleaner(),this.roomAddConferenceEventHandlerCleaner=null),this.roomAdminMessageEventHandlerCleaner&&(this.roomAdminMessageEventHandlerCleaner(),this.roomAdminMessageEventHandlerCleaner=null),this.callUpdateEventHandlerCleaner&&(this.callUpdateEventHandlerCleaner(),this.callUpdateEventHandlerCleaner=null),this.conversationUpdateEventHandlerCleaner&&(this.conversationUpdateEventHandlerCleaner(),this.conversationUpdateEventHandlerCleaner=null),this.capacityUpdateEventHandlerCleaner&&(this.capacityUpdateEventHandlerCleaner(),this.capacityUpdateEventHandlerCleaner=null),this.telephonyStateEventHandlerCleaner&&(this.telephonyStateEventHandlerCleaner(),this.telephonyStateEventHandlerCleaner=null),this.started=!1,this.isReinit=!1,$log.info("[conversationService] === STOPPED ==="),$q.when()),service.getServerConversations=()=>$q((resolve,reject)=>{$http({method:"GET",url:config.restServerUrl+"/api/rainbow/enduser/v1.0/users/"+contactService.userContact.dbId+"/conversations",headers:authService.getRequestHeader()}).then(response=>{$log.info("[conversationService] getServerConversations -- success");var conversationPromises=[];response.data.data.forEach(conversationData=>{$log.info("[conversationService] getServerConversations -- create conversation "+conversationData.jid_im+" "+conversationData.id);var missedImCounter=parseInt(conversationData.unreadMessageNumber,10),conversationPromise=null,muted=!0===conversationData.mute;conversationPromise="user"===conversationData.type?service.getOrCreateOneToOneConversation(conversationData.jid_im,conversationData.id,conversationData.lastMessageDate,conversationData.lastMessageText,missedImCounter,muted,conversationData.creationDate):service.getRoomConversation(conversationData.jid_im,conversationData.id,conversationData.lastMessageDate,conversationData.lastMessageText,missedImCounter,!0,muted,conversationData.creationDate,conversationData.lastMessageSender,conversationData.topic,conversationData.type),conversationPromises.push(conversationPromise)}),$q.all(conversationPromises).then(()=>service.removeOlderConversations()).then(()=>{service.orderConversations(),resolve()}).catch(error=>{var errorMessage="getServerConversations failure: "+error.message;$log.error("[conversationService] "+errorMessage),reject(new Error(errorMessage))})},response=>{var errorMessage="getServerConversations failure: no server response";response&&(errorMessage="getServerConversations failure: "+JSON.stringify(response)),$log.error("[conversationService] "+errorMessage),reject(new Error(errorMessage))})}),this.createServerConversation=conversation=>$q((resolve,reject)=>{if(conversation.dbId)resolve(conversation);else{var url=config.restServerUrl+"/api/rainbow/enduser/v1.0/users/"+contactService.userContact.dbId+"/conversations",data=null;switch(conversation.type){case Conversation.Type.ONE_TO_ONE:data={peerId:conversation.contact.dbId,type:"user"};break;case Conversation.Type.ROOM:data={peerId:conversation.room.dbId,type:"room"};break;case Conversation.Type.BOT:conversation.type=Conversation.Type.ONE_TO_ONE,data={peerId:conversation.contact.dbId,type:"bot"}}$http({method:"POST",url:url,headers:authService.getRequestHeader(),data:data}).then(response=>{conversation.dbId=response.data.data.id,resolve(conversation)}).catch(response=>{var errorMessage="createServerConversation failure: unknown ... ";response.data&&response.data.errorDetails&&(errorMessage="createServerConversation failure: "+response.data.errorDetails),$log.warn("[conversationService] "+errorMessage),reject(new Error(errorMessage))})}}),this.deleteServerConversation=conversationId=>{var defered=$q.defer();return conversationId?($http({method:"DELETE",url:config.restServerUrl+"/api/rainbow/enduser/v1.0/users/"+contactService.userContact.dbId+"/conversations/"+conversationId,headers:authService.getRequestHeader()}).then(()=>{$log.info("[conversationService] deleteServerConversation success: "+conversationId),service.orderConversations(),defered.resolve()},response=>{if(404002===response.data.errorDetailsCode)$log.info("[conversationService] deleteServerConversation success: "+conversationId),defered.resolve();else{var errorMessage="deleteServerConversation failure: "+response.data.errorDetails;$log.warn("[conversationService] "+errorMessage),defered.reject(new Error(errorMessage))}}),defered.promise):$q.when()},this.updateServerConversation=conversation=>{var defered=$q.defer();return conversation?($http({method:"PUT",url:config.restServerUrl+"/api/rainbow/enduser/v1.0/users/"+contactService.userContact.dbId+"/conversations/"+conversation.dbId,headers:authService.getPostHeader(),data:{mute:conversation.muted}}).then(()=>{$log.info("[conversationService] updateServerConversation success: "+conversation.dbId),defered.resolve()},response=>{var errorMessage="updateServerConversation failure: "+response.data.errorDetails;$log.warn("[conversationService] "+errorMessage),defered.reject(new Error(errorMessage))}),defered.promise):$q.when()},this.ackAllMessages=conversationDbId=>$q((resolve,reject)=>{if(!conversationDbId)return $log.error("[conversationService] ackAllMessages for conversation error -- missing conversation id"),void reject();var conversation=service.getConversationByDbId(conversationDbId);if(!conversation)return $log.error("[conversationService] ackAllMessages for conversation error -- can not find conversation"),void reject();$log.info("[conversationService] ackAllMessages for conversation "+conversationDbId),conversation.ackReadAllMessages(),$http({method:"PUT",url:config.restServerUrl+"/api/rainbow/enduser/v1.0/users/"+contactService.userContact.dbId+"/conversations/"+conversationDbId+"/markallread",headers:authService.getPostHeader()}).then(()=>{$log.info("[conversationService] ackAllMessages success: "+conversationDbId),resolve()},response=>{var errorMessage="ackAllMessages failure: "+response.data.errorDetails;$log.warn("[conversationService] "+errorMessage),reject(new Error(errorMessage))})}),this.getConversationAsyncById=(conversationId,type)=>{return this["room"===type?"getRoomConversation":"getOrCreateOneToOneConversation"](conversationId)},this.getOrCreateOneToOneConversation=(conversationId,conversationDbId,lastModification,lastMessageText,missedIMCounter,muted,creationDate)=>{if($log.info("[conversationService] getOrCreateOneToOneConversation "+conversationId+" "+conversationDbId+" "+missedIMCounter),!service.conversationCreationPromise[conversationId]){var conv=service.getConversationById(conversationId);if(conv)return conv.preload=!0,$q.resolve(conv);service.conversationCreationPromise[conversationId]=$q((resolve,reject)=>{contactService.getOrCreateContact(conversationId).then(contact=>{var conversation=Conversation.createOneToOneConversation(contact);return conversation.lastModification=lastModification?new Date(lastModification):void 0,conversation.lastMessageText=lastMessageText,conversation.muted=muted,conversation.creationDate=creationDate?new Date(creationDate):new Date,conversation.preload=!1,service.computeCapabilitiesForContact(contact),conversation.dbId=conversationDbId,conversation.missedCounter=missedIMCounter||0,service.createServerConversation(conversation)}).then(conversation=>{service.conversations[conversation.contact.id]=conversation,service.orderConversations(),$rootScope.$broadcast("ON_CONVERSATIONS_UPDATED_EVENT",conversation,Conversation.EventType.NEW),resolve(conversation),delete service.conversationCreationPromise[conversationId]}).catch(error=>{var errorMessage="getOrCreateOneToOneConversation "+conversationId+" failure "+error.message;$log.error("[conversationService] "+errorMessage),reject(new Error(errorMessage)),delete service.conversationCreationPromise[conversationId]})})}return service.conversationCreationPromise[conversationId]},this.getRoomConversation=(roomJid,conversationDbId,lastModification,lastMessageText,missedIMCounter,noError,muted,creationDate,lastMessageSender,topic,type)=>{if($log.info("[conversationService] getRoomConversation "+roomJid),!service.conversationCreationPromise[roomJid]){var conv=service.getConversationById(roomJid);if(conv)return conv.preload=!0,$q.resolve(conv);service.conversationCreationPromise[roomJid]=$q((resolve,reject)=>{$interval(()=>{var room=roomService.getRoomByJid(roomJid);if(room){var conversation=Conversation.createRoomConversation(room);conversation.dbId=conversationDbId,conversation.lastModification=lastModification?new Date(lastModification):void 0,conversation.lastMessageText=lastMessageText,conversation.muted=muted,conversation.creationDate=creationDate?new Date(creationDate):new Date,conversation.preload=!1,conversation.lastMessageSender=lastMessageSender,conversation.room&&topic&&(conversation.room.desc=topic),missedIMCounter&&(conversation.missedCounter=missedIMCounter),conversationDbId?(service.conversations[conversation.id]=conversation,service.getRoomConferences(conversation).then(()=>{$rootScope.$broadcast("ON_CONVERSATIONS_UPDATED_EVENT",conversation,Conversation.EventType.NEW),resolve(conversation),delete service.conversationCreationPromise[roomJid]}).catch(error=>{var errorMessage="getRoomConversation "+roomJid+" failure "+error.message;$log.error("[conversationService] "+errorMessage),reject(new Error(errorMessage)),delete service.conversationCreationPromise[roomJid]})):service.createServerConversation(conversation).then(conversation=>{var room=roomService.getRoomByJid(roomJid);conversation.room=room,service.conversations[conversation.id]=conversation,service.orderConversations(),room&&"unsubscribed"!==room.status&&room.isActive&&roomService.sendInitialRoomPresence(room),$rootScope.$broadcast("ON_CONVERSATIONS_UPDATED_EVENT",conversation,Conversation.EventType.NEW),resolve(conversation),delete service.conversationCreationPromise[roomJid]})}else{"bot"!==type&&$log.error("[conversationService] getRoomConversation ("+roomJid+") failure : no such room");var obj={jid:roomJid,conversationDbId:conversationDbId,lastModification:lastModification,lastMessageText:lastMessageText,missedIMCounter:missedIMCounter,muted:muted,creationDate:creationDate};service.waitingBotConversations.push(obj),service.unlockWaitingBotConversations(),resolve(),delete service.conversationCreationPromise[roomJid]}},1,1)})}return service.conversationCreationPromise[roomJid]},service.getRoomConferences=conversation=>$q(resolve=>{var confEndpoints=conversation.room.confEndpoints;confEndpoints&&confEndpoints.forEach(confEndpoint=>{if("pstnAudio"===confEndpoint.mediaType){var conferenceSession=pstnConferenceService.getConferenceSessionById(confEndpoint.confEndpointId);conferenceSession&&(conversation.pstnConferenceSession=conferenceSession)}}),resolve()}),service.updateRoomConferences=()=>{service.getConversations().forEach(conversation=>{if(conversation.room&&conversation.room.confEndpoints){var conferenceSession=pstnConferenceService.getConferenceSessionById(conversation.room.getPstnConfEndpointId());conversation.pstnConferenceSession=conferenceSession||null;var webConfSession=webConferenceService.getConferenceSessionForRoom(conversation.room.confEndpoints);conversation.webConferenceSession=webConfSession||null}else conversation.pstnConferenceSession=null,conversation.webConferenceSession=null})},this.closeConversation=conversation=>$q((resolve,reject)=>{$log.info("[conversationService] closeConversation "+conversation.id),service.deleteServerConversation(conversation.dbId).then(()=>{service.removeConversation(conversation),resolve()}).catch(error=>{reject(error)})}),this.removeConversation=conversation=>{if($log.info("[conversationService] remove conversation "+conversation.id),conversation.videoCall&&conversation.videoCall.status!==call_model_1.Call.Status.UNKNOWN)$log.info("[conversationService] Ignore conversation deletion message for conversation"+conversation.id);else{delete service.conversations[conversation.id],service.orderConversations();var conversations=service.getOrderedConversations();!service.activeConversation||conversations.idle.indexOf(service.activeConversation)>=0||(conversations.idle.length>0?service.setActiveConversation(conversations.idle.first()):conversations.inCall.length>0?service.setActiveConversation(conversations.inCall.first()):service.setActiveConversation(null)),conversation.contact&&(conversation.contact.conversation=null,conversation.contact=null),$rootScope.$broadcast("ON_CONVERSATION_REMOVE_EVENT",conversation)}},this.getConversationByDbId=dbId=>{if(service.conversations)for(var key in service.conversations)if(service.conversations.hasOwnProperty(key)&&service.conversations[key].dbId===dbId)return service.conversations[key];return null},this.getConversationByRoomDbId=roomDbId=>{if(service.conversations)for(var key in service.conversations)if(service.conversations.hasOwnProperty(key)&&service.conversations[key].room&&service.conversations[key].room.dbId===roomDbId)return service.conversations[key];return null},this.removeOlderConversations=()=>{if(!authService.fromSDK){var maxConversations=parseInt(settingsService.getSetting("nbMaxConversations"),10);(!maxConversations||maxConversations<15)&&(settingsService.setSetting("nbMaxConversations",15),maxConversations=15);var orderedConversations=service.getConversations().sort(service.sortFunction);if($log.info("[conversationService] removeOlderConversations -- maxConversations : "+maxConversations),orderedConversations.length>maxConversations){$log.info("[conversationService] removeOlderConversations -- orderedConversations : "+orderedConversations.length);for(var removePromises=[],index=maxConversations;index<orderedConversations.length;index++)removePromises.push(service.closeConversation(orderedConversations[index]));return $q.all(removePromises)}}return $q.when()},this.searchConversations=criteria=>{var queries=utilService.removeDiacritis(criteria.toLowerCase()).trim().normalize("NFD").replace(/[\u0300-\u036f]/g,"").split(/[ -]+/);return service.getOrderedConversations().idle.filter(conversation=>{var names=conversation.filterName.trim().normalize("NFD").replace(/[\u0300-\u036f]/g,"").split(/[ -]+/);return queries.every(query=>names.some((name,index)=>!(!name.length||-1===name.indexOf(query))&&(names[index]="",!0)))})},this.cleanFile=file=>{let stripScripts=s=>{let div=document.createElement("div");div.innerHTML=s;let scripts=div.getElementsByTagName("script"),i=scripts.length;for(;i--;)scripts[i].parentNode.removeChild(scripts[i]);return div.innerHTML};return new Promise(resolve=>{if("image/svg+xml"===file.type){let reader=new FileReader;reader.addEventListener("loadend",e=>{let elem=e.srcElement,cleanblob=new Blob([stripScripts(elem.result)],{type:"image/svg+xml"}),cleanFile=new File([cleanblob],file.name,{type:"image/svg+xml",lastModified:Date.now()});resolve(cleanFile)}),reader.readAsText(file)}else resolve(file)})},this.sendFSMessage=(conversation,file,data,voiceMessageData)=>__awaiter(this,void 0,void 0,(function*(){try{let cleanFile=file;data&&0!==data.length||(data=cleanFile.name);let message=yield conversation.sendFSMessage(cleanFile,data,voiceMessageData);return service.pendingMessages[message.id]={conversation:conversation,message:message},message}catch(error){var msgKey=error.translatedMessage?error.translatedMessage:"Unable to share file";throw 403153===error.errorDetailsCode&&(msgKey=$translate.instant("fileSharingNoMoreAllowedMsg")),$rootScope.$broadcast("ON_OPEN_GLOBAL_POPUP",{popupTitle:"fileTransfer",popupBodyTranslated:msgKey,okLabel:"ok"}),new Error(error)}})),this.sendEFSMessage=(conversation,fileDescriptor,data,voiceMessage)=>{var message=conversation.sendEFSMessage(fileDescriptor,data,voiceMessage);return this.pendingMessages[message.id]={conversation:conversation,message:message},$rootScope.$broadcast("ON_SEND_EFS_MESSAGE",fileDescriptor),message},this.sendChatMessage=(conversation,data,alternativeContent,mentions)=>{var message=conversation.sendChatMessage(data,null,alternativeContent,mentions);return this.pendingMessages[message.id]={conversation:conversation,message:message},message},this.sendAnswerChatMessage=(conversation,data,answeredMsg,mentions)=>{var message=conversation.sendChatMessage(data,answeredMsg,null,mentions);return this.pendingMessages[message.id]={conversation:conversation,message:message},message},this.sendIsTypingState=(conversation,isTypingState)=>{conversation.sendIsTypingState(isTypingState)},this.sendRecordingMessage=(conversation,data)=>{var message=conversation.sendRecordingMessage(data);return this.pendingMessages[message.id]={conversation:conversation,message:message},message},this.sendCorrectedChatMessage=(conversation,data,origMsgId)=>{var originalMessage=conversation.getMessageById(origMsgId);if(originalMessage.from.jid===contactService.userContact.jid)if(conversation.lastEditableMsg.id===originalMessage.id){var sentMessageId=conversation.sendCorrectedChatMessage(originalMessage,data,origMsgId);this.pendingMessages[sentMessageId]={conversation:conversation,message:originalMessage}}else $log.info("[conversationService] sendCorrectedChatMessage forbidden Action - only last sent message can be modified");else $log.info("[conversationService] sendCorrectedChatMessage forbidden Action - only sent messages can be modified")},this.removeAllMessages=conversation=>{$log.info("[conversationService] removeAllMessage "+conversation.id);var defered=$q.defer(),mamRequest={queryid:xmppService.connection.getUniqueId(),with:conversation.id,onComplete:()=>{defered.resolve()}},queryId=xmppService.connection.getUniqueId();return xmppService.connection.mam.delete(queryId,mamRequest),defered.promise},this.removeMessagesFromConversation=(conversation,date,number)=>{$log.info("[conversationService] removeMessagesFromConversation "+conversation.id),$log.info("[conversationService] removing "+number+" messages after "+date);var defered=$q.defer(),mamRequest={queryid:"remove_"+conversation.id,with:conversation.id,start:moment(date).format("YYYY-MM-DDTHH:mm:ss.SSSSSSZ"),max:number,onComplete:()=>{$log.info("[conversationService] MAM Message deleted !!!"),defered.resolve()}};return xmppService.connection.mam.delete(conversation.id,mamRequest),defered.promise},this.sendConversationByEmail=conversation=>{var defered=$q.defer(),userContact=contactService.userContact,url=config.restServerUrl+"/api/rainbow/enduser/v1.0/users/"+userContact.dbId+"/conversations/"+conversation.dbId+"/downloads";return $http({method:"POST",url:url,headers:authService.getRequestHeader(),data:{}}).then(()=>{$log.error("[conversationService] sendConversationByEmail - success"),defered.resolve()},response=>{var error={message:"Impossible to download conversation",messageKey:null};response&&response.data&&409011===response.data.errorDetailsCode&&(error.message="No messages to export for the last 30 days.",error.messageKey="noMessagesToExport"),$log.error("[adminUserService] sendConversationByEmail - "+error.message),defered.reject(error)}),defered.promise},this.getHistoryPage=(conversation,size)=>service.isReinit?($log.debug("[conversationService] getHistoryPage --- service is reinitialising !"),$q.reject(new Error("Service is reinitialising !"))):service.conversationHistoryHandler.getHistoryPage(conversation,size),this.getHistoryPageAroundMsg=(conversation,centeredMsgDate)=>service.conversationHistoryHandler.getHistoryPageAroundMsg(conversation,20,centeredMsgDate+"000"),this.retrieveMsgByDate=(conversation,msgDate)=>($log.debug("[conversationService] >retrieveMsgByDate: "+msgDate),service.conversationHistoryHandler.retrieveMsgByDate(conversation,msgDate+"000")),this.clearSearchText=()=>{$log.debug("[conversationService] - clearSearchText"),this.searchTextResults.clearAll()},this.clearAndGetAllMessagesResults=(searchedText,rooms)=>{$log.debug("[conversationService] - clearAndGetAllMessagesResults"),this.searchTextResults.clearAll(),this.searchTextResults.searchCount();var promisesArray=[];rooms.forEach(room=>{(!room.desc||room.desc&&!room.desc.startsWith("Rainbow_OutlookCreation_InternalUseOnly"))&&promisesArray.push(service.searchTextInRoom(contactService.userContact.jid,room,searchedText,5,service.searchTextResults.searchCounter))}),$q.all(promisesArray).finally(()=>{$log.debug("[conversationService] - ALL SearchText Promises finished"),service.searchTextInConversations(searchedText,100)})},this.searchTextInConversations=(searchedText,limitSize)=>{$log.debug("[conversationService] - searchTextInConversations: "+searchedText);var defered=$q.defer(),queryId=xmppService.connection.getUniqueId();return this.searchTextResults.queryIds.push(queryId),this.searchTextResults.searchedText=searchedText,$log.debug("[conversationService] - searchTextResults QueryId: "+queryId),service.conversationHistoryHandler.searchTextInConversations(queryId,searchedText,limitSize).then(count=>{service.searchTextResults.totalCount+=parseInt(count,10),service.searchTextResults.results.forEach(item=>{if(item.convRes.sort((res1,res2)=>res1.date?res2.date?moment(res1.date).diff(moment(res2.date)):1:-1),!item.isRoom()){service.getConversationTextCount(searchedText,item.otherJid).then(convCount=>{item.totalCount=parseInt(convCount,10)});var contact=contactService.getContactByJid(item.otherJid);contact?(item.contact=contact,contact.avatar||contact.getAvatar()):contactService.getContactsByJids([item.otherJid]).then(()=>{if($log.info("[conversations] getContactsByJids success"),contact=contactService.getContactByJid(item.otherJid))item.contact=contact,contact.avatar||contact.getAvatar();else{$log.info("[conversations] Contact with Id "+item.otherJid+" not Found");var itemIndex=service.searchTextResults.results.indexOf(item);itemIndex>=0&&(service.searchTextResults.results.splice(itemIndex,1),service.searchTextResults.totalCount-=item.totalCount)}})}defered.resolve(parseInt(count,10))})}).catch(error=>{$log.warn("[conversationService] - searchTextInConversations: Error "+error.message),defered.reject(error)}),defered.promise},this.searchTextResultsInConversation=(searchedText,conversation)=>{$log.debug("[conversationService] - searchTextResultsInConversation: "+searchedText);var defered=$q.defer(),queryId=xmppService.connection.getUniqueId();return this.searchTextResults.queryIds.push(queryId),conversation.room?service.searchTextInRoom(contactService.userContact.jid,conversation.room,searchedText,5,this.searchTextResults.searchCounter).then(count=>{var searchTextResult=service.searchTextResults.createNewResult(conversation.id);searchTextResult.totalCount=parseInt(count,10),searchTextResult.conversation=conversation,searchTextResult.room=conversation.room,service.searchTextResults.results.forEach(item=>{item.convRes.sort((res1,res2)=>res1.date?res2.date?moment(res1.date).diff(moment(res2.date)):1:-1)}),service.searchTextResults.totalCount=parseInt(count,10),defered.resolve(parseInt(count,10))}):service.conversationHistoryHandler.searchTextResultsInConversation(queryId,searchedText,conversation.id,5).then(count=>{var searchTextResult=service.searchTextResults.createNewResult(conversation.id);searchTextResult.totalCount=parseInt(count,10),searchTextResult.contact=conversation.contact,searchTextResult.conversation=conversation,service.searchTextResults.results.forEach(item=>{item.convRes.sort((res1,res2)=>res1.date?res2.date?moment(res1.date).diff(moment(res2.date)):1:-1)}),service.searchTextResults.totalCount=parseInt(count,10),defered.resolve(parseInt(count,10))}),defered.promise},this.searchTextMoreResultsInConversation=(searchedText,conversation,messageDate)=>{$log.debug("[conversationService] - searchTextMoreResultsInConversation: "+searchedText);var defered=$q.defer(),queryId=xmppService.connection.getUniqueId();return this.searchTextResults.queryIds.push(queryId),conversation.room?service.conversationHistoryHandler.searchTextMoreResultsInRoom(queryId,searchedText,contactService.userContact.jid,conversation.room.jid,messageDate+"000",5).then(count=>{service.searchTextResults.results.forEach(item=>{item.convRes.sort((res1,res2)=>res1.date?res2.date?moment(res1.date).diff(moment(res2.date)):1:-1)}),defered.resolve(parseInt(count,10))}):service.conversationHistoryHandler.searchTextMoreResultsInConversation(queryId,searchedText,conversation.id,messageDate+"000",5).then(count=>{service.searchTextResults.results.forEach(item=>{item.convRes.sort((res1,res2)=>res1.date?res2.date?moment(res1.date).diff(moment(res2.date)):1:-1)}),defered.resolve(parseInt(count,10))}),defered.promise},this.getConversationTextCount=(searchedText,contactJid)=>{$log.debug("[conversationService] - getConversationTextCount: "+searchedText);var queryId=xmppService.connection.getUniqueId();return this.searchTextResults.queryIds.push(queryId),service.conversationHistoryHandler.getConversationTextCount(queryId,searchedText,contactJid)},this.searchTextInRoom=(userJid,room,searchedText,limitSize,searchCount)=>{$log.debug("[conversationService] - searchTextInRoom: "+searchedText);var defered=$q.defer();if(this.searchTextResults.searchCounter!==searchCount)return $log.debug("[conversationService] - counter has changed - skip promise"),defered.promise;var queryId=xmppService.connection.getUniqueId();return this.searchTextResults.queryIds.push(queryId),service.conversationHistoryHandler.searchTextInRoom(queryId,userJid,room.jid,searchedText,limitSize).then(count=>{$log.info("[conversationService] - searchTextInRoom: Room response received : "+count);var countValue=parseInt(count,10);countValue>0&&(service.searchTextResults.totalCount+=countValue,service.searchTextResults.results.forEach(item=>{item.otherJid===room.jid&&(item.totalCount=parseInt(count,10),item.room=room)})),defered.resolve(count)}).catch(error=>{$log.warn("[conversationService] - searchTextInRoom: Error "+error.message),defered.reject(error)}),defered.promise},this.setActiveConversation=conversation=>($log.debug("[conversationService] - setActiveConversation: "+(conversation?conversation.id:"null")),this.activeConversation=conversation,this.activeConversation),this.setMostRecentConversationActive=()=>{var conversations=service.getConversations().sort(service.sortFunction);return conversations.length>0?this.setActiveConversation(conversations.first()):this.setActiveConversation(null)},this.getActiveConversation=()=>this.activeConversation,this.getConversationById=conversationId=>service.conversations?service.conversations[conversationId]:null,this.getConversations=()=>{var conversationArray=[];for(var key in service.conversations)service.conversations.hasOwnProperty(key)&&conversationArray.push(service.conversations[key]);return conversationArray},this.orderConversations=()=>{service.inCallConversations=[],service.idleConversations=[],service.involvedContactIds=[],Object.keys(service.conversations).forEach(key=>{var conversation=service.conversations[key];if(conversation.type===Conversation.Type.ROOM&&conversation.room.owner&&conversation.room.isMeetingRoom()){var confSession=pstnConferenceService.getConferenceSessionById(conversation.room.getPstnConfEndpointId());if(confSession&&confSession.isActive())return}conversation.isInCall()?service.inCallConversations.push(conversation):service.idleConversations.push(conversation),conversation.type===Conversation.Type.ONE_TO_ONE&&service.involvedContactIds.push(conversation.contact.id)}),service.idleConversations.sort(service.sortFunction),$log.info("[conversationService] orderConversations"),service.idleConversations.forEach(conv=>{let log=conv.id+" || ";log+=conv.lastModification?conv.lastModification.toString():conv.creationDate,$log.info(log)})},this.getOrderedConversations=()=>({inCall:service.inCallConversations,idle:service.idleConversations,contactIds:service.involvedContactIds,favorites:service.favorites}),this.sortFunction=(aa,bb)=>{var aLast=aa.lastModification,aCreation=aa.creationDate,bLast=bb.lastModification,bCreation=bb.creationDate;return(!bLast&&bCreation?bCreation:bLast)-(!aLast&&aCreation?aCreation:aLast)},this.formatDate=date=>moment(date).utc().format("YYYY-MM-DDTHH:mm:ss")+"Z",this.resetConversationMissedCounters=conversation=>{$rootScope.appVisible&&(conversation.missedCounter=0,conversation.missedCalls=0,this.updateMissedCounters())},this.decreaseMissedIMCounterForConversation=conversation=>{conversation.missedCounter>0&&(conversation.missedCounter-=1),this.updateMissedCounters()};var currentMissedIMCounter=0,currentMissedCallCounter=0;this.updateMissedCounters=()=>{var missedIMCounter=0,missedIMDetails=[];Object.keys(service.conversations).forEach(key=>{var conversation=service.conversations[key];0!==conversation.missedCounter&&(missedIMCounter+=conversation.missedCounter,missedIMDetails.push(conversation))}),missedIMCounter===currentMissedIMCounter&&0===currentMissedCallCounter||(currentMissedIMCounter=missedIMCounter,currentMissedCallCounter=0,$rootScope.$broadcast("ON_MISSED_COUNTER_CHANGED_EVENT",{missedIMCounter:missedIMCounter,missedCallCounter:0,missedIMDetails:missedIMDetails}))},this.dropConversationCall=conversation=>{conversation.audioCall&&telephonyService.releaseCall(conversation.audioCall),conversation.videoCall&&(videoService.attachLocalMediaStream(!1),videoService.attachDistantMediaStream(!1),videoService.releaseCall(conversation.videoCall))},this.holdConversationCall=conversation=>{conversation.audioCall&&(telephonyService.holdCall(conversation.audioCall),conversation.videoCall&&(videoService.attachLocalMediaStream(!1),videoService.attachDistantMediaStream(!1),videoService.releaseCall(conversation.videoCall)))},this.retrieveConversationCall=conversation=>{conversation.audioCall&&telephonyService.retrieveCall(conversation.audioCall),conversation.videoCall&&$log.error("Not implemented for the moment")},this.allowDesktopSharing=()=>!1,this.allowAdvancedDesktopSharing=()=>!1,this.updateConversationCall=(conversation,call)=>{call.type===call_model_1.Call.Type.WEBRTC?conversation.videoCall=call:call.type===call_model_1.Call.Type.PHONE&&(conversation.audioCall=call),call.setConversationId(conversation.id),this.computeCapabilitiesForContact(conversation.contact),service.computeCapabilitiesForMyContact()},this.computeCapabilitiesForContact=(contact,skipUpdateConversation)=>{var telephony=!1,webRTC=!1,sharedDesktop=!1,fileTransfert=!1,addMedia=!1,contactStatus=contact.status,fullJid=contact.fullJid,myContact=contactService.userContact;if(contact.jid!==myContact.jid){var isContactInMyCompany=contact.company&&contactService.userContact.company&&"Rainbow"!==contact.company.name&&"Default"!==contact.company.name&&contact.company.name===contactService.userContact.company.name,conversation=this.getConversationById(contact.id);if(videoService.started){var videoCall=conversation?conversation.videoCall:null;videoCall&&videoCall.status!==call_model_1.Call.Status.UNKNOWN||!("unknown"===contactStatus&&isContactInMyCompany||"online"===contactStatus||"online-mobile"===contactStatus||"away"===contactStatus||"busy"===contactStatus&&"audioPhone"===contact.message)||(webRTC=!0,sharedDesktop=!0)}if(telephonyService.started){var phoneNumberAvailable=contact.phonePro||contact.phonePbx&&contact.pbxId||contact.mobilePro||contact.phonePerso||contact.mobilePerso,audioCalls=telephonyService.getActiveCallsForContact(contact);0===audioCalls.length&&phoneNumberAvailable&&(telephony=!0),(0!==audioCalls.length||videoService.getMediaPillarAudioCall())&&fullJid&&(addMedia=!0)}"online"!==contactStatus&&"busy"!==contactStatus&&"away"!==contactStatus&&"dnd"!==contactStatus||(fileTransfert=!0);var capabilities={telephony:telephony,webRTC:webRTC,sharedDesktop:sharedDesktop,fileTransfert:fileTransfert,mediaAvailable:telephony||webRTC,addMedia:addMedia};(contact.isBot||contact.displayName&&-1!==contact.displayName.indexOf("E-HELPER"))&&(capabilities={telephony:!1,webRTC:!1,sharedDesktop:!1,fileTransfert:!1,mediaAvailable:!1,addMedia:!1}),contact.capabilities=capabilities,conversation&&(conversation.capabilities=capabilities,skipUpdateConversation||$rootScope.$broadcast("ON_CONVERSATIONS_UPDATED_EVENT",conversation,Conversation.EventType.CAPABILITIES)),$log.info('[conversationService] update capabilities for contact "'+contact.displayNameForLog()+'" capabilities (tel:'+telephony+", webRTC:"+webRTC+", sharing: "+sharedDesktop+", addMedia: "+addMedia+")")}else this.computeCapabilitiesForMyContact()},this.computeCapabilitiesForMyContact=()=>{var telephony=!1,webRTC=!1,sharedDesktop=!1,myContact=contactService.userContact;if(videoService.started){var isInCallWebRtc=videoService.isUserContactInCall();isInCallWebRtc||"busy"===myContact.status&&("busy"!==myContact.status||"audioPhone"!==myContact.message)||(webRTC=!0,service.allowDesktopSharing()&&(sharedDesktop=!0)),isInCallWebRtc&&videoService.getMediaPillarAudioCall()&&!videoService.getCurrentSharingCall()&&service.allowDesktopSharing()&&(sharedDesktop=!0)}if(telephonyService.started){var calls=telephonyService.getCalls();webrtcGatewayService.isMediaPillarCallSituation()&&Object.keys(videoService.calls).length>=1?telephony=!!(calls.length>=1&&service.isSecondCallAllowed):(0===calls.length&&service.isBasicCallAllowed||1===calls.length&&service.isSecondCallAllowed)&&(telephony=!0)}var capabilities={telephony:telephony,webRTC:webRTC,sharedDesktop:sharedDesktop,mediaAvailable:telephony||webRTC};myContact.capabilities=capabilities,$log.info("[conversationService] update capabilities for my contact : capabilities (tel:"+telephony+", webRTC:"+webRTC+", sharing: "+sharedDesktop+")")},this.onCallEvent=(__event,call)=>{switch(call.type){case call_model_1.Call.Type.WEBRTC:if(webrtcGatewayService.isMediaPillarJid(call.fullJid))return void $rootScope.$broadcast("ON_MPMEDIA_CONVERSATION_CALL_UPDATED_EVENT",{call:call});service.getOrCreateOneToOneConversation(call.contact.id).then(conversation=>{service.updateConversationCall(conversation,call),service.orderConversations(),$rootScope.$broadcast("ON_CONVERSATION_CALL_UPDATED_EVENT",{conversation:conversation,call:call})});break;case call_model_1.Call.Type.PHONE:if(call.status===call_model_1.Call.Status.UNKNOWN&&(call.contact&&!telephonyService.getConferenceCallForContact(call.contact)&&videoService.endAllCallsForContact(call.contact),call.isConference&&$interval(()=>{(call.participants||[]).forEach(participantContact=>{participantContact&&0===telephonyService.getActiveCallsForContact(participantContact).length&&videoService.endAllCallsForContact(participantContact)})},1e3,1)),webrtcGatewayService.isMediaPillarCallSituation(call)){if(!call.isSecondary)return void $rootScope.$broadcast("ON_UPDATE_TELEPHONY_ICON_EVENT");if(call.status===call_model_1.Call.Status.RINGING_INCOMMING)return}if(call.status!==call_model_1.Call.Status.UNKNOWN&&null!==call.connectionId)if($log.info("[ConversationService] onCallEvent -- "+call.connectionId+"  -- relevantEquipmentId : "+call.relevantEquipmentId),call.getDeviceIdFromConnectionIdFromCall()!==call.relevantEquipmentId&&call.status!==call_model_1.Call.Status.ACTIVE)return void $rootScope.$broadcast("ON_UPDATE_TELEPHONY_ICON_EVENT");$rootScope.$broadcast("ON_CONVERSATION_CALL_UPDATED_EVENT",{conversation:null,call:call})}},this.onReloadCapabilitiesForMyContactEvent=__event=>{$log.info("[conversationService] onReloadCapabilitiesForMyContactEvent"),service.computeCapabilitiesForMyContact()},this.onConversationEvent=()=>{service.updateMissedCounters()},this.onContactChangedEvent=(__event,contact)=>{service.computeCapabilitiesForContact(contact),service.computeCapabilitiesForMyContact()},this.onTelephonyStateChangeEvent=__event=>{var conversations=service.getConversations();conversations&&conversations.forEach(conversation=>{conversation.type===Conversation.Type.ONE_TO_ONE&&service.computeCapabilitiesForContact(conversation.contact)}),service.computeCapabilitiesForMyContact()},this.onConferenceStateChangeEvent=()=>{service.updateRoomConferences(),service.orderConversations(),$rootScope.$broadcast("ON_CONVERSATIONS_UPDATED_EVENT")},this.onConferenceParticipantChangeEvent=()=>{service.orderConversations(),$rootScope.$broadcast("ON_CONVERSATIONS_UPDATED_EVENT")},this.onRoomChangedEvent=(__event,room,action)=>{if(room){var conversation=service.getConversationById(room.jid);conversation&&("remove"===action?service.closeConversation(conversation):conversation.room=room)}},this.onRoomHistoryChangedEvent=(__event,room)=>{if(room){var conversation=service.getConversationById(room.jid);conversation&&conversation.chatRenderer&&(conversation.reset(),conversation.chatRenderer.loadMore())}},this.onRoomAdminMessageEvent=(__event,roomJid,userJid,type,msgId)=>{$log.info("[conversationService] onRoomAdminMessageEvent");var conversation=service.getConversationById(roomJid);conversation&&"welcome"===type&&conversation.room&&conversation.room.ownerContact&&(userJid=conversation.room.ownerContact.jid);var contact=contactService.getContactByJid(userJid);if(conversation&&contact){if(!conversation.room.owner&&"invitation"===type)return;if(conversation.room&&conversation.room.isMeetingRoom())return;service.conversationServiceEventHandler.onRoomAdminMessageReceived(conversation,contact,type,msgId)}},this.onRoomAddConferenceEvent=__event=>{$log.info("[conversationService] onRoomAddConferenceEvent"),service.orderConversations(),$rootScope.$broadcast("ON_CONVERSATIONS_UPDATED_EVENT")},this.onMyContactChangedEvent=()=>{service.getOrderedConversations().idle.forEach(conversation=>{conversation.type===Conversation.Type.ONE_TO_ONE&&service.computeCapabilitiesForContact(conversation.contact)}),service.computeCapabilitiesForMyContact()},this.reinit=()=>{var defered=$q.defer();return $log.info("[conversationService] Re-initialize conversation service"),service.activeConversation&&(service.activeConversation.reset(),service.activeConversation=null),delete service.conversations,service.conversations=[],service.conversationCreationPromise||(service.conversationCreationPromise={}),service.botServiceReady=!0,service.isReinit=!0,$log.info("[conversationService] getServerConversations"),service.getServerConversations().then(()=>{service.isReinit=!1,service.linkAllActiveCallsToConversations(),$rootScope.$broadcast("ON_MISSED_COUNTER_CHANGED_EVENT",{missedIMCounter:currentMissedIMCounter,missedCallCounter:currentMissedCallCounter}),defered.resolve()}).catch(()=>{service.isReinit=!1,$interval(()=>{$log.info("[conversationService] getServerConversations failure, try again"),service.getServerConversations().then(()=>{service.linkAllActiveCallsToConversations()})},1e4,1,!0),defered.resolve()}),defered.promise},this.linkAllActiveCallsToConversations=()=>{for(var key in telephonyService.calls)if(telephonyService.calls.hasOwnProperty(key)){var call=telephonyService.calls[key];$rootScope.$broadcast("ON_CALL_UPDATED_EVENT",call)}for(var key in videoService.calls)if(videoService.calls.hasOwnProperty(key)){call=videoService.calls[key];$rootScope.$broadcast("ON_CALL_UPDATED_EVENT",call)}},this.unlockWaitingBotConversations=isBotServiceReady=>{isBotServiceReady&&(service.botServiceReady=!0),service.botServiceReady&&(service.botServiceReady=!1,service.waitingBotConversations.forEach((obj,index)=>{var contact=contactService.getContactByJid(obj.jid);contact&&(service.getOrCreateOneToOneConversation(contact.jid,obj.conversationDbId,obj.lastModification,obj.lastMessageText,obj.missedIMCounter,obj.muted,obj.creationDate),service.waitingBotConversations.splice(index,1))}),service.waitingBotConversations=[])}}])},function(module,exports){angular.module("rainbow").factory("ConversationServiceEventHandler",["$q","$log","$rootScope","contactService","xmppService","roomService","Conversation","Message","fileStorageService","fileServerService","webrtcGatewayService",function($q,$log,$rootScope,contactService,xmppService,roomService,Conversation,Message,fileStorageService,fileServerService,webrtcGatewayService){"use strict";function ConversationServiceEventHandler(conversationService){this.conversationService=conversationService}return ConversationServiceEventHandler.create=function(conversationService){return new ConversationServiceEventHandler(conversationService)},ConversationServiceEventHandler.prototype.onChatMessageReceived=function(stanza){$log.info("[ConversationServiceEventHandler] onChatMessageReceived");try{var that=this,stanzaElem=$(stanza);return stanzaElem.find("event").length>0||stanzaElem.find("propose").length>0||stanzaElem.find("received").length>0?$log.info("[ConversationServiceEventHandler] onChatMessageReceived ignore the message"):stanzaElem.find("recording").length>0?($log.info("[ConversationServiceEventHandler] onChatMessageReceived : recording msg case"),this.onRecordingMessageReceived(stanza)):this.extractStanzaData(stanza).then((function(stanzaData){stanzaData.body||stanzaData.oob||stanzaData.conference||stanzaData.replace?that.handleChatMessage(stanzaData):stanzaData.outgoingMessage||contactService.isUserContact(stanzaData.participant)||!stanzaData.status||that.handleStatusMessage(stanzaData.conversation,stanzaData.participant,stanza)})),!0}catch(error){return $log.error("[ConversationServiceEventHandler] onChatMessageReceived ERROR "+error),!0}},ConversationServiceEventHandler.prototype.onConferenceMessageReceived=function(stanza){$log.info("[ConversationServiceEventHandler] onConferenceMessageReceived");try{var that=this;return $(stanza).find("event").length>0?this.extractStanzaData(stanza).then((function(stanzaData){stanzaData.conference&&that.handleChatMessage(stanzaData)})):$log.info("[ConversationServiceEventHandler] onConferenceMessageReceived ignore the message"),!0}catch(error){return $log.error("[ConversationServiceEventHandler] onConferenceMessageReceived ERROR "+error),!0}},ConversationServiceEventHandler.prototype.onFileTransfertReceived=function(fileTransfert){var bareJid=xmppService.getBareJidFromJid(fileTransfert.from),that=this;this.conversationService.getOrCreateOneToOneConversation(bareJid).then((function(conversation){var participant=conversation.contact,messageId=Conversation.getUniqueMessageId(),message=conversation.addFTMessage(participant,new Date,fileTransfert,messageId);conversation.setStatusMessage(participant,Conversation.Status.ACTIVE),conversation===that.conversationService.activeConversation&&$rootScope.appVisible&&"conversations"===$rootScope.activeApplication||(conversation.missedCounter+=1),conversation.sendAckReceivedMessage(message),$rootScope.$broadcast("ON_CONVERSATIONS_UPDATED_EVENT",conversation,Conversation.EventType.FILE)}))},ConversationServiceEventHandler.prototype.onRoomAdminMessageReceived=function(conversation,contact,type,msgId){$log.info("[ConversationServiceEventHandler] onRoomAdminMessageReceived");var message=conversation.addAdminBubbleMessage(contact,new Date,type,msgId);conversation.setStatusMessage(contact,Conversation.Status.ACTIVE),conversation.sendAckReceivedMessage(message),conversation===this.conversationService.activeConversation&&$rootScope.appVisible&&"conversations"===$rootScope.activeApplication||(conversation.missedCounter+=1),$rootScope.$broadcast("ON_CONVERSATION_MESSAGE_RECEIVED",message,conversation,!1),$rootScope.$broadcast("ON_CONVERSATIONS_UPDATED_EVENT",conversation,Conversation.EventType.IM)},ConversationServiceEventHandler.prototype.onFileMessageReceived=function(stanza){$log.info("[ConversationServiceEventHandler] onFileMessageReceived");try{return this.extractStanzaData(stanza).then((function(stanzaData){if(stanzaData.body){var conversation=stanzaData.conversation;conversation.addFileMessage(stanzaData.participant,stanzaData.date,stanzaData.body,stanzaData.messageId),conversation.setStatusMessage(stanzaData.participant,Conversation.Status.ACTIVE),$rootScope.$broadcast("ON_CONVERSATIONS_UPDATED_EVENT",conversation,Conversation.EventType.FILE)}})),!0}catch(error){return $log.error("[ConversationServiceEventHandler] onFileMessageReceived ERROR "+error),!0}},ConversationServiceEventHandler.prototype.onWebRTCMessageReceived=function(stanza){$log.info("[ConversationServiceEventHandler] onWebRTCMessageReceived");try{return angular.element(stanza).find("call_log").length>0?this.extractWebrtcStanzaData(stanza).then((function(stanzaData){if(stanzaData&&stanzaData.body){var conversation=stanzaData.conversation;conversation.addWebRTCMessage(stanzaData.participant,stanzaData.date,stanzaData.body,stanzaData.messageId),conversation.setStatusMessage(stanzaData.participant,Conversation.Status.ACTIVE),$rootScope.$broadcast("ON_CONVERSATIONS_UPDATED_EVENT",conversation)}})):this.extractStanzaData(stanza).then((function(stanzaData){if(stanzaData&&stanzaData.body){var conversation=stanzaData.conversation;conversation.addWebRTCMessage(stanzaData.participant,stanzaData.date,stanzaData.body,stanzaData.messageId),conversation.setStatusMessage(stanzaData.participant,Conversation.Status.ACTIVE),$rootScope.$broadcast("ON_CONVERSATIONS_UPDATED_EVENT",conversation)}})),!0}catch(error){return $log.error("[ConversationServiceEventHandler] onWebRTCMessageReceived error "+error),!0}},ConversationServiceEventHandler.prototype.onManagementMessageReceived=function(stanza){try{var that=this,stanzaElem=angular.element(stanza),conversationElem=stanzaElem.find("conversation");if(conversationElem){var action=conversationElem.attr("action"),conversationGetterPromise=null;if("create"===action){var jid=xmppService.getBareJidFromJid(conversationElem.find("peer").text()),convType=conversationElem.find("type").text();conversationGetterPromise=this.conversationService.getConversationAsyncById(jid,convType)}else conversationGetterPromise=$q.resolve(this.conversationService.getConversationByDbId(conversationElem.attr("id")));conversationGetterPromise.then((function(conversation){if($log.info("[ConversationServiceEventHandler] onManagementMessageReceived ("+action+" conversation)"),conversation)switch(action){case"create":conversation.dbId=conversationElem.attr("id"),conversation.lastModification=new Date(conversationElem.find("lastMessageDate").text()),conversation.missedCounter=parseInt(conversationElem.find("unreadMessageNumber").text(),10)||0,conversation.muted="true"===conversationElem.find("mute").text(),that.conversationService.favoriteService.updateFavorites(conversation),that.conversationService.orderConversations(),$rootScope.$broadcast("ON_CONVERSATIONS_UPDATED_EVENT");break;case"delete":that.conversationService.removeConversation(conversation)}else if("create"===action){var convId=xmppService.getBareJidFromJid(conversationElem.find("peer").text()),convDbId=conversationElem.attr("id"),lastModification=new Date(conversationElem.find("lastMessageDate").text()),lastMessageText=conversationElem.find("lastMessageText").text(),lastMessageSender=conversationElem.find("lastMessageSender").text(),missedIMCounter=parseInt(conversationElem.find("unreadMessageNumber").text(),10)||0,muted="true"===conversationElem.find("mute").text(),type=conversationElem.find("type").text(),conversationGetter="room"===type?"getRoomConversation":"getOrCreateOneToOneConversation";that.conversationService[conversationGetter](convId).then((function(conv){$log.info("[ConversationServiceEventHandler] onManagementMessageReceived update conversation ("+conv.id+")"),conv.dbId=convDbId,conv.lastModification=lastModification?new Date(lastModification):void 0,conv.lastMessageText=lastMessageText,conv.lastMessageSender=lastMessageSender,conv.muted=muted,conv.preload=!0,conv.missedCounter=missedIMCounter,type===Conversation.Type.BOT&&(conv.type=Conversation.Type.ONE_TO_ONE),that.conversationService.favoriteService.updateFavorites(conv),$rootScope.$broadcast("ON_CONVERSATIONS_UPDATED_EVENT",conv)}))}}))}if(stanzaElem.find("mute")||stanzaElem.find("unmute")){var muteElem=stanzaElem.find("mute"),mute=!1;muteElem.length&&(mute=!muteElem.text().length||"true"===muteElem.text());var conversationDbId=stanzaElem.find("mute").attr("conversation")||stanzaElem.find("unmute").attr("conversation"),conversation=this.conversationService.getConversationByDbId(conversationDbId);conversation&&($log.info("[ConversationServiceEventHandler] onManagementMessageReceived : mute is changed to "+mute),conversation.muted=mute)}}catch(error){return $log.error("[ConversationServiceEventHandler] onManagementMessageReceived error "+error),!0}return!0},ConversationServiceEventHandler.prototype.onReceiptMessageReceived=function(stanza){$log.info("[ConversationServiceEventHandler] onReceiptMessageReceived");try{var stanzaElement=angular.element(stanza),messageSender=xmppService.getBareJidFromJid(stanzaElement.attr("from")),carbonStanza=stanzaElement.find("message");contactService.isUserContactJid(messageSender)&&carbonStanza.length>0&&(stanzaElement=angular.element(carbonStanza));var recvMessage=stanzaElement.find("received");if(recvMessage.length&&recvMessage.length>0){var messageId=angular.element(recvMessage).attr("id"),entity=angular.element(recvMessage).attr("entity"),event=angular.element(recvMessage).attr("event");if("server"===entity&&"received"===event){var messageInfo=this.conversationService.pendingMessages[messageId];if(messageInfo&&messageInfo.message){var message=messageInfo.message,conversation=messageInfo.conversation;$log.info("[conversationService] Receive server ack ("+conversation.id+", "+message.id+")"),message.setReceiptStatus(Message.ReceiptStatus.SENT),conversation.updateMessage(message),delete this.conversationService.pendingMessages[messageId],$rootScope.$broadcast("ON_CONVERSATION_RECEIPT_RECEIVED",message,conversation,"server")}}else if("client"===entity){var that=this;this.extractStanzaData(stanza).then((function(stanzaData){that.handleReceiptReceiveMessage(stanzaData.conversation,stanza)}))}}else if(stanzaElement.find("mark_as_read").length){var conversationId=stanzaElement.find("mark_as_read").attr("with");if(conversation=this.conversationService.getConversationById(conversationId))switch(stanzaElement.find("mark_as_read").attr("id")){case"all-received":conversation.missedCounter=0;break;case"all-sent":conversation.ackReadAllMessages();break;default:$log.error("[ConversationServiceEventHandler] onReceiptMessageReceived error - unknown read type")}}else stanzaElement.find("voicemessage").length&&$log.debug("[ConversationServiceEventHandler] onReceiptMessageReceived VoiceMessage detected");return!0}catch(error){return $log.error("[ConversationServiceEventHandler] onReceiptMessageReceived error "+error),!0}},ConversationServiceEventHandler.prototype.extractStanzaData=function(stanza){var messageSender=xmppService.getBareJidFromJid(angular.element(stanza).attr("from")),stanzaData={},conversationId=null,resource=null,delay=null,defered=$q.defer(),carbonStanza=angular.element(stanza).find("message");if(contactService.isUserContactJid(messageSender)&&carbonStanza.length>0){var from=xmppService.getBareJidFromJid(angular.element(carbonStanza).attr("from")),fromResource=xmppService.getResourceFromJid(angular.element(carbonStanza).attr("from")),to=xmppService.getBareJidFromJid(angular.element(carbonStanza).attr("to")),toResource=xmppService.getResourceFromJid(angular.element(carbonStanza).attr("to"));if(stanzaData.outgoingMessage=contactService.isUserContactJid(from),stanzaData.body=angular.element(carbonStanza).find("body").text(),stanzaData.participant=stanzaData.outgoingMessage?contactService.userContact:null,stanzaData.messageId=angular.element(carbonStanza).attr("id"),stanzaData.carbon=!0,stanzaData.answeredMsg=angular.element(carbonStanza).find("answeredMsg"),stanzaData.alternativeContent=angular.element(carbonStanza).find("content"),conversationId=stanzaData.outgoingMessage?to:from,resource=stanzaData.outgoingMessage?toResource:fromResource,delay=angular.element(carbonStanza).find("delay"),(oob=angular.element(carbonStanza).find("x[xmlns='jabber:x:oob']"))&&oob.length){var url=angular.element(oob).find("url").text(),mime=angular.element(oob).find("mime").text(),filename=angular.element(oob).find("filename").text(),filesize=angular.element(oob).find("size").text();stanzaData.oob={url:url,mime:mime,filename:filename,filesize:filesize}}if((conference=$(stanza).find("x[xmlns='jabber:x:audioconference']"))&&conference.length){var subject=(conferenceElem=$(conference)).attr("subject"),confendpointid=conferenceElem.attr("confendpointid"),jid=conference.attr("jid"),type=conference.attr("type");stanzaData.conference={type:type,subject:subject,confendpointid:confendpointid,roomjid:jid,ownerjid:conversationId}}if((replace=carbonStanza.find("replace"))&&replace.length){var replaceId=replace.attr("id");stanzaData.replace={id:replaceId}}stanzaData.status=null;var composing=angular.element(stanza).find("composing"),paused=angular.element(stanza).find("paused"),active=angular.element(stanza).find("active");if(composing.length?stanzaData.status="composing":paused.length?stanzaData.status="paused":active.length&&(stanzaData.status="active"),(geoloc=angular.element(carbonStanza).find("geoloc"))&&geoloc.length){var lon=(geolocElem=$(geoloc)).find("lon").text(),lat=geolocElem.find("lat").text();stanzaData.geoloc={lon:lon,lat:lat}}(voiceMessage=angular.element(carbonStanza).find("voicemessage"))&&voiceMessage.length&&(stanzaData.voiceMessage=!0)}else{var stanzaElem=$(stanza);stanzaData.outgoingMessage=!1,stanzaData.body=stanzaElem.find("body").text(),stanzaData.messageId=stanzaElem.attr("id"),stanzaData.carbon=!1,stanzaData.answeredMsg=stanzaElem.find("answeredMsg"),stanzaData.alternativeContent=stanzaElem.find("content"),stanzaData.attention=stanzaElem.find("attention"),conversationId=xmppService.getBareJidFromJid(stanzaElem.attr("from")),resource=xmppService.getResourceFromJid(stanzaElem.attr("from")),delay=stanzaElem.find("delay");var oob,geoloc,voiceMessage,conference,replace,archived="push"===stanzaElem.find("retransmission").attr("source");if((oob=stanzaElem.find("x[xmlns='jabber:x:oob']"))&&oob.length){var oobElem=$(oob);url=oobElem.find("url").text(),mime=oobElem.find("mime").text(),filename=oobElem.find("filename").text(),filesize=oobElem.find("size").text();stanzaData.oob={url:url,mime:mime,filename:filename,filesize:filesize}}if((geoloc=stanzaElem.find("geoloc"))&&geoloc.length){var geolocElem;lon=(geolocElem=$(geoloc)).find("lon").text(),lat=geolocElem.find("lat").text();stanzaData.geoloc={lon:lon,lat:lat}}if((voiceMessage=stanzaElem.find("voicemessage"))&&voiceMessage.length&&(stanzaData.voiceMessage=!0),(conference=stanzaElem.find("x[xmlns='jabber:x:audioconference']"))&&conference.length){var conferenceElem,message=(conferenceElem=$(conference)).attr("message");confendpointid=conferenceElem.attr("confendpointid"),jid=conference.attr("jid"),type=conference.attr("type");if(stanzaData.conference={type:type,message:message,confendpointid:confendpointid,roomjid:jid,ownerjid:conversationId},"reminder"!==type)return $log.debug("[conversationServiceEventHandler] ignored message stanza for conference"),defered.resolve(stanzaData),defered.promise;conversationId=jid}if((replace=stanzaElem.find("replace"))&&replace.length){replaceId=replace.attr("id");stanzaData.replace={id:replaceId}}stanzaData.additionalContent=null;var contents=stanzaElem.find("content[xmlns='urn:xmpp:content']");contents&&contents.each((function(){stanzaData.additionalContent||(stanzaData.additionalContent={});var contentType=$(this).attr("type"),content=$(this).text();"text/markdown"===contentType&&(stanzaData.markdown=!0,stanzaData.body=content),stanzaData.additionalContent[contentType]={type:contentType,message:content}})),(subject=stanzaElem.find("subject"))&&""!==subject.text()&&(stanzaData.subject=subject.text()),stanzaData.status=null;composing=stanzaElem.find("composing"),paused=stanzaElem.find("paused"),active=stanzaElem.find("active");composing.length?stanzaData.status="composing":paused.length?stanzaData.status="paused":active.length&&(stanzaData.status="active")}if(stanzaData.date=new Date,stanzaData.offline=!1,"Offline Storage"===delay.text()&&(stanzaData.date=new Date(delay.attr("stamp")),stanzaData.offline=!0),archived){var conversation=this.conversationService.getConversationById(conversationId);if(conversation)defered.reject();else{var cs=this.conversationService;(conversationId.startsWith("room_")?cs.getRoomConversation(conversationId):cs.getOrCreateOneToOneConversation(conversationId)).then((function(conv){conversation=conv,defered.reject()}))}return defered.promise}var existingConv=this.conversationService.getConversationById(conversationId);if(stanzaData.convReady=existingConv&&null!=existingConv.dbId,stanzaData.body||existingConv||stanzaData.oob||stanzaData.conference)if(0===conversationId.indexOf("room_")){var room=roomService.getRoomByJid(conversationId),emptySubject=(subject=stanzaElem.find("subject")).length&&""===subject.text();room&&"accepted"!==room.status||emptySubject?$log.info("[conversationServiceEvent] extractStanzaData -- ignore this stanza message"):this.conversationService.getRoomConversation(conversationId).then((function(roomConv){return stanzaData.conversation=roomConv,stanzaData.conference&&stanzaData.conference.ownerjid?contactService.getOrCreateContact(stanzaData.conference.ownerjid):(resource&&-1!==resource.indexOf("/")&&(resource=resource.split("/")[0]),contactService.getOrCreateContact(resource))})).then((function(contact){stanzaData.participant=contact,defered.resolve(stanzaData)})).catch((function(error){$log.error("[conversationServiceEventHandler] impossible to fetch conversation "+error.message),defered.reject()}))}else this.conversationService.getOrCreateOneToOneConversation(conversationId).then((function(conv){stanzaData.conversation=conv,stanzaData.participant||(stanzaData.participant=conv.contact),defered.resolve(stanzaData)})).catch((function(error){$log.error("[conversationServiceEventHandler] impossible to fetch conversation "+error.message),defered.reject()}));else if($(stanza).find("deleted")){var deleted=$(stanza).find("deleted")[0];if(deleted&&"all"===deleted.getAttribute("id")){var conv=this.conversationService.getConversationById(deleted.getAttribute("with"));conv&&($log.info("[conversationServiceEventHandler] Remove all messages for conversation "+conv.id),conv.reset())}}else $log.debug("[conversationServiceEventHandler] ignored message stanza"),defered.reject();return defered.promise},ConversationServiceEventHandler.prototype.extractWebrtcStanzaData=function(stanza){$log.debug("[conversationServiceEventHandler] extractWebrtcStanzaData");var that=this;return $q((function(resolve,reject){var stanzaData={};stanzaData.messageId=$(stanza).attr("id"),stanzaData.callerJid=$(stanza).find("caller").text(),stanzaData.calleeJid=$(stanza).find("callee").text(),stanzaData.state=$(stanza).find("state").text();var conversationId=null;if(contactService.isUserContactJid(stanzaData.callerJid)?(conversationId=stanzaData.calleeJid,stanzaData.participant=contactService.userContact):conversationId=stanzaData.callerJid,-1!==conversationId.indexOf("janusgateway"))return $log.debug("[conversationServiceEventHandler] extractWebrtcStanzaData -- ignore Janus message"),reject();if(webrtcGatewayService.isMediaPillarJid(stanzaData.callerJid))return $log.debug("[conversationServiceEventHandler] extractWebrtcStanzaData -- ignore MediaPillar message"),resolve();var duration=0;$(stanza).find("duration")&&(duration=parseInt($(stanza).find("duration").text(),10)),stanzaData.duration=duration>0?"("+moment.duration(duration,"ms").format("h[H] mm[m] ss[s]")+")":0;var date=$(stanza).find("date").text();date&&(date=new Date(date)),stanzaData.date=date,stanzaData.body="","missed"===stanzaData.state?stanzaData.body="missedCall||"+date:"answered"===stanzaData.state&&(stanzaData.body="activeCallMsg||"+date+"||"+stanzaData.duration),that.conversationService.getOrCreateOneToOneConversation(conversationId).then((function(conversation){stanzaData.conversation=conversation,stanzaData.participant||(stanzaData.participant=conversation.contact),resolve(stanzaData)})).catch((function(error){$log.error("[conversationServiceEventHandler] impossible to fetch conversation "+error.message),reject()}))}))},ConversationServiceEventHandler.prototype.handleChatMessage=function(stanzaData){$log.info("[ConversationServiceEventHandler] handleChatMessage");var that=this,conversation=stanzaData.conversation,message=null,body=stanzaData.body;if(stanzaData.oob){var url=stanzaData.oob.url,fileName=stanzaData.oob.filename,fileId=fileStorageService.extractFileIdFromUrl(url);fileStorageService.retrieveAndStoreOneFileDescriptor(fileId).then((function(fileDescriptor){message=conversation.addFileSharingMessage(stanzaData.participant,stanzaData.date,stanzaData.body,stanzaData.messageId,fileId,fileName,stanzaData.geoloc,stanzaData.voiceMessage),that.acknowledgeHandledChatMessage(stanzaData,conversation,message),fileServerService.getBlobThumbnailFromFileDescriptor(fileDescriptor).then((function(blob){var newFileDescriptor=fileStorageService.getFileDescriptorById(fileDescriptor.id);newFileDescriptor.previewBlob=blob,$rootScope.$broadcast("ON_FILE_DESCRIPTOR_RECEIVED_EVENT",{fileId:newFileDescriptor.id})})),$rootScope.$broadcast("ON_FILE_DESCRIPTOR_RECEIVED_EVENT",{fileId:fileDescriptor.id})})).catch((function(error){$log.info("[ConversationServiceEventHandler] handleChatMessage error "+error)}))}else if(stanzaData.conference){var conferenceDescriptor={type:stanzaData.conference.type,message:stanzaData.conference.subject,confendpointid:stanzaData.conference.confendpointid,roomjid:stanzaData.conference.roomjid};if(conversation=this.conversationService.getConversationById(conferenceDescriptor.roomjid),$rootScope.$broadcast("ROOM_UPDATE_CONFID"),!conversation)return!0;message=conversation.addConferenceMessage(stanzaData.participant,stanzaData.date,stanzaData.messageId,conferenceDescriptor)}else if(stanzaData.replace)(message=conversation.getMessageById(stanzaData.replace.id))&&stanzaData.participant.jid!==message.from.jid?($log.warn("[ConversationServiceEventHandler] handleChatMessage : message Replaced by somebody else - Skip"),message=null):(message||(message=conversation.addChatMessage(stanzaData.participant,stanzaData.date,"",stanzaData.messageId,null,stanzaData.markdown,stanzaData.subject,null,null,stanzaData.additionalContent)),message.addReplaceMsg(stanzaData.messageId,body));else if(body.length>0){var answeredMsgId=stanzaData.answeredMsg?stanzaData.answeredMsg.text():null,answeredMsgDate=stanzaData.answeredMsg?stanzaData.answeredMsg.attr("stamp"):null,alternativeContent=stanzaData.alternativeContent.length>0?{type:stanzaData.alternativeContent.attr("type"),message:stanzaData.alternativeContent.text()}:null,attention=stanzaData.attention&&stanzaData.attention.length;message=conversation.addChatMessage(stanzaData.participant,stanzaData.date,stanzaData.body,stanzaData.messageId,null,stanzaData.markdown,stanzaData.subject,answeredMsgId,answeredMsgDate,stanzaData.additionalContent,alternativeContent,attention)}message&&that.acknowledgeHandledChatMessage(stanzaData,conversation,message)},ConversationServiceEventHandler.prototype.acknowledgeHandledChatMessage=function(stanzaData,conversation,message){if($log.info("[ConversationServiceEventHandler] acknowledgeHandledChatMessage"),!message)return message=conversation.getMessageById(stanzaData.messageId),conversation.room&&message&&message.side===Message.Side.RIGHT&&conversation.sendAckReceivedMessage(message),!0;message.side===Message.Side.LEFT?(conversation===this.conversationService.activeConversation&&"away"!==contactService.userContact.status&&$rootScope.appVisible&&"conversations"===$rootScope.activeApplication?conversation.sendAckReceivedMessage(message):(conversation.sendAckReceivedMessage(message),!stanzaData.offline&&stanzaData.convReady&&(conversation.missedCounter+=1)),message.isTextModified()&&(message.receiptStatus===Message.ReceiptStatus.READ&&conversation.sendAckReadOrReceivedMessage(stanzaData.messageId,"read"),conversation.updateMessage(message))):(stanzaData.carbon?message.setReceiptStatus(Message.ReceiptStatus.SENT):message.setReceiptStatus(Message.ReceiptStatus.IN_PROGRESS),conversation.updateMessage(message)),conversation.setStatusMessage(stanzaData.participant,Conversation.Status.ACTIVE),$rootScope.$broadcast("ON_CONVERSATION_MESSAGE_RECEIVED",message,conversation,stanzaData.carbon),$rootScope.$broadcast("ON_CONVERSATIONS_UPDATED_EVENT",conversation)},ConversationServiceEventHandler.prototype.handleReceiptReceiveMessage=function(conversation,stanza){$log.info("[ConversationServiceEventHandler] handleReceiptReceiveMessage");var recvMessage=angular.element(stanza).find("received[xmlns='urn:xmpp:receipts']");if(recvMessage.length){var messageId=angular.element(recvMessage).attr("id"),message=conversation.getMessageById(messageId);if(message){(contactJid=angular.element(stanza).attr("from").split("/")[1])||(contactJid=angular.element(stanza).attr("from"));var event=angular.element(recvMessage).attr("event");(conversation.room&&contactService.isUserContactJid(contactJid)||!conversation.room)&&("received"===event?message.setReceiptStatus(Message.ReceiptStatus.UNREAD):"read"===event&&(message.setReceiptStatus(Message.ReceiptStatus.READ),conversation.missedCounter=0)),contactService.isUserContactJid(contactJid)&&"read"===event&&"L"===message.side&&(conversation.missedCounter=0),conversation.updateMessage(message),$rootScope.$broadcast("ON_CONVERSATION_RECEIPT_RECEIVED",message,conversation,event),$rootScope.$broadcast("ON_CONVERSATIONS_UPDATED_EVENT",conversation)}else{var temp=angular.element(stanza).attr("from"),contactJid=(event=angular.element(recvMessage).attr("event"),"");temp&&(contactJid=temp.split("/")[1]),contactJid||(contactJid=temp),contactService.isUserContactJid(contactJid)&&"read"===event&&(conversation.missedCounter=0,$rootScope.$broadcast("ON_CONVERSATIONS_UPDATED_EVENT",conversation))}}},ConversationServiceEventHandler.prototype.handleStatusMessage=function(conversation,participant,stanza){$log.info("[conversationServiceEventHandler] handleStatusMessage ");var status="";status="thread"===angular.element(stanza).children().prop("tagName")?Conversation.stringToStatus(angular.element(angular.element(stanza).children()[1]).prop("tagName")):Conversation.stringToStatus(angular.element(stanza).children().prop("tagName")),conversation.setStatusMessage(participant,status),$rootScope.$broadcast("ON_CONVERSATIONS_STATUS_MESSAGE_EVENT",conversation,participant,status)},ConversationServiceEventHandler.prototype.onRecordingMessageReceived=function(stanza){$log.info("[ConversationServiceEventHandler] onRecordingMessageReceived");try{var msgContent=stanza.textContent;return this.extractStanzaData(stanza).then((function(stanzaData){if("start"===msgContent)(conversation=stanzaData.conversation).addRecordingMessage(stanzaData.participant,stanzaData.date,msgContent,stanzaData.messageId),conversation.setStatusMessage(stanzaData.participant,Conversation.Status.ACTIVE),$rootScope.$broadcast("ON_CONVERSATIONS_UPDATED_EVENT",conversation),$rootScope.$broadcast("ON_RECORDING_START_MSG_RECEIVED");else if("stop"===msgContent){var conversation;(conversation=stanzaData.conversation)&&conversation.addRecordingMessage(stanzaData.participant,stanzaData.date,msgContent,stanzaData.messageId),$rootScope.$broadcast("ON_RECORDING_STOP_MSG_RECEIVED")}else"remoteStopVideo"===msgContent?$rootScope.$broadcast("ON_RECORDING_REMOTESTOPVIDEO_MSG_RECEIVED"):"remoteChangeMediaVideo"===msgContent?$rootScope.$broadcast("ON_RECORDING_REMOTECHANGEMEDIAVIDEO_MSG_RECEIVED"):"remoteStopSharing"===msgContent?$rootScope.$broadcast("ON_RECORDING_REMOTESTOPSHARING_MSG_RECEIVED"):"remoteChangeMediaSharing"===msgContent&&$rootScope.$broadcast("ON_RECORDING_REMOTECHANGEMEDIASHARING_MSG_RECEIVED")})),!0}catch(error){return $log.error("[ConversationServiceEventHandler] onRecordingMessageReceived error "+error),!0}},ConversationServiceEventHandler}])},function(module,exports){angular.module("rainbow").factory("ConversationServiceHistoryHandler",["$log","$q","$filter","$rootScope","xmppService","contactService","fileStorageService","fileServerService","Message","SearchTextMsgResultFactory",function($log,$q,$filter,$rootScope,xmppService,contactService,fileStorageService,fileServerService,Message,SearchTextMsgResultFactory){"use strict";function ConversationServiceHistoryHandler(conversationService){this.conversationService=conversationService}return ConversationServiceHistoryHandler.create=function(conversationService){return new ConversationServiceHistoryHandler(conversationService)},ConversationServiceHistoryHandler.prototype.getHistoryPage=function(conversation,nbMessages){var that=this,room=conversation.room;return room&&room.initPresPromise?room.initPresPromise.promise.then((function(){return that.getHistoryPageInternal(conversation,nbMessages)})):this.getHistoryPageInternal(conversation,nbMessages)},ConversationServiceHistoryHandler.prototype.getHistoryPageInternal=function(conversation,size){if(conversation.currentHistoryId&&conversation.currentHistoryId===conversation.historyIndex)return $log.info("[ConversationServiceHistoryHandler] getHistoryPage("+conversation.id+", "+size+", "+conversation.historyIndex+") already asked"),$q.reject();conversation.currentHistoryId=conversation.historyIndex,$log.info("[ConversationServiceHistoryHandler] getHistoryPage("+conversation.id+", "+size+", "+conversation.historyIndex+")");var defered=conversation.historyDefered=$q.defer();if(contactService.isUserContact(conversation.contact))return defered.reject(),defered.promise;if(conversation.historyComplete)return $log.info("[ConversationServiceHistoryHandler] getHistoryPage("+conversation.id+") : already complete"),defered.reject(),defered.promise;var mamRequest={queryid:conversation.id,with:conversation.id,max:size,before:""};return-1!==conversation.historyIndex&&(mamRequest.before=conversation.historyIndex),conversation.room?(mamRequest={queryid:conversation.id,with:contactService.userContact.jid,max:size,before:""},-1!==conversation.historyIndex&&(mamRequest.before=conversation.historyIndex),xmppService.connection.mam.querymuc(conversation.id,conversation.room.jid,mamRequest)):xmppService.connection.mam.query(conversation.id,mamRequest),defered.promise},ConversationServiceHistoryHandler.prototype.retrieveMsgByDate=function(conversation,msgDate){conversation.historyDefered=$q.defer();var defered=$q.defer();if(contactService.isUserContact(conversation.contact))return defered.reject(),defered.promise;var queryId="cache_"+conversation.id;return ConversationServiceHistoryHandler.prototype.getCommonHistoryPageAroundMsg(queryId,conversation,1,msgDate,"after",(function(){$log.info("[ConversationServiceHistoryHandler] retrieveMsgByDate finished"),defered.resolve()})),defered.promise},ConversationServiceHistoryHandler.prototype.getHistoryPageAroundMsg=function(conversation,size,centeredMsgDate){conversation.historyDefered=$q.defer();var defered=$q.defer();return contactService.isUserContact(conversation.contact)?(defered.reject(),defered.promise):(ConversationServiceHistoryHandler.prototype.getCommonHistoryPageAroundMsg(conversation.id,conversation,size+1,centeredMsgDate,"after",(function(){$log.info("[ConversationServiceHistoryHandler] getCommonHistoryPageAroundMsg BEFORE finished"),ConversationServiceHistoryHandler.prototype.getCommonHistoryPageAroundMsg(conversation.id,conversation,size,centeredMsgDate,"before",(function(){$log.info("[ConversationServiceHistoryHandler] getCommonHistoryPageAroundMsg AFTER finished"),defered.resolve()}))})),defered.promise)},ConversationServiceHistoryHandler.prototype.getCommonHistoryPageAroundMsg=function(queryId,conversation,size,centeredMsgDate,order,finishMethod){var mamRequest;($log.info("[ConversationServiceHistoryHandler] getCommonHistoryPageAroundMsg("+queryId+", "+size+", "+conversation.historyIndex+")"),conversation.room)?((mamRequest={queryid:queryId,with:contactService.userContact.jid,max:size,onComplete:finishMethod})[order]=centeredMsgDate,xmppService.connection.mam.querymuc(queryId,conversation.room.jid,mamRequest)):((mamRequest={queryid:queryId,with:conversation.id,max:size,onComplete:finishMethod})[order]=centeredMsgDate,xmppService.connection.mam.query(queryId,mamRequest))},ConversationServiceHistoryHandler.prototype.searchTextInConversations=function(queryId,text,limitSize){$log.info("[ConversationServiceHistoryHandler] searchTextInConversations("+text+")");var defered=$q.defer(),iqId=xmppService.connection.getUniqueId(),iq=$iq({id:iqId,type:"get"}).c("query",{queryid:queryId,xmlns:"urn:xmpp:mam:tmp"}).c("set",{xmlns:"http://jabber.org/protocol/rsm"}).c("max").t(limitSize).up().c("before").up().up().c("x",{xmlns:"jabber:x:data",type:"form"}).c("field",{var:"FORM_TYPE",type:"hidden"}).c("value").t("urn:xmpp:mam:1").up().up().c("field",{var:"withtext",type:"text-single"}).c("value").t(text).up().up();return xmppService.sendIQ(iq).then((function(data){$log.info("[ConversationServiceHistoryHandler] sendIq Success: "+text);var count=$(data).find("query").find("set").find("count").text();$log.info("[ConversationServiceHistoryHandler] >searchTextInConversations: count= "+count),defered.resolve(count)})).catch((function(error){$log.info("[ConversationServiceHistoryHandler] sendIq Failure: "+error.message),defered.reject(error)})),defered.promise},ConversationServiceHistoryHandler.prototype.getConversationTextCount=function(queryId,text,contactJid){$log.info("[ConversationServiceHistoryHandler] getConversationTextCount("+text+")");var defered=$q.defer(),iqId=xmppService.connection.getUniqueId(),iq=$iq({id:iqId,type:"get"}).c("query",{queryid:queryId,xmlns:"urn:xmpp:mam:tmp"}).c("set",{xmlns:"http://jabber.org/protocol/rsm"}).c("max").t("0").up().up().c("x",{xmlns:"jabber:x:data",type:"form"}).c("field",{var:"FORM_TYPE",type:"hidden"}).c("value").t("urn:xmpp:mam:1").up().up().c("field",{var:"withtext",type:"text-single"}).c("value").t(text).up().up().c("field",{var:"with",type:"text-single"}).c("value").t(contactJid).up().up();return xmppService.sendIQ(iq).then((function(data){$log.info("[ConversationServiceHistoryHandler] sendIq Success: "+text);var count=$(data).find("query").find("set").find("count").text();$log.info("[ConversationServiceHistoryHandler] >getConversationTextCount: count= "+count),defered.resolve(count)})).catch((function(error){$log.info("[ConversationServiceHistoryHandler] sendIq Failure: "+error.message),defered.reject(error)})),defered.promise},ConversationServiceHistoryHandler.prototype.searchTextResultsInConversation=function(queryId,text,contactJid,limitSize){$log.info("[ConversationServiceHistoryHandler] searchTextResultsInConversation("+text+")");var defered=$q.defer(),iqId=xmppService.connection.getUniqueId(),iq=$iq({id:iqId,type:"get"}).c("query",{queryid:queryId,xmlns:"urn:xmpp:mam:tmp"}).c("set",{xmlns:"http://jabber.org/protocol/rsm"}).c("max").t(limitSize).up().c("before").up().up().c("x",{xmlns:"jabber:x:data",type:"form"}).c("field",{var:"FORM_TYPE",type:"hidden"}).c("value").t("urn:xmpp:mam:1").up().up().c("field",{var:"withtext",type:"text-single"}).c("value").t(text).up().up().c("field",{var:"with",type:"text-single"}).c("value").t(contactJid).up().up();return xmppService.sendIQ(iq).then((function(data){$log.info("[ConversationServiceHistoryHandler] sendIq Success: "+text);var count=$(data).find("query").find("set").find("count").text();$log.info("[ConversationServiceHistoryHandler] >getConversationTextCount: count= "+count),defered.resolve(count)})).catch((function(error){$log.info("[ConversationServiceHistoryHandler] sendIq Failure: "+error.message),defered.reject(error)})),defered.promise},ConversationServiceHistoryHandler.prototype.searchTextMoreResultsInConversation=function(queryId,text,contactJid,messageDate,limitSize){$log.info("[ConversationServiceHistoryHandler] searchTextMoreResultsInConversation("+text+")");var defered=$q.defer(),iqId=xmppService.connection.getUniqueId(),iq=$iq({id:iqId,type:"get"}).c("query",{queryid:queryId,xmlns:"urn:xmpp:mam:tmp"}).c("set",{xmlns:"http://jabber.org/protocol/rsm"}).c("max").t(limitSize).up().c("before").t(messageDate).up().up().c("x",{xmlns:"jabber:x:data",type:"form"}).c("field",{var:"FORM_TYPE",type:"hidden"}).c("value").t("urn:xmpp:mam:1").up().up().c("field",{var:"withtext",type:"text-single"}).c("value").t(text).up().up().c("field",{var:"with",type:"text-single"}).c("value").t(contactJid).up().up();return xmppService.sendIQ(iq).then((function(data){$log.info("[ConversationServiceHistoryHandler] sendIq Success: "+text);var count=$(data).find("query").find("set").find("count").text();$log.info("[ConversationServiceHistoryHandler] >getConversationTextCount: count= "+count),defered.resolve(count)})).catch((function(error){$log.info("[ConversationServiceHistoryHandler] sendIq Failure: "+error.message),defered.reject(error)})),defered.promise},ConversationServiceHistoryHandler.prototype.searchTextInRoom=function(queryId,userJid,roomJid,text,limitSize){$log.info("[ConversationServiceHistoryHandler] searchTextInRoom("+text+")");var defered=$q.defer(),iqId=xmppService.connection.getUniqueId(),iq=$iq({to:roomJid,id:iqId,type:"get"}).c("query",{queryid:queryId,xmlns:"urn:xmpp:mam:tmp"}).c("set",{xmlns:"http://jabber.org/protocol/rsm"}).c("max").t(limitSize).up().c("before").up().up().c("x",{xmlns:"jabber:x:data",type:"form"}).c("field",{var:"FORM_TYPE",type:"hidden"}).c("value").t("urn:xmpp:mam:1").up().up().c("field",{var:"with",type:"text-single"}).c("value").t(userJid).up().up().c("field",{var:"withtext",type:"text-single"}).c("value").t(text).up().up();return xmppService.sendIQ(iq).then((function(data){$log.info("[ConversationServiceHistoryHandler] sendIq Success: "+text);var count=$(data).find("query").find("set").find("count").text();$log.info("[ConversationServiceHistoryHandler] >searchTextInRoom: count= "+count),defered.resolve(count)})).catch((function(error){$log.info("[ConversationServiceHistoryHandler] >searchTextInRoom: Failure: "+error.message),defered.reject(error)})),defered.promise},ConversationServiceHistoryHandler.prototype.searchTextMoreResultsInRoom=function(queryId,text,contactJid,roomJid,messageDate,limitSize){$log.info("[ConversationServiceHistoryHandler] searchTextMoreResultsInConversation("+text+")");var defered=$q.defer(),iqId=xmppService.connection.getUniqueId(),iq=$iq({to:roomJid,id:iqId,type:"get"}).c("query",{queryid:queryId,xmlns:"urn:xmpp:mam:tmp"}).c("set",{xmlns:"http://jabber.org/protocol/rsm"}).c("max").t(limitSize).up().c("before").t(messageDate).up().up().c("x",{xmlns:"jabber:x:data",type:"form"}).c("field",{var:"FORM_TYPE",type:"hidden"}).c("value").t("urn:xmpp:mam:1").up().up().c("field",{var:"withtext",type:"text-single"}).c("value").t(text).up().up().c("field",{var:"with",type:"text-single"}).c("value").t(contactJid).up().up();return xmppService.sendIQ(iq).then((function(data){$log.info("[ConversationServiceHistoryHandler] sendIq Success: "+text);var count=$(data).find("query").find("set").find("count").text();$log.info("[ConversationServiceHistoryHandler] >getConversationTextCount: count= "+count),defered.resolve(count)})).catch((function(error){$log.info("[ConversationServiceHistoryHandler] sendIq Failure: "+error.message),defered.reject(error)})),defered.promise},ConversationServiceHistoryHandler.prototype.onHistoryMessageReceived=function(stanza){$log.info("[ConversationServiceHistoryHandler] onHistoryMessageReceived");try{var conversation=null,stanzaElem=$(stanza),queryId=stanzaElem.find("result").attr("queryid");if(queryId){if(conversation=this.conversationService.getConversationById(queryId)){if(stanzaElem.find("call_log").length)return this.onWebrtcHistoryMessageReceived(stanza,conversation);var brutJid=stanzaElem.find("forwarded message").attr("from"),roomEvent=!1;if(!(fromJid=brutJid&&0===brutJid.indexOf("room_")?brutJid.split("/")[1]:xmppService.getBareJidFromJid(stanzaElem.find("forwarded message").attr("from")))&&stanzaElem.find("event").length&&(roomEvent=stanzaElem.find("event").attr("name"),fromJid=stanzaElem.find("event").attr("jid"),"welcome"===roomEvent&&conversation.room&&conversation.room.ownerContact&&(fromJid=conversation.room.ownerContact.jid)),!fromJid)return $log.warn("[ConversationServiceHistoryHandler] onHistoryMessageReceived - Receive message without valid fromJid information"),!0;var from=contactService.getContactByJid(fromJid),type=stanzaElem.find("forwarded message").attr("type"),messageId=stanzaElem.find("forwarded message").attr("id"),date=new Date(stanzaElem.find("forwarded delay").attr("stamp")),body=stanzaElem.find("forwarded message body").text(),ack=stanzaElem.find("forwarded message ack"),oob=stanzaElem.find("forwarded message x[xmlns='jabber:x:oob']"),conference=stanzaElem.find("forwarded message x[xmlns='jabber:x:bubble:conference:pstn']"),contents=stanzaElem.find("content[xmlns='urn:xmpp:content']"),replace=stanzaElem.find("replace"),answeredMsg=stanzaElem.find("answeredMsg"),alternativeContent=stanzaElem.find("content"),side=contactService.isUserContact(from)?Message.Side.RIGHT:Message.Side.LEFT,geoloc=stanzaElem.find("geoloc"),voiceMessage=stanzaElem.find("voicemessage");if(voiceMessage&&voiceMessage.length)var voiceMessageData=!0;if(geoloc&&geoloc.length)var geolocElem=$(geoloc),geolocData={lon:geolocElem.find("lon").text(),lat:geolocElem.find("lat").text()};if(from||($log.warn("[ConversationServiceHistoryHandler] onHistoryMessageReceived missing contact for jid : "+fromJid+", ignore message"),from=contactService.createEmptyContactContact(fromJid)),roomEvent){if($log.info("[ConversationServiceHistoryHandler] ("+conversation.id+") add Room admin event message "+roomEvent),type="admin",conversation.room&&conversation.room.isMeetingRoom()&&("welcome"===roomEvent||"conferenceAdd"===roomEvent||"conferenceRemove"===roomEvent||"invitation"===roomEvent))return!0;if(("conferenceAdd"===roomEvent||"conferenceRemove"===roomEvent)&&conversation.room&&conversation.room.ownerContact){var userJid=stanzaElem.find("event").attr("jid"),user=conversation.room.getUserByJid(userJid);from=user&&user.contact?user.contact:conversation.room.ownerContact}}var message=conversation.getMessageById(messageId);if(message||(message=conversation.historyMessages.find((function(item){return item.id===messageId}))),message)$log.info("[ConversationServiceHistoryHandler] ("+conversation.id+") try to add an already stored message with id "+message.id);else{switch(type){case"file":message=Message.createFileMessage(messageId,date,from,side,body,!1);break;case"webrtc":message=Message.createWebRTCMessage(messageId,date,from,side,body,!1);break;case"admin":message=Message.createBubbleAdminMessage(messageId,date,from,roomEvent);break;case"recording":message=Message.createRecordingAdminMessage(messageId,date,from,"Admin");break;default:if(oob&&oob.length){var oobElem=$(oob),url=oobElem.find("url").text(),fileName=oobElem.find("filename").text(),fileId=fileStorageService.extractFileIdFromUrl(url);message=voiceMessageData?Message.createVoiceMessage(messageId,date,from,side,body,!1,fileId,fileName,voiceMessageData):Message.createFileSharingMessage(messageId,date,from,side,body,!1,fileId,fileName,geolocData),fileStorageService.retrieveAndStoreOneFileDescriptor(fileId).then((function(fileDescriptor){fileDescriptor&&"not_uploaded"===fileDescriptor.state&&(message.receiptStatus=1,message.fileErrorMsg=$filter("translate")("file_notuploaded")),fileServerService.getBlobThumbnailFromFileDescriptor(fileDescriptor).then((function(blob){fileDescriptor.previewBlob=blob,$rootScope.$broadcast("ON_FILE_DESCRIPTOR_RECEIVED_EVENT",{fileId:fileDescriptor.id})})),$rootScope.$broadcast("ON_FILE_DESCRIPTOR_RECEIVED_EVENT",{fileId:fileDescriptor.id})})).catch((function(error){$log.info("[ConversationServiceHistoryHandler] onHistoryMessageReceived error "+error)}))}else if(conference&&conference.length){var conferenceElem=$(conference),subject=conferenceElem.attr("subject"),confendpointid=conferenceElem.attr("confendpointid"),jid=conference.attr("jid");if("reminder"===conference.attr("type"))return!0;var conferenceDescriptor={subject:subject,confendpointid:confendpointid,roomjid:jid};message=Message.createConferenceMessage(messageId,date,from,side,!1,conferenceDescriptor)}else{var isMarkdown=!1,additionalContent={};if(contents&&contents.each((function(){var contentType=$(this).attr("type"),content=$(this).text();"text/markdown"===contentType&&(isMarkdown=!0,body=content),additionalContent[contentType]={type:contentType,message:content}})),replace&&replace.length){var replacedMsgId=replace.attr("id"),replacedMessage=conversation.getMessageByIdInHistory(replacedMsgId);replacedMessage||(replacedMessage=Message.create(replacedMsgId,date,from,side,body,!1,isMarkdown,null,null,null,additionalContent),message=replacedMessage),from.jid!==replacedMessage.from.jid?($log.warn("[ConversationServiceHistoryHandler] onHistoryMessageReceived : message Replaced by somebody else - Skip"),message=null):replacedMessage&&replacedMessage.addReplaceMsg(messageId,body)}else{var answeredMsgId=answeredMsg?answeredMsg.text():null,answeredMsgDate=answeredMsg?answeredMsg.attr("stamp"):null;alternativeContent=alternativeContent?{type:alternativeContent.attr("type"),message:alternativeContent.text()}:null;message=Message.create(messageId,date,from,side,body,!1,isMarkdown,null,answeredMsgId,answeredMsgDate,additionalContent,alternativeContent)}}}message&&(message.receiptStatus="true"===angular.element(ack).attr("read")?5:"true"===angular.element(ack).attr("recv")?4:3,$log.info("[ConversationServiceHistoryHandler] onHistoryMessageReceived : pushing msg inside historyMessages"),conversation.addMessageInHistoryMessages(message))}}else if(queryId.startsWith("cache_")){$log.info("[ConversationServiceHistoryHandler] onHistoryMessageReceived : Query Id for Cached Message");var conversationId=queryId.substr(6);if(conversation=this.conversationService.getConversationById(conversationId)){var fromJid;if($log.info("[ConversationServiceHistoryHandler] onHistoryMessageReceived : Conversation Found"),!(fromJid=(brutJid=stanzaElem.find("forwarded message").attr("from"))&&0===brutJid.indexOf("room_")?brutJid.split("/")[1]:xmppService.getBareJidFromJid(stanzaElem.find("forwarded message").attr("from")))&&stanzaElem.find("event").length&&(roomEvent=stanzaElem.find("event").attr("name"),fromJid=stanzaElem.find("event").attr("jid"),"welcome"===roomEvent&&conversation.room&&conversation.room.ownerContact&&(fromJid=conversation.room.ownerContact.jid)),!fromJid)return $log.warn("[ConversationServiceHistoryHandler] onHistoryMessageReceived - Receive message without valid fromJid information"),!0;from=contactService.getContactByJid(fromJid),messageId=stanzaElem.find("forwarded message").attr("id"),date=new Date(stanzaElem.find("forwarded delay").attr("stamp")),body=stanzaElem.find("forwarded message body").text(),side=contactService.isUserContact(from)?Message.Side.RIGHT:Message.Side.LEFT;from||($log.warn("[ConversationServiceHistoryHandler] onHistoryMessageReceived missing contact for jid : "+fromJid+", ignore message"),from=contactService.createEmptyContactContact(fromJid)),(message=Message.create(messageId,date,from,side,body,!1,!1))&&conversation.addMessageInCacheMessages(message)}}}else if(queryId=angular.element(stanza).find("fin").attr("queryid"),conversation=this.conversationService.getConversationById(queryId)){conversation.historyComplete="true"===angular.element(stanza).find("fin").attr("complete");var historyIndex=angular.element(stanza).find("fin set first").text();-1===conversation.historyIndex?(conversation.messages.unshift.apply(conversation.messages,conversation.historyMessages),conversation.chatRenderer&&conversation.chatRenderer.prependMessages(conversation.messages,conversation.room)):(conversation.messages.unshift.apply(conversation.messages,conversation.historyMessages),conversation.chatRenderer&&conversation.chatRenderer.prependMessages(conversation.historyMessages,conversation.room)),conversation.historyIndex=historyIndex,conversation.historyMessages=[],angular.isDefined(conversation.messages)&&conversation.messages.length>0?conversation.lastMessageText=conversation.messages[conversation.messages.length-1].data:conversation.lastMessageText="",conversation.historyDefered&&conversation.historyDefered.resolve(conversation)}return!0}catch(error){return $log.error("[ConversationServiceHistoryHandler] onHistoryMessageReceived error : "+error),!0}},ConversationServiceHistoryHandler.prototype.onSearchTextMessageReceived=function(stanza){$log.info("[ConversationServiceHistoryHandler] onSearchTextMessageReceived");try{var otherJid,stanzaElem=$(stanza),fromJid=stanzaElem.find("forwarded message").attr("from"),toJid=stanzaElem.find("forwarded message").attr("to"),isSent=!1,isRoom=!1;if(contactService.isUserContactJid(fromJid)?($log.info("[ConversationServiceHistoryHandler] sent message"),isSent=!0,otherJid=toJid):($log.info("[ConversationServiceHistoryHandler] received message"),isSent=!1,otherJid=fromJid),otherJid&&0===otherJid.indexOf("room_")?(otherJid=otherJid.split("/")[0],isRoom=!0):otherJid=xmppService.getBareJidFromJid(otherJid),!otherJid)return void $log.warn("[ConversationServiceHistoryHandler] onSearchTextMessageReceived - Receive message without valid otherJid information");var messageId=stanzaElem.find("forwarded message").attr("id"),date=new Date(stanzaElem.find("forwarded delay").attr("stamp")),body=stanzaElem.find("forwarded message body").text(),searchMsgResult=SearchTextMsgResultFactory();return searchMsgResult.body=body,searchMsgResult.date=date,searchMsgResult.isRoom=isRoom,searchMsgResult.isSent=isSent,searchMsgResult.messageId=messageId,searchMsgResult.otherJid=otherJid,searchMsgResult}catch(error){return $log.error("[ConversationServiceHistoryHandler] onSearchTextMessageReceived error : "+error),!0}},ConversationServiceHistoryHandler.prototype.onWebrtcHistoryMessageReceived=function(stanza,conversation){console.log("onWebrtcHistoryMessageReceived");try{var stanzaElem=$(stanza),messageId=stanzaElem.find("forwarded message").attr("id"),callerJid=stanzaElem.find("caller").text(),state=stanzaElem.find("state").text(),duration=0;stanzaElem.find("duration")&&(duration=stanzaElem.find("duration").text(),duration=parseInt(duration,10)),duration=duration>0?"("+moment.duration(duration,"ms").format("h[H] mm[m] ss[s]")+")":0;var date=stanzaElem.find("date").text();date=date?new Date(date):new Date(stanzaElem.find("forwarded delay").attr("stamp"));var body="";"missed"===state?body="missedCall||"+date:"answered"===state&&(body="activeCallMsg||"+date+"||"+duration);var message=conversation.getMessageById(messageId);if(message||(message=conversation.historyMessages.find((function(item){return item.id===messageId}))),message)$log.info("[ConversationServiceHistoryHandler] ("+conversation.id+") try to add an already stored message with id "+message.id);else{var from=contactService.getContactByJid(callerJid);from||($log.warn("[ConversationServiceHistoryHandler] onWebrtcHistoryMessageReceived missing contact for jid : "+callerJid+", ignore message"),from=contactService.createEmptyContactContact(callerJid));var side=contactService.isUserContact(from)?Message.Side.RIGHT:Message.Side.LEFT;message=Message.createWebRTCMessage(messageId,date,from,side,body,!1);var ack=stanzaElem.find("forwarded message ack");ack&&(message.receiptStatus="true"===angular.element(ack).attr("read")?5:"true"===angular.element(ack).attr("received")?4:3),conversation.historyMessages.push(message)}return!0}catch(error){return console.error(error),!0}},ConversationServiceHistoryHandler}])},function(module,exports,__webpack_require__){"use strict";var __awaiter=this&&this.__awaiter||function(thisArg,_arguments,P,generator){return new(P||(P=Promise))((function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){var value;result.done?resolve(result.value):(value=result.value,value instanceof P?value:new P((function(resolve){resolve(value)}))).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())}))};Object.defineProperty(exports,"__esModule",{value:!0});const favorite_1=__webpack_require__(95);class FavoriteService{constructor($http,$log,contactService,authService,roomService,conversationService,xmppService){this.$http=$http,this.$log=$log,this.contactService=contactService,this.authService=authService,this.roomService=roomService,this.conversationService=conversationService,this.xmppService=xmppService,this.favorites=[]}start(stats){return __awaiter(this,void 0,void 0,(function*(){this.$log.info("[favoriteService] === STARTING ===");let startDate=performance.now();this.getServerFavorites(),this.conversationService.favoriteService=this,this.attachHandlers();let startDuration=Math.round(performance.now()-startDate);stats.push({service:"favoriteService",startDuration:startDuration}),this.$log.info(`[favoriteService] === STARTED (${startDuration} ms) ===`)}))}reconnect(){this.getServerFavorites(),this.conversationService.favoriteService=this,this.attachHandlers()}stop(){return __awaiter(this,void 0,void 0,(function*(){this.$log.info("[favoriteService] Stopping"),this.xmppManagementHandler&&(this.xmppService.deleteHandler(this.xmppManagementHandler),this.xmppManagementHandler=null),this.$log.info("[favoriteService] Stopped")}))}getServerFavorites(){return __awaiter(this,void 0,void 0,(function*(){try{let url=`${config.restServerUrl}/api/rainbow/enduser/v1.0/users/${this.contactService.userContact.dbId}/favorites`,promises=(yield this.$http({method:"GET",url:url,headers:this.authService.getRequestHeader()})).data.data.map(data=>__awaiter(this,void 0,void 0,(function*(){return this.createFavorite(data.id,data.peerId,data.type)}))),favorites=yield Promise.all(promises);return this.favorites=favorites.filter(favorite=>null!==favorite),this.$log.info(`[favoriteService] getServerFavorites -- SUCCESS -- found ${this.favorites.length} favorites`),this.favorites}catch(error){let errorMessage=`getServerFavorites -- FAILURE -- ${error.message}`;throw this.$log.error(`[favoriteService] ${errorMessage}`),new Error(errorMessage)}}))}addServerFavorite(peerId,type){return __awaiter(this,void 0,void 0,(function*(){try{let url=`${config.restServerUrl}/api/rainbow/enduser/v1.0/users/${this.contactService.userContact.dbId}/favorites`,data={peerId:peerId,type:type};yield this.$http({method:"POST",url:url,headers:this.authService.getRequestHeader(),data:data}),this.$log.info(`[favoriteService] addServerFavorite(${peerId}, ${type}) -- SUCCESS`)}catch(error){let errorMessage=`addServerFavorite(${peerId}, ${type}) -- FAILURE -- ${error.message}`;throw this.$log.error(`[favoriteService] ${errorMessage}`),new Error(errorMessage)}}))}removeServerFavorite(favoriteId){return __awaiter(this,void 0,void 0,(function*(){try{let url=`${config.restServerUrl}/api/rainbow/enduser/v1.0/users/${this.contactService.userContact.dbId}/favorites/${favoriteId}`;yield this.$http({method:"DELETE",url:url,headers:this.authService.getRequestHeader()}),this.$log.info(`[favoriteService] removeServerFavorite(${favoriteId}) -- SUCCESS`)}catch(error){let errorMessage=`removeServerFavorite(${favoriteId}) -- FAILURE -- ${error.statusText}`;throw this.$log.error(`[favoriteService] ${errorMessage}`),new Error(errorMessage)}}))}toggleFavorite(conversation){let peerId=conversation.contact?conversation.contact.dbId:conversation.room.dbId,type=conversation.contact?conversation.contact.isBot?"bot":"user":"room",favorite=this.favorites.find(favoriteConv=>favoriteConv.peerId===peerId);favorite?this.removeServerFavorite(favorite.id):this.addServerFavorite(peerId,type)}updateFavorites(conversation){let peerId=conversation.contact?conversation.contact.dbId:conversation.room.dbId,favorite=this.favorites.find(favoriteConv=>favoriteConv.peerId===peerId);favorite&&(conversation.isFavorite=!0,favorite.conv=conversation)}getFavorite(peerId){return __awaiter(this,void 0,void 0,(function*(){let favorite=this.favorites.find(favoriteConv=>favoriteConv.peerId===peerId),convGetter=favorite.contact?this.conversationService.getOrCreateOneToOneConversation(favorite.contact.jid):this.conversationService.getRoomConversation(favorite.room.jid);return yield convGetter}))}createFavorite(id,peerId,type){return __awaiter(this,void 0,void 0,(function*(){try{let favorite=new favorite_1.Favorite(id,peerId,type);"room"===type?favorite.room=this.roomService.getRoomById(peerId):favorite.contact=yield this.contactService.getContactByDBId(peerId);let convId=favorite.room?favorite.room.jid:favorite.contact.jid,conv=this.conversationService.getConversationById(convId);return conv&&(conv.isFavorite=!0,favorite.conv=conv),favorite}catch(error){return this.$log.warn(`[favoriteService] createFavorite(${id}, ${peerId}, ${type}) -- FAILURE -- ${error.message}`),null}}))}onXmppEvent(stanza){return __awaiter(this,void 0,void 0,(function*(){try{let favoriteElem=$(stanza).find("favorite");if(favoriteElem){let id=favoriteElem.attr("id"),type=favoriteElem.attr("type"),peerId=favoriteElem.attr("peer_id"),action=favoriteElem.attr("action");if("create"===action){let favorite=this.favorites.find(favoriteConv=>favoriteConv.peerId===peerId);favorite||(favorite=yield this.createFavorite(id,peerId,type),this.favorites.push(favorite),this.sendEvent("ON_FAVORITE_CREATED",{favorite:favorite}))}if("delete"===action){var index=this.favorites.findIndex(fav=>fav.id===id);if(-1!==index){var favorite=this.favorites[index];favorite.conv&&(favorite.conv.isFavorite=!1),this.favorites.splice(index,1),this.sendEvent("ON_FAVORITE_DELETED",{favoriteId:favorite.id})}}}return!0}catch(error){return!0}}))}sendEvent(eventName,detail){let event=new CustomEvent(eventName,{detail:detail});window.dispatchEvent(event)}attachHandlers(){this.xmppManagementHandler&&this.xmppService.deleteHandler(this.xmppManagementHandler),this.xmppManagementHandler=this.xmppService.addHandler(stanza=>(this.onXmppEvent(stanza),!0),null,"message","management")}}exports.FavoriteService=FavoriteService,FavoriteService.$inject=["$http","$log","contactService","authService","roomService","conversationService","xmppService"],angular.module("rainbow").service("favoriteService",FavoriteService)},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});exports.Favorite=class{constructor(id,peerId,type){this.id=id,this.peerId=peerId,this.type=type}}},function(module,exports){class VoiceMessageService{constructor($q,$http,$log,$rootScope,$injector,authService,xmppService,contactService,VoiceMessage,Contact,profileService,telephonyService){this.$q=$q,this.$http=$http,this.$log=$log,this.$rootScope=$rootScope,this.$injector=$injector,this.authService=authService,this.xmppService=xmppService,this.contactService=contactService,this.VoiceMessage=VoiceMessage,this.Contact=Contact,this.profileService=profileService,this.telephonyService=telephonyService,this.listeners=[],this.voiceMessageMngtRef=null,this.voiceMessages=[],this.xmpp_message_handler=null,this.unreadVoiceMessageCounter=0}start(stats){return this.$q(resolve=>{if(!this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.TELEPHONY_VOICE_MAIL))return resolve();if(this.contactService.userContact.isCPaaSGuest())return resolve();this.$log.info("[voiceMessageService] === STARTING ===");let startDate=performance.now();this.init();let startDuration=Math.round(performance.now()-startDate);this.$log.info("[voiceMessageService] === STARTED ("+startDuration+" ms) ==="),stats.push({service:"voiceMessageService",startDuration:startDuration}),resolve()})}init(){this.portalURL=config.restServerUrl+"/api/rainbow/telephony/v1.0/",this.voiceMessagesCounters={total:0,unread:0},this.$rootScope.$on("ON_VOICE_MESSAGE_UPDATE_EVENT",(__event,counters)=>{this.voiceMessagesCounters.unread=counters.unreadMessages,this.voiceMessagesCounters.total=counters.totalMessages}),this.attachHandlers(),this.attachListeners()}attachHandlers(){this.$log.info("[voiceMessageService] attachHandlers"),this.voiceMessageMngtRef&&(this.xmppService.connection.deleteHandler(this.voiceMessageMngtRef),this.voiceMessageMngtRef=null),this.voiceMessageMngtRef=this.xmppService.connection.addHandler(stanza=>this.onVoiceMessageManagement(stanza),null,"message","management")}attachListeners(){}stop(){return this.$q(resolve=>{this.$log.info("[voiceMessageService] === STOPPING ==="),this.listeners.forEach(destroyFunction=>{destroyFunction()}),this.voiceMessagesCounters=null,this.$log.info("[voiceMessageService] === STOPPED ==="),resolve()})}onVoiceMessageManagement(stanza){try{let voiceMessageEndpointElem=$(stanza).find("visualvoicemail");if(voiceMessageEndpointElem.length&&"abort"===voiceMessageEndpointElem.attr("action")){let voiceMessageId=voiceMessageEndpointElem.attr("msgid"),errorEndPointElem=voiceMessageEndpointElem.find("error"),voiceMessageErrorCode=errorEndPointElem.attr("errordetailscode"),voiceMessageErrorMessage=errorEndPointElem.attr("errormsq");return this.$log.info("[voiceMessageService] onVoiceMessageManagement - "+voiceMessageId+" - abort - "+voiceMessageErrorMessage),this.$rootScope.$broadcast("ON_VOICE_MESSAGE_CONVERSION_ABORT",{msgId:voiceMessageId,errorCode:voiceMessageErrorCode}),!0}if(voiceMessageEndpointElem.length&&"create"===voiceMessageEndpointElem.attr("action")){let voiceMessageId=voiceMessageEndpointElem.attr("msgid"),urlEndPoint=voiceMessageEndpointElem.find("url").text();return this.$log.info("[voiceMessageService] onVoiceMessageManagement - "+voiceMessageId+" - create - "+urlEndPoint),this.$rootScope.$broadcast("ON_VOICE_MESSAGE_CONVERSION_CREATE",{msgId:voiceMessageId,url:urlEndPoint}),!0}return!0}catch(error){return!0}}getVoiceMessagesList(){return this.$q((resolve,reject)=>{this.$http({method:"GET",url:this.portalURL+"voicemessages",headers:this.authService.getRequestHeader()}).then(response=>{let voiceMessagesData=response.data.data.voicemessages.voiceMessageList,voiceMessages=[];voiceMessagesData&&voiceMessagesData.forEach(voiceMessageData=>{this.createVoiceMessageFromData(voiceMessageData).then(voiceMessage=>voiceMessages.push(voiceMessage))}),this.$log.info("[voiceMessageService] getVoiceMessagesList success - Messages number : "+voiceMessagesData.length),resolve(voiceMessages)}).catch(err=>{this.voiceMessageErrorHandler("getVoiceMessagesList",reject,err)})})}getVoiceMessagesCounters(){return this.$q((resolve,reject)=>{this.telephonyService.isSipWise()?(this.$log.info("[voiceMessageService] getVoiceMessagesCounters not yet implemented"),resolve(this.voiceMessagesCounters)):this.$http({method:"GET",url:this.portalURL+"voicemessages/counters",headers:this.authService.getRequestHeader()}).then(response=>{let voiceMessageCountersData=response.data.data.voicemessages.counters;this.voiceMessagesCounters.total=parseInt(voiceMessageCountersData.total,10),this.voiceMessagesCounters.unread=parseInt(voiceMessageCountersData.unread,10),this.$log.info("[voiceMessageService] getVoiceMessagesCounters success - total : "+this.voiceMessagesCounters.total+" - unread : "+this.voiceMessagesCounters.unread),resolve(this.voiceMessagesCounters)}).catch(err=>{this.voiceMessageErrorHandler("getVoiceMessagesCounters",reject,err)})})}getVoiceMessagesUnreadCounter(){return this.voiceMessagesCounters.unread}getVoiceMessagesTotalCounter(){return this.voiceMessagesCounters.total}getVoiceMessageFromPBX(voiceMessage){return this.$q((resolve,reject)=>{this.$http({method:"GET",url:this.portalURL+"voicemessages/"+encodeURIComponent(voiceMessage.id)+"?messageDate="+encodeURIComponent(voiceMessage.date)+"&messageFrom="+encodeURIComponent(voiceMessage.from),headers:this.authService.getRequestHeader()}).then(response=>{this.$log.info("[voiceMessageService] getVoiceMessageFromPBX success"),resolve()}).catch(err=>{this.voiceMessageErrorHandler("getVoiceMessageFromPBX",reject,err)})})}deleteVoiceMessage(voiceMessageId){return this.$q((resolve,reject)=>{this.$http({method:"DELETE",url:this.portalURL+"voicemessages/"+voiceMessageId,headers:this.authService.getRequestHeader()}).then(response=>{this.$log.info("[voiceMessageService] deleteVoiceMessage success"),resolve()}).catch(err=>{this.voiceMessageErrorHandler("deleteVoiceMessage",reject,err)})})}deleteAllVoiceMessages(){return this.$q((resolve,reject)=>{this.$http({method:"DELETE",url:this.portalURL+"voicemessages/all",headers:this.authService.getRequestHeader()}).then(response=>{this.$log.info("[voiceMessageService] deleteAllVoiceMessages success"),resolve()}).catch(err=>{this.voiceMessageErrorHandler("deleteAllVoiceMessages",reject,err)})})}createVoiceMessageFromData(data){return this.$q((resolve,reject)=>{if(data){let foundidentity=data.foundidentity,identityFirstName="",identityLastName="",otherParticipantJid=data.jid,otherParticipantNumber=data.from;otherParticipantJid||otherParticipantNumber?this.contactService.getOrCreateContact(otherParticipantJid,otherParticipantNumber).then(contact=>{if(this.$log.info("[voiceMessageService] createVoiceMessageFromData otherParticipant jid:"+otherParticipantJid+"  Number:"+otherParticipantNumber+" => contact retrieved (temp:"+contact.temp+")"),!otherParticipantJid&&contact.temp){if(foundidentity&&foundidentity.length){var foundFirstName=foundidentity.attr("firstName"),foundLastName=foundidentity.attr("lastName"),foundDisplayName=foundidentity.attr("displayName");identityFirstName=foundFirstName||"",""===(identityLastName=foundLastName||"")&&""===identityFirstName&&foundDisplayName&&0!==foundDisplayName.length&&foundDisplayName!==otherParticipantNumber&&(identityLastName=foundDisplayName),(identityFirstName.length||identityLastName.length)&&(this.$log.debug("[voiceMessageService] createVoiceMessageFromData  xNames updated from directories for contact "+contact.id),contact.updateName(identityFirstName,identityLastName))}else try{var centralizedService=this.$injector.get("centralizedService");centralizedService.outlook.updateContactFromOutlookInfos(contact,otherParticipantNumber,!0).then(updateStatus=>{updateStatus?this.$log.debug("[telephonyService] createVoiceMessageFromData  xNames updated from outlook for contact "+contact.id):this.$log.debug("[telephonyService] createVoiceMessageFromData no update from outlook for contact :"+contact.id)}).catch(err=>{this.$log.debug("[voiceMessageService] createVoiceMessageFromData  no Outlook search available")})}catch(error){}var displayNameisAPhoneNumber=!1;if(this.telephonyService.started)displayNameisAPhoneNumber=contact.displayName.match(/^[0-9A-D #\-\+\*\(\)\./]{1,32}$/)&&this.telephonyService.startAsPhoneNumber(contact.displayName);displayNameisAPhoneNumber&&contact.phoneProCan&&""!==contact.phoneProCan&&(contact.displayName=contact.phoneProCan)}resolve(this.VoiceMessage(data.id,contact,"true"===data.unread,data.length,data.date,data.from,data.jid))}).catch(err=>{this.voiceMessageErrorHandler("getVoiceMessagesList",reject,err),reject("reject")}):reject("neither otherParticipantJid nor otherParticipantNumber")}else reject("no data")})}voiceMessageErrorHandler(methodName,reject,err){err.data?this.$log.error("[voiceMessageService] "+methodName+" -- failure -- "+err.data.errorDetails):this.$log.error("[voiceMessageService] "+methodName+" -- failure -- Server failure"),reject(err)}}VoiceMessageService.$inject=["$q","$http","$log","$rootScope","$injector","authService","xmppService","contactService","VoiceMessageFactory","Contact","profileService","telephonyService"],angular.module("rainbow").service("voiceMessageService",VoiceMessageService)},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var _src_models_call_model__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0);angular.module("rainbow").service("telephonyService",["$q","$interval","$http","$rootScope","$log","xmppService","contactService","authService","TelephonyServiceEventHandler","errorHelperService","VoiceMail","profileService","utilService","videoService","$injector","settingsService",function($q,$interval,$http,$rootScope,$log,xmppService,contactService,authService,TelephonyServiceEventHandler,errorHelperService,VoiceMail,profileService,utilService,videoService,$injector,settingsService){var service=this,listeners=[],CALLSERVICE_NS="urn:xmpp:pbxagent:callservice:1",sipWise=!1;service.start=function(stats){if($log.info("[telephonyService] === STARTING ==="),service.setSipWise("RVCP Subscriber"===contactService.userContact.systDeviceName),service.isSipWise()){$log.info("[telephonyService] starting in sipWise mode"),CALLSERVICE_NS="urn:xmpp:pbxagent:telephony:1";try{service.telephonyServiceEventHandlerSipWise=$injector.get("TelephonyServiceEventHandlerSipWise")}catch(error){var errorMessage=error&&error.message?error.message:"Unknown error",errorStack=error&&error.stack?error.stack:"Unknown stack";$log.error("[telephonyService] injection TelephonyServiceEventHandlerSipWise  exception  -- "+errorMessage+" : "+errorStack)}try{service.telephonyServiceSipWise=$injector.get("telephonyServiceSipWise")}catch(error){errorMessage=error&&error.message?error.message:"Unknown error",errorStack=error&&error.stack?error.stack:"Unknown stack";$log.error("[telephonyService] injection TelephonyServiceSipWise  exception  -- "+errorMessage+" : "+errorStack)}}service.startDate=performance.now(),service.stats=stats,service.calls=[],service.starting=service.started=!1,service.agentStatus={phoneApi:"disconnected",xmppAgent:"stopped",agentVersion:"unknown"},service.voicemailNumber=contactService.userContact.voicemailNumber,service.pbxId=contactService.userContact.pbxId,service.makingCall=!1,service.voiceMail=VoiceMail.create(),service.forwardObject={},service.nomadicObject={},service.nomadicAnswerNotTakedIntoAccount=!1,service.isBasicCallAllowed=profileService.isFeatureEnabled(profileService.FeaturesEnum.TELEPHONY_BASIC_CALL),service.isSecondCallAllowed=profileService.isFeatureEnabled(profileService.FeaturesEnum.TELEPHONY_SECOND_CALL),service.isTransferAllowed=profileService.isFeatureEnabled(profileService.FeaturesEnum.TELEPHONY_TRANSFER_CALL),service.isConferenceAllowed=profileService.isFeatureEnabled(profileService.FeaturesEnum.TELEPHONY_CONFERENCE_CALL),service.isVMDeflectCallAllowed=profileService.isFeatureEnabled(profileService.FeaturesEnum.TELEPHONY_DEFLECT_CALL),service.voiceMailFeatureEnabled=profileService.isFeatureEnabled(profileService.FeaturesEnum.TELEPHONY_VOICE_MAIL),service.isForwardEnabled=profileService.isFeatureEnabled(profileService.FeaturesEnum.TELEPHONY_CALL_FORWARD),service.isNomadicEnabled=profileService.isFeatureEnabled(profileService.FeaturesEnum.TELEPHONY_NOMADIC),service.userJidTel=authService.jidTel,service.portalURL=config.restServerUrl+"/api/rainbow/telephony/v1.0/",listeners.push($rootScope.$on("ON_ROSTER_PRESENCE_CHANGED_EVENT",service.onTelPresenceChange)),service.isSipWise()?service.telephonyEventHandler=service.telephonyServiceEventHandlerSipWise.create(service):service.telephonyEventHandler=TelephonyServiceEventHandler.create(service),$log.info("[telephonyService] starting on user jidTel: "+service.userJidTel),contactService.userContact&&($log.info("[telephonyService] starting user name: "+contactService.userContact.getNameForLogs()+", full jid: "+contactService.userContact.fullJid),$log.info("[telephonyService] starting phonePbx: "+utilService.anonymizePhoneNumber(contactService.userContact.phonePbx)+", phonePro: "+utilService.anonymizePhoneNumber(contactService.userContact.phonePro)+", voicemailNumber: "+utilService.anonymizePhoneNumber(contactService.userContact.voicemailNumber)+", pbxId: "+contactService.userContact.pbxId)),contactService.userContact&&(contactService.userContact.telStatus?($log.info("[telephonyService] start with my existing telephony presence "+contactService.userContact.telStatus+" of user contact ("+contactService.userContact.jidtel+") "),service.onTelPresenceChange(null,{jid:service.userJidTel+"/phone",status:contactService.userContact.telStatus})):($log.info("[telephonyService] Subscribe and wait for my telephony presence ("+contactService.userContact.jidtel+")"),contactService.sendSubscribeInvitation(contactService.userContact.jidtel)))},service.onTelPresenceChange=function(__event,attr){if(contactService.isTelJid(attr.jid)){var ressourceFromJid=contactService.getRessourceFromJid(attr.jid);if("phone"!==ressourceFromJid&&"pcg2"!==ressourceFromJid)return!0;var jid_im=contactService.getImJid(attr.jid);if(!jid_im)return!0;var status=attr.status;contactService.isUserContactJid(jid_im)&&("unavailable"===status||"offline"===status?($log.info("[telephonyService] received my telephony presence -- "+status),service.starting=service.started=!1,service.telephonyOfflineCallManagement(),$rootScope.$broadcast("ON_TELEPHONY_STATUS_CHANGED_EVENT","stopped"),$log.info("[telephonyService] === STOPPED ===")):service.started||service.starting||($log.info("[telephonyService] received my telephony presence -- "+status),service.starting=!0,service.getAgentStatus().then((function(){return service.attachHandlers(),service.isSipWise()?($log.info("[telephonyService] getNomadicStatus -- SipWise BYPASS"),service.getTelephonyState(!1)):service.isNomadicEnabled?service.getNomadicStatus().then((function(){var snapshotSecondary=service.nomadicObject.featureActivated&&service.nomadicObject.modeActivated&&!service.nomadicObject.makeCallInitiatorIsMain;return service.getTelephonyState(snapshotSecondary)})):service.getTelephonyState(!1)})).then((function(){service.isForwardEnabled&&service.getForwardStatus()})).then((function(){var startDuration=Math.round(performance.now()-service.startDate);service.stats.push({service:"telephonyService",startDuration:startDuration}),$log.info("[telephonyService] === STARTED ("+startDuration+" ms) ==="),service.started=!0,service.starting=!1,$rootScope.$broadcast("ON_TELEPHONY_STATUS_CHANGED_EVENT","started")})).catch((function(error){service.starting=!1,$log.error("[telephonyService] receive telephony presence but error in initialization - "+(error?error.message:"unknown error"))}))))}return!0},service.launchTelephonyInitilization=function(){contactService.userContact&&contactService.userContact.telStatus?($log.info("[telephonyService] launchTelephonyInitilization telStatus: "+contactService.userContact.telStatus+" => start"),service.onTelPresenceChange(null,{jid:service.userJidTel+"/phone",status:contactService.userContact.telStatus})):$log.info("[telephonyService] launchTelephonyInitilization no tel presence => do nothing")},service.reconnect=function(){$log.info("[telephonyService] reconnect (xmpp reconnection)"),service.starting=service.started=!1,service.telephonyOfflineCallManagement(),$rootScope.$broadcast("ON_TELEPHONY_STATUS_CHANGED_EVENT","stopped"),service.attachHandlers()},service.telephonyOfflineCallManagement=function(){$log.info("[telephonyService] telephony Offline Call Management");try{var webrtcGatewayService=$injector.get("webrtcGatewayService");Object.keys(service.calls||[]).forEach((function(key){var call=service.calls[key];call&&(call.status!==_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.RINGING_INCOMMING&&call.status!==_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.QUEUED_INCOMMING||(call.mediaPillarCall&&call.mediaPillarCall.webrtcCallRef&&($log.info("[telephonyService] Offline Call Management: release MP webrtc call for phone call "+call.id+" in state "+call.status.value),videoService.releaseCall(call.mediaPillarCall.webrtcCallRef)),$log.info("[telephonyService] Offline Call Management: stop popup and ringing tone for phone call "+call.id+" in state "+call.status.value),call.setStatus(_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.UNKNOWN),$rootScope.$broadcast("ON_CALL_UPDATED_EVENT",call)),(call.status===_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.RINGING_OUTGOING||call.status===_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.QUEUED_OUTGOING)&&webrtcGatewayService.isMediaPillarCallSituation(call)&&call.mediaPillarCall&&call.mediaPillarCall.webrtcCallRef&&($log.info("[telephonyService] Offline Call Management: release MP webrtc call for phone call "+call.id+" in state "+call.status.value),videoService.releaseCall(call.mediaPillarCall.webrtcCallRef)),webrtcGatewayService.isMediaPillarCallSituation(call)&&call.status===_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.ACTIVE?($log.info("[telephonyService] Offline Call Management: keep MP call for phone call "+call.id+" in state "+call.status.value),call.pbxConnectionDown=!0):(delete service.calls[call.id],$log.info("[telephonyService] Offline Call Management: phone call deleted: "+call.id+" in state "+call.status.value)))}))}catch(error){var errorMessage=error&&error.message?error.message:"Unknown error",errorStack=error&&error.stack?error.stack:"Unknown stack";$log.error("[telephonyService] telephonyOfflineCallManagement  exception  -- "+errorMessage+" : "+errorStack)}},service.getTelephonyState=function(secondary){if(service.isSipWise())return $log.info("[telephonyService] getTelephonyState -- sipWise snapshot"),service.telephonyServiceSipWise.processSnapshot(service);var iq,defered=$q.defer();return iq=secondary?$iq({type:"get",to:service.userJidTel+"/phone"}).c("callservice",{xmlns:CALLSERVICE_NS}).c("connections",{deviceType:"SECONDARY"}):$iq({type:"get",to:service.userJidTel+"/phone"}).c("callservice",{xmlns:CALLSERVICE_NS}).c("connections"),xmppService.sendIQ(iq,6e4).then((function(data){var errorMessage=service.getErrorMessage(data,"getTelephonyState");if(errorMessage)return $log.info("[telephonyService] getTelephonyState -- failure -- "+errorMessage),defered.reject(new Error(errorMessage)),defered.promise;var existingCalls=angular.element(data).find("connection");if($log.info("[telephonyService] getTelephonyState ("+(secondary?"SECONDARY":"MAIN")+") -- success -- "+existingCalls.length+" existing call(s)"),0===existingCalls.length)return defered.resolve(),defered.promise;var getCallPromises=[];return existingCalls.each((function(){getCallPromises.push(service.createCallFromConnectionElem(this,secondary))})),$q.all(getCallPromises).then((function(){$log.info("[telephonyService] getTelephonyState ("+(secondary?"SECONDARY":"MAIN")+") -- calls creation completed -- "+existingCalls.length+" calls created"),defered.resolve()})).catch((function(error){$log.error("[telephonyService] getTelephonyState -- calls creation failure -- "+error.message),defered.reject(error)})),defered.promise})).catch((function(error){$log.error("[telephonyService] getTelephonyState -- failure -- "+error.message),defered.reject(error)})),defered.promise},service.getAgentStatus=function(){var defered=$q.defer(),toPCG="/phone";service.isSipWise()&&($log.info("[telephonyService] getAgentStatus --- sipWise version"),toPCG="/pcg2");var getAgentIq=$iq({type:"get",to:service.userJidTel+toPCG}).c("pbxagentstatus",{xmlns:"urn:xmpp:pbxagent:monitoring:1"});return xmppService.sendIQ(getAgentIq,6e4).then((function(data){var phoneApi=angular.element(data).find("phoneapi").text(),xmppAgent=angular.element(data).find("xmppagent").text(),agentVersion=angular.element(data).find("version").text(),features=angular.element(data).find("features").text(),type=angular.element(data).find("type").text();if(agentVersion&&(service.agentStatus={phoneApi:phoneApi,xmppAgent:xmppAgent,agentVersion:agentVersion,features:features},type?(service.isOxe=type.toLowerCase().includes("oxe"),service.isOxo=type.toLowerCase().includes("oxo")):(service.isOxe=agentVersion.toLowerCase().includes("oxe"),service.isOxo=agentVersion.toLowerCase().includes("oxo"))),service.isSipWise()&&"RVCP"!==type){service.setSipWise(!1);var errorMessage="getAgentStatus -- sipWise failure : wrong PCG type";$log.error("[telephonyService] "+errorMessage),defered.reject(new Error(errorMessage))}$log.info("[telephonyService] getAgentStatus -- success -- version "+agentVersion+" isOxe:"+service.isOxe+" isOxo:"+service.isOxo),defered.resolve()})).catch((function(error){var errorMessage="getAgentStatus -- failure : "+error.message;$log.error("[telephonyService] "+errorMessage),defered.reject(new Error(errorMessage))})),defered.promise},service.getSnapshotCall=function(callId){return $log.info("[telephonyService] getSnapshotCall"),$q((function(resolve,reject){var iq=$iq({type:"get",to:service.userJidTel+"/phone"}).c("callservice",{xmlns:CALLSERVICE_NS}).c("snapshotCall",{callId:callId});xmppService.sendIQ(iq).then((function(data){console.error(data),resolve()})).catch((function(error){var errorMessage="getSnapshotCall failure : "+error.message;$log.error("[telephonyService] "+errorMessage),reject(new Error(errorMessage))}))}))},service.createCallFromConnectionElem=function(connectionElemObj,secondary){return $q((function(resolve,reject){var connectionElem=angular.element(connectionElemObj),jid=connectionElem.attr("endpointIm"),phoneNumber=connectionElem.attr("endpointTel"),connectionId=connectionElem.attr("callId"),endpointLci=connectionElem.attr("endpointLci"),lci=connectionElem.attr("lci"),participantsElem=connectionElem.find("participant"),identityFirstName=connectionElem.find("identity").attr("firstName"),identityLastName=connectionElem.find("identity").attr("lastName"),firstName="",lastName="";if(jid||phoneNumber||(phoneNumber="****"),profileService.isFeatureEnabled(profileService.FeaturesEnum.TELEPHONY_PHONE_BOOK)&&0===participantsElem.length&&identityLastName&&identityLastName.length&&(lastName=identityLastName,identityFirstName&&identityFirstName.length&&(firstName=identityFirstName),$log.info("[telephonyService] createCallFromConnectionElem - name resolution for: "+connectionId+" for phoneNumber:"+utilService.anonymizePhoneNumber(phoneNumber)+" with firstname : "+firstName.slice(0,1)+"***")),"LCI_INITIATED"!==lci||secondary&&$injector.get("webrtcGatewayService").IsMediaPillarUserSelected()){(0===participantsElem.length?contactService.getOrCreateContact(jid,phoneNumber):service.getParticipantsFromParticipantsElem(participantsElem)).then((function(response){var callStatus=_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.ACTIVE;"LCI_INITIATED"===lci&&(callStatus=_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.DIALING),"LCI_HELD"===lci&&"LCI_CONNECTED"===endpointLci&&(callStatus=_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.HOLD),"LCI_CONNECTED"===lci&&"LCI_HELD"===endpointLci&&(callStatus=_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.PUT_ON_HOLD),"LCI_CONNECTED"===lci&&"LCI_QUEUED"===endpointLci&&(callStatus=_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.QUEUED_OUTGOING),"LCI_QUEUED"===lci&&"LCI_CONNECTED"===endpointLci&&(callStatus=_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.QUEUED_INCOMMING),"LCI_ALERTING"===lci&&(callStatus=_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.RINGING_INCOMMING);var call=null;0===participantsElem.length?(response&&response.temp&&""!==lastName&&response.updateName(firstName,lastName),call=service.getOrCreateCall(callStatus,connectionId,response),$log.info("[telephonyService] createCallFromConnectionElem - create call for user: "+response.id+" with callId: "+connectionId+" "+lci)):((call=service.getOrCreateCall(callStatus,connectionId)).setParticipants(response),call.isConference=!0,$log.info("[telephonyService] createCallFromConnectionElem - create conference call with callId: "+connectionId+" "+lci));call.relevantEquipmentId=_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.getDeviceIdFromConnectionId(connectionId),call.isSecondary=secondary,$rootScope.$broadcast("ON_CALL_UPDATED_EVENT",call),resolve(call)})).catch((function(error){$log.error("[TelephonyService] createCallFromConnectionElem - failure - "+error.message),reject(error)}))}else resolve()}))},service.getParticipantsFromParticipantsElem=function(participants){return $q((function(resolve,reject){var confParticipants=[],participantPromises=[];participants.each((function(){var participantElem=angular.element(this),endpointTel=participantElem.find("endpointTel").text(),endpointIm=participantElem.find("endpointIm").text();endpointIm&&contactService.isUserContactJid(endpointIm)||participantPromises.push($q((function(resolvePromise,rejectPromise){endpointIm||endpointTel||(endpointTel="****"),contactService.getOrCreateContact(endpointIm,endpointTel).then((function(contact){confParticipants.push(contact),resolvePromise()})).catch((function(error){rejectPromise(error)}))})))})),$q.all(participantPromises).then((function(){resolve(confParticipants)}),(function(error){reject(error)}))}))},service.getOrCreateCall=function(status,connectionId,contact){var call=service.calls[_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.getIdFromConnectionId(connectionId)];return call?(call.setConnectionId(connectionId),call.startDate=new Date):((call=_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.create(status,null,_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Type.PHONE,contact)).setConnectionId(connectionId),service.calls[call.id]=call),call},service.getOrCreateCallSipWise=function(status,callId,legId,deviceId,contact){var call=null;return callId&&(call=service.calls[callId]),call?(call.setConnectionIdSipWise(legId),contact&&call.setContact(contact),deviceId&&call.setDeviceIdSipWise(deviceId),call.startDate=new Date):((call=_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.create(status,callId,_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Type.PHONE,contact)).setConnectionIdSipWise(legId),call.setDeviceIdSipWise(deviceId),service.calls[call.id]=call),call},service.attachHandlers=function(){$log.info("[telephonyService] attachHandlers"),0===Object.keys(service.calls||[]).length&&($rootScope.telephonyAreaClass=""),service.messageHandlerRef&&(xmppService.deleteHandler(service.messageHandlerRef),service.messageHandlerRef=null),service.messageHandlerRef=xmppService.addHandler((function(stanza){return service.telephonyEventHandler.onCallserviceMessageReceived(stanza),!0}),CALLSERVICE_NS,"message",null)},service.stop=function(){var listener;for($log.info(""),$log.info("[telephonyService] === STOPPING ==="),service.starting=service.started=!1,service.userJidTel=null,service.calls=null,service.messageHandlerRef&&(xmppService.deleteHandler(service.messageHandlerRef),service.messageHandlerRef=null);listener=listeners.pop();)listener();return $log.info("[telephonyService] === STOPPED ==="),$rootScope.$broadcast("ON_TELEPHONY_STATUS_CHANGED_EVENT","stopped"),$q.when()},service.getCallToHangOut=function(){var calls=service.getCalls();if(!calls||0===calls.length)return null;var callStatus=calls[0].status;return 1===calls.length||callStatus===_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.DIALING||callStatus===_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.ACTIVE||callStatus===_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.PUT_ON_HOLD?calls[0]:calls[1]},service.getActiveCall=function(){var activeCall=null;return Object.keys(service.calls||[]).forEach((function(key){var call=service.calls[key];call.status===_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.ACTIVE&&(activeCall=call)})),activeCall},service.getCalls=function(){var calls=[];return Object.keys(service.calls||[]).forEach((function(key){var status=service.calls[key].status;status!==_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.DIALING&&status!==_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.RINGING_OUTGOING&&status!==_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.QUEUED_OUTGOING&&status!==_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.ACTIVE&&status!==_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.HOLD&&status!==_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.PUT_ON_HOLD&&status!==_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.ERROR||calls.push(service.calls[key])})),calls},service.getActiveCallsForContact=function(contact){var calls=[];return contact&&contact.jid&&Object.keys(service.calls||[]).forEach((function(key){!service.calls[key].contact||service.calls[key].contact.jid!==contact.jid||service.calls[key].status!==_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.DIALING&&service.calls[key].status!==_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.RINGING_OUTGOING&&service.calls[key].status!==_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.QUEUED_OUTGOING&&service.calls[key].status!==_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.ACTIVE&&service.calls[key].status!==_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.HOLD&&service.calls[key].status!==_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.PUT_ON_HOLD||calls.push(service.calls[key])})),calls},service.getConferenceCallForContact=function(contact){var conferenceCall=null;return contact&&contact.jid&&Object.keys(service.calls||[]).forEach((function(key){service.calls[key].status===_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.ACTIVE&&service.calls[key].isConference&&(service.calls[key].participants||[]).some((function(participantContact){return participantContact&&participantContact.jid===contact.jid}))&&(conferenceCall=service.calls[key])})),conferenceCall},service.logMakecallReqData=function(reqData,contact){var reqDataForLogs={};Object.keys(reqData).forEach((function(reqDataProperty){switch(reqDataProperty){case"calleeExtNumber":case"calleeIntNumber":case"calleeShortNumber":reqDataForLogs[reqDataProperty]=utilService.anonymizePhoneNumber(reqData[reqDataProperty]);break;case"calleeDisplayName":contact&&(reqDataForLogs[reqDataProperty]=contact.getNameForLogs());break;default:reqDataForLogs[reqDataProperty]=reqData[reqDataProperty]}})),$log.info("[telephonyService] makeSimpleCall data: "+JSON.stringify(reqDataForLogs))},service.makeCall=function(contact,phoneNumber,callSubject){var activeCall=service.getActiveCall();return service.makingCall?($log.warn("[telephonyService] makeCall failure - makeCall already making a call"),$q.reject()):(service.makingCall=!0,activeCall?service.isSipWise()?"demo"===service.sipWiseMode()?service.telephonyServiceSipWise.makeSimpleCallSipWise(service,contact,phoneNumber):void $log.info("[telephonyService] makeConsultationCall sipWise not implemented"):service.makeConsultationCall(contact,phoneNumber,activeCall.connectionId):service.isSipWise()?service.telephonyServiceSipWise.makeSimpleCallSipWise(service,contact,phoneNumber):service.makeSimpleCall(contact,phoneNumber,callSubject))},service.makeSimpleCall=function(contact,phoneNumber,callSubject){return $q((function(resolve,reject){if($log.info("[telephonyService] makeSimpleCall to "+(contact?contact.getNameForLogs():utilService.anonymizePhoneNumber(phoneNumber))),!service.isBasicCallAllowed){var profileError=new Error("makeSimpleCall failure - Not Allowed");return profileError.status=profileError.errorDetailsCode="403",$log.error("[telephonyService] "+profileError.message),service.makingCall=!1,void reject(profileError)}if($injector.get("webrtcGatewayService").isMediaPillarCallSituation()&&videoService.getWebrtcAudioCall())return $log.info("[telephonyService] makeCall failure - webrtcgateway call not possible when webrtc call already engaged"),service.makingCall=!1,$rootScope.$broadcast("ON_CALL_NOTALLOWED_EVENT","webCallAlreadyProgress"),void reject("webCallAlreadyProgress");var phoneInfo=service.getPhoneInfo(contact,phoneNumber),reqUrl=service.portalURL+"calls",reqData={calleeExtNumber:phoneInfo.longNumber,calleeIntNumber:phoneInfo.internalNumber,calleeShortNumber:phoneInfo.shortNumber,calleePbxId:phoneInfo.pbxId,calleeDisplayName:contact.displayName,callSubject:callSubject,secondaryDeviceMakeCall:angular.isDefined(service.nomadicObject.makeCallInitiatorIsMain)&&!0===service.nomadicObject.featureActivated&&service.isNomadicEnabled?service.nomadicObject.makeCallInitiatorIsMain?"false":"true":void 0};$log.info("[telephonyService] makeSimpleCall POST "+reqUrl),service.logMakecallReqData(reqData,contact),$http({method:"POST",url:reqUrl,headers:authService.getRequestHeader(),data:reqData}).then((function(response){$log.info("[telephonyService] makeSimpleCall success : callee "+utilService.anonymizePhoneNumber(phoneNumber));var call=_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.create(_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.DIALING,null,_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Type.PHONE,contact);call.setConnectionId(response.data.data.callId),call.setRelevantEquipmentId(_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.getDeviceIdFromConnectionId(call.connectionId)),call.isSecondary=service.nomadicObject&&!service.nomadicObject.makeCallInitiatorIsMain,call.isOwner=!0,service.calls[call.id]=call,$log.info("[telephonyService] makeSimpleCall Call created ("+call+")"),service.makingCall=!1,call.setIsVm(phoneNumber===service.voicemailNumber),$rootScope.$broadcast("ON_CALL_UPDATED_EVENT",call),resolve(call.id)}),(function(response){var call=_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.create(_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.ERROR,null,_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Type.PHONE,contact);call.errorMessage=response&&"403"===response.errorDetailsCode?"notAllowed":"invalidPhoneNumber",service.calls[call.contact.id]=call,call.autoClear=$interval((function(){service.clearCall(call)}),5e3,1),service.makingCall=!1,$rootScope.$broadcast("ON_CALL_UPDATED_EVENT",call);var error=errorHelperService.handleError(response);reject(error),$log.error("[telephonyService] "+errorHelperService.getErrorFullMessage(response,"makeCall"))}))}))},service.makeConsultationCall=function(contact,phoneNumber,callId){return $q((function(resolve,reject){if($log.info("[telephonyService] makeConsultationCall to "+(contact?contact.getNameForLogs():utilService.anonymizePhoneNumber(phoneNumber))),!service.isSecondCallAllowed){var profileError=new Error("makeConsultationCall failure - Not Allowed");return profileError.status=profileError.errorDetailsCode="403",$log.error("[telephonyService] "+profileError.message),service.makingCall=!1,void reject(profileError)}var phoneInfo=service.getPhoneInfo(contact,phoneNumber),reqUrl=service.portalURL+"calls/"+encodeURIComponent(callId)+"/consultation",reqData={calleeExtNumber:phoneInfo.longNumber,calleeIntNumber:phoneInfo.internalNumber,calleeShortNumber:phoneInfo.shortNumber,calleePbxId:phoneInfo.pbxId,calleeDisplayName:contact.displayName};$log.info("[telephonyService] makeConsultationCall POST "+reqUrl),$http({method:"POST",url:reqUrl,headers:authService.getRequestHeader(),data:reqData}).then((function(response){$log.info("[telephonyService] makeConsultationCall success : callee "+utilService.anonymizePhoneNumber(phoneNumber));var call=_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.create(_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.DIALING,null,_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Type.PHONE,contact);call.setConnectionId(response.data.data.callId),call.setRelevantEquipmentId(_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.getDeviceIdFromConnectionId(call.connectionId)),call.isSecondary=service.nomadicObject&&!service.nomadicObject.makeCallInitiatorIsMain,call.isOwner=!0,service.calls[call.id]=call,$log.info("[telephonyService] makeConsultationCall Call created ("+call+")"),service.makingCall=!1,call.setIsVm(phoneNumber===service.voicemailNumber),$rootScope.$broadcast("ON_CALL_UPDATED_EVENT",call),resolve(call.id)}),(function(response){var call=_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.create(_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.ERROR,null,_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Type.PHONE,contact);call.errorMessage=response&&"403"===response.errorDetailsCode?"notAllowed":"invalidPhoneNumber",service.calls[call.contact.id]=call,call.autoClear=$interval((function(){service.clearCall(call)}),5e3,1),service.makingCall=!1;var error=errorHelperService.handleError(response);service.deleteCallIfInvalid(error,service.calls[_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.getIdFromConnectionId(callId)]),$rootScope.$broadcast("ON_CALL_UPDATED_EVENT",call),reject(error),$log.error("[telephonyService] "+errorHelperService.getErrorFullMessage(response,"makeConsultationCall"))}))}))},service.makeCallByPhoneNumber=function(phoneNumber){return $q((function(resolve,reject){if($log.info("[telephonyService] makeCallByPhoneNumber : "+utilService.anonymizePhoneNumber(phoneNumber)),contactService.userContact.phonePro===phoneNumber||contactService.userContact.phoneProCan===phoneNumber||contactService.userContact.phonePbx===phoneNumber){var errorMessage="makeCallByPhoneNumber failure: impossible to call its own phone number";return $log.error("[telephonyService] "+errorMessage),void reject(new Error(errorMessage))}contactService.getOrCreateContact(null,phoneNumber).then((function(contact){return contact,service.makeCall(contact,phoneNumber)})).then((function(){resolve()})).catch((function(error){var _errorMessage="makeCallByPhoneNumber failure "+(error?error.message:"");$log.error("[telephonyService] - callService - "+_errorMessage),reject(new Error(_errorMessage))}))}))},service.getPhoneInfo=function(contact,phoneNumber){var longNumber=phoneNumber,shortNumber="",internalNumber="",pbxId="";return contact&&(phoneNumber===contact.phonePro||phoneNumber===contact.phoneProCan?(longNumber=contact.phoneProCan?contact.phoneProCan:"",shortNumber=contact.phonePbx,pbxId=contact.pbxId,internalNumber=contact.phoneInternalNumber):phoneNumber===contact.phonePbx&&(longNumber="",shortNumber=contact.phonePbx,pbxId=contact.pbxId,internalNumber=contact.phoneInternalNumber)),{longNumber:longNumber,shortNumber:shortNumber,pbxId:pbxId,internalNumber:internalNumber}},service.getErrorMessage=function(data,actionLabel){var errorMessage=actionLabel+" failure : ";if("error"===angular.element(data).attr("type")){var error=angular.element(data).find("error");if(error){var errorType=error.attr("type"),errorCode=error.attr("code");errorType&&(errorMessage+=errorType+" : ","modify"===errorType&&(errorMessage+=error.find("text").text())),errorCode&&"503"===errorCode&&(errorMessage+="Agent error : service unavailable"),$log.error("[telephonyService] "+errorMessage)}else errorMessage+="Unknown error";return errorMessage}return null},service.releaseCall=function(call){return $q((function(resolve,reject){if($log.info("[telephonyService] releaseCall "+call.id),!service.isBasicCallAllowed){var profileError=new Error("releaseCall failure - Not Allowed");return profileError.status=profileError.errorDetailsCode="403",$log.error("[telephonyService] "+profileError.message),void reject(profileError)}if(call.pbxConnectionDown)return call.mediaPillarCall&&call.mediaPillarCall.webrtcCallRef&&call.mediaPillarCall.webrtcCallRef.status!==_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.UNKNOWN?($log.info("[telephonyService] releaseCall "+call.id+" with pbx connection down : we release the mediapillar web call: "+call.mediaPillarCall.webrtcCallRef),videoService.releaseCall(call.mediaPillarCall.webrtcCallRef)):$log.info("[telephonyService] releaseCall "+call.id+" with pbx connection down : "+(call.mediaPillarCall?call.mediaPillarCall.webrtcCallRef?"no need to release webrtc call with status "+call.mediaPillarCall.webrtcCallRef:"no MP webrtc call to release":"no MP context!")),$log.info("[telephonyService] releaseCall "+call.id+" with pbx connection down : we remove the phone call"),service.clearCall(call),void resolve(call);if(service.isSipWise())service.telephonyServiceSipWise.releaseCallSipWise(service,call).then((function(theCall){resolve(theCall)}));else{var reqUrl=service.portalURL+"calls/"+encodeURIComponent(call.connectionId);$log.info("[telephonyService] releaseCall DELETE "+reqUrl),$http({method:"DELETE",url:reqUrl,headers:authService.getRequestHeader()}).then((function(){call.setStatus(_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.UNKNOWN),call.startDate=null,call.vm=!1,$log.info("[telephonyService] releaseCall "+call.id+" - success"),$rootScope.$broadcast("ON_CALL_UPDATED_EVENT",call),delete service.calls[call.id],resolve(call)}),(function(response){var error=errorHelperService.handleError(response);service.deleteCallIfInvalid(error,call),reject(error),$log.error("[telephonyService] "+errorHelperService.getErrorFullMessage(response,"releaseCall"))}))}}))},service.deleteCallIfInvalid=function(error,call){error&&"telephony"===error.portal&&404100===error.errorDetailsCode&&error.message&&(error.message.toLowerCase().includes("invalid connection identifier")||error.message.toLowerCase().includes("failed to send releasecall"))&&call&&($log.warn("[telephonyService] deleteCallIfInvalid: delete client call non existing on server: "+call.id),call.setStatus(_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.UNKNOWN),$rootScope.$broadcast("ON_CALL_UPDATED_EVENT",call),service.calls[call.id]&&delete service.calls[call.id])},service.answerCall=function(call){return $q((function(resolve,reject){$log.info("[telephonyService] answerCall : "+call.id);var activeCall=service.getActiveCall();if(!service.isBasicCallAllowed){var profileError=new Error("answerCall failure - Not Allowed");return profileError.status=profileError.errorDetailsCode="403",$log.error("[telephonyService] "+profileError.message),void reject(profileError)}if(call.isMediaPillarCall()&&($injector.get("webrtcGatewayService").isMediaPillarCallSituation(call)&&$rootScope.isDesktopApp)){var MP_context=call.getMediaPillarCall();if(MP_context&&MP_context.webrtcCallRef)return videoService.answerCall(MP_context.webrtcCallRef,"audio"),$log.info("[telephonyService] answer webrtcgateway sending webrtc proceed"),void resolve(call);$log.info("[telephonyService] answer webrtcgateway | Anomaly media Pillar : answer but no webrtcCallref")}service.isSipWise()?service.telephonyServiceSipWise.answerCallSipWise(service,call).then((function(theCall){resolve(theCall)}),(function(error){reject(error)})):call.status===_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.QUEUED_INCOMMING&&activeCall&&service.isOxe?service.holdCall(activeCall).catch((function(error){$log.warn("[telephonyService] holdCall (before answerCall) failed on callId:"+activeCall.connectionId+" "+error)})).then((function(){return service.answerCall(call)})).then((function(thecall){resolve(thecall)})).catch((function(error){var errorMessage="answerCall failure : "+error.message;$log.error("[telephonyService] - callService -  "+errorMessage),reject(new Error(errorMessage))})):$http({method:"PUT",url:service.portalURL+"calls/"+encodeURIComponent(call.connectionId)+"/answer",headers:authService.getRequestHeader()}).then((function(response){call.setConnectionId(response.data.data.callId),call.setStatus(_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.ACTIVE),$log.info("[telephonyService] answerCall success : "+utilService.anonymizePhoneNumber(call.contact.phone)+" Call ("+call+")"),$rootScope.$broadcast("ON_CALL_UPDATED_EVENT",call),resolve(call)}),(function(response){response.data&&"Device is not able to answer a call"===response.data.errorDetails&&$rootScope.$broadcast("ON_OPEN_GLOBAL_POPUP",{autoClose:!1,okLabel:"close",popupTitle:"warning",popupBody:"deviceDoesntAllowAnswer"}),call.setStatus(_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.UNKNOWN);var error=errorHelperService.handleError(response);reject(error),$log.error("[telephonyService] "+errorHelperService.getErrorFullMessage(response,"answerCall"))}))}))},service.holdCall=function(call){return $q((function(resolve,reject){if($log.info("[telephonyService] holdCall : callId: "+call.id+" "+call.contact.displayNameForLog()),call&&call.status!==_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.HOLD){if(!service.isSecondCallAllowed){var profileError=new Error("holdCall failure - Not Allowed");return profileError.status=profileError.errorDetailsCode="403",$log.error("[telephonyService] "+profileError.message),void reject(profileError)}service.isSipWise()?service.telephonyServiceSipWise.holdCallSipWise(service,call).then((function(theCall){resolve(theCall)}),(function(error){reject(error)})):$http({method:"PUT",url:service.portalURL+"calls/"+encodeURIComponent(call.connectionId)+"/hold",headers:authService.getRequestHeader()}).then((function(response){$log.info("[telephonyService] holdCall success : "+utilService.anonymizePhoneNumber(call.contact.phone)+" Call ("+call+")"),call.setConnectionId(response.data.data.callId),call.setStatus(_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.HOLD),$rootScope.$broadcast("ON_CALL_UPDATED_EVENT",call),resolve(call)}),(function(response){var error=errorHelperService.handleError(response);reject(error),$log.error("[telephonyService] "+errorHelperService.getErrorFullMessage(response,"holdCall"))}))}else resolve(call)}))},service.retrieveCall=function(call){return $q((function(resolve,reject){if($log.info("[telephonyService] retrieveCall callId: "+call.id+" "+call.contact.displayNameForLog()),!service.isSecondCallAllowed){var profileError=new Error("retrieveCall failure - Not Allowed");return profileError.status=profileError.errorDetailsCode="403",$log.error("[telephonyService] "+profileError.message),void reject(profileError)}var activeCall=service.getActiveCall();if(activeCall)service.holdCall(activeCall).then((function(){return service.retrieveCall(call)})).then((function(thecall){resolve(thecall)})).catch((function(error){var errorMessage="retrieveCall failure : "+error.message;$log.error("[telephonyService] - callService -  "+errorMessage),reject(new Error(errorMessage))}));else{if(service.isSipWise())return void service.telephonyServiceSipWise.retrieveCallSipWise(service,call).then((function(theCall){resolve(theCall)}),(function(error){reject(error)}));$http({method:"PUT",url:service.portalURL+"calls/"+encodeURIComponent(call.connectionId)+"/retrieve",headers:authService.getRequestHeader()}).then((function(response){$log.info("[telephonyService] retrieveCall success : "+utilService.anonymizePhoneNumber(call.contact.phone)+" Call ("+call+")"),call.setConnectionId(response.data.data.callId),call.setStatus(_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.ACTIVE),$rootScope.$broadcast("ON_CALL_UPDATED_EVENT",call),resolve()}),(function(response){var error=errorHelperService.handleError(response);service.deleteCallIfInvalid(error,call),reject(error),$log.error("[telephonyService] "+errorHelperService.getErrorFullMessage(response,"retrieveCall"))}))}}))},service.deflectCallToVM=function(call){return $q((function(resolve,reject){if(call){if(!service.isVMDeflectCallAllowed){var profileError=new Error("deflectCall failure - Not Allowed");return profileError.status=profileError.errorDetailsCode="403",$log.error("[telephonyService] "+profileError.message),void reject(profileError)}$log.info("[telephonyService] deflectCallToVM "+call.contact.displayNameForLog()),service.isSipWise()?service.telephonyServiceSipWise.deflectCallSipWise(service,call,service.voicemailNumber).then((function(){resolve()}),(function(error){reject(error)})):$http({method:"PUT",url:service.portalURL+"calls/"+encodeURIComponent(call.connectionId)+"/deflect",headers:authService.getRequestHeader(),data:{calleeExtNumber:"",calleeIntNumber:service.voicemailNumber,calleeShortNumber:service.voicemailNumber,calleePbxId:service.pbxId}}).then((function(){$log.info("[telephonyService] deflectCall success"),resolve()}),(function(response){var error=errorHelperService.handleError(response);reject(error),$log.error("[telephonyService] "+errorHelperService.getErrorFullMessage(response,"deflectCallToVM"))}))}else resolve(call)}))},service.deflectCallToNumber=function(call,number){return $q((function(resolve,reject){if(call&&number){var profileError;if(!service.isVMDeflectCallAllowed)return(profileError=new Error("deflectCall failure - Not Allowed")).status=profileError.errorDetailsCode="403",$log.error("[telephonyService] "+profileError.message),void reject(profileError);if($log.info("[telephonyService] deflectCallToNumber "+call.contact.displayNameForLog()),service.isSipWise()&&"demo"===service.sipWiseMode())service.telephonyServiceSipWise.deflectCallSipWise(service,call,number).then((function(){resolve()}),(function(error){reject(error)}));else(profileError=new Error("deflectCall failure - Not Allowed")).status=profileError.errorDetailsCode="403",$log.error("[telephonyService] "+profileError.message),reject(profileError)}else resolve(call)}))},service.transfertCall=function(activeCall,heldCall){return $q((function(resolve,reject){if(activeCall&&heldCall){var profileError;if(!service.isTransferAllowed)return(profileError=new Error("transferCall failure - Not Allowed")).status=profileError.errorDetailsCode="403",$log.error("[telephonyService] "+profileError.message),void reject(profileError);if($log.info("[telephonyService] transfertCall held("+heldCall.contact.displayName+") to active("+activeCall.contact.displayName+")"),service.isSipWise())return"demo"===service.sipWiseMode()?service.telephonyServiceSipWise.transfertCallSipWise(service,activeCall,heldCall):($log.info("[telephonyService] Transfert sipWise not implemented"),(profileError=new Error("transferCall failure - Not Allowed")).status=profileError.errorDetailsCode="403",$log.error("[telephonyService] "+profileError.message),void reject(profileError));$http({method:"PUT",url:service.portalURL+"calls/"+encodeURIComponent(activeCall.connectionId)+"/transfer/"+encodeURIComponent(heldCall.connectionId),headers:authService.getRequestHeader()}).then((function(){$log.info("[telephonyService] transferCall success"),resolve()}),(function(response){var error=errorHelperService.handleError(response);reject(error),$log.error("[telephonyService] "+errorHelperService.getErrorFullMessage(response,"transfertCall"))}))}else resolve()}))},service.blindTransfertCall=function(activeCall,calleNumber){return $q((function(resolve,reject){var profileError;if(activeCall&&calleNumber)return service.isTransferAllowed&&service.isSipWise()?"demo"===service.sipWiseMode()?service.telephonyServiceSipWise.blindTransfertCallSipWise(service,activeCall,calleNumber):($log.info("[telephonyService]  blind Transfert sipWise not implemented"),(profileError=new Error("blind transferCall failure - Not Allowed")).status=profileError.errorDetailsCode="403",$log.error("[telephonyService] "+profileError.message),void reject(profileError)):((profileError=new Error("blind transfertCall failure - Not Allowed")).status=profileError.errorDetailsCode="403",$log.error("[telephonyService] "+profileError.message),void reject(profileError));resolve()}))},service.conferenceCall=function(activeCall,heldCall){return $q((function(resolve,reject){if(activeCall&&heldCall){if(!service.isConferenceAllowed){var profileError=new Error("conferenceCall failure - Not Allowed");return profileError.status=profileError.errorDetailsCode="403",$log.error("[telephonyService] "+profileError.message),void reject(profileError)}if($log.info("[telephonyService] conferenceCall "+activeCall.contact.displayName+" and "+heldCall.contact.displayName),service.isSipWise())return"demo"===service.sipWiseMode()?service.telephonyServiceSipWise.conferenceCallSipWise(service,activeCall,heldCall):void $log.info("[telephonyService] Conference sipWise not implemented");$http({method:"PUT",url:service.portalURL+"calls/"+encodeURIComponent(activeCall.connectionId)+"/conference/"+encodeURIComponent(heldCall.connectionId),headers:authService.getRequestHeader()}).then((function(){$log.info("[telephonyService] conferenceCall success"),resolve()}),(function(response){var error=errorHelperService.handleError(response);reject(error),$log.error("[telephonyService] "+errorHelperService.getErrorFullMessage(response,"conferenceCall"))}))}else resolve()}))},service.sipWiseForwardToDevice=function(phoneNumber,destType,forwardType){return $q((function(resolve,reject){if($log.info("[telephonyService] sipWiseforwardToDevice : "+phoneNumber+" / destType = "+destType+" / fwType = "+forwardType),!service.isForwardEnabled){var profileError=new Error("sipWiseforwardToDevice failure - Not Allowed");return profileError.status=profileError.errorDetailsCode="403",$log.error("[telephonyService] "+profileError.message),void reject(profileError)}if(contactService.userContact.phonePro===phoneNumber||contactService.userContact.phoneProCan===phoneNumber||contactService.userContact.phonePbx===phoneNumber){var errorMessage="sipWiseforwardToDevice failure: impossible to forward its own phone number";return $log.error("[telephonyService] "+errorMessage),void reject(new Error(errorMessage))}if(!phoneNumber||!forwardType||""===forwardType||!destType||""===destType){errorMessage="sipWiseforwardToDevice failure: bad parameters";return $log.error("[telephonyService] "+errorMessage),void reject(new Error(errorMessage))}if(!service.isSipWise()){errorMessage="sipWiseforwardToDevice not implemented if not sipWise case";return $log.error("[telephonyService] "+errorMessage),void reject(new Error(errorMessage))}service.telephonyServiceSipWise.forwardToDeviceSipWise(service,phoneNumber,destType,forwardType).then((function(){resolve()}),(function(response){var error=errorHelperService.handleError(response);reject(error),$log.error("[telephonyService] "+errorHelperService.getErrorFullMessage(response,"forwardToDevice"))}))}))},service.forwardToDevice=function(phoneNumber){return $q((function(resolve,reject){if($log.info("[telephonyService] forwardToDevice : "+phoneNumber),!service.isForwardEnabled){var profileError=new Error("forwardToDevice failure - Not Allowed");return profileError.status=profileError.errorDetailsCode="403",$log.error("[telephonyService] "+profileError.message),void reject(profileError)}if(contactService.userContact.phonePro===phoneNumber||contactService.userContact.phoneProCan===phoneNumber||contactService.userContact.phonePbx===phoneNumber){var errorMessage="forwardToDevice failure: impossible to forward its own phone number";return $log.error("[telephonyService] "+errorMessage),void reject(new Error(errorMessage))}if(service.isSipWise()){if("demo"===service.sipWiseMode())return void contactService.getOrCreateContact(null,phoneNumber).then((function(contact){var phoneInfo=service.getPhoneInfo(contact,phoneNumber),destType="externalNumber";if(""!==phoneInfo.longNumber){destType="externalNumber";phoneNumber=phoneInfo.longNumber}else{destType="internalNumber";phoneNumber=phoneInfo.shortNumber}service.telephonyServiceSipWise.forwardToDeviceSipWise(service,phoneNumber,destType,"immediate").then((function(){resolve()}),(function(response){var error=errorHelperService.handleError(response);reject(error),$log.error("[telephonyService] "+errorHelperService.getErrorFullMessage(response,"forwardToDevice"))}))}));errorMessage="forwardToDevice : not implemented";return $log.error("[telephonyService] "+errorMessage),void reject(new Error(errorMessage))}contactService.getOrCreateContact(null,phoneNumber).then((function(contact){var phoneInfo=service.getPhoneInfo(contact,phoneNumber);$http({method:"PUT",url:service.portalURL+"forward",headers:authService.getRequestHeader(),data:{calleeExtNumber:phoneInfo.longNumber,calleeIntNumber:phoneInfo.internalNumber,calleeShortNumber:phoneInfo.shortNumber,calleePbxId:phoneInfo.pbxId,calleeDisplayName:contact.displayName}}).then((function(){resolve()}),(function(response){var error=errorHelperService.handleError(response);reject(error),$log.error("[telephonyService] "+errorHelperService.getErrorFullMessage(response,"forwardToDevice"))}))}))}))},service.forwardToVoicemail=function(){return $q((function(resolve,reject){if($log.info("[telephonyService] forwardToVoicemail"),!service.voiceMailFeatureEnabled||!service.isForwardEnabled){var profileError=new Error("forwardToVoicemail failure - voicemail/forward feature not enabled");return profileError.status=profileError.errorDetailsCode="404",$log.error("[telephonyService] "+profileError.message),void reject(profileError)}if(service.isSipWise()){if("demo"===service.sipWiseMode()){return void service.telephonyServiceSipWise.forwardToDeviceSipWise(service,service.voicemailNumber,"voicemail","immediate").then((function(){resolve()}),(function(response){var error=errorHelperService.handleError(response);reject(error),$log.error("[telephonyService] "+errorHelperService.getErrorFullMessage(response,"forwardToVoicemail"))}))}return $log.error("[telephonyService] forwardToVoicemail : not implemented"),void reject(new Error("forwardToVoicemail : not implemented"))}$http({method:"PUT",url:service.portalURL+"forward",headers:authService.getRequestHeader(),data:{calleeExtNumber:"",calleeIntNumber:service.voicemailNumber,calleePbxId:service.pbxId}}).then((function(){$log.info("[telephonyService] forwardToVoicemail success"),resolve()}),(function(response){var error=errorHelperService.handleError(response);reject(error),$log.error("[telephonyService] "+errorHelperService.getErrorFullMessage(response,"forwardToVoicemail"))}))}))},service.cancelForward=function(){return $q((function(resolve,reject){if($log.info("[telephonyService] cancelForward"),!service.isForwardEnabled){var profileError=new Error("cancelForward failure - Not Allowed");return profileError.status=profileError.errorDetailsCode="403",$log.error("[telephonyService] "+profileError.message),void reject(profileError)}if(service.isSipWise()){if("demo"===service.sipWiseMode()){return void service.telephonyServiceSipWise.forwardToDeviceSipWise(service,"dummy","dummy","none").then((function(){resolve()}),(function(response){var error=errorHelperService.handleError(response);reject(error),$log.error("[telephonyService] "+errorHelperService.getErrorFullMessage(response,"cancelForward"))}))}return $log.error("[telephonyService] cancelForward : not implemented"),void reject(new Error("cancelForward : not implemented"))}contactService.userContact.phonePbx?$http({method:"PUT",url:service.portalURL+"forward",headers:authService.getRequestHeader(),data:{calleeExtNumber:"",calleeIntNumber:"CANCELFORWARD",calleePbxId:service.pbxId}}).then((function(){$log.info("[telephonyService] cancelForward success"),resolve()}),(function(response){var error=errorHelperService.handleError(response);reject(error),$log.error("[telephonyService] "+errorHelperService.getErrorFullMessage(response,"cancelForward"))})):reject()}))},service.getForwardStatus=function(){return $q((function(resolve,reject){if(!service.isForwardEnabled){var profileError=new Error("getForwardStatus failure - Not Allowed");return profileError.status=profileError.errorDetailsCode="403",$log.error("[telephonyService] "+profileError.message),void reject(profileError)}if(service.starting||service.started){if(service.isSipWise())return void("demo"===service.sipWiseMode()?service.telephonyServiceSipWise.getForwardStatusSipWise(service).then((function(){resolve()}),(function(response){var error=errorHelperService.handleError(response);reject(error),$log.error("[telephonyService] "+errorHelperService.getErrorFullMessage(response,"getForwardStatus"))})):($log.info("[telephonyService] getForwardStatus -- SipWise bypass -- forward status not delivered"),resolve()));$http({method:"GET",url:service.portalURL+"forward",headers:authService.getRequestHeader()}).then((function(){$log.info("[telephonyService] getForwardStatus success"),resolve()}),(function(response){var error=errorHelperService.handleError(response);reject(error),$log.error("[telephonyService] "+errorHelperService.getErrorFullMessage(response,"getForwardStatus"))}))}else reject(new Error("getForwardStatus failure - Telephony not started"))}))},service.getForwardObject=function(){return service.forwardObject},service.nomadicLogin=function(phoneNumber,isUnchangeableNumber,NotTakeIntoAccount){return $q((function(resolve,reject){if(!service.isNomadicEnabled||!service.nomadicObject.featureActivated){var profileError=new Error("nomadicLogin failure - Not Allowed");return profileError.status=profileError.errorDetailsCode="403",$log.error("[telephonyService] "+profileError.message),void reject(profileError)}if(contactService.userContact.phonePro===phoneNumber||contactService.userContact.phoneProCan===phoneNumber||contactService.userContact.phonePbx===phoneNumber){var errorMessage="nomadicLogin failure: impossible to use its own phone number like nomadic phone";return $log.error("[telephonyService] "+errorMessage),void reject(new Error(errorMessage))}$log.info("[telephonyService] nomadicLogin : "+utilService.anonymizePhoneNumber(phoneNumber)),NotTakeIntoAccount=NotTakeIntoAccount||!1,isUnchangeableNumber=isUnchangeableNumber||!1,service.nomadicAnswerNotTakedIntoAccount=NotTakeIntoAccount,contactService.getOrCreateContact(null,phoneNumber).then((function(contact){var phoneInfo=service.getPhoneInfo(contact,phoneNumber);$http({method:"PUT",url:service.portalURL+"nomadic/login",headers:authService.getRequestHeader(),data:{destinationExtNumber:phoneInfo.longNumber,destinationIntNumber:phoneInfo.internalNumber,destinationShortNumber:phoneInfo.shortNumber,destinationRainbowNumber:isUnchangeableNumber?phoneNumber:"",destinationPbxId:phoneInfo.pbxId,destinationDisplayName:contact.displayName,destinationCountry:contact.country}}).then((function(){$log.info("[telephonyService] nomadicLogin success"),resolve()}),(function(response){var error=errorHelperService.handleError(response);reject(error),$log.error("[telephonyService] "+errorHelperService.getErrorFullMessage(response,"nomadicLogin"))}))}))}))},service.nomadicLoginOnOfficePhone=function(){return $q((function(resolve,reject){if(!service.isNomadicEnabled||!service.nomadicObject.featureActivated){var profileError=new Error("nomadicLoginOnOfficePhone failure - Not Allowed");return profileError.status=profileError.errorDetailsCode="403",$log.error("[telephonyService] "+profileError.message),void reject(profileError)}$log.info("[telephonyService] nomadicLoginOnOfficePhone"),$http({method:"PUT",url:service.portalURL+"nomadic/login",headers:authService.getRequestHeader()}).then((function(){$log.info("[telephonyService] nomadicLoginOnOfficePhone success"),resolve()}),(function(response){var error=errorHelperService.handleError(response);reject(error),$log.error("[telephonyService] "+errorHelperService.getErrorFullMessage(response,"nomadicLoginOnOfficePhone"))}))}))},service.nomadicLogout=function(){return $q((function(resolve,reject){if(!service.isNomadicEnabled||!service.nomadicObject.featureActivated){var profileError=new Error("nomadicLogout failure - Not Allowed");return profileError.status=profileError.errorDetailsCode="403",$log.error("[telephonyService] "+profileError.message),void reject(profileError)}$log.info("[telephonyService] nomadicLogout"),$http({method:"PUT",url:service.portalURL+"nomadic/logout",headers:authService.getRequestHeader()}).then((function(){$log.info("[telephonyService] nomadicLogout success"),resolve()}),(function(response){var error=errorHelperService.handleError(response);reject(error),$log.error("[telephonyService] "+errorHelperService.getErrorFullMessage(response,"nomadicLogout"))}))}))},service.getNomadicStatus=function(){return $q((function(resolve,reject){if(service.isSipWise()){$log.info("[telephonyService] getNomadicStatus -- SipWise bypass Nomadic");resolve()}else{if(!service.isNomadicEnabled){var profileError=new Error("getNomadicStatus failure - Not Allowed");return profileError.status=profileError.errorDetailsCode="403",$log.error("[telephonyService] "+profileError.message),void reject(profileError)}service.starting||service.started?$http({method:"GET",url:service.portalURL+"nomadic",headers:authService.getRequestHeader()}).then((function(response){$log.info("[telephonyService] getNomadicStatus success"),service.updateNomadicData(response.data.data),resolve()}),(function(response){var error=errorHelperService.handleError(response);reject(error),$log.error("[telephonyService] "+errorHelperService.getErrorFullMessage(response,"getNomadicStatus"))})):reject(new Error("getNomadicStatus failure - Telephony not started"))}}))},service.setNomadicState=function(){return $q((function(resolve,reject){$log.info("[telephonyService] setNomadicState"),$http({method:"PUT",url:service.portalURL+"nomadic/state",headers:authService.getRequestHeader(),data:{makeCallInitiatorIsMain:"true"}}).then((function(){$log.info("[telephonyService] setNomadicState success"),resolve()}),(function(response){var error=errorHelperService.handleError(response);reject(error),$log.error("[telephonyService] "+errorHelperService.getErrorFullMessage(response,"setNomadicState"))}))}))},service.updateNomadicData=function(response){var destination=response.destination?utilService.anonymizePhoneNumber(response.destination):"";$log.info("[telephonyService] updateNomadicData destination:"+destination+" featureActivated:"+response.featureActivated+" makeCallInitiatorIsMain:"+response.makeCallInitiatorIsMain+" modeActivated:"+response.modeActivated+" monodevice:"+contactService.userContact.isVirtualTerm);var nomadicObjectOrg=JSON.parse(JSON.stringify(service.nomadicObject));service.nomadicObject.featureActivated="true"===response.featureActivated,service.nomadicObject.modeActivated="true"===response.modeActivated,service.nomadicObject.destination=response.destination,service.nomadicObject.makeCallInitiatorIsMain="true"===response.makeCallInitiatorIsMain;var makeCallInitiatorIsMainChanged=nomadicObjectOrg.makeCallInitiatorIsMain!==service.nomadicObject.makeCallInitiatorIsMain;service.nomadicAnswerNotTakedIntoAccount||$rootScope.$broadcast("ON_CALL_NOMADIC_EVENT",service.nomadicObject),service.nomadicAnswerNotTakedIntoAccount=!1;var webrtcGatewayService=$injector.get("webrtcGatewayService");if(contactService.userContact.isVirtualTerm&&service.nomadicObject.featureActivated&&service.nomadicObject.modeActivated&&(""===service.nomadicObject.destination||void 0===service.nomadicObject.destination)&&webrtcGatewayService.isMediaPillarConfigured()){var defaultNumber=webrtcGatewayService.getMyMediaPillarRemoteExtension();service.nomadicLogin(defaultNumber)}else if(contactService.userContact.isVirtualTerm&&service.nomadicObject.featureActivated&&service.nomadicObject.modeActivated&&(""===service.nomadicObject.destination||void 0===service.nomadicObject.destination)&&(contactService.userContact.mobileProCan||contactService.userContact.mobilePerso)){defaultNumber=contactService.userContact.mobileProCan?contactService.userContact.mobileProCan:contactService.userContact.mobilePerso;service.nomadicLogin(defaultNumber)}return makeCallInitiatorIsMainChanged},service.getNomadicObject=function(){return service.nomadicObject},service.getNomadicDestination=function(){return service.nomadicObject.destination},service.sendDtmf=function(call,dtmf){return $q((function(resolve,reject){if(call&&dtmf){if(service.isSipWise())return void service.telephonyServiceSipWise.sendDtmfSipWise(service,call,dtmf).then((function(){resolve()}),(function(error){reject(error)}));$http({method:"PUT",url:service.portalURL+"calls/"+encodeURIComponent(call.connectionId)+"/dtmf",headers:authService.getRequestHeader(),data:{dtmf:dtmf}}).then((function(){$rootScope.$broadcast("ON_DTMF_SENT",dtmf),resolve()}),(function(response){var error=errorHelperService.handleError(response);reject(error),$log.error("[telephonyService] "+errorHelperService.getErrorFullMessage(response,"sendDtmf"))}))}else reject()}))},service.clearCall=function(call,nobroadcast){$log.info("[telephonyService] clearCall for call id: "+call.id),call.setStatus(_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.UNKNOWN),nobroadcast||$rootScope.$broadcast("ON_CALL_UPDATED_EVENT",call),call.contact&&delete service.calls[call.contact.id],call.getCurrentCalled()&&call.setCurrentCalled(null)},service.startAsPhoneNumber=function(phoneNumber){var cleanPhoneNumber=phoneNumber.trim().split(".").join(""),match=cleanPhoneNumber.match(/^(\+|\d|#|\*|\(|\)|\.|-|–|—|\s|\/)*$/);return!!match&&match[0]===cleanPhoneNumber},service.updateContactFromOutlookInfos=function(__contact,__phoneNumber,__reload,__mode){return $log.info("[telephonyService] default updateContactFromOutlookInfos"),$q.reject()},service.setSipWise=function(condition){sipWise=condition},service.isSipWise=function(){return sipWise},service.sipWiseMode=function(){var mode=settingsService.getSetting("sipWiseMode");return sipWise||(mode=!1),mode},service.resetAllSipWiseCall=function(){if(service.isSipWise()){var iq=$iq({type:"set",to:service.userJidTel+"/pcg2"}).c("telephony",{xmlns:"urn:xmpp:pbxagent:telephony:1"}).c("service").c("deleteCalls",{forced:"true"});xmppService.sendIQ(iq,6e4).then((function(data){$log.info("[telephonyService] resetAllSipWiseCall : try to reset all ghost calls !"),console.error(data)})).catch((function(error){var errorMessage="resetAllSipWiseCall failure : "+error.message;$log.error("[telephonyService]"+errorMessage)}))}}}])},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var _src_models_call_model__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0);angular.module("rainbow").factory("TelephonyServiceEventHandler",["$log","$q","$rootScope","$interval","$injector","contactService","profileService","Contact","PromiseQueue","pstnConferenceService","utilService",function($log,$q,$rootScope,$interval,$injector,contactService,profileService,Contact,PromiseQueue,pstnConferenceService,utilService){function TelephonyServiceEventHandler(telephonyService){this.telephonyService=telephonyService,this.promiseQueue=PromiseQueue.create()}return TelephonyServiceEventHandler.create=function(telephonyService){return new TelephonyServiceEventHandler(telephonyService)},TelephonyServiceEventHandler.CallFailureLabels={DESTNOTOBTAINABLE:"outOfService",DONOTDISTURB:"dnd",TRUNKSBUSY:"trunksbusy",BUSY:"busy"},TelephonyServiceEventHandler.prototype.existingCall=function(callId){var exist=this.telephonyService.calls[callId];return $log.debug("[TelephonyServiceEventHandler] existingCall -- "+callId+" => "+exist),exist},TelephonyServiceEventHandler.prototype.onCallserviceMessageReceived=function(stanza){try{var stanzaElem=$(stanza),that=this;if("Offline Storage"===stanzaElem.find("delay").text())return!0;var actionElem=stanzaElem.find("callservice").children(),tagNames=actionElem.prop("tagName").split(":"),actionElemName=tagNames[tagNames.length-1].toLowerCase(),callId=actionElem.attr("callId"),callIdForLogs=callId?" -- "+callId:"",evtDeviceType=actionElem.attr("deviceType"),displayDeviceType=evtDeviceType?" -- "+evtDeviceType:"",oldCallId=actionElem.attr("oldCallId");oldCallId=oldCallId?" -- old "+oldCallId:"",evtDeviceType||(evtDeviceType="MAIN");var cfgNomadic=this.telephonyService.getNomadicObject(),cfgOfficePhone=!cfgNomadic||(cfgNomadic.makeCallInitiatorIsMain||!cfgNomadic.modeActivated);if(!["messaging","voicemessages","forwarded","nomadicstatus","opendesktop"].includes(actionElemName)&&("MAIN"===evtDeviceType&&!cfgOfficePhone||"SECONDARY"===evtDeviceType&&cfgOfficePhone)&&!that.existingCall(callId))return $log.info("[TelephonyServiceEventHandler] onCallserviceMessageReceived -- "+actionElemName.toUpperCase()+callIdForLogs+oldCallId+displayDeviceType+" => IGNORED"),!0;switch($log.info("[TelephonyServiceEventHandler] onCallserviceMessageReceived -- "+actionElemName.toUpperCase()+callIdForLogs+oldCallId+displayDeviceType),actionElemName){case"initiated":this.promiseQueue.add((function(){return that.onInitiatedEvent(actionElem)}));break;case"originated":this.promiseQueue.add((function(){return that.onOriginatedEvent(actionElem)}));break;case"delivered":this.promiseQueue.add((function(){return that.onDeliveredEvent(actionElem)}));break;case"established":this.promiseQueue.add((function(){return that.onEstablishedEvent(actionElem)}));break;case"retrievecall":this.promiseQueue.add((function(){return that.onRetrieveCallEvent(actionElem)}));break;case"queued":this.promiseQueue.add((function(){return that.onQueuedEvent(actionElem)}));break;case"holdcall":case"held":this.promiseQueue.add((function(){return that.onHeldEvent(actionElem)}));break;case"diverted":this.promiseQueue.add((function(){return that.onDivertedEvent(actionElem)}));break;case"transfercall":case"transferred":this.promiseQueue.add((function(){return that.onTransferEvent(actionElem)}));break;case"conferenced":this.promiseQueue.add((function(){return that.onConferenceEvent(actionElem)}));break;case"connectioncleared":this.promiseQueue.add((function(){return that.onClearCallEvent(actionElem)}));break;case"failed":this.promiseQueue.add((function(){return that.onFailCallEvent(actionElem)}));break;case"voicemessages":this.promiseQueue.add((function(){return that.onVoiceMessageEvent(actionElem)}));break;case"updatecall":this.promiseQueue.add((function(){return that.onUpDateCallEvent(actionElem)}));break;case"forwarded":this.promiseQueue.add((function(){return that.onCallForwardedEvent(actionElem)}));break;case"callsubject":this.promiseQueue.add((function(){return that.onCallSubjectEvent(actionElem)}));break;case"nomadicstatus":this.promiseQueue.add((function(){return that.onCallNomadicEvent(actionElem)}));break;case"opendesktop":$log.info("[TelephonyServiceEventHandler] openDesktop detected ")}return!0}catch(error){return $log.error("[TelephonyServiceEventHandler] onCallserviceMessageReceived -- failure -- "+error.message),!0}},TelephonyServiceEventHandler.prototype.onInitiatedEvent=function(initiatedElem){$log.info("[TelephonyServiceEventHandler] onInitiatedEvent");var that=this;return this.getCall(initiatedElem).then((function(call){try{var deviceState=initiatedElem.attr("deviceState"),newConnectionId=initiatedElem.attr("newCallId");return void 0!==newConnectionId?that.getOrCreateCall(newConnectionId).then((function(newCall){$log.info("[TelephonyServiceEventHandler] onInitiatedEvent : changed call id from "+call.id+" to "+newConnectionId),that.computeCallRelevancy(initiatedElem,newCall),"LCI_CONNECTED"===deviceState?newCall.setStatus(_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.ACTIVE):newCall.setStatus(call.status),newCall.setContact(call.contact),newCall.isOwner=call.isOwner;var confSession=pstnConferenceService.getConferenceSessionWithConnId(call.connectionId);(confSession&&confSession.setCallId(newConnectionId),call.isMediaPillarCall())&&$injector.get("webrtcGatewayService").replaceCallRefs(newCall,call);that.telephonyService.clearCall(call),that.sendCallUpdateEvent(call),that.sendCallUpdateEvent(newCall),delete that.telephonyService.calls[call.id]})):that.computeCallRelevancy(initiatedElem,call),$q.when()}catch(error){var errorMessage="onInitiatedEvent -- "+error.message;return $log.error("[TelephonyServiceEventHandler] "+errorMessage),$q.reject(new Error(errorMessage))}}))},TelephonyServiceEventHandler.prototype.onOriginatedEvent=function(originatedElem){$log.info("[TelephonyServiceEventHandler] onOriginatedEvent");var that=this;return this.getCall(originatedElem).then((function(call){try{var jid=originatedElem.attr("endpointIm"),phoneNumber=originatedElem.attr("endpointTel"),newConnectionId=originatedElem.attr("newCallId"),currentCalled={contactPhoneNumber:"",contact:call.contact,participantsPhoneNumbers:null,participants:null};return jid||phoneNumber?currentCalled.contactPhoneNumber=phoneNumber||"":call.contact&&call.contact.temp&&(currentCalled.contactPhoneNumber=call.contact.id),call.setCurrentCalled(currentCalled),void 0!==newConnectionId?that.getOrCreateCall(newConnectionId,jid,phoneNumber).then((function(newCall){$log.info("[TelephonyServiceEventHandler] onOriginatedEvent : changed call id from "+call.id+" to "+newConnectionId),that.computeCallRelevancy(originatedElem,newCall),newCall.setStatus(call.status),newCall.setContact(call.contact),newCall.setCurrentCalled(currentCalled),newCall.isOwner=call.isOwner;var confSession=pstnConferenceService.getConferenceSessionWithConnId(call.connectionId);(confSession&&confSession.setCallId(newConnectionId),call.isMediaPillarCall())&&$injector.get("webrtcGatewayService").replaceCallRefs(newCall,call);that.telephonyService.clearCall(call),that.sendCallUpdateEvent(call),that.sendCallUpdateEvent(newCall),delete that.telephonyService.calls[call.id]})):that.sendCallUpdateEvent(call),$q.when()}catch(error){var errorMessage="onOriginatedEvent -- "+error.message;return $log.error("[TelephonyServiceEventHandler] "+errorMessage),$q.reject(new Error(errorMessage))}}))},TelephonyServiceEventHandler.prototype.onDeliveredEvent=function(deliveredElem){$log.info("[TelephonyServiceEventHandler] onDeliveredEvent");var that=this;return this.getCall(deliveredElem).then((function(call){try{if(that.computeCallRelevancy(deliveredElem,call),call.status===_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.QUEUED_INCOMMING)return $q.resolve();var type=deliveredElem.attr("type"),jid=deliveredElem.attr("endpointIm"),phoneNumber=deliveredElem.attr("endpointTel");return call.setStatus("outgoing"===type?_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.RINGING_OUTGOING:_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.RINGING_INCOMMING),call.startDate=null,call.vm=!1,that.updateCallContact(jid,phoneNumber,deliveredElem,call)}catch(error){var errorMessage="onDeliveredEvent -- "+error.message;return $log.error("[TelephonyServiceEventHandler] "+errorMessage),$q.reject(new Error(errorMessage))}}))},TelephonyServiceEventHandler.prototype.onEstablishedEvent=function(establishedElem){$log.info("[TelephonyServiceEventHandler] onEstablishedEvent");var that=this;return this.getCall(establishedElem).then((function(call){try{that.computeCallRelevancy(establishedElem,call);var jid=establishedElem.attr("endpointIm"),phoneNumber=establishedElem.attr("endpointTel"),connectionId=establishedElem.attr("callId");if(call.contact&&call.contact.id)return call.setStatus(_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.ACTIVE),call.setConnectionId(connectionId),that.sendCallUpdateEvent(call,establishedElem),that.updateCallContact(jid,phoneNumber,establishedElem,call);if(!(call.participants&&call.participants.length>0))return $log.info("[TelephonyServiceEventHandler] onEstablishedEvent, no call contact / no participants"),jid||phoneNumber||(phoneNumber="****"),contactService.getOrCreateContact(jid,phoneNumber).then((function(contact){return call.setContact(contact),call.setStatus(_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.ACTIVE),currentCalled={contactPhoneNumber:phoneNumber,contact:contact},call.setCurrentCalled(currentCalled),that.sendCallUpdateEvent(call,establishedElem),$q.when()}));for(var contactRecovered=null,i=0;i<call.participants.length&&!contactRecovered;i++)call.participants[i].id===jid?contactRecovered=call.participants[i]:call.currentCalled.participantsPhoneNumbers&&call.currentCalled.participantsPhoneNumbers.length>0&&call.currentCalled.participantsPhoneNumbers[i]===phoneNumber&&(contactRecovered=call.participants[i]);call.participants=[],call.isConference=!1;var currentCalled=call.getCurrentCalled();return contactRecovered?(call.setContact(contactRecovered),call.setStatus(_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.ACTIVE),currentCalled={contactPhoneNumber:phoneNumber,contact:contactRecovered},call.setCurrentCalled(currentCalled),that.sendCallUpdateEvent(call,establishedElem),$q.when()):(jid||phoneNumber||(phoneNumber="****"),contactService.getOrCreateContact(jid,phoneNumber).then((function(contact){return call.setContact(contact),call.setStatus(_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.ACTIVE),currentCalled={contactPhoneNumber:phoneNumber,contact:contact},call.setCurrentCalled(currentCalled),that.sendCallUpdateEvent(call,establishedElem),$q.when()})))}catch(error){var errorMessage="onEstablishedEvent -- "+error.message;return $log.error("[TelephonyServiceEventHandler] "+errorMessage),$q.reject(new Error(errorMessage))}}))},TelephonyServiceEventHandler.prototype.onRetrieveCallEvent=function(retrieveElem){$log.info("[TelephonyServiceEventHandler] onRetrieveCallEvent");var that=this;return this.getCall(retrieveElem,!0).then((function(call){call.setStatus(_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.ACTIVE),that.sendCallUpdateEvent(call,retrieveElem)}))},TelephonyServiceEventHandler.prototype.onClearCallEvent=function(clearElem){var that=this,connectionId=clearElem.attr("callId"),callId=_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.getIdFromConnectionId(connectionId);return $log.info("[TelephonyServiceEventHandler] onClearCallEvent, connectionId: "+connectionId),this.telephonyService.calls[callId]?this.getCall(clearElem).then((function(call){that.computeCallRelevancy(clearElem,call),that.telephonyService.clearCall(call,!0),that.sendCallUpdateEvent(call,clearElem)})):($log.info("[TelephonyServiceEventHandler] onClearCallEvent, no call for connectionId: "+connectionId),$q.resolve())},TelephonyServiceEventHandler.prototype.onHeldEvent=function(heldElem){$log.info("[TelephonyServiceEventHandler] onHeldEvent");var that=this;return this.getCall(heldElem,!0).then((function(call){try{var connectionId=heldElem.attr("callId");return _src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.getDeviceIdFromConnectionId(call.connectionId)===_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.getDeviceIdFromConnectionId(connectionId)?call.setStatus(_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.HOLD):call.setStatus(_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.PUT_ON_HOLD),that.sendCallUpdateEvent(call,heldElem),$q.when()}catch(error){var errorMessage="onHeldEvent -- "+error.message;return $log.error("[TelephonyServiceEventHandler] "+errorMessage),$q.reject(new Error(errorMessage))}}))},TelephonyServiceEventHandler.prototype.onQueuedEvent=function(queuedElem){$log.info("[TelephonyServiceEventHandler] onQueuedEvent");var that=this,cause=queuedElem.attr("cause");return"PARK"===cause?($log.warn("[TelephonyServiceEventHandler] onQueuedEvent - ignore PARK cause"),$q.when()):"NEWCALL"===cause?($log.warn("[TelephonyServiceEventHandler] onQueuedEvent - ignore NEWCALL cause"),$q.when()):"CAMPON"!==cause&&this.telephonyService.isOxe?($log.warn("[TelephonyServiceEventHandler] onQueuedEvent - ignore cause not CAMPON  (for oxe attendant res monoLine)"),$q.when()):this.getCall(queuedElem).then((function(call){try{that.computeCallRelevancy(queuedElem,call);var type=queuedElem.attr("type"),jid=queuedElem.attr("endpointIm"),phoneNumber=queuedElem.attr("endpointTel"),status="outgoing"===type?_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.QUEUED_OUTGOING:_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.QUEUED_INCOMMING;return call.setStatus(status),call.startDate=null,call.vm=!1,call.relevantEquipmentId=_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.getDeviceIdFromConnectionId(call.connectionId),that.updateCallContact(jid,phoneNumber,queuedElem,call)}catch(error){var errorMessage="onQueuedEvent -- "+error.message;return $log.error("[TelephonyServiceEventHandler] "+errorMessage),$q.reject(new Error(errorMessage))}}))},TelephonyServiceEventHandler.prototype.onDivertedEvent=function(divertedElem){$log.info("[TelephonyServiceEventHandler] onDivertedEvent");var oldConnectionId=divertedElem.attr("oldCallId"),oldCallId=_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.getIdFromConnectionId(oldConnectionId),call=this.telephonyService.calls[oldCallId];return call?(this.computeCallRelevancy(divertedElem,call),$injector.get("webrtcGatewayService").isMediaPillarCallCase()?call.isSecondary?this.telephonyService.clearCall(call):this.telephonyService.clearCall(call,!0):this.telephonyService.clearCall(call),this.sendCallUpdateEvent(call,divertedElem),$q.when()):($log.warn("[TelephonyServiceEventHandler] onDivertedEvent - receive divertedEvent on unknown call --- ignored"),$q.when())},TelephonyServiceEventHandler.prototype.onTransferEvent=function(transferElem){$log.info("[TelephonyServiceEventHandler] onTransferEvent");var that=this,activeConnectionId=transferElem.attr("activeCallId"),heldConnectionId=transferElem.attr("heldCallId"),newConnectionId=transferElem.attr("newCallId"),activeCallId=_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.getIdFromConnectionId(activeConnectionId),activeCall=this.telephonyService.calls[activeCallId];if(heldConnectionId){var heldCallId=_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.getIdFromConnectionId(heldConnectionId),heldCall=this.telephonyService.calls[heldCallId];heldCall&&heldCall.setStatus(_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.UNKNOWN),activeCall&&activeCall.setStatus(_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.UNKNOWN),heldCall&&that.sendCallUpdateEvent(heldCall),activeCall&&that.sendCallUpdateEvent(activeCall)}if(newConnectionId){var jid=transferElem.attr("newEndpointIm"),phoneNumber=transferElem.attr("newEndpointTel"),deviceState=transferElem.attr("deviceState");deviceState||(deviceState=transferElem.attr("deviceStatus"));var deviceType=transferElem.attr("deviceType");return deviceType||(deviceType="MAIN"),activeCall&&(activeCall.setStatus(_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.UNKNOWN),that.sendCallUpdateEvent(activeCall)),jid||phoneNumber||(phoneNumber="****"),this.getOrCreateCall(newConnectionId,jid,phoneNumber).then((function(newCall){return deviceState&&"LCI_ALERTING"===deviceState?newCall.setStatus(_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.RINGING_INCOMMING):newCall.setStatus(_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.ACTIVE),newCall.relevantEquipmentId=_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.getDeviceIdFromConnectionId(newConnectionId),newCall.isSecondary=deviceType&&"SECONDARY"===deviceType,that.updateCallContact(jid,phoneNumber,transferElem,newCall)}))}return $q.resolve()},TelephonyServiceEventHandler.prototype.onConferenceEvent=function(conferencedElem){$log.info("[TelephonyServiceEventHandler] onConferenceEvent");var that=this,primaryOldConnectionId=conferencedElem.find("primaryOldCallId").text(),secondaryOldConnectionId=conferencedElem.find("secondaryOldCallId").text(),newConnectionId=conferencedElem.find("newCallId").text(),primaryOldCallId=_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.getIdFromConnectionId(primaryOldConnectionId),secondaryOldCallId=_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.getIdFromConnectionId(secondaryOldConnectionId),primaryOldCall=this.telephonyService.calls[primaryOldCallId],secondaryOldCall=this.telephonyService.calls[secondaryOldCallId],confParticipants=[],participantPromises=[],confParticipantsPhoneNumbers=[];return conferencedElem.find("participant").each((function(){var participantElem=angular.element(this),endpointTel=participantElem.find("endpointTel").text(),endpointIm=participantElem.find("endpointIm").text();endpointIm&&contactService.isUserContactJid(endpointIm)||participantPromises.push($q((function(resolve,reject){endpointIm||endpointTel||(endpointTel="****"),!endpointIm&&primaryOldCall&&primaryOldCall.contact&&primaryOldCall.currentCalled.contactPhoneNumber===endpointTel?(confParticipants.push(primaryOldCall.contact),confParticipantsPhoneNumbers.push(endpointTel),resolve()):!endpointIm&&secondaryOldCall&&secondaryOldCall.contact&&secondaryOldCall.currentCalled.contactPhoneNumber===endpointTel?(confParticipants.push(secondaryOldCall.contact),confParticipantsPhoneNumbers.push(endpointTel),resolve()):contactService.getOrCreateContact(endpointIm,endpointTel).then((function(contact){confParticipants.push(contact),confParticipantsPhoneNumbers.push(endpointTel),that.telephonyService.updateContactFromOutlookInfos(contact,endpointTel).then((function(updateStatus){updateStatus?$log.debug("[TelephonyServiceEventHandler] on conferenced, update from outlook for contact :"+contact.displayNameMD5):$log.debug("[TelephonyServiceEventHandler] on conferenced, no update from outlook for contact :"+contact.displayNameMD5)}),(function(){$log.debug("[TelephonyServiceEventHandler] on conferenced, no Outlook search available")})).finally((function(){resolve()}))})).catch((function(error){$log.error("[TelephonyServiceEventHandler] onConferenceEvent - Impossible to get contact - "+error.message),resolve()}))})))})),$q.all(participantPromises).finally((function(){var isSecondaryDevice=!1;primaryOldCall&&(isSecondaryDevice=isSecondaryDevice||primaryOldCall.isSecondary),secondaryOldCall&&(isSecondaryDevice=isSecondaryDevice||secondaryOldCall.isSecondary);var newConferenceCall=that.createConferenceCall(newConnectionId,confParticipants),currentCalled=newConferenceCall.getCurrentCalled();currentCalled.participants=confParticipants,currentCalled.participantsPhoneNumbers=confParticipantsPhoneNumbers,newConferenceCall.setCurrentCalled(currentCalled),newConferenceCall.setStatus(_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.ACTIVE),newConferenceCall.relevantEquipmentId=_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.getDeviceIdFromConnectionId(newConnectionId),newConferenceCall.isSecondary=isSecondaryDevice,$log.debug("[TelephonyServiceEventHandler] on conferenced, create new call: "+newConferenceCall),that.sendCallUpdateEvent(newConferenceCall),primaryOldCall&&(primaryOldCall.setStatus(_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.UNKNOWN),$log.debug("[TelephonyServiceEventHandler] on conferenced, updated primaryOldCall: "+primaryOldCall),that.sendCallUpdateEvent(primaryOldCall)),secondaryOldCall&&(secondaryOldCall.setStatus(_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.UNKNOWN),$log.debug("[TelephonyServiceEventHandler] on conferenced, updated secondaryOldCall: "+secondaryOldCall),that.sendCallUpdateEvent(secondaryOldCall))}))},TelephonyServiceEventHandler.prototype.onVoiceMessageEvent=function(messagingElem){$log.info("[TelephonyServiceEventHandler] onVoiceMessageEvent");var voiceMessageCounters=messagingElem.find("voiceMessagesCounters");if(voiceMessageCounters){var totalMessages=voiceMessageCounters.attr("totalVoiceMessages"),unreadMessages=voiceMessageCounters.attr("unreadVoiceMessages"),counters={};counters.totalMessages=Number(totalMessages),counters.unreadMessages=Number(unreadMessages),$log.info("[TelephonyServiceEventHandler] onVoiceMessageEvent - Messages total : "+counters.totalMessages+" - Messages Unread : "+counters.unreadMessages),$rootScope.$broadcast("ON_VOICE_MESSAGE_UPDATE_EVENT",counters)}return $q.when()},TelephonyServiceEventHandler.prototype.onUpDateCallEvent=function(updatecallElem){$log.info("[TelephonyServiceEventHandler] onUpDateCallEvent");var that=this;return this.getCall(updatecallElem).then((function(call){var jid=updatecallElem.attr("endpointIm"),phoneNumber=updatecallElem.attr("endpointTel"),firstName="",lastName="",identityFirstName=updatecallElem.find("identity").attr("firstName"),identityLastName=updatecallElem.find("identity").attr("lastName"),identityDisplayName=updatecallElem.find("identity").attr("displayName"),contactUpdateDone=!1;if(!config.permitSearchFromPhoneBook&&!profileService.isFeatureEnabled(profileService.FeaturesEnum.TELEPHONY_PHONE_BOOK))return $log.debug("[TelephonyServiceEventHandler] onUpDateCallEvent xnames not allowed for the user profile => IGNORED event"),$q.when();if(identityLastName&&identityLastName.length)lastName=identityLastName,identityFirstName&&identityFirstName.length&&(firstName=identityFirstName),$log.info("[TelephonyServiceEventHandler] onUpDateCallEvent received for call "+call.id+" for phoneNumber:"+utilService.anonymizePhoneNumber(phoneNumber)+" with name : "+firstName.slice(0,1)+"***");else{if(!identityDisplayName||!identityDisplayName.length||identityDisplayName===phoneNumber)return $log.info("[TelephonyServiceEventHandler] onUpDateCallEvent xnames not available => IGNORED event"),$q.when();lastName=identityDisplayName,$log.info("[TelephonyServiceEventHandler] onUpDateCallEvent only displayName available")}return contactService.getOrCreateContact(jid,phoneNumber).then((function(contact){if(contact.temp){if(contact.updateName(firstName,lastName),call.contact&&call.contact.id){var currentCalled={contactPhoneNumber:phoneNumber,contact:contact};call.contact.id===contact.id&&call.contact.displayName!==phoneNumber&&call.contact.getNameUpdatePrio()!==Contact.NameUpdatePrio.OUTLOOK_UPDATE_PRIO||(contact.setNameUpdatePrio(Contact.NameUpdatePrio.SERVER_UPDATE_PRIO),call.setContact(contact),call.setCurrentCalled(currentCalled),contactUpdateDone=!0,$log.debug("[TelephonyServiceEventHandler] onUpDateCallEvent xnames updated for "+phoneNumber+" with contact : "+contact.displayNameMD5))}else if(call.participants&&call.participants.length>0){currentCalled=call.getCurrentCalled();for(var i=0;i<call.participants.length;i++)call.participants[i].temp?call.participants[i].phoneProCan&&call.participants[i].phoneProCan===phoneNumber&&($log.debug("[TelephonyServiceEventHandler] onUpDateCallEvent temp participant "+call.participants[i].displayNameMD5+" updated with : "+contact.displayNameMD5),call.participants[i]=contact,call.participants[i].setNameUpdatePrio(Contact.NameUpdatePrio.SERVER_UPDATE_PRIO),currentCalled.participantsPhoneNumbers[i]=phoneNumber,currentCalled.participants[i]=contact,contactUpdateDone=!0):$log.debug("[TelephonyServiceEventHandler] onUpDateCallEvent STRANGE former participant was a rainbow: "+call.participants[i].displayNameMD5);call.setCurrentCalled(currentCalled)}}else if(call.contact&&call.contact.id){currentCalled={contactPhoneNumber:phoneNumber,contact:contact};call.contact.id!==contact.id&&(call.contact.temp&&(call.contact.updateName(firstName,lastName),call.contact.setNameUpdatePrio(Contact.NameUpdatePrio.SERVER_UPDATE_PRIO)),call.setContact(contact),call.setCurrentCalled(currentCalled),contactUpdateDone=!0,$log.debug("[TelephonyServiceEventHandler] onUpDateCallEvent call update with rainbow contact : "+contact.displayNameMD5))}else if(call.participants&&call.participants.length>0){for(currentCalled=call.getCurrentCalled(),i=0;i<call.participants.length;i++)call.participants[i].temp?call.participants[i].phoneProCan&&call.participants[i].phoneProCan===phoneNumber&&($log.debug("[TelephonyServiceEventHandler] onUpDateCallEvent temp participant "+call.participants[i].displayNameMD5+" updated with : "+contact.displayNameMD5),call.participants[i]=contact,call.setParticipants(call.participants),currentCalled.participantsPhoneNumbers[i]=phoneNumber,currentCalled.participants[i]=contact,contactUpdateDone=!0):call.participants[i].jid===jid?(currentCalled.participantsPhoneNumbers[i]=phoneNumber,currentCalled.participants[i]=call.participants[i],contactUpdateDone=!0,$log.debug("[TelephonyServiceEventHandler] onUpDateCallEvent rainbow participant "+call.participants[i].displayNameMD5+" updated with the same : "+contact.displayNameMD5)):$log.debug("[TelephonyServiceEventHandler] onUpDateCallEvent other participant not updated : "+call.participants[i].displayNameMD5+" vs "+contact.displayNameMD5);call.setCurrentCalled(currentCalled)}contactUpdateDone?$interval((function(){that.sendCallUpdateEvent(call,updatecallElem)}),300,1):$log.debug("[TelephonyServiceEventHandler] onUpDateCallEvent, no update needed for call : "+call.id)}))}))},TelephonyServiceEventHandler.prototype.onFailCallEvent=function(failedElem){$log.info("[TelephonyServiceEventHandler] onFailCallEvent");var cause=failedElem.attr("cause"),that=this;return this.getCall(failedElem).then((function(call){call.setStatus(_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.ERROR),call.errorMessage=TelephonyServiceEventHandler.CallFailureLabels[cause],call.errorMessage||(call.errorMessage=cause),that.sendCallUpdateEvent(call,failedElem)}))},TelephonyServiceEventHandler.prototype.onCallNomadicEvent=function(nomadicElem){if($log.info("[TelephonyServiceEventHandler] onCallNomadicEvent"),!this.telephonyService.started&&!this.telephonyService.starting)return $log.info("[TelephonyServiceEventHandler] onCallNomadicEvent on uninitialized telephony => relaunch telephony initialization"),this.telephonyService.launchTelephonyInitilization(),$q.when();var response={destination:nomadicElem.attr("destination"),featureActivated:nomadicElem.attr("featureActivated"),makeCallInitiatorIsMain:nomadicElem.attr("makeCallInitiatorIsMain"),modeActivated:nomadicElem.attr("modeActivated")};if(this.telephonyService.updateNomadicData(response)){var snapshotSecondary=this.telephonyService.nomadicObject.featureActivated&&this.telephonyService.nomadicObject.modeActivated&&!this.telephonyService.nomadicObject.makeCallInitiatorIsMain;this.telephonyService.getTelephonyState(snapshotSecondary)}return $q.when()},TelephonyServiceEventHandler.prototype.onCallForwardedEvent=function(forwardElem){var forwardType=forwardElem.attr("forwardType"),forwardTo=forwardElem.attr("forwardTo");return $log.info("[TelephonyServiceEventHandler] onCallForwardedEvent forwardType: "+forwardType+" forwardTo: "+forwardTo),$rootScope.$broadcast("ON_CALL_FORWARDED_EVENT",{forwardType:forwardType,forwardTo:forwardTo}),this.telephonyService.forwardObject.forwardType=forwardType,this.telephonyService.forwardObject.forwardTo=forwardTo,$q.when()},TelephonyServiceEventHandler.prototype.onCallSubjectEvent=function(callElem){$log.info("[TelephonyServiceEventHandler] onCallSubjectEvent");var that=this;return this.getCall(callElem).then((function(call){try{call.subject=callElem.find("subject").text(),call.subject&&($log.info("[TelephonyServiceEventHandler] subject display"+call.subject),that.sendCallUpdateEvent(call))}catch(error){var errorMessage="onCallSubjectEvent -- "+error.message;$log.error("[TelephonyServiceEventHandler] "+errorMessage),$q.reject(new Error(errorMessage))}}))},TelephonyServiceEventHandler.prototype.computeCallRelevancy=function(elem,call){var newCallId=elem.attr("newCallId"),connectionId=newCallId||elem.attr("callId"),deviceType=elem.attr("deviceType"),equipmentId=_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.getDeviceIdFromConnectionId(connectionId),nomadicInfo=this.telephonyService.getNomadicObject(),makeCallInitiatorIsMain=nomadicInfo.makeCallInitiatorIsMain;deviceType||(deviceType="MAIN"),nomadicInfo.modeActivated||(makeCallInitiatorIsMain=!0),"MAIN"===deviceType&&makeCallInitiatorIsMain&&(call.relevantEquipmentId=equipmentId,call.connectionId=connectionId),"SECONDARY"!==deviceType||makeCallInitiatorIsMain||(call.relevantEquipmentId=equipmentId,call.connectionId=connectionId),call.isSecondary=deviceType&&"SECONDARY"===deviceType&&!makeCallInitiatorIsMain,$log.info("[TelephonyServiceEventHandler] computeCallRelevancy -- relevantEquipmentId: "+call.relevantEquipmentId+" connectionId: "+call.connectionId+" isSecondary: "+call.isSecondary)},TelephonyServiceEventHandler.prototype.getCall=function(elem,doNotUseEqtIdFromElem){var that=this;return $q((function(resolve){var jid=elem.attr("endpointIm"),phoneNumber=elem.attr("endpointTel"),connectionId=elem.attr("callId");that.getOrCreateCall(connectionId,jid,phoneNumber,doNotUseEqtIdFromElem).then((function(call){resolve(call)}))}))},TelephonyServiceEventHandler.prototype.getOrCreateCall=function(connectionId,jid,phoneNumber,doNotUseEqtIdFromElem){var that=this;if(doNotUseEqtIdFromElem){var orgConnectionId=connectionId;connectionId=Object.keys(this.telephonyService.calls||[]).find((function(callConnectionId){return _src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.getCallIdFromConnectionId(callConnectionId)===_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.getCallIdFromConnectionId(connectionId)})),$log.debug("[TelephonyServiceEventHandler] getOrCreateCall - HOLD/RETRIEVE search call with callId: "+_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.getCallIdFromConnectionId(orgConnectionId)+" from connection id: "+orgConnectionId+" => found connectionId: "+connectionId)}if(!connectionId)return $q.reject("no connection id");var call=this.telephonyService.calls[connectionId];return call?($log.debug("[TelephonyServiceEventHandler] getOrCreateCall - "+connectionId+" - "+utilService.anonymizePhoneNumber(phoneNumber)+" - "+jid+" => found call: "+call),$q.when(call)):($log.debug("[TelephonyServiceEventHandler] getOrCreateCall - "+connectionId+" - "+utilService.anonymizePhoneNumber(phoneNumber)+" - "+jid+" => not found : create call..."),$q((function(resolve){jid||phoneNumber?contactService.getOrCreateContact(jid,phoneNumber).then((function(contact){resolve(that.telephonyService.getOrCreateCall(_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.UNKNOWN,connectionId,contact))})):resolve(that.telephonyService.getOrCreateCall(_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.UNKNOWN,connectionId))})))},TelephonyServiceEventHandler.prototype.createConferenceCall=function(connectionId,participants){var conferenceCall=_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.create(_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.UNKNOWN,null,_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Type.PHONE);return conferenceCall.setConnectionId(connectionId),conferenceCall.isConference=!0,conferenceCall.setParticipants(participants),this.telephonyService.calls[conferenceCall.id]=conferenceCall,conferenceCall},TelephonyServiceEventHandler.prototype.sendCallUpdateEvent=function(call,elem){var infoEvt=this.extractInfoEvent(elem);$rootScope.$broadcast("ON_CALL_UPDATED_EVENT",call,infoEvt)},TelephonyServiceEventHandler.prototype.extractInfoEvent=function(elem){var infoEvent={actionElemName:"",cause:""};if(elem&&null!==elem){var tagNames=elem.prop("tagName").split(":");infoEvent.actionElemName=tagNames[tagNames.length-1].toLowerCase(),infoEvent.cause=elem.attr("cause"),infoEvent.cause=infoEvent.cause?infoEvent.cause:""}else infoEvent=null;return infoEvent},TelephonyServiceEventHandler.prototype.analyzeContactChange=function(jid,phoneNumber,call){var updateContact=!1,searchOutlook=!1;return jid||phoneNumber?call.isConference?void 0:call.contact?(""!==jid?call.contact.id!==jid&&(updateContact=!0,searchOutlook=!1):call.contact.temp?call.contact.id!==phoneNumber?(updateContact=!0,searchOutlook=!0):call.contact.displayName===phoneNumber&&(updateContact=!1,searchOutlook=!0):""!==call.getCurrentCalled().contactPhoneNumber&&""!==phoneNumber&&call.getCurrentCalled().contactPhoneNumber!==phoneNumber&&(updateContact=!0,searchOutlook=!0),updateContact||searchOutlook?{updateContactToBeDone:updateContact,searchOutlookToBeDone:searchOutlook}:null):{updateContactToBeDone:!0,searchOutlookToBeDone:!0}:null},TelephonyServiceEventHandler.prototype.updateCallContact=function(jid,phoneNumber,actionElem,call){var that=this,tagNames=actionElem.prop("tagName").split(":"),actionElemName=tagNames[tagNames.length-1].toLowerCase();try{var updateAnalyse=that.analyzeContactChange(jid,phoneNumber,call);return call.isConference||""===phoneNumber||call.setCurrentCalledContactNumber(phoneNumber),updateAnalyse?contactService.getOrCreateContact(jid,phoneNumber).then((function(contact){return updateAnalyse.searchOutlookToBeDone?that.telephonyService.updateContactFromOutlookInfos(contact,phoneNumber).then((function(updateStatus){updateStatus?($log.debug("[TelephonyServiceEventHandler] on "+actionElemName+", update from outlook for contact :"+contact.displayNameMD5),that.makeUpdateContact(call,contact,phoneNumber,actionElemName)):($log.debug("[TelephonyServiceEventHandler] on "+actionElemName+", no update from outlook for contact :"+contact.displayNameMD5),updateAnalyse.updateContactToBeDone?($log.debug("[TelephonyServiceEventHandler] on "+actionElemName+", update contact :"+contact.displayNameMD5),that.makeUpdateContact(call,contact,phoneNumber,actionElemName)):that.sendCallUpdateEvent(call,actionElem))}),(function(){$log.debug("[TelephonyServiceEventHandler] on "+actionElemName+", no Outlook search available"),updateAnalyse.updateContactToBeDone?($log.debug("[TelephonyServiceEventHandler] on "+actionElemName+", update contact :"+contact.displayNameMD5),that.makeUpdateContact(call,contact,phoneNumber,actionElemName)):that.sendCallUpdateEvent(call,actionElem)})):($log.debug("[TelephonyServiceEventHandler] on "+actionElemName+", update contact :"+contact.displayNameMD5),that.makeUpdateContact(call,contact,phoneNumber,actionElemName),$q.when())})).catch((function(error){if(error){var errorMessage="updateCallContact -- "+error.message;$log.error("[TelephonyServiceEventHandler] "+errorMessage)}return $log.debug("[TelephonyServiceEventHandler] on "+actionElemName+", no Outlook search available"),that.sendCallUpdateEvent(call,actionElem),$q.when()})):(that.sendCallUpdateEvent(call,actionElem),$q.when())}catch(error){var errorMessage="updateCallContact -- "+error.message;return $log.error("[TelephonyServiceEventHandler] "+errorMessage),$q.reject(new Error(errorMessage))}},TelephonyServiceEventHandler.prototype.makeUpdateContact=function(call,contact,phoneNumber,actionElemName){var that=this;call.setContact(contact);var currentCalled={contactPhoneNumber:phoneNumber,contact:contact};call.setCurrentCalled(currentCalled),"delivered"===actionElemName&&call.status===_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.RINGING_INCOMMING?$interval((function(){that.sendCallUpdateEvent(call)}),300,1):that.sendCallUpdateEvent(call)},TelephonyServiceEventHandler}])},function(module,exports,__webpack_require__){"use strict";var __awaiter=this&&this.__awaiter||function(thisArg,_arguments,P,generator){return new(P||(P=Promise))((function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){var value;result.done?resolve(result.value):(value=result.value,value instanceof P?value:new P((function(resolve){resolve(value)}))).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())}))};Object.defineProperty(exports,"__esModule",{value:!0});class DirectoryService{constructor($rootScope,$log,$http,$injector,contactService,authService,orderByFilter,conversationService,errorHelperService,profileService,utilService){this.$rootScope=$rootScope,this.$log=$log,this.$http=$http,this.$injector=$injector,this.contactService=contactService,this.authService=authService,this.orderByFilter=orderByFilter,this.conversationService=conversationService,this.errorHelperService=errorHelperService,this.profileService=profileService,this.utilService=utilService,this.started=!1,this.centralizedService=null}start(stats){return __awaiter(this,void 0,void 0,(function*(){this.$log.info("[DirectoryService] === STARTING ===");let startDate=performance.now();try{this.centralizedService=this.$injector.get("centralizedService")}catch(error){}let startDuration=Math.round(performance.now()-startDate);stats.push({service:"directoryService",startDuration:startDuration}),this.started=!0,this.$log.info("[DirectoryService] === STARTED ("+startDuration+" ms) ===")}))}stop(){return __awaiter(this,void 0,void 0,(function*(){this.$log.info("[DirectoryService] Stopping"),this.started=!1,this.$log.info("[DirectoryService] Stopped")}))}search(searchText,addRosters=!1,limit=20,companyId="",excludeCompanyId=null){return __awaiter(this,void 0,void 0,(function*(){this.$log.info("[DirectoryService] searchContact with text "+this.utilService.anonymizeString(searchText));let searchType=this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.SEARCH_BY_TAGS)?"search=":"displayName=",serverUrl=config.restServerUrl+"/api/rainbow/search/v1.0/users?limit="+limit+"&"+searchType+encodeURIComponent(searchText);companyId&&(serverUrl+="&companyId="+encodeURIComponent(companyId)),excludeCompanyId&&(serverUrl+="&excludeCompanyId="+encodeURIComponent(excludeCompanyId));try{const contactsData=(yield this.$http({method:"GET",url:serverUrl,headers:this.authService.getRequestHeader()})).data.data;this.$log.info("[DirectoryService] search find "+contactsData.length+" contact(s)");let contacts=[];if(contactsData.forEach(contactData=>{if(this.contactService.isUserContactJid(contactData.jid_im))return;let contact=this.contactService.getContactByJid(contactData.jid_im);contact||((contact=this.contactService.createBasicContact(contactData.jid_im)).updateFromUserData(contactData),contact.getAvatar(),this.contactService.dbContacts[contactData.id]=contact,this.contactService.jtelContacts[contact.jidtel]=contact),contact.tags=contactData.tags,contact.dbId=contactData.id,contact.updateRichStatus(),this.conversationService.computeCapabilitiesForContact(contact,!1),contacts.push(contact)}),addRosters){let rosterContacts=this.contactService.searchContacts(searchText);contacts=contacts.concat(rosterContacts.filter(item=>item.roster&&contacts.indexOf(item)<0))}return contacts=this.orderByFilter(contacts,"_displayName",!1)}catch(error){let e=error;throw error&&error.data&&(e=this.errorHelperService.handleError(error),this.$log.error("[DirectoryService] search - "+e.message),401===error.data.errorCode&&this.$rootScope.$broadcast("ON_SESSION_EXPIRED_NOTIFICATION_EVENT")),e}}))}searchUserByLogin(loginEmail){return __awaiter(this,void 0,void 0,(function*(){this.$log.info('[DirectoryService] searchUserByLogin with "'+loginEmail+'"');const serverUrl=config.webservices.protocol+"://"+config.webservices.currentServer+":"+config.webservices.port+"/api/rainbow/enduser/v1.0/";try{const userArray=(yield this.$http({method:"POST",url:serverUrl+"users/loginEmails",headers:this.authService.getPostHeader(),data:{loginEmail:[loginEmail]}})).data.data;if(1===userArray.length){let contact=yield this.contactService.getOrCreateContact(userArray[0].jid_im);return contact.loginEmail=loginEmail,contact}}catch(error){let e=error;throw error&&error.data&&(e=this.errorHelperService.handleError(error),this.$log.error("[DirectoryService] searchUserByLogin - "+e.message),401===error.data.errorCode&&this.$rootScope.$broadcast("ON_SESSION_EXPIRED_NOTIFICATION_EVENT")),e}}))}searchUserByJid(jid){return __awaiter(this,void 0,void 0,(function*(){this.$log.info('[DirectoryService] searchUserByJid with "'+jid+'"');const serverUrl=config.webservices.protocol+"://"+config.webservices.currentServer+":"+config.webservices.port+"/api/rainbow/enduser/v1.0/users/jids/";try{const user=(yield this.$http({method:"GET",url:serverUrl+encodeURIComponent(jid),headers:this.authService.getRequestHeader()})).data;if(user){let contact=yield this.contactService.getOrCreateContact(jid);return contact.updateFromUserData(user.data),contact}}catch(error){let e=error;throw error&&error.data&&(e=this.errorHelperService.handleError(error),this.$log.error("[DirectoryService] searchUserByJid - "+e.message),401===error.data.errorCode&&this.$rootScope.$broadcast("ON_SESSION_EXPIRED_NOTIFICATION_EVENT")),e}}))}searchAllContacts(searchText,limit=20,companyId="",addRosters=!0,addOutlook=!0){return __awaiter(this,void 0,void 0,(function*(){this.$log.info("[DirectoryService] searchAllContacts with text "+searchText);try{let contacts=[];addRosters&&(contacts=this.contactService.searchContacts(searchText));const rainbowContacts=yield this.search(searchText,!1,limit,companyId);if(contacts=contacts.concat(rainbowContacts.filter(item=>!item.roster||contacts.indexOf(item)<0)),addOutlook&&this.centralizedService){const[outlookContactsByEmail,outlookContactsByName]=yield Promise.all([this.searchOutlookUsersByEmail(searchText),this.searchOutlookUsersByName(searchText)]),outlookResults=this.centralizedService.outlook.mergeOutlookContact(outlookContactsByEmail,outlookContactsByName);contacts=contacts.concat(outlookResults)}return contacts}catch(error){throw this.$log.error("[DirectoryService] searchAllContacts - Unable to search all contacts"),error}}))}searchOutlookUsersByName(searchPattern){return __awaiter(this,void 0,void 0,(function*(){if(this.centralizedService)try{return yield this.centralizedService.outlook.searchByNameWithAvatar(searchPattern,2)}catch(_a){return this.$log.warn("[DirectoryService] searchOutlookUsersByName - Outlook service unavailable"),[]}}))}searchOutlookUsersByEmail(searchPattern){return __awaiter(this,void 0,void 0,(function*(){if(this.centralizedService&&this.centralizedService.outlook)try{return yield this.centralizedService.outlook.searchByEmailWithAvatar(searchPattern,2)}catch(_a){return this.$log.warn("[DirectoryService] searchOutlookUsersByEmail - Outlook service unavailable"),[]}}))}}exports.DirectoryService=DirectoryService,DirectoryService.$inject=["$rootScope","$log","$http","$injector","contactService","authService","orderByFilter","conversationService","errorHelperService","profileService","utilService"],angular.module("rainbow").service("directoryService",DirectoryService)},function(module,exports){angular.module("rainbow").service("invitationService",["$q","$log","$http","$rootScope","authService","Invitation","contactService","xmppService","errorHelperService","settingsService",function($q,$log,$http,$rootScope,authService,Invitation,contactService,xmppService,errorHelperService,settingsService){"use strict";var service=this;service.start=function(stats){$log.info(""),$log.info("[invitationService] === STARTING ===");var startDate=performance.now();service.receivedInvitations={},service.sentInvitations={},service.acceptedInvitationsArray=[],service.sentInvitationsArray=[],service.receivedInvitationsArray=[],service.listeners=[],service.portalURL=config.restServerUrl+"/api/rainbow/enduser/v1.0/users/",service.attachHandlers(),service.getAllSentInvitations(),service.getAllReceivedInvitations();var startDuration=Math.round(performance.now()-startDate);return stats.push({service:"invitationService",startDuration:startDuration}),$log.info("[invitationService] === STARTED ("+startDuration+" ms) ==="),service.listeners.push($rootScope.$on("ON_ROSTER_CHANGED_EVENT",service.getAllSentInvitations)),$q.when()},service.stop=function(){var listener;if($log.info(""),$log.info("[invitationService] === STOPPING ==="),service.listeners)for(;listener=service.listeners.pop();)listener();return $log.info("[invitationService] === STOPPED ==="),$q.when()},service.attachHandlers=function(){$log.info("[invitationService] attachHandlers"),service.contactConfigRef&&(xmppService.connection.deleteHandler(service.contactConfigRef),service.contactConfigRef=null),service.contactConfigRef=xmppService.connection.addHandler(service.onInvitationsUpdate,null,"message","management")},service.onInvitationsUpdate=function(stanza){var userInviteElem=$(stanza).find("userinvite");if(userInviteElem.length){var id=userInviteElem.attr("id"),type=userInviteElem.attr("type"),action=userInviteElem.attr("action");switch(type){case"received":service.handleReceivedInvitation(id,action);break;case"sent":service.handleSentInvitation(id,action);break;default:$log.warn("[invitationService] onInvitationsUpdate - received unexpected type - "+type)}}return!0},service.handleReceivedInvitation=function(id,action){$log.info("[invitationService] handleReceivedInvitation"),"delete"===action?(delete service.receivedInvitations[id],service.updateReceivedInvitationsArray()):service.getServerInvitation(id).then((function(invitation){var updateInvitation=null,status="none";switch(invitation.status){case"pending":service.receivedInvitations[invitation.id]=invitation,updateInvitation=invitation,status="ask";break;case"accepted":case"auto-accepted":service.receivedInvitations[invitation.id]=invitation,$rootScope.$broadcast("ON_INVITATION_ACCEPTED",invitation.invitingUserId),invitation.invitingUserId&&contactService.getContactByDBId(invitation.invitingUserId,!0).then((function(contact){$rootScope.$broadcast("ON_CONTACT_UPDATED_EVENT",contact)}));break;default:delete service.receivedInvitations[invitation.id],status="unknown"}invitation.invitingUserId?service.updateContactInvitationStatus(invitation.invitingUserId,status,updateInvitation).then((function(){service.updateReceivedInvitationsArray()})):service.updateReceivedInvitationsArray(),$rootScope.$broadcast("ON_INVITATION_CHANGED",invitation)}))},service.handleSentInvitation=function(id,action){return $q((function(resolve){$log.info("[invitationService] handleSentInvitation"),"delete"===action?(delete service.sentInvitations[id],service.updateReceivedInvitationsArray(),resolve()):(service.getServerInvitation(id).then((function(invitation){var contactStatus=null;switch(invitation.status){case"pending":service.sentInvitations[invitation.id]=invitation,contactStatus="wait";break;case"accepted":case"auto-accepted":$rootScope.$broadcast("ON_INVITATION_ACCEPTED",invitation.invitedUserId),invitation.invitedUserId&&contactService.getContactByDBId(invitation.invitedUserId,!0).then((function(contact){$rootScope.$broadcast("ON_CONTACT_UPDATED_EVENT",contact)}));break;default:delete service.sentInvitations[invitation.id],contactStatus="unknown"}invitation.invitedUserId?service.updateContactInvitationStatus(invitation.invitedUserId,contactStatus,invitation).then((function(){service.updateSentInvitationsArray(),resolve()})):(service.updateSentInvitationsArray(),resolve())})),"resend"===action&&$rootScope.$broadcast("ON_INVITATIONS_RE_SEND",id))}))},service.updateReceivedInvitationsArray=function(){for(var key in service.receivedInvitationsArray=[],service.acceptedInvitationsArray=[],service.receivedInvitations)if(service.receivedInvitations.hasOwnProperty(key)){var invitation=service.receivedInvitations[key];switch(invitation.status){case"pending":service.receivedInvitationsArray.push(invitation);break;case"accepted":case"auto-accepted":service.acceptedInvitationsArray.push(invitation)}}service.receivedInvitationsArray.sort(service.sortInvitationArray),service.acceptedInvitationsArray=service.acceptedInvitationsArray.filter((function(acceptedInvitation){var lastInvite=moment(acceptedInvitation.lastNotificationDate);return moment.duration(moment().diff(lastInvite)).asHours()<168})),service.acceptedInvitationsArray.sort(service.sortInvitationArray),$rootScope.$broadcast("ON_INVITATIONS_NUMBER_UPDATED")},service.updateSentInvitationsArray=function(){for(var key in service.sentInvitationsArray=[],service.sentInvitations)service.sentInvitations.hasOwnProperty(key)&&service.sentInvitationsArray.push(service.sentInvitations[key]);service.sentInvitationsArray.sort(service.sortInvitationArray),$rootScope.$broadcast("ON_INVITATIONS_NUMBER_UPDATED")},service.getServerInvitation=function(invitationId){return $q((function(resolve,reject){$http({method:"GET",url:service.portalURL+contactService.userContact.dbId+"/invitations/"+invitationId,headers:authService.getRequestHeader()}).then((function(response){$log.info("[invitationService] getServerInvitation success");var receivedInvitation=Invitation.createFromData(response.data.data);resolve(receivedInvitation)}),(function(response){var error=errorHelperService.handleError(response);reject(error),$log.error("[invitationService] "+errorHelperService.getErrorFullMessage(response,"getServerInvitation"))}))}))},service.getReceivedInvitations=function(){return service.receivedInvitationsArray},service.getAcceptedInvitations=function(){return service.acceptedInvitationsArray},service.getSentInvitations=function(){return service.sentInvitationsArray},service.getInvitationsNumberForCounter=function(){return service.receivedInvitationsArray.length},service.getAllInvitationsNumber=function(){return service.receivedInvitationsArray.length+service.sentInvitationsArray.length+service.acceptedInvitationsArray.length},service.getInvitation=function(invitationId){var invitationFound=service.receivedInvitations[invitationId];return invitationFound||(invitationFound=service.acceptedInvitationsArray[invitationId]),invitationFound||(invitationFound=service.sentInvitations[invitationId]),invitationFound},service.joinContactInvitation=function(contact,customMessage){return $q((function(resolve,reject){$log.info("[invitationService] joinContactInvitation contact ("+contact.jid+")"),customMessage=customMessage||"",$http({method:"POST",url:service.portalURL+contactService.userContact.dbId+"/invitations",headers:authService.getRequestHeader(),data:{invitedUserId:contact.dbId,customMessage:customMessage}}).then((function(){$log.info("[invitationService] joinContactInvitation - success ("+contact.jid+")"),"unknown"===contact.status&&service.updateContactInvitationStatus(contact.dbId,"wait"),resolve()}),(function(response){var error=errorHelperService.handleError(response);reject(error),$log.error("[invitationService] "+errorHelperService.getErrorFullMessage(response,"joinContactInvitation"))}))}))},service.sendInvitationByEmail=function(email,customMessage){return $q((function(resolve,reject){var lang=settingsService.getAppliLanguageCodeForServer();$log.info("[invitationService] sendInvitationByEmail"),$http({method:"POST",url:service.portalURL+contactService.userContact.dbId+"/invitations",headers:authService.getRequestHeader(),data:{email:email,lang:lang,customMessage:customMessage}}).then((function(){$log.info("[invitationService] sendInvitationByEmail - success"),resolve()}),(function(response){var error=errorHelperService.handleError(response);reject(error),$log.error("[invitationService] "+errorHelperService.getErrorFullMessage(response,"sendInvitationByEmail"))}))}))},service.cancelOneSendInvitation=function(invitation){return $q((function(resolve,reject){$http({method:"POST",url:service.portalURL+invitation.invitingUserId+"/invitations/"+invitation.id+"/cancel",headers:authService.getRequestHeader()}).then((function(){$log.info("[invitationService] cancelOneSendInvitation success"),resolve()}),(function(response){var error=errorHelperService.handleError(response);reject(error),$log.error("[invitationService] "+errorHelperService.getErrorFullMessage(response,"cancelOneSendInvitation"))}))}))},service.reSendInvitation=function(invitationId){return $q((function(resolve,reject){$http({method:"POST",url:config.restServerUrl+"/api/rainbow/enduser/v1.0/users/"+contactService.userContact.dbId+"/invitations/"+invitationId+"/re-send",headers:authService.getRequestHeader()}).then((function(){$log.info("[invitationService] reSendInvitation "+invitationId+" - success"),resolve()}),(function(response){var error=errorHelperService.handleError(response);reject(error),$log.error("[invitationService] "+errorHelperService.getErrorFullMessage(response,"reSendInvitation"))}))}))},service.sendInvitationsParBulk=function(listOfMails){return!listOfMails.length||listOfMails.length>100?($log.error("[invitationService] sendInvitationsParBulk mail list length not correct"),$q.reject()):$q((function(resolve,reject){$http({method:"POST",url:config.restServerUrl+"/api/rainbow/enduser/v1.0/users/"+contactService.userContact.dbId+"/invitations/bulk",headers:authService.getRequestHeader(),data:{emails:listOfMails}}).then((function(){$log.info("[invitationService] sendInvitationsParBulk - success"),resolve()}),(function(response){var error=errorHelperService.handleError(response);reject(error),$log.error("[invitationService] "+errorHelperService.getErrorFullMessage(response,"sendInvitationsParBulk"))}))}))},service.acceptInvitation=function(invitation){return $q((function(resolve,reject){$http({method:"POST",url:service.portalURL+invitation.invitedUserId+"/invitations/"+invitation.id+"/accept",headers:authService.getRequestHeader()}).then((function(){$log.info("[invitationService] acceptInvitation success"),resolve()}),(function(response){var error=errorHelperService.handleError(response);error.errorDetailsCode&&409605===error.errorDetailsCode?contactService.getContactByDBId(invitation.invitingUserId,!0).then((function(contact){$rootScope.$broadcast("ON_CONTACT_UPDATED_EVENT",contact)})):(reject(error),$log.error("[invitationService] "+errorHelperService.getErrorFullMessage(response,"acceptInvitation")))}))}))},service.declineInvitation=function(invitation){return $q((function(resolve,reject){$http({method:"POST",url:service.portalURL+invitation.invitedUserId+"/invitations/"+invitation.id+"/decline",headers:authService.getRequestHeader()}).then((function(){$log.info("[invitationService] declineInvitation success"),resolve()}),(function(response){var error=errorHelperService.handleError(response);reject(error),$log.error("[invitationService] "+errorHelperService.getErrorFullMessage(response,"declineInvitation"))}))}))},service.updateContactInvitationStatus=function(contactDBId,status,invitation){return $q((function(resolve){contactService.getContactByDBId(contactDBId).then((function(contact){switch(status){case"ask":contact.status="unknown",contact.ask="ask",contact.invitation=invitation;break;case"wait":contact.status="wait",contact.ask="subscribe",contact.invitation=invitation;break;default:contact.ask="none",contact.invitation=null}contact.updateRichStatus(),resolve()}))}))},service.sortInvitationArray=function(invitA,invitB){return new Date(invitB.lastNotificationDate)-new Date(invitA.lastNotificationDate)},service.getAllReceivedInvitations=function(){return $q((function(resolve,reject){$http({method:"GET",url:service.portalURL+contactService.userContact.dbId+"/invitations/received?format=full&status=pending&status=accepted&status=auto-accepted&limit=500",headers:authService.getRequestHeader()}).then((function(response){var invitationsData=response.data.data;$log.info("[invitationService] getAllReceivedInvitations success (find "+invitationsData.length+" invitations)"),service.receivedInvitations={},service.acceptedInvitations={},invitationsData.forEach((function(invitationData){if("pending"===invitationData.status&&"registration"!==invitationData.type){var invitation=Invitation.createFromData(invitationData);service.receivedInvitations[invitationData.id]=invitation,invitationData.invitingUserId&&service.updateContactInvitationStatus(invitationData.invitingUserId,"ask",invitation)}else"accepted"!==invitationData.status&&"auto-accepted"!==invitationData.status||(service.receivedInvitations[invitationData.id]=Invitation.createFromData(invitationData))})),service.updateReceivedInvitationsArray(),resolve(service.receivedInvitations)}),(function(response){var error=errorHelperService.handleError(response);reject(error),$log.error("[invitationService] "+errorHelperService.getErrorFullMessage(response,"getAllReceivedInvitations"))}))}))},service.getAllSentInvitations=function(){return $q((function(resolve,reject){$http({method:"GET",url:service.portalURL+contactService.userContact.dbId+"/invitations/sent?format=full&status=pending&limit=500",headers:authService.getRequestHeader()}).then((function(response){var invitationsData=response.data.data;$log.info("[invitationService] getAllSentInvitations success (find "+invitationsData.length+" invitations)"),service.sentInvitations={},invitationsData.forEach((function(invitationData){if("pending"===invitationData.status&&!invitationData.inviteToJoinMeeting){var sentInvitation=Invitation.createFromData(invitationData);service.sentInvitations[invitationData.id]=sentInvitation,void 0!==sentInvitation.invitedUserId&&service.updateContactInvitationStatus(sentInvitation.invitedUserId,"wait",sentInvitation)}})),service.updateSentInvitationsArray(),resolve(service.sentInvitations)}),(function(response){var error=errorHelperService.handleError(response);reject(error),$log.error("[invitationService] "+errorHelperService.getErrorFullMessage(response,"getAllSentInvitations"))}))}))}}])},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var crypto_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(2);angular.module("rainbow").service("roomService",["$q","$log","$rootScope","$http","$filter","$interval","authService","contactService","fileStorageService","xmppService","Room","utilService","profileService","errorHelperService","helpersService","orderByFilter","$translate","settingsService",function($q,$log,$rootScope,$http,$filter,$interval,authService,contactService,fileStorageService,xmppService,Room,utilService,profileService,errorHelperService,helpersService,orderByFilter,$translate,settingsService){var service=this;service.ROOM_UPDATE_EVENT="ROOM_UPDATE_EVENT",service.ROOM_AVATAR_UPDATE_EVENT="ROOM_AVATAR_UPDATE_EVENT",service.ROOM_HISTORY_UPDATE_EVENT="ROOM_HISTORY_UPDATE_EVENT",service.ROOM_ADMIN_MESSAGE_EVENT="ROOM_ADMIN_MESSAGE_EVENT",service.ROOM_INVITATION="ROOM_INVITATION",service.ROOM_ADD_CONF_ENDPOINT_EVENT="ROOM_ADD_CONF_ENDPOINT_EVENT",service.ROOM_REMOVE_CONF_ENDPOINT_EVENT="ROOM_REMOVE_CONF_ENDPOINT_EVENT",service.ROOM_ADD_USERS_EVENT="ROOM_ADD_USERS_EVENT",service.ROOM_DELETE_USERS_EVENT="ROOM_DELETE_USERS_EVENT",service.RoomUserStatus={INVITED:"invited",ACCEPTED:"accepted",UNSUBSCRIBED:"unsubscribed",REJECTED:"rejected",DELETED:"deleted"},service.listeners=[],service.start=function(stats){return $q((function(resolve){var startDate=performance.now();$log.info(""),$log.info("[roomService] === STARTING ==="),service.portalURL=config.restServerUrl+"/api/rainbow/enduser/v1.0/",service.invitationCounter=0,service.meetingInvitationCounter=0,service.rooms={},service.roomsByJids={},service.roomsInProgress={},service.contactsInProgress={},service.updateLater={},service.maxRoomsUsers=profileService.getFeatureLimitMax(profileService.FeaturesEnum.BUBBLE_PARTICIPANT_COUNT),service.personalAudioRoomId="",service.currentPersonalAudioRoomId="",service.openInviteIdByRoomId={},service.attachHandlers(),service.getServerRooms().then((function(){service.computeInvitationCounter(),service.retrieveOpenInviteData(),service.retrievePersonalAudioRoom(),service.retrieveCurrentPersonalAudioRoom();var startDuration=Math.round(performance.now()-startDate);stats.push({service:"roomService",startDuration:startDuration}),$log.info("[roomService] === STARTED ("+startDuration+" ms) ==="),resolve()})).catch((function(error){$log.error("[roomService] === STARTING FAILURE === "+error.message),service.computeInvitationCounter(),service.reconnect(),resolve()}))}))},service.stop=function(){return $log.info(""),$log.info("[roomService] === STOPPING ==="),service.listeners.forEach((function(listener){listener()})),service.rooms={},service.roomsByJids={},$log.info("[roomService] === STOPPED ==="),$q.when()},service.attachHandlers=function(){$log.info("[roomService] attachHandlers"),this.roomPresenceRef&&(xmppService.connection.deleteHandler(this.roomPresenceRef),this.roomPresenceRef=null),this.roomPresenceRef=xmppService.connection.addHandler(service.onRoomPresence,"http://jabber.org/protocol/muc#user","presence"),this.roomMessageRef&&(xmppService.connection.deleteHandler(this.roomMessageRef),this.roomMessageRef=null),this.roomMessageRef=xmppService.connection.addHandler(service.onRoomMessage,"jabber:x:conference","message"),this.roomInfoMessageRef&&(xmppService.connection.deleteHandler(this.roomInfoMessageRef),this.roomInfoMessageRef=null),this.roomInfoMessageRef=xmppService.connection.addHandler(service.onRoomInfoMessage,null,"message","groupchat"),this.roomMessageConfigRef&&(xmppService.connection.deleteHandler(this.roomMessageConfigRef),this.roomMessageConfigRef=null),this.roomMessageConfigRef=xmppService.connection.addHandler(service.onRoomMessageConfig,null,"message","management"),this.roomHistoryInfoRef&&(xmppService.connection.deleteHandler(this.roomHistoryInfoRef),this.roomHistoryInfoRef=null),this.roomHistoryInfoRef=xmppService.connection.addHandler(service.onRoomHistoryInfoMessage,"jabber:iq:notification","message"),this.roomNotificationRef&&(xmppService.connection.deleteHandler(this.roomNotificationRef),this.roomNotificationRef=null),this.roomNotificationRef=xmppService.connection.addHandler(service.onRoomNotificationMessage,"jabber:x:bubble:conference","message"),service.listeners.forEach((function(listener){listener()})),service.listeners.push($rootScope.$on("ON_CONNECTION_STATE_CHANGE_EVENT",service.onConnectionStateChange))},service.reconnect=function(){$log.info("[roomService] reconnect"),service.attachHandlers(),service.getServerRooms().then((function(){service.computeInvitationCounter(),service.retrieveOpenInviteData(),$log.info("[roomService] reconnect success")})).catch((function(error){$log.error("[roomService] reconnect failure -- "+error.message)}))},service.onConnectionStateChange=function(__event,status){$log.info("[roomService] onConnectionStateChange status:"+status),"disconnected"===status&&service.rooms&&Object.keys(service.rooms).forEach((function(key){var room=service.rooms[key];room&&(room.initPresInterval&&($log.info("[roomService] onConnectionStateChange cancel initPresence retryer for room: "+room.jid+" "+room.getNameForLogs()),$interval.cancel(room.initPresInterval),room.initPresInterval=null),room.initPresPromise&&($log.info("[roomService] onConnectionStateChange remove initPresPromise for room: "+room.jid+" "+room.getNameForLogs()),room.initPresPromise=null))}))},service.getRooms=function(){var roomArray=[];return Object.keys(service.rooms).forEach((function(key){roomArray.push(service.rooms[key])})),roomArray},service.searchRooms=function(criteria){var queries=criteria.toLowerCase().trim().normalize("NFD").replace(/[\u0300-\u036f]/g,"").split(/[ ]+/);return service.getRooms().filter((function(room){if("accepted"!==room.status)return!1;room.filterName=room.name.toLowerCase().trim().normalize("NFD").replace(/[\u0300-\u036f]/g,"");var names=room.filterName.split(/[ -]+/);return queries.every((function(query){return names.some((function(name,index){return!(!name.length||-1===name.indexOf(query))&&(names[index]="",!0)}))}))}))},service.getMyRooms=function(){return service.getRooms().filter((function(room){return room.owner}))},service.getRoomById=function(roomId){return service.rooms[roomId]},service.getRoomByJid=function(jid){return service.roomsByJids[jid]},service.computeInvitationCounter=function(){service.invitationCounter=0,service.meetingInvitationCounter=0,Object.keys(service.rooms).forEach((function(key){var room=service.rooms[key];"invited"===room.status&&(room.isMeetingRoom()?service.meetingInvitationCounter+=1:service.invitationCounter+=1)}))},service.getOrderedRooms=function(order){return"lastActivityDate"===order?orderByFilter(service.getRooms(),service.getLastActivityDate,!0,service.sortByDate):"creationDate"===order?orderByFilter(service.getRooms(),service.getCreationDate,!0,service.sortByDate):orderByFilter(service.getRooms(),service.getName,!1,service.sortByName)},service.getMyOrderedRooms=function(order){return"lastActivityDate"===order?orderByFilter(service.getMyRooms(),service.getLastActivityDate,!0,service.sortByDate):"creationDate"===order?orderByFilter(service.getMyRooms(),service.getCreationDate,!0,service.sortByDate):orderByFilter(service.getMyRooms(),service.getName,!1,service.sortByName)},service.updateRoomFromServer=function(room){$log.info("updateRoomFromServer(".concat(room.dbId,")"));var defer=$q.defer();return $http({method:"GET",url:service.portalURL+"rooms/"+room.dbId+"?format=full",headers:authService.getRequestHeader()}).then((function(response){var roomData=response.data.data;return service.getAllRoomsParticipants([roomData])})).then((function(){service.updateRoomData(room,roomData),defer.resolve()})).catch((function(error){$log.error("updateRoomFromServer -- FAILURE -- ".concat(error.message)),defer.reject(error)})),defer.promise},service.updateRoomData=function(room,newRoomData){if(room.name=newRoomData.name,room.desc=newRoomData.topic,room.users=[],newRoomData.users.forEach((function(userData){var contact=contactService.getContactById(userData.userId);contact&&(room.users.push({contact:contact,status:userData.status,date:new Date(userData.additionDate),privilege:userData.privilege}),contactService.isUserContact(contact)&&(room.status=userData.status))})),service.refreshMemberAndOrganizerLists(room),room.isModerator=room.status!==service.RoomUserStatus.UNSUBSCRIBED&&room.isUserModerator(contactService.userContact),newRoomData.lastAvatarUpdateDate&&newRoomData.lastAvatarUpdateDate!==room.lastAvatarUpdate){room.lastAvatarUpdate=newRoomData.lastAvatarUpdateDate;var avatarServerUrl=$rootScope.cdn?$rootScope.cdnServer:config.restServerUrl,updateToken=Object(crypto_js__WEBPACK_IMPORTED_MODULE_0__.MD5)(crypto_js__WEBPACK_IMPORTED_MODULE_0__.enc.Latin1.parse(room.lastAvatarUpdate)).toString(crypto_js__WEBPACK_IMPORTED_MODULE_0__.enc.Hex);room.avatar="".concat(avatarServerUrl,"/api/room-avatar/").concat(room.dbId,"?size=512&update=").concat(updateToken)}room.updateAvatarInfo(),room.guestEmails=newRoomData.guestEmails,room.confEndpoints=newRoomData.confEndpoints},service.getServerRoom=function(roomId){return $q((function(resolve,reject){$log.info("[roomService] getServerRoom("+roomId+")"),$http({method:"GET",url:service.portalURL+"rooms/"+roomId+"?format=full",headers:authService.getRequestHeader()}).then((function(response){var roomData=response.data.data;return $log.info("[roomService] getServerRoom("+roomId+") successfully"),service.getAllRoomsParticipants([roomData])})).then((function(roomsData){var room=service.createRoomFromData(roomsData[0]);resolve(room)}),(function(response){var msg=response.data?response.data.errorDetails:response.data,errorMessage="getServerRoom("+roomId+") failure: "+msg;$log.error("[roomService] "+errorMessage),reject(new Error(errorMessage))}))}))},service.getServerRoomByJid=function(roomJid){return $q((function(resolve,reject){$log.info("[roomService] getServerRoomByJid("+roomJid+")"),$http({method:"GET",url:service.portalURL+"rooms/jids/"+roomJid+"?format=full",headers:authService.getRequestHeader()}).then((function(response){var roomData=response.data.data;return $log.info("[roomService] getServerRoomByJid("+roomJid+") successfully"),service.getAllRoomsParticipants([roomData])})).then((function(roomsData){var room=service.createRoomFromData(roomsData[0]);resolve(room)}),(function(response){var msg=response.data?response.data.errorDetails:response.data,errorMessage="getServerRoomByJid("+roomJid+") failure: "+msg;$log.error("[roomService] "+errorMessage),reject(new Error(errorMessage))}))}))},service.getServerRooms=function(){var getAllRooms=function getAllRooms(page,limit,rooms){return $q((function(resolve,reject){(function(page,max,rooms){return $q((function(resolve,reject){$http({method:"GET",headers:authService.getRequestHeader(),url:service.portalURL+"rooms?format=full&userId="+contactService.userContact.dbId+"&status=invited&status=accepted&status=unsubscribed&offset="+page+"&limit="+max}).then((function(response){rooms=rooms.concat(response.data.data),$log.info("[roomService] getServerRooms retrieved "+response.data.data.length+" rooms, total "+rooms.length+", existing "+response.data.total),resolve({rooms:rooms,finished:rooms.length===response.data.total})})).catch((function(err){reject(err)}))}))})(page,limit,rooms).then((function(response){response.finished?($log.info("[roomService] getServerRooms no need to loop again. All rooms retrieved..."),resolve(response.rooms)):(page+=limit,$log.info("[roomService] getServerRooms need another loop to get more rooms... ["+response.rooms.length+"]"),getAllRooms(page,limit,response.rooms).then((function(_rooms){resolve(_rooms)})).catch((function(err){reject(err)})))})).catch((function(err){reject(err)}))}))};return $q((function(resolve,reject){getAllRooms(0,1e3,[]).then((function(response){var roomsData=response;return $log.info("[roomService] getServerRooms successfully: find "+roomsData.length+" room(s)"),service.getAllRoomsParticipants(roomsData)})).then((function(roomsData){roomsData.forEach((function(roomData){service.createRoomFromData(roomData)})),resolve()})).catch((function(response){var errorMessage="getServerRooms failure: "+(response.data?response.data.errorDetails:response.message);$log.error("[roomService] "+errorMessage),reject(new Error(errorMessage))}))}))},service.getAllRoomsParticipants=function(roomsData){var defered=$q.defer(),getAllUsers=function getAllUsers(roomData,page,limit,users){return $q((function(resolve,reject){(function(roomData,page,max,users){return $q((function(resolve,reject){$http({method:"GET",headers:authService.getRequestHeader(),url:service.portalURL+"rooms/"+roomData.id+"/users?format=full&offset="+page+"&limit="+max}).then((function(response){users=users.concat(response.data.data),$log.info("[roomService] getAllRoomsParticipants retrieved "+response.data.data.length+" users, total "+users.length+", existing "+response.data.total),resolve({users:users,finished:users.length===response.data.total})})).catch((function(err){reject(err)}))}))})(roomData,page,limit,users).then((function(response){response.finished?($log.info("[roomService] getAllRoomsParticipants no need to loop again. All users retrieved..."),resolve(response.users)):(page+=limit,$log.info("[roomService] getAllRoomsParticipants need another loop to get more users... ["+response.users.length+"]"),getAllUsers(roomData,page,limit,response.users).then((function(_users){resolve(_users)})).catch((function(err){reject(err)})))})).catch((function(err){reject(err)}))}))},startDate=performance.now(),participantsJids={},roomDataPromises=[];return roomsData.forEach((function(roomData){var myProm=$q.defer();if(roomDataPromises.push(myProm.promise),roomData.activeUsersCounter&&roomData.users.length<roomData.activeUsersCounter){getAllUsers(roomData,0,100,[]).then((function(usr){roomData.users=usr,roomData.users.forEach((function(userData){var contact=contactService.getContactByJid(userData.jid_im);participantsJids[userData.jid_im]||contact&&!contact.temp||(participantsJids[userData.jid_im]=userData.jid_im)})),myProm.resolve(roomData)})).catch((function(err){myProm.reject(err)}))}else roomData.users.forEach((function(userData){var contact=contactService.getContactByJid(userData.jid_im);participantsJids[userData.jid_im]||contact&&!contact.temp||(participantsJids[userData.jid_im]=userData.jid_im)})),myProm.resolve(roomData)})),$q.all(roomDataPromises).then((function(){var participantsJidsArray=Object.keys(participantsJids);return participantsJidsArray.length?contactService.getContactsByJids(participantsJidsArray).then((function(){var endDate=performance.now();$log.info("[roomService] getAllRoomsParticipants - get "+participantsJidsArray.length+" participants in "+Math.round(endDate-startDate)+" milliseconds."),defered.resolve(roomsData)})):($log.info("[roomService] getAllRoomsParticipants - nothing to get, all known."),void defered.resolve(roomsData))})).catch((function(error){var errorMessage="getAllRoomsParticipants failure: "+error.message;$log.error("[roomService] "+errorMessage),defered.reject(error)})),defered.promise},service.createRoomFromData=function(roomData){var room=Room.create(roomData.id,roomData.jid,roomData.name,roomData.topic,roomData.creationDate,roomData.confEndpoints,roomData.history,roomData.customData,roomData.conference,roomData.avatar,roomData.isActive,roomData.lastActivityDate,roomData.autoRegister),owner=contactService.dbContacts[roomData.creator];if(!owner)return $log.error("[roomService] createRoomFromData -- failure -- Impossible to find owner of room "+roomData.name+" --- ignored"),room;room.ownerContact=owner,room.owner=owner.jid===contactService.userContact.jid,roomData.users.forEach((function(userData){var contact=contactService.getContactById(userData.userId);contact&&(room.users.push({contact:contact,status:userData.status,date:new Date(userData.additionDate),privilege:userData.privilege}),contactService.isUserContact(contact)&&(room.status=userData.status))})),room.guestEmails=roomData.guestEmails,service.refreshMemberAndOrganizerLists(room);var ownUser=room.getUserByJid(contactService.userContact.jid);if(room.isModerator=ownUser&&ownUser.status!==service.RoomUserStatus.UNSUBSCRIBED&&room.isUserModerator(contactService.userContact),service.rooms[room.dbId]&&service.rooms[room.dbId].initPresPromise&&(room.initPresPromise=service.rooms[room.dbId].initPresPromise,room.initPresInterval=service.rooms[room.dbId].initPresInterval),room.updateAvatarInfo(),roomData.lastAvatarUpdateDate){var url=config.restServerUrl;$rootScope.cdn&&(url=$rootScope.cdnServer),room.avatar=url+"/api/room-avatar/"+roomData.id+"?size=512&update="+Object(crypto_js__WEBPACK_IMPORTED_MODULE_0__.MD5)(crypto_js__WEBPACK_IMPORTED_MODULE_0__.enc.Latin1.parse(roomData.lastAvatarUpdateDate)).toString(crypto_js__WEBPACK_IMPORTED_MODULE_0__.enc.Hex)}return service.rooms[room.dbId]=room,service.roomsByJids[room.jid]=room,$rootScope.$broadcast(service.ROOM_UPDATE_EVENT,room),"accepted"===room.status&&room.isActive&&service.sendInitialRoomPresenceSync(room),room},service.refreshMemberAndOrganizerLists=function(room){room.organizers=[],room.members=[],room.users.forEach((function(user){user.status!==service.RoomUserStatus.ACCEPTED&&user.status!==service.RoomUserStatus.INVITED&&user.contact.jid!==room.ownerContact.jid||(user.privilege===Room.Privilege.MODERATOR?room.organizers.push(user):room.members.push(user))}))},service.equalContactsArrayByDbId=function(contactsA,contactsB){if(contactsA===contactsB)return!0;if(null===contactsA||null===contactsB)return!1;if(contactsA.length!==contactsB.length)return!1;for(var i=0;i<contactsA.length;++i)if(contactsA[i].dbId!==contactsB[i].dbId)return!1;return!0},service.getOrCreateRoomWithContacts=function(newContacts,newEmails){return $q((function(resolve){var foundRoom=null,participants=[].concat([contactService.userContact],newContacts).sort(service.sortObjectByProperty("dbId"));if(service.getMyRooms().some((function(room){return!(!room||room.status!==service.RoomUserStatus.ACCEPTED||!service.equalContactsArrayByDbId(room.users.map((function(user){return user.contact})).sort(service.sortObjectByProperty("dbId")),participants))&&(foundRoom=room,$log.debug("[roomService] getOrCreateRoomWithContacts - Found Room "+room.getNameForLogs()),!0)})),foundRoom)newEmails.length?service.addRoomUsers(foundRoom,null,newEmails).then((function(){resolve(foundRoom)})):resolve(foundRoom);else{for(var roomNameRoot=contactService.userContact.initials+" "+$filter("translate")("bubble")+" ",escalatedRooms=service.getMyRooms().filter((function(room){return room&&0===room.name.indexOf(roomNameRoot)})),compareRoom=function(room){return room&&room.name===tempRoomName},roomName=null,index=1;!roomName;){var tempRoomName=roomNameRoot+index.toString();escalatedRooms.sort(service.sortObjectByProperty("name")).some(compareRoom)||(roomName=tempRoomName),index++}service.createRoomWithContacts(roomName,"",newContacts,newEmails).then((function(room){resolve(room)}))}}))},service.createRoomWithContacts=function(roomName,topic,contacts,emails){return $q((function(resolve,reject){service.createRoom(roomName,topic,!0,null,!0,null,!0).then((function(room){return service.addRoomUsers(room,contacts,emails)})).then((function(room){resolve(room)})).catch((function(error){var errorMessage="createRoomWithContacts failure: "+error.message;$log.error("[roomService] "+errorMessage),reject(new Error(errorMessage))}))}))},service.setAvatarRoom=function(roomData,roomAvatar){var defered=$q.defer();return roomAvatar?(service.resizeImage(roomAvatar,512,512).then((function(resizedImage){var binaryData=service.getBinaryData(resizedImage);$http({method:"POST",url:service.portalURL+"rooms/"+roomData.id+"/avatar",headers:authService.getPostHeader("image/"+binaryData.type),data:binaryData.data,transformRequest:[]}).then((function(result){$log.info("[roomService] setAvatarRoom success: "+result.data.status);var url=config.restServerUrl;$rootScope.cdn&&(url=$rootScope.cdnServer),roomData.avatar=url+"/api/room-avatar/"+roomData.id+"?size=512&rand="+helpersService.randomString(),defered.resolve(roomData)}),(function(response){var error=errorHelperService.handleError(response);$log.error("[roomService] "+errorHelperService.getErrorFullMessage(response,"setAvatarRoom")),defered.reject(error)}))})),defered.promise):(defered.resolve(roomData),defered.promise)},service.deleteAvatarRoom=function(roomId){return $q((function(resolve,reject){$http({method:"DELETE",url:service.portalURL+"rooms/"+roomId+"/avatar",headers:authService.getRequestHeader()}).then((function(){$log.info("[roomService] avatar room sucessfully deleted"),resolve()})).catch((function(err){reject(err)}))}))},service.resizeImage=function(avatarImg,maxWidth,maxHeight){var defered=$q.defer(),image=new Image;return image.src=avatarImg,image.onload=function(){var imageWidth=image.width,imageHeight=image.height;imageWidth>imageHeight?imageWidth>maxWidth&&(imageHeight*=maxWidth/imageWidth,imageWidth=maxWidth):imageHeight>maxHeight&&(imageWidth*=maxHeight/imageHeight,imageHeight=maxHeight);var canvas=document.createElement("canvas");canvas.width=imageWidth,canvas.height=imageHeight,image.width=imageWidth,image.height=imageHeight,canvas.getContext("2d").drawImage(this,0,0,imageWidth,imageHeight);var resizedImage=new Image;resizedImage.src=canvas.toDataURL("image/png"),defered.resolve(resizedImage)},defered.promise},service.getBinaryData=function(image){for(var typeIndex=image.src.indexOf("image/")+6,binaryIndex=image.src.indexOf(";base64,"),binaryData=image.src.slice(binaryIndex+8),imageType=image.src.slice(typeIndex,binaryIndex),binary_string=window.atob(binaryData),len=binary_string.length,bytes=new Uint8Array(len),i=0;i<len;i++)bytes[i]=binary_string.charCodeAt(i);return{type:imageType,data:bytes}},service.pushContactInRoom=function(user,room){return $q((function(resolve){contactService.getContactByDBId(user.userId).then((function(contact){room.users.push({contact:contact,status:user.status,date:new Date(user.additionDate),privilege:user.privilege}),contactService.isUserContact(contact)&&(room.status=user.status),$log.info("[roomService] pushContactInRoom success"),resolve()})).catch((function(error){$log.info("[roomService] pushContactInRoom failure : "+error.message),resolve()}))}))},service.addRoomUser=function(room,contact,reason,privilege,withoutInvitation){return $q((function(resolve,reject){if(room.users.some((function(user){return(user.status===service.RoomUserStatus.INVITED||user.status===service.RoomUserStatus.ACCEPTED||user.status===service.RoomUserStatus.REJECTED)&&user.contact.dbId===contact.dbId})))return $log.debug("[roomService] user: "+contact.dbId+" already invited or accepted, will not be added"),void resolve(room);if(room.users.filter((function(user){return user.status!==service.RoomUserStatus.DELETED})).length>=service.maxRoomsUsers){var profileError=new Error("addRoomUser failure - Not Allowed : Participants max limit has been reached: "+service.maxRoomsUsers);return profileError.status=profileError.errorDetailsCode="403",$log.error("[roomService] "+profileError.message),void reject(profileError)}var userStatus=service.RoomUserStatus.INVITED;"boolean"==typeof withoutInvitation&&withoutInvitation&&(userStatus=service.RoomUserStatus.ACCEPTED);var userReason=reason||"JustForFun",userPrivilege=privilege||Room.Privilege.USER;$http({method:"POST",url:service.portalURL+"rooms/"+room.dbId+"/users",headers:authService.getPostHeader(),data:{userId:contact.dbId,privilege:userPrivilege,reason:userReason,status:userStatus}}).then((function(response){$log.info("[roomService] addRoomUser "+contact.displayNameForLog()+" to room "+room.dbId+"("+room.getNameForLogs()+") success");var userData=response.data.data,user=room.getUserByJid(userData.jid_im);user?(user.status=userData.status,user.date=new Date,user.privilege=userData.privilege):room.users.push({contact:contact,status:userStatus,date:new Date,privilege:userPrivilege}),service.refreshMemberAndOrganizerLists(room),$rootScope.$broadcast(service.ROOM_UPDATE_EVENT,room),resolve(room)}),(function(response){var errorMessage="addRoomUser "+contact.displayNameForLog()+" to room "+room.dbId+"("+room.getNameForLogs()+") failure: "+response.data.errorDetails;$log.error("[roomService] "+errorMessage),reject(new Error(errorMessage))}))}))},service.addRoomUsers=function(room,contacts,emails){return $q((function(resolve,reject){var addRoomUserPromises=[];contacts.forEach((function(contact){room.users.some((function(user){if(user.contact.dbId===contact.dbId){switch(user.status){case service.RoomUserStatus.UNSUBSCRIBED:addRoomUserPromises.push(service.ownerReinviteRejectedUser(room,contact));break;case service.RoomUserStatus.DELETED:addRoomUserPromises.push(service.ownerReinviteDeletedUser(room,contact));break;case service.RoomUserStatus.REJECTED:addRoomUserPromises.push(service.ownerReinviteRejectedUser(room,contact))}return!0}return!1}))||addRoomUserPromises.push(service.addRoomUser(room,contact))})),$q.all(addRoomUserPromises).then((function(){$log.info("[roomService] addRoomUsers success"),$rootScope.$broadcast(service.ROOM_ADD_USERS_EVENT,room),resolve(room)})).then((function(){service.inviteGuestEmailToJoinRoom(room,emails)})).catch((function(error){var errorMessage="addRoomUsers failure: "+error.message;$log.error("[roomService] "+errorMessage),reject(new Error(errorMessage))}))}))},service.deleteRoomUsers=function(room,contacts){return $q((function(resolve,reject){var deleteRoomUserPromises=[];contacts.forEach((function(contact){room.users.some((function(user){return user.contact.dbId===contact.dbId}))&&deleteRoomUserPromises.push(service.ownerDeletesUserFromRoom(room,contact))})),$q.all(deleteRoomUserPromises).then((function(){$log.info("[roomService] deleteRoomUsers success"),$rootScope.$broadcast(service.ROOM_DELETE_USERS_EVENT,room),resolve(room)})).catch((function(error){var errorMessage="deleteRoomUsers failure: "+error.message;$log.error("[roomService] "+errorMessage),reject(new Error(errorMessage))}))}))},service.addRoomAndroidTVs=function(room,contactAndroidTVs){return $q((function(resolve,reject){var addRoomAndroidTVPromises=[];contactAndroidTVs.forEach((function(contactAndroidTV){addRoomAndroidTVPromises.push(service.addRoomAndroidTV(room,contactAndroidTV))})),$q.all(addRoomAndroidTVPromises).then((function(){$log.info("[roomService] addRoomAndroidTVs success"),$rootScope.$broadcast(service.ROOM_ADD_USERS_EVENT,room),resolve(room)})).catch((function(error){var errorMessage="addRoomAndroidTVs failure: "+error.message;$log.error("[roomService] "+errorMessage),reject(new Error(errorMessage))}))}))},service.addRoomAndroidTV=function(room,contact){return $q((function(resolve,reject){$http({method:"POST",url:service.portalURL+"rooms/"+room.dbId+"/users",headers:authService.getPostHeader(),data:{userId:contact.dbId,privilege:"moderator",reason:"androidtv",status:"accepted"}}).then((function(response){$log.info("[roomService] addRoomAndroidTV "+contact.displayNameForLog()+" to room "+room.dbId+"("+room.getNameForLogs()+") success");var userData=response.data.data,user=room.getUserByJid(userData.jid_im);user?(user.status=userData.status,user.date=new Date,user.privilege=userData.privilege):room.users.push({contact:contact,status:"accepted",date:new Date,privilege:"moderator"}),service.refreshMemberAndOrganizerLists(room),$rootScope.$broadcast(service.ROOM_UPDATE_EVENT,room),resolve(room)}),(function(response){var errorMessage="addRoomAndroidTV "+contact.displayNameForLog()+" to room "+room.dbId+"("+room.getNameForLogs()+") failure: "+response.data.errorDetails;$log.error("[roomService] "+errorMessage),reject(new Error(errorMessage))}))}))},service.sendInitialRoomPresence=function(room,attempt){var attemptInfo=attempt?" -- attempt "+attempt:"";$log.info("[roomService] sendInitialRoomPresence "+attemptInfo+" -- "+room.getNameForLogs()+" -- "+room.dbId);var presenceIq=$pres({to:room.jid+"/"+xmppService.fullJid});presenceIq.c("x",{xmlns:"http://jabber.org/protocol/muc"}).c("history",{maxchars:"0"}),xmppService.send(presenceIq)},service.sendInitialRoomPresenceSync=function(room){if(room.initPresPromise)return room.initPresPromise.promise;var defered=room.initPresPromise=$q.defer();service.sendInitialRoomPresence(room,"0");var attemptNumber=0;return room.initPresInterval=$interval((function(){attemptNumber<5?service.sendInitialRoomPresence(room,++attemptNumber):($log.error("[roomService] sendInitialRoomPresenceSync : no response after "+attemptNumber+" retries => clean presence promise and interval for "+room.getNameForLogs()+" -- "+room.jid),room.initPresPromise=null,room=service.rooms[room.id],$rootScope.$broadcast(service.ROOM_UPDATE_EVENT,room))}),7500,6),defered.promise},service.sendPresenceWithResponseWait=function(room){if(room.initPresPromiseReceived)return service.sendInitialRoomPresence(room),$q.when(room);var defered=room.initPresPromise=$q.defer();return service.sendInitialRoomPresence(room),defered.promise},service.sendUnavailableRoomPresence=function(room){var presenceIq=$pres({to:room.jid+"/"+contactService.userContact.jid,type:"unavailable"});presenceIq.c("x",{xmlns:"http://jabber.org/protocol/muc"}),xmppService.send(presenceIq)},service.createRoom=function(roomName,roomDesc,withHistory,roomAvatar,disableNotifications,mediaType,createConversation,autoAcceptInvitation){var roomNameForLogs=roomName.charAt(0)+"***"+roomName.slice(-1);return $log.info('[roomService] createRoom "'+roomNameForLogs+'"'),$q((function(resolve,reject){(void 0===disableNotifications||disableNotifications&&"boolean"!=typeof disableNotifications)&&(disableNotifications=!0),createConversation=angular.isDefined(createConversation)?createConversation:"true";var data={name:roomName,topic:roomDesc,history:withHistory?"all":"none",disableNotifications:disableNotifications,createConversation:createConversation,autoAcceptInvitation:!!autoAcceptInvitation};mediaType&&(data.mediaType=mediaType),$http({method:"POST",url:service.portalURL+"rooms/",headers:authService.getPostHeader(),data:data}).then((function(response){var roomData=response.data.data;return service.setAvatarRoom(roomData,roomAvatar)})).then((function(roomData){service.rooms[roomData.id]&&($log.info('[roomService] createRoom -- room "'+roomNameForLogs+'" already exists'),resolve(service.rooms[roomData.id]));var room=Room.create(roomData.id,roomData.jid,roomData.name,roomData.topic,roomData.creationDate,roomData.confEndpoints,roomData.history,roomData.customData,roomData.conference,roomData.avatar,roomData.isActive,null,null,roomData.autoAcceptInvitation);room.ownerContact=contactService.userContact,room.owner=!0,room.isModerator=!0,room.status="accepted",service.rooms[room.dbId]=room,service.roomsByJids[room.jid]=room,$log.info('[roomService] createRoom "'+roomNameForLogs+'" -- success'),resolve(service.sendInitialRoomPresenceSync(room))})).catch((function(error){var message=error;error&&error.data&&(message=error.data.errorDetailsCode+" "+error.data.errorDetails),$log.error('[roomService] createRoom "'+roomNameForLogs+'" -- failure : '+message),reject(error)}))}))},service.updateRoomUser=function(room,contact,status,privilege){var data={};return status&&(data.status=status),privilege&&(data.privilege=privilege),$q((function(resolve,reject){$http({method:"PUT",url:service.portalURL+"rooms/"+room.dbId+"/users/"+contact.dbId,headers:authService.getPostHeader(),data:data}).then((function(response){$log.info("[roomService] updateRoomUser "+contact.displayNameForLog()+" to room "+room.dbId+"("+room.getNameForLogs()+") success");var userData=response.data.data;room.users.forEach((function(user){user.contact.jid===userData.jid_im&&(user.privilege=userData.privilege,user.status=userData.status)})),service.refreshMemberAndOrganizerLists(room),$rootScope.$broadcast(service.ROOM_UPDATE_EVENT,room),resolve(room)}),(function(response){var errorMessage="updateRoomUser "+contact.displayNameForLog()+" to room "+room.dbId+"("+room.getNameForLogs()+") failure: "+response.data.errorDetails;$log.error("[roomService] "+errorMessage),reject(new Error(errorMessage))}))}))},service.ownerArchiveRoom=function(room){return $log.info("[roomService] ownerArchiveRoom"),$q((function(resolve,reject){var unsubscribeRoomUserPromises=[];room.users.forEach((function(user){contactService.isUserContact(user.contact)||user.status===service.RoomUserStatus.DELETED||user.status===service.RoomUserStatus.REJECTED||unsubscribeRoomUserPromises.push(service.unsubscribeUserFromRoom(room,user.contact))})),$q.all(unsubscribeRoomUserPromises).then((function(){$log.info("[roomService] unsubscribe all other users successfully"),service.unsubscribeMeFromRoom(room).then((function(){$log.info("[roomService] ownerArchiveRoom successfully"),resolve(room)}))})).catch((function(error){var errorMessage="ownerArchiveRoom failure: "+error.message;$log.error("[roomService] "+errorMessage),reject(new Error(errorMessage))}))}))},service.unsubscribeUserFromRoom=function(room,contact){return service.updateRoomUser(room,contact,service.RoomUserStatus.UNSUBSCRIBED)},service.ownerDeletesUserFromRoom=function(room,contact){return $log.info("[roomService] ownerDeletesUserFromRoom"),$q((function(resolve,reject){var userId=contact.dbId;$http({method:"DELETE",url:service.portalURL+"rooms/"+room.dbId+"/users/"+userId,headers:authService.getRequestHeader()}).then((function(){$log.info("[roomService] ownerDeletesUserFromRoom "+userId+" from room "+room.dbId+"("+room.getNameForLogs()+") success"),$rootScope.$broadcast(service.ROOM_UPDATE_EVENT,room),resolve(room)}),(function(response){var errorMessage="ownerDeletesUserFromRoom "+userId+" from room "+room.dbId+"("+room.getNameForLogs()+") failure: "+response.data.errorDetails;$log.error("[roomService] "+errorMessage),reject(new Error(errorMessage))}))}))},service.ownerReinviteRejectedUser=function(room,contact,reason,privilege,withoutInvitation){return $q((function(resolve,reject){service.ownerDeletesUserFromRoom(room,contact).then((function(){service.addRoomUser(room,contact,reason,privilege,withoutInvitation).then((function(){$log.info("[roomService] ownerReinviteRejectedUser "+contact.dbId+" from room "+room.dbId+"("+room.getNameForLogs()+") success"),resolve(room)}))})).catch((function(error){var errorMessage="ownerReinviteRejectedUser failure: "+error.message;$log.error("[roomService] "+errorMessage),reject(new Error(errorMessage))}))}))},service.ownerReinviteDeletedUser=function(room,contact,reason,privilege,withoutInvitation){return $q((function(resolve,reject){service.addRoomUser(room,contact,reason,privilege,withoutInvitation).then((function(){$log.info("[roomService] ownerReinviteDeletedUser "+contact.dbId+" from room "+room.dbId+"("+room.getNameForLogs()+") success"),resolve(room)})).catch((function(error){var errorMessage="ownerReinviteDeletedUser failure: "+error.message;$log.error("[roomService] "+errorMessage),reject(new Error(errorMessage))}))}))},service.ownerDeleteRoom=function(room){return $q((function(resolve,reject){var roomId=room.dbId;roomId?$http({method:"DELETE",url:service.portalURL+"rooms/"+roomId,headers:authService.getRequestHeader()}).then((function(){$log.info("[roomService] ownerDeleteRoom "+room.dbId+"("+room.getNameForLogs()+") success"),delete service.rooms[room.dbId],$rootScope.$broadcast(service.ROOM_UPDATE_EVENT,room),resolve(room)}),(function(response){var errorMessage="ownerDeleteRoom ("+roomId+") failure: unknown error occurred";response&&response.data&&(errorMessage="ownerDeleteRoom ("+roomId+") failure: "+response.data.errorDetails),response&&404===response.status&&($log.info("[roomService] ownerDeleteRoom "+room.dbId+"("+room.getNameForLogs()+") not found, deleting it from local storage"),delete service.rooms[room.dbId],$rootScope.$broadcast(service.ROOM_UPDATE_EVENT,room)),$log.error("[roomService] "+errorMessage),reject(new Error(errorMessage))})):$log.error("[roomService] ownerDeleteRoom failure because the roomId is empty ...")}))},service.ownerUpdateRoom=function(roomData){return $log.info("[roomService] ownerUpdateRoom"),$q((function(resolve,reject){var _room={name:roomData.name,topic:roomData.desc,visibility:roomData.type?"public":"private"};$http({method:"PUT",url:service.portalURL+"rooms/"+roomData.dbId,headers:authService.getPostHeader(),data:_room}).then((function(response){var room=response.data.data;service.rooms[room.id].desc=room.topic,service.rooms[room.id].type="private"===room.visibility?Room.Type.PRIVATE:Room.Type.PUBLIC,$log.info("[roomService] ownerUpdateRoom successfully ("+room.id+", "+room.jid+")"),resolve(service.rooms[room.id])}),(function(response){var errorMessage="ownerUpdateRoom failure: "+response.data.errorDetails;$log.error("[roomService] "+errorMessage),reject(new Error(errorMessage))}))}))},service.changeRoomOwner=function(room,newOwnerContact){return $log.info("[roomService] changeRoomOwner"),$q((function(resolve,reject){if(!room||!newOwnerContact){var msg="changeRoomOwner error: - missing room or new owner";return $log.error("[roomService] "+msg),void reject(new Error(msg))}var roomData={owner:newOwnerContact.dbId},confEndpointId=room.confEndpoints&&room.confEndpoints.length?room.confEndpoints[0].confEndpointId:"";service.deleteRoomConferenceEndPoint(room,confEndpointId).then((function(){$http({method:"PUT",url:service.portalURL+"rooms/"+room.dbId,headers:authService.getPostHeader(),data:roomData}).then((function(){room.ownerContact=newOwnerContact,room.owner=newOwnerContact.jid===contactService.userContact.jid,$log.info("[roomService] changeRoomOwner successfully ("+room.dbId+")"),resolve(service.rooms[room.dbId])}),(function(response){var errorMessage="changeRoomOwner failure: "+response.data.errorDetails;$log.error("[roomService] "+errorMessage),reject(new Error(errorMessage))}))})).catch((function(error){$log.error("[roomService] changeRoomOwner error"),reject(error)}))}))},service.ownerUpdateRoomCustomData=function(roomData){return $log.info("[roomService] ownerUpdateRoomCustomData"),$q((function(resolve,reject){var _customData={customData:roomData.customData};$http({method:"PUT",url:service.portalURL+"rooms/"+roomData.dbId+"/custom-data",headers:authService.getPostHeader(),data:_customData}).then((function(response){var data=response.data.data;$log.info("[roomService] ownerUpdateRoomCustomData successfully got ("+JSON.stringify(data,null,4)+")"),resolve(data.customData||{})}),(function(response){var errorMessage="ownerUpdateRoomCustomData failure: "+response.data.errorDetails;$log.error("[roomService] "+errorMessage),reject(new Error(errorMessage))}))}))},service.ownerUpdateRoomNameAndDescription=function(roomData){return $log.info("[roomService] ownerUpdateRoomNameAndDescription"),$q((function(resolve,reject){var _room={name:roomData.name,topic:roomData.desc,visibility:roomData.type?"public":"private"};$http({method:"PUT",url:service.portalURL+"rooms/"+roomData.dbId,headers:authService.getPostHeader(),data:_room}).then((function(response){var room=response.data.data;service.rooms[room.id].desc=room.topic,service.rooms[room.id].type="private"===room.visibility?Room.Type.PRIVATE:Room.Type.PUBLIC,(room.conference||room.confEndpoints)&&(service.rooms[room.id].conference=room.conference?room.conference:null,service.rooms[room.id].confEndpoints=room.confEndpoints?room.confEndpoints:[]),$log.info("[roomService] ownerUpdateRoomNameAndDescription successfully ("+room.id+", "+room.jid+")"),resolve(service.rooms[room.id])}),(function(response){var errorMessage="ownerUpdateRoomNameAndDescription failure: "+response.data.errorDetails;$log.error("[roomService] "+errorMessage),reject(new Error(errorMessage))}))}))},service.ownerUpdateAutoRegister=function(roomData){return $log.info("[roomService] ownerUpdateAutoRegister"),$q((function(resolve,reject){var _room={autoRegister:roomData.getAutoRegister()};$http({method:"PUT",url:service.portalURL+"rooms/"+roomData.dbId,headers:authService.getPostHeader(),data:_room}).then((function(response){var room=response.data.data;service.rooms[room.id].setAutoRegister(room.autoRegister),service.rooms[room.id].desc=room.topic,service.rooms[room.id].type="private"===room.visibility?Room.Type.PRIVATE:Room.Type.PUBLIC,(room.conference||room.confEndpoints)&&(service.rooms[room.id].conference=room.conference?room.conference:null,service.rooms[room.id].confEndpoints=room.confEndpoints?room.confEndpoints:[]),$log.info("[roomService] ownerUpdateAutoRegister successfully ("+room.id+", "+room.jid+")"),resolve(service.rooms[room.id])}),(function(response){var errorMessage="ownerUpdateAutoRegister failure: "+response.data.errorDetails;$log.error("[roomService] "+errorMessage),reject(new Error(errorMessage))}))}))},service.updateMyRoomUser=function(room,status){return $q((function(resolve,reject){$http({method:"PUT",url:service.portalURL+"rooms/"+room.dbId+"/users/"+contactService.userContact.dbId,headers:authService.getPostHeader(),data:{status:status}}).then((function(){$log.info("[roomService] updateMyRoomUser "+contactService.userContact.displayNameForLog()+" to room "+room.dbId+"("+room.getNameForLogs()+") success"),resolve(room)}),(function(response){var errorMessage="updateMyRoomUser "+contactService.userContact.displayNameForLog()+" to room "+room.dbId+"("+room.getNameForLogs()+") failure: "+response.data.errorDetails;$log.error("[roomService] "+errorMessage),reject(new Error(errorMessage))}))}))},service.unsubscribeMeFromRoom=function(room){return service.updateMyRoomUser(room,service.RoomUserStatus.UNSUBSCRIBED)},service.participantCloseRoom=function(room){return $log.info("[roomService] participantCloseRoom"),$q((function(resolve,reject){var userId=contactService.userContact.dbId;$http({method:"DELETE",url:service.portalURL+"rooms/"+room.dbId+"/users/"+userId,headers:authService.getRequestHeader()}).then((function(){$log.info("[roomService] participantCloseRoom "+userId+" from room "+room.dbId+"("+room.getNameForLogs()+") success"),delete service.rooms[room.dbId],$rootScope.$broadcast(service.ROOM_UPDATE_EVENT,room),resolve(room)}),(function(response){var errorMessage="participantCloseRoom "+userId+" from room "+room.dbId+"("+room.getNameForLogs()+") failure: "+response.data.errorDetails;$log.error("[roomService] "+errorMessage),reject(new Error(errorMessage))}))}))},service.acceptRoomInvitation=function(room){return service.updateMyRoomUser(room,service.RoomUserStatus.ACCEPTED)},service.declineRoomInvitation=function(room){return service.updateMyRoomUser(room,service.RoomUserStatus.REJECTED)},service.getRoomConferenceEndPoint=function(room,conferenceEndPointId){return $log.info("[roomService] getRoomConferenceEndPoint"),$q((function(resolve,reject){$http({method:"GET",url:service.portalURL+"rooms/"+room.dbId+"/conference/"+conferenceEndPointId,headers:authService.getRequestHeader()}).then((function(response){var conferenceData=response.data.data;$log.info("[roomService] getRoomConferenceEndPoint "+conferenceEndPointId+" from room "+room.dbId+"success"),resolve(conferenceData)}),(function(response){var errorMessage="getRoomConferenceEndPoint "+conferenceEndPointId+" from room "+room.dbId+"failure: "+response.data.errorDetails;$log.error("[roomService] "+errorMessage),reject(new Error(errorMessage))}))}))},service.addRoomConferenceEndPoint=function(room,conferenceEndPoint,mediaType,createConversation){$log.info("[roomService] addRoomConferenceEndPoint");var defered=$q.defer();if(null===conferenceEndPoint||angular.isUndefined(conferenceEndPoint)){var err=new Error("No ConferenceEndPoint to associate with Room");defered.reject(err)}var alreadyAttached=!1;room.confEndpoints.forEach((function(endpoint){endpoint.confEndpointId===conferenceEndPoint.id&&(alreadyAttached=!0)})),alreadyAttached&&($log.info("[roomService] addRoomConferenceEndPoint : already attached to room !"),defered.resolve(room));var deleteConfEndpointPromises=[];return mediaType&&"pstnAudio"===mediaType&&Object.keys(service.rooms).forEach((function(key){service.rooms[key].conference&&!service.rooms[key].conference.scheduled&&service.rooms[key].getPstnConfEndpointId()===conferenceEndPoint.id&&deleteConfEndpointPromises.push(service.deleteRoomConferenceEndPoint(service.rooms[key],conferenceEndPoint.id))})),$q.all(deleteConfEndpointPromises).finally((function(){createConversation=angular.isDefined(createConversation)?createConversation:"true",$http({method:"POST",url:service.portalURL+"rooms/"+room.dbId+"/conferences",headers:authService.getPostHeader(),data:{confId:conferenceEndPoint.id,createConversation:createConversation}}).then((function(response){var conferenceData=response.data.data;$log.debug("[roomService] addRoomConferenceEndPoint response data:"+JSON.stringify(conferenceData)),room.confEndpoints.push(conferenceData),$log.info("[roomService] addRoomConferenceEndPoint "+conferenceEndPoint.id+" to room "+room.dbId+"success"),$rootScope.$broadcast(service.ROOM_ADD_CONF_ENDPOINT_EVENT,room),defered.resolve(room)}),(function(errorResponse){var error=errorHelperService.handleError(errorResponse);$log.error("[roomService] addRoomConferenceEndPoint "+error.message),defered.reject(error)}))})),defered.promise},service.deleteRoomConferenceEndPoint=function(room,conferenceEndPointId){return $log.info("[roomService] deleteRoomConferenceEndPoint"),$q((function(resolve,reject){if(!room||!conferenceEndPointId)return $log.info("[roomService] deleteRoomConferenceEndPoint : missing parameters "),void resolve();var roomHasConfEndpoint=!1;if(room.confEndpoints&&room.confEndpoints.length)for(var i=0;i<room.confEndpoints.length;i++)if(room.confEndpoints[i].confEndpointId===conferenceEndPointId){roomHasConfEndpoint=!0;break}if(!roomHasConfEndpoint)return $log.info("[roomService] deleteRoomConferenceEndPoint : room has no such conference attached"),void resolve();$http({method:"DELETE",url:service.portalURL+"rooms/"+room.dbId+"/conferences/"+conferenceEndPointId,headers:authService.getRequestHeader()}).then((function(response){var conferenceData=response.data.data;$log.info("[roomService] deleteRoomConferenceEndPoint "+conferenceEndPointId+" from room "+room.dbId+"success"),room.confEndpoints=conferenceData,$rootScope.$broadcast(service.ROOM_REMOVE_CONF_ENDPOINT_EVENT,room),resolve()}),(function(response){var errorMessage="deleteRoomConferenceEndPoint "+conferenceEndPointId+" from room "+room.dbId+"failure: "+response.data.errorDetails;$log.error("[roomService] "+errorMessage),404===response.status?(room.confEndpoints=[],$rootScope.$broadcast(service.ROOM_REMOVE_CONF_ENDPOINT_EVENT,room),resolve(response.status)):reject(new Error(errorMessage))}))}))},service.inviteGuestEmailToJoinRoom=function(room,emails){return $log.info("[roomService] inviteGuestEmailToJoinRoom"),emails&&emails.length?$q((function(resolve,reject){$http({method:"POST",url:service.portalURL+"rooms/"+room.dbId+"/invitations",headers:authService.getRequestHeader(),data:{scenario:"chat",emails:emails,lang:authService.userData.language}}).then((function(response){room.guestEmails=response.data.data.guestEmails,$rootScope.$broadcast("ROOM_UPDATE_EVENT",room),resolve(room)})).catch((function(errorResponse){var error=errorHelperService.handleError(errorResponse);$log.error("[roomService] inviteGuestEmailToJoinRoom "+error.message),reject(error)}))})):$q.resolve(room)},service.ownerCancelGuestFromRoom=function(room,emails){return $log.info("[roomService] ownerCancelGuestFromRoom"),emails&&emails.length?$q((function(resolve,reject){$http({method:"POST",url:service.portalURL+"rooms/"+room.dbId+"/invitations/cancel",headers:authService.getRequestHeader(),data:{scenario:"chat",emails:emails,lang:authService.userData.language}}).then((function(response){room.guestEmails=response.data.guestEmails,$rootScope.$broadcast("ROOM_UPDATE_EVENT",room),resolve(room)})).catch((function(errorResponse){var error=errorHelperService.handleError(errorResponse);$log.error("[roomService] ownerCancelGuestFromRoom "+error.message),reject(error)}))})):$q.resolve(room)},service.notifyRoomUsersJoinConference=function(room,users,emails,noMail,update){return $log.info("[roomService] notifyRoomUsersJoinConference"),noMail=angular.isDefined(noMail)?noMail:"false",update=angular.isDefined(update)?update:"false",$q((function(resolve,reject){var conferenceEndPointId=room.getPstnConfEndpointId();if(conferenceEndPointId){var instantMessage=room.desc;$http({method:"POST",url:service.portalURL+"rooms/"+room.dbId+"/invitations",headers:authService.getPostHeader(),data:{scenario:"pstn-conference",confId:conferenceEndPointId,noMail:noMail.toString(),update:update.toString(),users:users?users.map((function(user){return user.dbId})):void 0,emails:emails,instantMessage:instantMessage,lang:authService.userData.language}}).then((function(){$log.info("[roomService] notifyRoomUsersJoinConference "+conferenceEndPointId+" from room "+room.dbId+"success"),service.rooms[room.dbId].guestEmails=emails,$rootScope.$broadcast("ROOM_UPDATE_EVENT",service.rooms[room.dbId]),resolve(service.rooms[room.dbId])}),(function(response){var errorMessage="notifyRoomUsersJoinConference "+conferenceEndPointId+" from room "+room.dbId+"failure: "+response.data.errorDetails;$log.error("[roomService] "+errorMessage),reject(new Error(errorMessage))}))}else resolve(room)}))},service.notifyUsersCancelConference=function(room,users,emails,noMail){return $log.debug("[roomService] notifyUsersCancelConference"),noMail=angular.isDefined(noMail)?noMail:"false",$q((function(resolve,reject){var conferenceEndPointId=room.getPstnConfEndpointId();conferenceEndPointId?$http({method:"DELETE",url:service.portalURL+"rooms/"+room.dbId+"/invitations",headers:authService.getPostHeader(),data:{scenario:"pstn-conference",confId:conferenceEndPointId,noMail:noMail.toString(),users:users?users.map((function(user){return user.dbId})):void 0,emails:emails,lang:authService.userData.language}}).then((function(){$log.info("[roomService] notifyUsersCancelConference "+conferenceEndPointId+" from room "+room.dbId+"success"),service.rooms[room.dbId].guestEmails=service.rooms[room.dbId].guestEmails.filter((function(email){return-1===emails.indexOf(email)})),$rootScope.$broadcast("ROOM_UPDATE_EVENT",service.rooms[room.dbId]),resolve(service.rooms[room.dbId])}),(function(response){var errorMessage="notifyUsersCancelConference "+conferenceEndPointId+" from room "+room.dbId+"failure: "+response.data.errorDetails;$log.error("[roomService] "+errorMessage),reject(new Error(errorMessage))})):resolve(room)}))},service.getRoomByConferenceEndpointId=function(conferenceEndpointId){return $log.info("[roomService] getRoomFromConferenceEndpointId"),$q((function(resolve,reject){$http({method:"GET",url:service.portalURL+"rooms?userId="+contactService.userContact.dbId+"&confId="+conferenceEndpointId+"&format=full",headers:authService.getRequestHeader()}).then((function(response){$log.info("[roomService] getRoomFromConferenceEndpointId -- "+conferenceEndpointId+" -- success");var roomData=response.data.data;roomData.length?service.getRoomById(roomData[0].id)?resolve(service.getRoomById(roomData[0].id)):(service.createRoomFromData(roomData[0]),resolve(service.getRoomById(roomData[0].id))):($log.info("[roomService] getRoomFromConferenceEndpointId -- no room with confId "+conferenceEndpointId),reject())}),(function(response){var errorMessage="getRoomFromConferenceEndpointId -- "+conferenceEndpointId+" -- failure: "+response.data.errorDetails;$log.error("[roomService] "+errorMessage),reject(new Error(errorMessage))}))}))},service.onRoomMessage=function(stanza){$log.info("[roomService] onRoomMessage");try{if(angular.element(stanza).find("event").length>0&&("conferenceAdd"===angular.element(stanza).find("event").attr("name")||"conferenceRemove"===angular.element(stanza).find("event").attr("name")||"invitation"===angular.element(stanza).find("event").attr("name")))return!0;var roomId=angular.element(stanza).find("x").attr("thread");return service.getServerRoom(roomId).then((function(room){room.isMeetingRoom()&&$rootScope.$broadcast("MEETING_CREATED_EVENT",room),service.computeInvitationCounter(),$rootScope.$broadcast(service.ROOM_INVITATION,room),$rootScope.$broadcast(service.ROOM_UPDATE_EVENT,room)})).catch((function(error){$log.error("[roomService] onRoomMessage failure :  impossible to get associated room : "+error.message)})),!0}catch(error){return $log.error("[roomService] onRoomMessage error "+error),!0}},service.onRoomNotificationMessage=function(stanza){try{var stanzaElem=$(stanza),xElem=stanzaElem.find("x");if(stanzaElem.find("event").length&&xElem.length){var eventName=stanzaElem.find("event").attr("name");if(!eventName||"invitation"!==eventName)return!0;var roomId=$(xElem[0]).attr("roomid");return roomId?($log.info("[roomService] onRoomNotificationMessage : room event message with roomId "+roomId+" and event name "+eventName),service.getServerRoom(roomId).then((function(room){room.isMeetingRoom()&&$rootScope.$broadcast("MEETING_CREATED_EVENT",room),"true"===settingsService.getSetting("autoAcceptRoomInvite")?service.acceptRoomInvitation(room):(service.computeInvitationCounter(),$rootScope.$broadcast(service.ROOM_INVITATION,room),$rootScope.$broadcast(service.ROOM_UPDATE_EVENT,room),"accepted"===room.status&&room.confEndpoints&&room.confEndpoints.length&&"webrtc"===room.confEndpoints[0].mediaType&&$rootScope.$broadcast("ON_CONFERENCE_STARTED_INVITATION",room),$log.info("[roomService] onRoomNotificationMessage -- get server room success for roomId "+room.dbId+" and roomJid"+room.jid_im+" and name "+room.getNameForLogs()))})).catch((function(error){$log.error("[roomService] onRoomNotificationMessage failure :  impossible to get associated room : "+error.message)})),!0):($log.info("[roomService] onRoomNotificationMessage error -- missing roomId"),!0)}}catch(error){return $log.error("[roomService] onRoomNotificationMessage error "+error),!0}},service.onRoomInfoMessage=function(stanza){$log.info("[roomService] onRoomInfoMessage");try{if(angular.element(stanza).find("event").length>0){$log.info("[roomService] onRoomInfoMessage : room event message");var fromJid=angular.element(stanza).attr("from"),roomBareJid=xmppService.getBareJidFromJid(fromJid),userJid=angular.element(stanza).find("event").attr("jid"),eventName=angular.element(stanza).find("event").attr("name"),msgId=angular.element(stanza).attr("id");if($log.info("[roomService] onRoomInfoMessage : room event message with parameters "+roomBareJid+" || "+userJid+" || "+eventName+" || "+msgId),roomBareJid&&userJid&&eventName&&msgId){var user=(room=service.getRoomByJid(roomBareJid)).getUserByJid(userJid);switch(user&&"deleted"!==user.status&&$rootScope.$broadcast(service.ROOM_ADMIN_MESSAGE_EVENT,roomBareJid,userJid,eventName,msgId),eventName){case"conferenceAdd":$interval((function(){service.getServerRoom(room.dbId).then((function(updatedRoom){var info=updatedRoom.confEndpoints&&updatedRoom.confEndpoints[0]?updatedRoom.confEndpoints[0].confEndpointId:void 0;updatedRoom.getPstnConfEndpointId()&&updatedRoom.isMeetingRoom()&&(service.currentPersonalAudioRoomId=updatedRoom.dbId),$log.info("[roomService] onRoomInfoMessage : conferenceAdd event with conferenceObject related to room : "+info),$rootScope.$broadcast("ROOM_UPDATE_CONFID",updatedRoom),$rootScope.$broadcast("ROOM_ADD_CONF_ENDPOINT_EVENT",updatedRoom),$rootScope.$broadcast("ON_CONFERENCE_STARTED_INVITATION",updatedRoom,user)}))}),2e3,1);break;case"conferenceRemove":$interval((function(){service.getServerRoom(room.dbId).then((function(updatedRoom){room.getPstnConfEndpointId()&&!updatedRoom.getPstnConfEndpointId()&&(service.currentPersonalAudioRoomId=""),$log.info("[roomService] onRoomInfoMessage : conferenceRemove event"),$rootScope.$broadcast("ROOM_REMOVE_CONF_ENDPOINT_EVENT",updatedRoom),$rootScope.$broadcast("ON_CONFERENCE_ENDED_INVITATION",updatedRoom)}))}),2e3,1);break;case"invitation":!room.isUserModerator(contactService.userContact)||user&&user.status!==service.RoomUserStatus.DELETED||service.getServerRoom(room.dbId).then((function(updatedRoom){$rootScope.$broadcast(service.ROOM_UPDATE_EVENT,updatedRoom)}))}}}else if(angular.element(stanza).find("subject").length>0){fromJid=angular.element(stanza).attr("from");var fromBareJid=xmppService.getBareJidFromJid(fromJid),room=service.getRoomByJid(fromBareJid),topic=angular.element(stanza).find("subject").text();room&&topic&&($log.info("[roomService] onRoomInfoMessage : update subject of room"),room.desc=topic,$rootScope.$broadcast(service.ROOM_UPDATE_EVENT,room))}return!0}catch(error){return $log.error("[roomService] onRoomInfoMessage error "+error),!0}},service.onRoomHistoryInfoMessage=function(stanza){var changedElem=$(stanza).find("changed");if(changedElem.length>0){var roomId=changedElem.attr("with"),room=service.getRoomByJid(roomId);$log.debug("[roomService] onRoomHistoryInfoMessage with "+roomId),$rootScope.$broadcast(service.ROOM_HISTORY_UPDATE_EVENT,room)}return!0},service.onRoomMessageConfig=function(stanza){try{var stanzaElem=$(stanza),roomElem=stanzaElem.find("room"),delayElem=stanzaElem.find("delay");if("management"===stanzaElem.attr("type")&&roomElem.length>0){var roomId=roomElem.attr("roomid"),userId=roomElem.attr("userjid"),status=roomElem.attr("status"),topic=roomElem.attr("topic"),name=roomElem.attr("name"),lastAvatarUpdateDate=roomElem.attr("lastAvatarUpdateDate"),avatarElem=stanzaElem.find("avatar"),avatarType=null;avatarElem.length>0&&(avatarType="delete"===avatarElem.attr("action")?"delete":"update");var privilege=roomElem.attr("privilege"),customData=roomElem.attr("customData"),room=service.getRoomById(roomId);if($log.info("[roomService] onRoomMessageConfig -- management -- "+roomId),delayElem.length>0&&"Offline Storage"===delayElem.text())return $log.info("[roomService] onRoomMessageConfig -- management delay msg skipped --"),!0;var guestsElem=roomElem.find("guests");if(guestsElem.length>0&&($log.info("[roomService] onRoomMessageConfig -- "+roomId+" -- update guests list"),"update"===guestsElem.attr("action")&&(room.guestEmails=[],$(guestsElem).find("email").each((function(__index,emailElem){room.guestEmails.push(emailElem.textContent)})))),room&&status)(user=room.getUserByJid(userId))?user&&($log.info("[roomService] onRoomMessageConfig update user status"),service.updateUserStatus(room,user,status)):($log.info("[roomService] onRoomMessageConfig room exists, but user not. Update the room"),service.getServerRoom(roomId).then((function(){room.updateAvatarInfo()})));else if(room&&name)$log.info("[roomService] onRoomMessageConfig update Room name or topic"),room.name=name,room.desc=topic||"",service.roomsByJids[room.jid].name=name,service.rooms[room.dbId].name=name,service.roomsByJids[room.jid].desc=topic||"",service.rooms[room.dbId].desc=topic||"",$rootScope.$broadcast(service.ROOM_UPDATE_EVENT,room,"rename");else if(room&&customData){$log.info("[roomService] onRoomMessageConfig update Room customData");var extractedContent=utilService.extractHtmlContent(customData);try{customData=JSON.parse(extractedContent)}catch(err){$log.error("[roomService] onRoomMessageConfig update Room Parsing error:",err),customData={}}room.customData=customData,service.roomsByJids[room.jid].customData=customData,service.rooms[room.dbId].customData=customData,$rootScope.$broadcast(service.ROOM_UPDATE_EVENT,room)}else if(room&&(lastAvatarUpdateDate||avatarType))$log.info("[roomService] onRoomMessageConfig "+avatarType+" avatar"),service.getServerRoom(room.dbId).then((function(roomToUpdate){roomToUpdate.updateAvatarInfo(),$rootScope.$broadcast(service.ROOM_AVATAR_UPDATE_EVENT,room)}));else if(room&&privilege){var user;if($log.info("[roomService] onRoomMessageConfig update user's privilege "+privilege),(user=userId?room.getUserByJid(userId):null)&&user.contact&&user.contact.jid!==contactService.userContact.jid&&"owner"!==privilege?("moderator"===privilege?user.privilege=Room.Privilege.MODERATOR:"user"===privilege&&(user.privilege=Room.Privilege.USER),contactService.getVCardByDbId(user.contact.dbId).then((function(){service.refreshMemberAndOrganizerLists(room),$rootScope.$broadcast(service.ROOM_UPDATE_EVENT,room)}))):service.getServerRoom(room.dbId).then((function(roomToUpdate){service.refreshMemberAndOrganizerLists(roomToUpdate),$rootScope.$broadcast(service.ROOM_UPDATE_EVENT,roomToUpdate)})),"owner"===privilege&&user&&user.contact&&user.contact.jid===contactService.userContact.jid){var message=$translate.instant("promotedToOwner",{name:_escape(room.name)});$rootScope.$broadcast("GLOBAL_NOTIFY_MESSAGE_EVENT",message)}}else void 0===room&&roomId&&!service.roomsInProgress[roomId]&&"deleted"!==status&&"rejected"!==status?(service.roomsInProgress[roomId]=!0,$log.info("[roomService] onRoomMessageConfig -- room does not exist, create new one"),service.getServerRoom(roomId).then((function(newRoom){delete service.roomsInProgress[roomId],$log.info("[roomService] onRoomMessageConfig -- sendInitialRoomPresence to the new room"),service.sendInitialRoomPresence(newRoom),service.updateLater[roomId]&&(delete service.updateLater[roomId],$log.info("[roomService] onRoomMessageConfig -- later update of the new room"),service.getServerRoom(roomId).then((function(roomToUpdate){roomToUpdate.updateAvatarInfo()})))}))):service.roomsInProgress[roomId]&&(service.updateLater[roomId]=roomId)}var openinviteElem=stanzaElem.find("openinvite");if("management"===stanzaElem.attr("type")&&openinviteElem.length>0){$log.info("[roomService] onRoomMessageConfig -- openinvite");var openInviteAction=openinviteElem.attr("action"),openInviteId=(roomId=openinviteElem.find("roomid").text(),openinviteElem.find("openinviteid").text()),roomType=openinviteElem.find("roomType").text();switch(openInviteAction){case"update":Object.keys(service.openInviteIdByRoomId).forEach((function(key){service.openInviteIdByRoomId[key]&&service.openInviteIdByRoomId[key].openInviteId===openInviteId&&key!==roomId&&($log.info("[roomService] onRoomMessageConfig -- openinviteId removed from "+key),service.openInviteIdByRoomId[key]={})}));case"create":roomId&&openInviteId&&(service.openInviteIdByRoomId[roomId]={},service.openInviteIdByRoomId[roomId].roomType=roomType,service.openInviteIdByRoomId[roomId].openInviteId=openInviteId,service.openInviteIdByRoomId[roomId].openInviteLink=config.webUrl.replace("web","meet")+"/"+openInviteId,$log.info("[roomService] onRoomMessageConfig -- openinviteId "+openInviteId+" assigned to room "+roomId),$rootScope.$broadcast("ON_OPEN_INVITE_ID_UPDATED_EVENT",service.rooms[roomId]),"personal_audio_room"===roomType&&$rootScope.$broadcast("ON_PERSONAL_MEETING_OPEN_INVITE_ID_UPDATED_EVENT"));break;case"delete":Object.keys(service.openInviteIdByRoomId).forEach((function(key){service.openInviteIdByRoomId[key]&&service.openInviteIdByRoomId[key].openInviteId===openInviteId&&key===roomId&&($log.info("[roomService] onRoomMessageConfig -- openinviteId removed from "+key),service.openInviteIdByRoomId[key]={},$rootScope.$broadcast("ON_OPEN_INVITE_ID_DELETED_EVENT",service.rooms[roomId]))}));break;default:$log.info("[roomService] onRoomMessageConfig -- openinviteId - unkown action : "+openInviteAction)}}var meetingElem=stanzaElem.find("meeting");if("management"===stanzaElem.attr("type")&&meetingElem.length>0){$log.debug("[roomService] onRoomMessageConfig -- management meeting event");var meetingAction=meetingElem.attr("action");switch(roomId=meetingElem.find("roomid").length?meetingElem.find("roomid").text():-1,meetingAction){case"saved":service.currentPersonalAudioRoomId="",$log.debug("meeting saved: "+roomId),$rootScope.$broadcast("ON_MEETING_SAVED_EVENT",roomId);break;case"deleted":$log.debug("meeting deleted: "+roomId),service.currentPersonalAudioRoomId="",$rootScope.$broadcast("ON_MEETING_DELETED_EVENT",roomId);break;case"created":$log.debug("meeting created: "+roomId),service.personalAudioRoomId=roomId,service.currentPersonalAudioRoomId=roomId,$rootScope.$broadcast("ON_MEETING_CREATED_EVENT",roomId);break;case"updated":$log.debug("meeting updated: "+roomId),service.personalAudioRoomId=roomId,service.currentPersonalAudioRoomId=roomId,$rootScope.$broadcast("ON_MEETING_UPDATED_EVENT",roomId)}}return!0}catch(error){return $log.info("[roomService] onRoomMessageConfig  -- failure -- "+error.message),!0}},service.onRoomPresence=function(stanza){try{var stanzaElem=angular.element(stanza),fromJid=stanzaElem.attr("from"),fromRoomBareJid=xmppService.getBareJidFromJid(fromJid),fromUserJid=xmppService.getResourceFromJid(fromJid),statusElems=stanzaElem.find("status"),statusCode=null;statusElems.each((function(__index,statusElem){"332"===$(statusElem).attr("code")&&(statusCode="332"),"338"===$(statusElem).attr("code")&&(statusCode="338"),"339"===$(statusElem).attr("code")&&(statusCode="339")}));var room=service.getRoomByJid(fromRoomBareJid);return room&&("338"===statusCode?($log.info("[roomService] onRoomPresence - "+room.dbId+"- Deactivated"),room.isActive=!1,$rootScope.$broadcast(service.ROOM_UPDATE_EVENT,room)):"339"===statusCode?($log.info("[roomService] onRoomPresence - "+room.dbId+"- Reactivated"),service.sendInitialRoomPresenceSync(room),room.isActive=!0,$rootScope.$broadcast(service.ROOM_UPDATE_EVENT,room)):($log.info("[roomService] onRoomPresence -- "+room.dbId),-1!==fromUserJid.indexOf("/")&&(fromUserJid=xmppService.getBareJidFromJid(fromUserJid)),contactService.isUserContactJid(fromUserJid)?"332"===statusCode?($log.error("[roomService] disconnected from room "+room.getNameForLogs()+" because of a system shutdown"),service.sendInitialRoomPresenceSync(room)):room.initPresPromise&&($log.info("[roomService] onRoomPresence - initPresPromise resolved"),room.initPresPromise.resolve(room),room.initPresInterval&&$interval.cancel(room.initPresInterval),room.initPresPromise=null,$rootScope.$broadcast(service.ROOM_UPDATE_EVENT,room),room.initPresPromiseReceived=!0):room.dbId&&!service.rooms[room.dbId]&&service.getServerRoom(room.dbId))),!0}catch(error){return $log.error("[roomService] onRoomPresence error "+error),!0}},service.updateUserStatus=function(room,user,status){if($log.info("[roomService] "+user.status+" || "+status),contactService.isUserContactJid(user.contact.jid)&&user.status!==status)switch($log.info("[roomService] my new status "+status),status){case"deleted":delete service.roomsByJids[room.jid],delete service.rooms[room.dbId],$log.info("[roomService] deleteRoom successfully ("+room.dbId+")"),service.sendUnavailableRoomPresence(room),service.computeInvitationCounter(),room.isMeetingRoom()&&$rootScope.$broadcast("MEETING_DELETE_EVENT",room),$rootScope.$broadcast(service.ROOM_UPDATE_EVENT,room,"remove");break;case"unsubscribed":$log.info("[roomService] unsubscribed successfully ("+room.dbId+")"),service.sendUnavailableRoomPresence(room),room.status=service.RoomUserStatus.UNSUBSCRIBED,user.status=status,room.updateAvatarInfo(),room.isModerator=!1,service.computeInvitationCounter(),$rootScope.$broadcast(service.ROOM_UPDATE_EVENT,room);break;case"accepted":room.status=service.RoomUserStatus.ACCEPTED,user.status=status,fileStorageService.retrieveReceivedFilesForRoom(room.dbId).then((function(){service.sendInitialRoomPresenceSync(room),room.updateAvatarInfo(),service.computeInvitationCounter(),$rootScope.$broadcast(service.ROOM_UPDATE_EVENT,room),service.getServerRoom(room.dbId).then((function(room){$rootScope.$broadcast(service.ROOM_UPDATE_EVENT,room),room.confEndpoints&&room.confEndpoints.length&&"webrtc"===room.confEndpoints[0].mediaType&&$rootScope.$broadcast("ON_CONFERENCE_STARTED_INVITATION",room)})).catch((function(){$log.warn("[roomService] getServerRoom "+room.dbId+" failed")}))}));break;case"rejected":delete service.roomsByJids[room.jid],delete service.rooms[room.dbId],room.status=service.RoomUserStatus.REJECTED,user.status=status,service.computeInvitationCounter(),$rootScope.$broadcast(service.ROOM_UPDATE_EVENT,room)}else user&&!contactService.isUserContactJid(user.contact.jid)&&($log.info("[roomService] Update user with status "+status),user.status===service.RoomUserStatus.DELETED&&status===service.RoomUserStatus.ACCEPTED&&(user.date=new Date,user.privilege===Room.Privilege.MODERATOR&&(user.privilege=Room.Privilege.USER)),user.status=status,room.updateAvatarInfo(),service.refreshMemberAndOrganizerLists(room),$rootScope.$broadcast(service.ROOM_UPDATE_EVENT,room))},service.findRoomsWithConfId=function(confId){return service.getRooms().filter((function(room){return!(!room.confEndpoints||!room.confEndpoints.length)&&room.confEndpoints.some((function(confEndpoint){return confEndpoint.confEndpointId===confId}))}))},service.removeConfIdInAllRooms=function(rooms){var actionPromises=[];return rooms.forEach((function(room){room.confEndpoints&&room.confEndpoints.length>0&&actionPromises.push(service.deleteRoomConferenceEndPoint(room,room.confEndpoints[0].confEndpointId))})),$q.all(actionPromises)},service.getCreationDate=function(room){return room.creationDate?moment(room.creationDate):moment()},service.getLastActivityDate=function(room){return room.lastActivityDate?moment(room.lastActivityDate):room.creationDate?moment(room.creationDate):moment()},service.sortByDate=function(dateA,dateB){var res=1;return dateA&&dateB&&(res=dateA.value-dateB.value),res},service.resetOpenInviteId=function(roomId){return new Promise((function(resolve,reject){var serverUrl=service.portalURL+"users/"+contactService.userContact.dbId+"/public-links/reset";$http({method:"PUT",url:serverUrl,headers:authService.getRequestHeader(),data:{roomId:roomId}}).then((function(response){var openInviteData=response.data.data;openInviteData&&openInviteData.openInviteId&&openInviteData.roomId&&($log.info("[roomService] resetOpenInviteId success - openinviteId "+openInviteData.openInviteId+" bound to room "+roomId),service.openInviteIdByRoomId[openInviteData.roomId]={},service.openInviteIdByRoomId[openInviteData.roomId].roomType=openInviteData.roomType,service.openInviteIdByRoomId[openInviteData.roomId].openInviteId=openInviteData.openInviteId,service.openInviteIdByRoomId[openInviteData.roomId].openInviteLink=config.webUrl.replace("web","meet")+"/"+openInviteData.openInviteId),resolve(openInviteData.openInviteId)}),(function(){$log.error("[contactService] resetOpenInviteId failure"),reject(new Error("resetOpenInviteId failure"))}))}))},service.bindOpenInviteIdToRoom=function(room){return new Promise((function(resolve,reject){var url=service.portalURL+"users/"+room.ownerContact.dbId+"/public-links/bind",data={roomId:room.dbId};$http({method:"POST",url:url,headers:authService.getPostHeader(),data:data}).then((function(response){var openInviteData=response.data.data;openInviteData&&openInviteData.roomId&&openInviteData.roomType&&openInviteData.openInviteId&&($log.info("[roomService] createRoomOpenInviteId -- SUCCESS - room "+openInviteData.roomId+" with type "+openInviteData.roomType+" bound to openInviteId "+openInviteData.openInviteId),service.openInviteIdByRoomId[openInviteData.roomId]={},service.openInviteIdByRoomId[openInviteData.roomId].roomType=openInviteData.roomType,service.openInviteIdByRoomId[openInviteData.roomId].openInviteId=openInviteData.openInviteId,service.openInviteIdByRoomId[openInviteData.roomId].openInviteLink=config.webUrl.replace("web","meet")+"/"+openInviteData.openInviteId),resolve(service.rooms[room.dbId])})).catch((function(error){var errorMessage="createRoomOpenInviteId -- FAILURE -- "+error.message;$log.error("[roomService] "+errorMessage),reject(new Error(errorMessage))}))}))},service.unbindOpenInviteFromRoom=function(roomId){return $q((function(resolve,reject){$http({method:"PUT",url:service.portalURL+"users/"+contactService.userContact.dbId+"/public-links/unbind",headers:authService.getRequestHeader(),data:{roomId:roomId}}).then((function(){$log.info("[roomService] openInvite successfully unbound"),resolve()}),(function(){$log.error("[roomService] unbindOpenInvite failure"),reject(new Error("unbindOpenInvite failure"))}))}))},service.joinRoomUsingOpenInviteId=function(openInviteId){return $q((function(resolve,reject){$http({method:"POST",url:config.restServerUrl+"/api/rainbow/enduser/v1.0/rooms/open-invites",headers:authService.getRequestHeader(),data:{openInviteId:openInviteId}}).then((function(response){var openInvitesData=response.data.data;openInvitesData&&openInvitesData.roomId?resolve(openInvitesData.roomId):reject()})).catch((function(err){var error=errorHelperService.handleError(err);$log.error("[roomService] Error retrieveRoomFromOpenInvite"),reject(error)}))}))},service.retrieveOpenInviteData=function(type,roomId){return $log.debug("[roomService] retrieveOpenInviteData - type: "+type+" - roomId: "+roomId),new Promise((function(resolve,reject){var urlParams="";roomId&&(urlParams+="?roomId="+roomId),type&&(urlParams+=urlParams?"&type="+type:"?type="+type);var url=service.portalURL+"users/"+contactService.userContact.dbId+"/public-links"+urlParams;$http({method:"GET",url:url,headers:authService.getPostHeader()}).then((function(response){var openInviteData=response.data.data;openInviteData&&openInviteData.length?($log.debug("[roomService] retrieveOpenInviteData -- SUCCESS - found "+openInviteData.length),openInviteData.forEach((function(openInvitePair){openInvitePair.roomId&&(service.openInviteIdByRoomId[openInvitePair.roomId]={},service.openInviteIdByRoomId[openInvitePair.roomId].roomType=openInvitePair.roomType,service.openInviteIdByRoomId[openInvitePair.roomId].openInviteId=openInvitePair.openInviteId,service.openInviteIdByRoomId[openInvitePair.roomId].openInviteLink=config.webUrl.replace("web","meet")+"/"+openInvitePair.openInviteId,$log.debug("[roomService] retrieveOpenInviteData - openInviteId "+openInvitePair.openInviteId+" set for room "+openInvitePair.roomId))})),resolve(openInviteData)):($log.debug("[roomService] retrieveOpenInviteData -- FAILURE - none found"),reject())})).catch((function(error){var errorMessage="retrieveOpenInviteData -- FAILURE -- "+error.message;$log.error("[roomService] "+errorMessage),reject(new Error(errorMessage))}))}))},service.retrievePersonalAudioRoom=function(){var force=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(!force&&service.personalAudioRoomId&&service.getRoomById(service.personalAudioRoomId))return $log.debug("[roomService] retrievePersonalAudioRoom from service data"),service.getRoomById(service.personalAudioRoomId);var defer=$q.defer();$log.debug("[roomService] retrievePersonalAudioRoom from server");var url=service.portalURL+"meetings/personal";return $http({method:"GET",url:url,headers:authService.getPostHeader()}).then((function(response){var meetingRoomData=response.data.data;if(meetingRoomData.id){service.personalAudioRoomId=meetingRoomData.id;var room=service.getRoomById(meetingRoomData.id);room?service.updateRoomData(room,meetingRoomData):service.createRoomFromData(meetingRoomData),defer.resolve(service.getRoomById(meetingRoomData.id))}else{var error=new Error("Wrong data from server");defer.reject(error)}})).catch((function(error){var errorMessage="retrievePersonalAudioRoom -- FAILURE -- ".concat(error.message);$log.error("[roomService] ".concat(errorMessage)),defer.reject(new Error(errorMessage))})),defer.promise},service.retrieveCurrentPersonalAudioRoom=function(){var force=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(!force&&service.currentPersonalAudioRoomId&&service.getRoomById(service.currentPersonalAudioRoomId))return $log.debug("[roomService] retrieveCurrentPersonalAudioRoom from service data"),service.getRoomById(service.currentPersonalAudioRoomId);var defer=$q.defer();return $log.debug("[roomService] retrieveCurrentPersonalAudioRoom from server"),$http({method:"GET",url:"".concat(service.portalURL,"meetings/current"),headers:authService.getPostHeader()}).then((function(response){var meetingRoomData=response.data.data;if(meetingRoomData.id){service.currentPersonalAudioRoomId=meetingRoomData.id;var room=service.getRoomById(meetingRoomData.id);room?service.updateRoomData(room,meetingRoomData):service.createRoomFromData(meetingRoomData),defer.resolve(service.getRoomById(meetingRoomData.id))}else{var error=new Error("Wrong data from server");defer.reject(error)}})).catch((function(error){var errorMessage="retrieveCurrentPersonalAudioRoom -- FAILURE -- ".concat(error.message);$log.info("[roomService] ".concat(errorMessage)),defer.reject(new Error(errorMessage))})),defer.promise},service.reUseMeetingRoom=function(roomId){$log.debug("[roomService] reUseMeetingRoom - ".concat(roomId));var defer=$q.defer();if(!roomId){var error=new Error("reUseMeetingRoom - missing parameter");this.logger.error(error.message),defer.reject(error)}return $http({method:"PUT",url:"".concat(service.portalURL,"meetings/").concat(roomId,"/reuse"),headers:authService.getPostHeader()}).then((function(response){var meetingRoomData=response.data.data;if(meetingRoomData.id){var room=service.getRoomById(meetingRoomData.id);room?service.updateRoomData(room,meetingRoomData):service.createRoomFromData(meetingRoomData),defer.resolve(service.getRoomById(meetingRoomData.id))}else{var error=new Error("Wrong data from server");defer.reject(error)}})).catch((function(error){var errorMessage="reUseMeetingRoom -- FAILURE -- ".concat(error.message);$log.error("[roomService] ".concat(errorMessage)),defer.reject(new Error(errorMessage))})),defer.promise},service.deletePersonalMeetingRoom=function(){$log.debug("[roomService] deletePersonalMeetingRoom");var defer=$q.defer();return $http({method:"PUT",url:"".concat(service.portalURL,"meetings/delete"),headers:authService.getPostHeader()}).then((function(response){var meetingRoomData=response.data.data;if(meetingRoomData.id){var room=service.getRoomById(meetingRoomData.id);room?service.updateRoomData(room,meetingRoomData):service.createRoomFromData(meetingRoomData),service.currentPersonalAudioRoomId=meetingRoomData.id,service.personalAudioRoomId=meetingRoomData.id,$rootScope.$broadcast("ON_MEETING_CREATED_EVENT",meetingRoomData.id),defer.resolve(service.getRoomById(meetingRoomData.id))}else{var error=new Error("Wrong data from server");defer.reject(error)}})).catch((function(error){var errorMessage="deletePersonalMeetingRoom -- FAILURE -- ".concat(error.message);$log.error("[roomService] ".concat(errorMessage)),defer.reject(new Error(errorMessage))})),defer.promise},service.saveCurrentPersonalMeetingRoom=function(newName){$log.debug("[roomService] saveCurrentPersonalMeetingRoom");var defer=$q.defer();return $http({method:"PUT",url:"".concat(service.portalURL,"meetings/save"),headers:authService.getPostHeader(),data:{name:newName}}).then((function(response){var meetingRoomData=response.data.data;if(meetingRoomData.id){service.currentPersonalAudioRoomId=meetingRoomData.id;var room=service.getRoomById(meetingRoomData.id);room?service.updateRoomData(room,meetingRoomData):service.createRoomFromData(meetingRoomData),service.currentPersonalAudioRoomId=meetingRoomData.id,service.personalAudioRoomId=meetingRoomData.id,$rootScope.$broadcast("ON_MEETING_CREATED_EVENT",meetingRoomData.id),defer.resolve(service.getRoomById(meetingRoomData.id))}else{var error=new Error("Wrong data from server");defer.reject(error)}})).catch((function(error){var errorMessage="saveCurrentPersonalMeetingRoom -- FAILURE -- ".concat(error.message);throw $log.error("[roomService] ".concat(errorMessage)),new Error(errorMessage)})),defer.promise},service.getPersonalAudioRoomOpenInviteIdLink=function(){return service.getOpenInviteIdLinkForRoom(service.personalAudioRoomId)},service.getOpenInviteIdLinkForRoom=function(roomId){return service.openInviteIdByRoomId[roomId]?service.openInviteIdByRoomId[roomId].openInviteLink:null},service.getOpenInviteIdForRoom=function(roomId){return service.openInviteIdByRoomId[roomId]?service.openInviteIdByRoomId[roomId].openInviteId:null},service.getName=function(room){return room.name},service.sortByName=function(nameA,nameB){return nameA&&nameB&&"string"===nameA.type&&"string"===nameB.type&&nameA.value&&nameB.value?nameA.value.localeCompare(nameB.value):-1},service.sortObjectByProperty=function(property_name){return function(a,b){return a[property_name]<b[property_name]?-1:a[property_name]>b[property_name]?1:0}}}])},function(module,exports){!function(){"use strict";angular.module("rainbow").service("groupService",["$q","$rootScope","$log","$http","authService","contactService","xmppService","Group","usersService","utilService",function($q,$rootScope,$log,$http,authService,contactService,xmppService,Group,usersService,utilService){var service=this;this.started=!1,service.ON_REMOVE_GROUP_USER_EVENT="ON_REMOVE_GROUP_USER_EVENT",service.ON_ADD_GROUP_USER_EVENT="ON_ADD_GROUP_USER_EVENT",service.ON_GROUP_USERS_UPDATE_EVENT="ON_GROUP_USERS_UPDATE_EVENT",service.ON_CREATED_GROUP_EVENT="ON_CREATED_GROUP_EVENT",service.ON_UPDATE_GROUP_EVENT="ON_UPDATE_GROUP_EVENT",service.ON_REMOVED_GROUP_EVENT="ON_REMOVED_GROUP_EVENT",this.start=function(){$log.info(""),$log.info("[groupService] === STARTING ==="),service.portalURL=config.restServerUrl+"/api/rainbow/enduser/v1.0/users/"+authService.userId+"/";var defered=$q.defer();return service.$q=$q,service.groups=null,contactService.userContact.isCPaaSGuest()?defered.resolve():(this.attachHandlers(),this.getGroups(),service.started=!0,$log.info("[groupService] === STARTED ==="),defered.resolve(),defered.promise)},this.stop=function(){return $log.info("[groupService] === STOPPING ==="),service.conversations=null,service.groups=null,this.groupMessageHandlerRef&&(xmppService.deleteHandler(this.groupMessageHandlerRef),this.groupMessageHandlerRef=null),this.started=!1,$log.info("[groupService] === STOPPED ==="),$q.when()},this.getGroups=function(){return service.groups?$q.when(service.groups):service.getRemoteGroups()},service.getGroupsAsArray=function(){var groupsArray=[];for(var key in service.groups)service.groups.hasOwnProperty(key)&&groupsArray.push(service.groups[key]);return groupsArray},this.searchGroups=function(criteria){var queries=criteria.toLowerCase().trim().split(/[ ]+/);return service.groups.filter((function(group){var names=group.name.toLowerCase().trim().split(/[ ]+/);return queries.every((function(query){return names.some((function(name,index){return!(!name.length||0!==utilService.removeDiacritis(name).indexOf(utilService.removeDiacritis(query)))&&(names[index]="",group._displayName=utilService.removeDiacritis(group.name),!0)}))}))}))},this.getRemoteGroups=function(){$log.info("[groupService] getGroups");var defered=$q.defer();return $http({method:"GET",url:service.portalURL+"groups?format=full",headers:authService.getRequestHeader()}).then((function(response){var data=response.data.data;$log.info("[groupService] getGroups success (find "+response.data.total+" group(s))"),service.groups=[];var usersPromises=[];return data.forEach((function(groupData){var group=Group.createFromData(groupData);service.groups.push(group),angular.forEach(groupData.users,(function(user_id){usersPromises=contactService.getContactByDBId(user_id).then((function(contact){contact&&group.users.push(contact)}))})),service.logGroupUsers(group),service.sortUsersInGroup(group)})),$q.all(usersPromises)}),(function(response){var errorMessage="getGroups"+service.handleErrorMessage(response);defered.reject(new Error(errorMessage)),$log.error("[groupService] "+errorMessage)})).then((function(){defered.resolve(service.groups)})),defered.promise};var addGroupUserAct=function(group_id,user_id){return $q((function(resolve){service.groups.some((function(group){return group.id===group_id&&(group.users.some((function(user){return user_id===user.dbId}))?(resolve(group),$rootScope.$broadcast(service.ON_ADD_GROUP_USER_EVENT,group_id,user_id),!0):(contactService.getContactByDBId(user_id).then((function(contact){group.users.push(contact),service.sortUsersInGroup(group);var Wgroups=[group];contact.getGroups()?contact.getGroups().push(group):contact.setGroups(Wgroups),$rootScope.$broadcast(service.ON_ADD_GROUP_USER_EVENT,group_id,user_id),resolve(group)})),!0))}))||($rootScope.$broadcast(service.ON_ADD_GROUP_USER_EVENT,group_id,user_id),resolve())}))};this.getGroup=function(group_id){$log.info("[groupService] getGroup  for "+group_id);var defered=$q.defer(),group=null;return $http({method:"GET",url:service.portalURL+"groups/"+group_id,headers:authService.getRequestHeader()}).then((function(response){var groupData=response.data.data,usersPromises=[];return group=Group.createFromData(groupData),$log.info("[groupService] getGroup success for "+group.name+" : "+group.id),service.groups.some((function(item,index){return item.id===groupData.id&&(service.groups[index]=group,angular.forEach(groupData.users,(function(user){usersPromises=contactService.getContactByDBId(user.id).then((function(contact){contact&&(service.groups[index].users.push(contact),service.sortUsersInGroup(service.groups[index]))}))})),!0)}))||(service.groups.push(group),angular.forEach(groupData.users,(function(user){usersPromises=contactService.getContactByDBId(user.id).then((function(contact){if(contact){group.users.push(contact),service.sortUsersInGroup(group);var Wgroups=[group];contact.getGroups()?contact.getGroups().push(group):contact.setGroups(Wgroups)}}))}))),$q.all(usersPromises)}),(function(response){var errorMessage="getGroup"+service.handleErrorMessage(response);defered.reject(new Error(errorMessage)),$log.error("[groupService] "+errorMessage)})).then((function(){defered.resolve(group)})),defered.promise},this.addGroup=function(group){$log.info("[groupService] addGroup : "+group.name);var defered=$q.defer();return $http({method:"POST",url:service.portalURL+"groups",headers:authService.getPostHeader(),data:{name:group.name,comment:group.comment,isFavorite:group.isFavorite}}).then((function(response){$log.info("[groupService] addGroup success for : "+group.name);var groupData=response.data.data,new_group=Group.createFromData(groupData);defered.resolve(new_group)}),(function(response){var errorMessage="addGroup"+service.handleErrorMessage(response);defered.reject(new Error(errorMessage)),$log.error("[groupService] "+errorMessage)})),defered.promise};var removeGroupAct=function(group_id){angular.forEach(service.groups,(function(group,index){group.id===group_id&&service.groups.splice(index,1)}))};this.removeGroup=function(group_id){$log.info("[groupService] removeGroup : "+group_id);var defered=$q.defer();return $http({method:"DELETE",url:service.portalURL+"groups/"+group_id,headers:authService.getRequestHeader()}).then((function(){$log.info("[groupService] removeGroup success for : "+group_id),removeGroupAct(group_id),defered.resolve()}),(function(response){var errorMessage="removeGroup"+service.handleErrorMessage(response);defered.reject(new Error(errorMessage)),$log.error("[groupService] "+errorMessage)})),defered.promise},this.updateGroup=function(group){$log.info("[groupService] updateGroup for : "+group.name);var defered=$q.defer();return $http({method:"PUT",url:service.portalURL+"groups/"+group.id,headers:authService.getRequestHeader(),data:{name:group.name,comment:group.comment,isFavorite:group.isFavorite}}).then((function(){$log.info("[groupService] updateGroup success for : "+group.name),defered.resolve()}),(function(response){var error=service.handleErrorMessage(response,"updateGroup");defered.reject(error),$log.error("[groupService] "+error.message)})),defered.promise},this.getGroupUsers=function(group_id){$log.info("[groupService] getGroupUsers : "+group_id);var defered=$q.defer();return $http({method:"GET",url:service.portalURL+"groups/"+group_id+"/users",headers:authService.getRequestHeader()}).then((function(response){var data=response.data.data;$log.info("[groupService] getGroupUsers success for "+group_id+" (find "+response.data.total+" users(s))"),defered.resolve(data.users)}),(function(response){var errorMessage="getGroupUsers"+service.handleErrorMessage(response);defered.reject(new Error(errorMessage)),$log.error("[groupService] "+errorMessage)})),defered.promise},this.addGroupUser=function(group,user){$log.info("[groupService] addGroupUser");var defered=service.$q.defer();return group.users.some((function(item){return user.dbId===item.dbId}))?($log.info("[groupService] addGroupUser - user: "+user.id+" already exist in group: "+group.name+" - no remote action"),void defered.resolve()):($http({method:"POST",url:service.portalURL+"groups/"+group.id+"/users/"+user.dbId,headers:authService.getPostHeader()}).then((function(response){$log.info("[groupService] addGroupUser success: "+user.id+"/"+group.name),addGroupUserAct(group.id,user.dbId).then((function(updatedGroup){if(updatedGroup)defered.resolve(updatedGroup);else{var groupData=response.data.data,newGroup=Group.createFromData(groupData);defered.resolve(newGroup)}})),$rootScope.$broadcast(service.ON_GROUP_USERS_UPDATE_EVENT)}),(function(response){var errorMessage="addGroupUser"+service.handleErrorMessage(response);defered.reject(new Error(errorMessage)),$log.error("[groupService] "+errorMessage)})),defered.promise)};var removeGroupUserAct=function(group_id,user_id){angular.forEach(service.groups,(function(group){group.id===group_id&&(angular.forEach(group.users,(function(user_item,index){user_item.dbId===user_id&&(group.users.splice(index,1),user_item.getGroups()&&angular.forEach(user_item.getGroups(),(function(user_group_item,g_index){user_group_item.id===group_id&&user_item.getGroups().splice(g_index,1)})))})),service.sortUsersInGroup(group))}))};this.getGroupById=function(group_id){var result=null;return angular.forEach(service.groups,(function(group){group.id===group_id&&(result=group)})),result},this.removeGroupUser=function(group_id,user){$log.info("[groupService] removeGroupUser : "+group_id+"/"+user.id);var defered=$q.defer();return $http({method:"DELETE",url:service.portalURL+"groups/"+group_id+"/users/"+user.dbId,headers:authService.getRequestHeader()}).then((function(){$log.info("[groupService] removeGroupUser success : "+group_id+"/"+user.id),removeGroupUserAct(group_id,user.dbId);var group=service.getGroupById(group_id);$rootScope.$broadcast(service.ON_GROUP_USERS_UPDATE_EVENT),defered.resolve(group)}),(function(response){var errorMessage="removeGroupUser"+service.handleErrorMessage(response);defered.reject(new Error(errorMessage)),$log.error("[groupService] "+errorMessage)})),defered.promise},this.getUserGroups=function(user){if(!user)return $log.info("[groupService] getUserGroups for unknown user !"),$q.when();$log.info("[groupService] getUserGroups for user : "+user.id);var defered=$q.defer(),userGroups=user.getGroups();return userGroups?$q.when(userGroups):($http({method:"GET",url:service.portalURL+"groups?userId="+user.dbId,headers:authService.getRequestHeader()}).then((function(response){var data=response.data.data;$log.info("[groupService] getUserGroups success (find "+response.data.total+" group(s))");var groups=[];data.forEach((function(groupData){var group=Group.createFromData(groupData);groups.push(group)})),user.setGroups(groups),service.logUserGroups(user.displayNameForLog(),groups),defered.resolve(groups)}),(function(response){var errorMessage="getUserGroups"+service.handleErrorMessage(response);defered.reject(new Error(errorMessage)),$log.error("[groupService] "+errorMessage)})),defered.promise)},this.getGroupFromName=function(group_name){$log.info("[groupService] getGroupFromName : "+group_name);var defered=$q.defer();return this.getGroups().then((function(groups){var group=null;groups.forEach((function(item){item.name===group_name&&(group=item)})),defered.resolve(group)})),defered.promise},this.sortUsersInGroup=function(group){group&&(group.sortedUserList=usersService.getFilterAndOrderUsersGroupedByOrderLabelAndUpdateActivity(group.users,$rootScope.orderType,$rootScope.filterType,!0))},this.searchLocalGroup=function(searchText){var groupNamesMatches=[];return $log.info("[groupService] searchLocalGroup with text "+searchText),searchText&&service.groups.forEach((function(gr){gr.name.toLowerCase().indexOf(searchText.toLowerCase().toString())>=0&&groupNamesMatches.push(gr)})),groupNamesMatches},this.extractStanzaData=function(stanza){var defered=$q.defer(),stanzaData={outgoingMessage:!1};return stanzaData.body=angular.element(stanza)[0].firstChild,stanzaData.messageId=angular.element(stanza).attr("id"),defered.resolve(stanzaData),defered.promise},this.onGroupMessageReceived=function(stanza){try{return this.extractStanzaData(stanza).then((function(stanzaData){if(stanzaData.body&&"group"===stanzaData.body.tagName){var action=stanzaData.body.getAttribute("action"),scope=stanzaData.body.getAttribute("scope"),group_id=stanzaData.body.getAttribute("id");switch(scope){case"group":switch(action){case"create":service.getGroup(group_id),$rootScope.$broadcast(service.ON_CREATED_GROUP_EVENT,group_id);break;case"update":var name=stanzaData.body.getAttribute("name"),comment=stanzaData.body.getAttribute("comment"),isFavorite="true"===stanzaData.body.getAttribute("isFavorite");$rootScope.$broadcast(service.ON_UPDATE_GROUP_EVENT,group_id,name,comment,isFavorite);break;case"delete":removeGroupAct(group_id),$rootScope.$broadcast(service.ON_REMOVED_GROUP_EVENT,group_id)}break;case"user":var user_id=stanzaData.body.getAttribute("userId");switch(action){case"create":addGroupUserAct(group_id,user_id);break;case"delete":removeGroupUserAct(group_id,user_id),$rootScope.$broadcast(service.ON_REMOVE_GROUP_USER_EVENT,group_id,user_id)}}}})),!0}catch(error){return!0}},this.attachHandlers=function(){service.removeHandlers(),service.groupMessageHandlerRef||(service.groupMessageHandlerRef=xmppService.addHandler((function(stanza){return service.onGroupMessageReceived(stanza)}),null,"message","management"))},this.removeHandlers=function(){service.groupMessageHandlerRef&&(xmppService.deleteHandler(service.groupMessageHandlerRef),service.groupMessageHandlerRef=null)},this.handleBadRequest=function(message,response){if(400===response.status&&response.data.errorDetails&&response.data.errorDetails.length>0){var fieldErrors={};response.data.errorDetails.forEach((function(details){fieldErrors[details.param]=details.msg}));var error=new Error(message+" failure: BadRequest");return error.fieldErrors=fieldErrors,error}return null},this.handleErrorMessage=function(response){var errorMessage=" failure: ";return 500===response.status&&(errorMessage+="Internal server error"),403===response.status?errorMessage+="Access is forbidden for the current user":404===response.status?errorMessage+=response.data.errorMsg:response.data&&response.data.errorDetails&&(errorMessage+=response.data.errorDetails),errorMessage},this.logUserGroups=function(ownername,groups){var groupsNameContent="";groups&&0!==groups.length&&(groups.forEach((function(gr){gr.name&&(groupsNameContent+=" "+gr.name)})),$log.info("[groupService] logUserGroups for "+ownername+":"+groupsNameContent))},this.logGroupUsers=function(group){var UserNameContent;group&&group.users&&0!==group.users.length&&(UserNameContent=group.users.map((function(user){return user.displayNameForLog()})).join(" / "),$log.info("[groupService] logGroupUsers for "+group.name+": "+UserNameContent))}}])}()},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const call_model_1=__webpack_require__(0),TO_PILLAR_POLLING_MIN=3e5,TO_PILLAR_POLLING_MAX=9e5,TO_PILLAR_POLLING_STEP=TO_PILLAR_POLLING_MAX/500;var MPCallState;!function(MPCallState){MPCallState[MPCallState.Unknow=0]="Unknow",MPCallState[MPCallState.Free=1]="Free",MPCallState[MPCallState.WaitWebrtc=2]="WaitWebrtc",MPCallState[MPCallState.WaitTelephony=3]="WaitTelephony",MPCallState[MPCallState.CallOffer=4]="CallOffer",MPCallState[MPCallState.CallOnGoing=5]="CallOnGoing",MPCallState[MPCallState.CallActive=6]="CallActive",MPCallState[MPCallState.CallActiveNoWebMedia=7]="CallActiveNoWebMedia",MPCallState[MPCallState.TelCallReleasing=8]="TelCallReleasing",MPCallState[MPCallState.WebCallReleasing=9]="WebCallReleasing",MPCallState[MPCallState.RemoteControled=10]="RemoteControled",MPCallState[MPCallState.AnomalyCCS=11]="AnomalyCCS"}(MPCallState||(MPCallState={}));class WebrtcGatewayService{constructor($q,$rootScope,$log,$http,authService,$interval,xmppService,videoService,errorHelperService,contactService,profileService,uuid4,telephonyService,settingsService){this.$q=$q,this.$rootScope=$rootScope,this.$log=$log,this.$http=$http,this.authService=authService,this.$interval=$interval,this.xmppService=xmppService,this.videoService=videoService,this.errorHelperService=errorHelperService,this.contactService=contactService,this.profileService=profileService,this.uuid4=uuid4,this.telephonyService=telephonyService,this.settingsService=settingsService,this.started=!1,this.listeners=[],this.myContact=null,this.mediaPillarContact=null,this.mediaPillarConfigured=!1,this.mediaPillarAlive=!1,this.mediaPillarJid="",this.evtQueue=[],this.SEM=0,this.fakeMediaPillarJid="00a241586a984a869c73719007b27921@demo-all-in-one-dev-1.opentouch.cloud",this.TO_transition=15e3,this.TO_transition_long=3e4,this.TO_NoWebMedia=6e4,this.TO_NoWebMediaNotel=5e3,this.TO_PILLAR_POLLING=TO_PILLAR_POLLING_MIN,this.mediaPillarKeepAliveSuspend=!1}start(stats){let startDate=performance.now();return this.mediaPillarConfigured=!1,this.mediaPillarAlive=!1,this.portalURL=config.restServerUrl+"/api/rainbow/mediapillar/v1.0/mediapillars",this.myContact=this.contactService.userContact,this.mediaPillarContact=null,this.mediaPillarCallContext={callState:MPCallState.Free,keepAlive_TO:null,callState_TO:null,isOutgoingCall3PCC:!1,telephonyCallRefs:[],webrtcCallRef:null,mediaPillarJid:"",rainbowPhoneNumber:"",remoteExtension:"",previousCallConnectionId:null,previousCallStatus:null,updateContactFlag:!1},this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.TELEPHONY_WEBRTC_PSTN_CALLING)?(this.$log.info("[WebrtcGatewayService] === STARTING ==="),this.started=!0,this.SEM=0,this.resetEvtAutomaton(),this.getMediaPillarData().then(mediaPillarJid=>{this.mediaPillarContact=this.createMediaPillarContact(mediaPillarJid),this.mediaPillarCallContext.mediaPillarJid=mediaPillarJid,this.$log.info("[WebrtcGatewayService] Pillar remoteExtension used : "+this.mediaPillarCallContext.remoteExtension),""!==this.mediaPillarCallContext.remoteExtension?this.mediaPillarConfigured=!0:(this.$log.warn("[WebrtcGatewayService] no remoteExtention available "),this.mediaPillarConfigured=!1),this.mediaPillarConfigured&&this.dummyRegisterMediaPillarCall().then(()=>{this.mediaPillarAlive=!0,this.$log.info("[WebrtcGatewayService] Pseudo media pillar register OK with extension "+this.mediaPillarCallContext.remoteExtension),this.$rootScope.$broadcast("ON_WEBRTCGATEWAY_STATE_CHG",this.mediaPillarAlive)}).catch(error=>{this.mediaPillarAlive=!1,this.$log.info("[WebrtcGatewayService] Pseudo media pillar register KO"),this.$log.info("[WebrtcGatewayService] Initial polling activated on starting issue"),this.mediaPillarKeepAlivePolling("START",TO_PILLAR_POLLING_MIN),this.$rootScope.$broadcast("ON_WEBRTCGATEWAY_STATE_CHG",this.mediaPillarAlive)}),this.listeners.push(this.$rootScope.$on("ON_CONNECTION_STATE_CHANGE_EVENT",(event,status)=>{"disconnected"===status?(this.$log.info("[WebrtcGatewayService] onConnectionStateChangeEvent : disconnected then MP keepalive suspended"),this.mediaPillarKeepAliveSuspend=!0):"connected"===status&&(this.$log.info("[WebrtcGatewayService] onConnectionStateChangeEvent : connected then keepalive as necessary"),this.mediaPillarKeepAliveSuspend=!1,this.TO_PILLAR_POLLING=TO_PILLAR_POLLING_MIN)})),this.listeners.push(this.$rootScope.$on("ON_CALL_UPDATED_EVENT",(event,call,infoEvt)=>{this.onCallEvent(event,call,infoEvt)})),this.listeners.push(this.$rootScope.$on("ON_MEDIAPILLAR_CALL_REMOTE_CTRL_EVENT",(event,call)=>{this.onRemoteCtrlCall(event,call)}));var startDuration=Math.round(performance.now()-startDate);stats.push({service:"WebrtcGatewayService",startDuration:startDuration}),this.$log.info("[WebrtcGatewayService] === STARTED ("+startDuration+" ms) ===")}).catch(error=>{this.mediaPillarCallContext.mediaPillarJid="",this.mediaPillarCallContext.rainbowPhoneNumber="",this.mediaPillarCallContext.remoteExtension="",this.mediaPillarConfigured=!1,this.mediaPillarAlive=!1,this.$log.info("[WebrtcGatewayService] === STARTING FAILURE === "+error.message)})):this.$log.info("[WebrtcGatewayService] === NO WEBRTCGATEWAY ENVOLVED === "),this.$q.when()}stop(){return this.$log.info("[WebrtcGatewayService] === STOPPING ==="),this.started=!1,this.mediaPillarConfigured=!1,this.mediaPillarAlive=!1,this.mediaPillarKeepAlivePolling("STOP",0),this.mediaPillarCallContext&&(this.releaseMediaPillarCallContext(),this.mediaPillarCallContext.callState=MPCallState.Unknow,this.mediaPillarCallContext.mediaPillarJid="",this.mediaPillarCallContext.rainbowPhoneNumber="",this.mediaPillarCallContext.remoteExtension=""),this.listeners&&this.listeners.forEach(unregisterListener=>{unregisterListener()}),this.$log.info("[WebrtcGatewayService] === STOPPED ==="),this.$q.resolve()}onCallEvent(__event,call,infoEvt){if(this.isMediaPillarCallCase()){if(this.SEM++,this.$log.info("[WebrtcGatewayService] onCallEvent IN("+this.SEM+") state = "+this.mediaPillarCallContext.callState),this.$log.info("[WebrtcGatewayService] onCallEvent "+this.mediaPillarCallContext.callState+" --- "+call.type.value+"("+call.id+","+call.status.value+")"),infoEvt&&null!==infoEvt&&(this.$log.info("[WebrtcGatewayService] onCallEvent tel infoEvt : Evt = "+infoEvt.actionElemName+" / cause = "+infoEvt.cause),"updatecall"===infoEvt.actionElemName&&(this.mediaPillarCallContext.updateContactFlag=!0,this.$log.info("[WebrtcGatewayService] updateContactFlag = true"))),call.connectionId===this.mediaPillarCallContext.previousCallConnectionId&&call.status===this.mediaPillarCallContext.previousCallStatus&&!this.mediaPillarCallContext.updateContactFlag)return this.mediaPillarCallContext.previousCallConnectionId=call.connectionId,this.mediaPillarCallContext.previousCallStatus=call.status,this.$log.info("[WebrtcGatewayService] onCallEvent | DEBOUNCE EVT"),this.SEM--,void this.$log.info("[WebrtcGatewayService] onCallEvent OUT("+this.SEM+")");if(call.type.value===call_model_1.Call.Type.PHONE.value&&null===call.id)return this.mediaPillarCallContext.previousCallConnectionId=call.connectionId,this.mediaPillarCallContext.previousCallStatus=call.status,this.$log.info("[WebrtcGatewayService] onCallEvent | FILTER EVT null/error"),this.SEM--,void this.$log.info("[WebrtcGatewayService] onCallEvent OUT("+this.SEM+")");if(this.mediaPillarCallContext.previousCallConnectionId=call.connectionId,this.mediaPillarCallContext.previousCallStatus=call.status,this.evtQueue.push(call),this.evtQueue.length>1)return this.SEM--,void this.$log.info("[WebrtcGatewayService] onCallEvent OUT("+this.SEM+") evt pushed = "+call.status.value);for(;this.evtQueue.length;){try{this.processEvt(this.evtQueue[0])}catch(error){this.$log.error("[WebrtcGatewayService] onCallEvent queue processing | call : "+this.evtQueue[0].status.value+" Error : "+error)}this.evtQueue.splice(0,1)}this.SEM--,this.$log.info("[WebrtcGatewayService] onCallEvent OUT("+this.SEM+") state = "+this.mediaPillarCallContext.callState),0!==this.SEM&&(this.$log.error("[WebrtcGatewayService] onCallEvent OUT | Unmanaged Eventing Reentrancy Situation"),this.resetEvtAutomaton(),this.SEM=0)}}processEvt(call){if(this.$log.info("[WebrtcGatewayService] processEvt | process "+call.type.value+"("+call.id+","+call.status.value+") in MPcontextCallstate = "+this.mediaPillarCallContext.callState),call.type.value===call_model_1.Call.Type.PHONE.value){var telCallsNumber=this.telephonyService.getCalls().length;if((()=>{let ignoreEvt=!1;return call.status===call_model_1.Call.Status.DIALING&&(call.isSecondary=!0),call.isSecondary?call.status===call_model_1.Call.Status.UNKNOWN||call.status===call_model_1.Call.Status.RINGING_INCOMMING||call.status===call_model_1.Call.Status.QUEUED_INCOMMING||call.status===call_model_1.Call.Status.ACTIVE?(this.addTelCallRefs(call),ignoreEvt=!1):this.mediaPillarCallContext.callState===MPCallState.RemoteControled?(this.$log.info("[WebrtcGatewayService] processEvt |  RemoteControled state for call : "+call.id+" then ignore"),ignoreEvt=!0):(this.addTelCallRefs(call),this.mediaPillarCallContext.telephonyCallRefs.length>1?(this.$log.info("[WebrtcGatewayService] processEvt |  nthCall : "+this.mediaPillarCallContext.telephonyCallRefs.length+" then ignore"),ignoreEvt=!0):ignoreEvt):(this.$log.info("[WebrtcGatewayService] processEvt | NOT SECONDARY then ignore"),ignoreEvt=!0)})())this.$log.info("[WebrtcGatewayService] processEvt |  call("+call.id+" / SEC "+call.isSecondary+", "+call.status.value+") -> EVT IGNORED"),this.$log.info("[WebrtcGatewayService] processEvt |  telephonyCallRefs.length = "+this.mediaPillarCallContext.telephonyCallRefs.length),this.$log.info("[WebrtcGatewayService] processEvt |  calls.length = "+telCallsNumber);else switch(this.$log.info("[WebrtcGatewayService] processEvt |  call("+call.id+" / SEC "+call.isSecondary+", "+call.status.value+") -> EVT PROCESSED"),this.$log.info("[WebrtcGatewayService] processEvt |  telephonyCallRefs.length = "+this.mediaPillarCallContext.telephonyCallRefs.length),this.$log.info("[WebrtcGatewayService] processEvt |  calls.length = "+telCallsNumber),call.status){case call_model_1.Call.Status.RINGING_INCOMMING:this.onTelCallIncomming(call);break;case call_model_1.Call.Status.DIALING:this.onTelCallDialling(call);break;case call_model_1.Call.Status.RINGING_OUTGOING:this.onTelCallOutgoing(call);break;case call_model_1.Call.Status.ACTIVE:this.onTelCallActive(call);break;case call_model_1.Call.Status.UNKNOWN:this.onTelCallReleasing(call)}}else if(this.isMediaPillarJid(this.xmppService.getBareJidFromJid(call.fullJid)))switch(call.status){case call_model_1.Call.Status.RINGING_INCOMMING:this.onWebrtcCallIncomming(call);break;case call_model_1.Call.Status.CONNECTING:this.onWebrtcCallConnecting(call);break;case call_model_1.Call.Status.ACTIVE:this.onWebrtcCallActive(call);break;case call_model_1.Call.Status.ANSWERING:this.onWebrtcCallAnswering(call);break;case call_model_1.Call.Status.UNKNOWN:this.onWebrtcCallReleasing(call)}else this.$log.info("[WebrtcGatewayService] processEvt | process call("+call.id+","+call.status.value+") -> Not a webrtcgateway case")}releaseMediaPillarCallContext(){this.mediaPillarCallContext.callState=MPCallState.Free,this.stopCallStateTimeOut(),this.mediaPillarCallContext.isOutgoingCall3PCC=!1,this.mediaPillarCallContext.updateContactFlag=!1,this.mediaPillarCallContext.telephonyCallRefs.length>0&&this.$log.warn("[WebrtcGatewayService] releaseMediaPillarCallContext | reset context but telephonyCallRefs not empty !"),null!==this.mediaPillarCallContext.webrtcCallRef&&this.$log.warn("[WebrtcGatewayService] releaseMediaPillarCallContext | reset context but webrtcCallRef not null !"),this.mediaPillarCallContext.telephonyCallRefs=[],this.mediaPillarCallContext.webrtcCallRef=null,this.mediaPillarCallContext.previousCallConnectionId=null,this.mediaPillarCallContext.previousCallStatus="",this.$log.log("[WebrtcGatewayService] releaseMediaPillarCallContext | =====  mediaPillarCallContext RELEASED  ===== ")}resetEvtAutomaton(){this.evtQueue=[]}stopCallStateTimeOut(){this.mediaPillarCallContext.callState_TO&&this.$interval.cancel(this.mediaPillarCallContext.callState_TO),this.mediaPillarCallContext.callState_TO=null}onRemoteCtrlCall(__event,call){this.$log.info("[WebrtcGatewayService] onRemoteCtrlCall for call "+call.id+" in previous state: "+this.mediaPillarCallContext.callState+": => Becomes REMOTECONTROLED"),this.mediaPillarCallContext.callState=MPCallState.RemoteControled,this.stopCallStateTimeOut()}addTelCallRefs(callRef){if(null==callRef)return void this.$log.warn("[WebrtcGatewayService] addTelCallRefs | ANOMALY callRef not valid");let alreadyIn=!1;for(var i=0;i<this.mediaPillarCallContext.telephonyCallRefs.length;i++)this.mediaPillarCallContext.telephonyCallRefs.length&&this.mediaPillarCallContext.telephonyCallRefs[i].id===callRef.id&&(alreadyIn=!0);alreadyIn||this.mediaPillarCallContext.telephonyCallRefs.push(callRef)}removeTelCallRefs(callRef){if(null==callRef)return void this.$log.warn("[WebrtcGatewayService] removeTelCallRefs | ANOMALY callRef not valid");let i=0;for(;i<this.mediaPillarCallContext.telephonyCallRefs.length;)this.mediaPillarCallContext.telephonyCallRefs[i].id===callRef.id?(this.mediaPillarCallContext.telephonyCallRefs.splice(i,1),0===i&&this.mediaPillarCallContext.telephonyCallRefs.length&&(this.mediaPillarCallContext.telephonyCallRefs[0].setMediaPillarCall(this.getMediaPillarCallContext()),this.$log.log("[WebrtcGatewayService] removeTelCallRefs | master MP call becomes : "+this.mediaPillarCallContext.telephonyCallRefs[0].id))):i++}putAsMasterTelCallRefs(callRef){if(null==callRef)return void this.$log.warn("[WebrtcGatewayService] putAsMasterTelCallRefs | ANOMALY callRef not valid");let i=-1;for(var j=0;j<this.mediaPillarCallContext.telephonyCallRefs.length;j++)this.mediaPillarCallContext.telephonyCallRefs[j].id===callRef.id&&(i=j);if(this.$log.log("[WebrtcGatewayService] putAsMasterTelCallRefs | master MP call is : "+callRef.id),0!==i)if(-1!==i){let replace=this.mediaPillarCallContext.telephonyCallRefs[0];this.mediaPillarCallContext.telephonyCallRefs[0]=callRef,this.mediaPillarCallContext.telephonyCallRefs[i]=replace,callRef.setMediaPillarCall(this.getMediaPillarCallContext())}else this.$log.warn("[WebrtcGatewayService] putAsMasterTelCallRefs | Anomaly call not in telephonyCallRefs")}isMasterTelCallRefs(callRef){return null==callRef?(this.$log.warn("[WebrtcGatewayService] isMasterTelCallRefs | ANOMALY callRef not valid"),!1):0!==this.mediaPillarCallContext.telephonyCallRefs.length&&this.mediaPillarCallContext.telephonyCallRefs[0].id===callRef.id}isInTelCallRefs(callRef){if(null==callRef)return void this.$log.warn("[WebrtcGatewayService] isInTelCallRefs | ANOMALY callRef not valid");let i=-1;for(var j=0;j<this.mediaPillarCallContext.telephonyCallRefs.length;j++)this.mediaPillarCallContext.telephonyCallRefs[j].id===callRef.id&&(i=j);return-1!==i}replaceCallRefs(newCallRef,oldCallRef){if(null==newCallRef||null==oldCallRef)return void this.$log.warn("[WebrtcGatewayService] replaceCallRefs | ANOMALY callRef not valid");let flagNewAlreadyExist=!1,flagNewLinked=newCallRef.isMediaPillarCall(),flagOldLinked=oldCallRef.isMediaPillarCall();this.isInTelCallRefs(newCallRef)&&(flagNewAlreadyExist=!0,this.$log.warn("[WebrtcGatewayService] replaceCallRefs | ANOMALY newcallRef already existing"),this.removeTelCallRefs(newCallRef));let i=-1;for(var j=0;j<this.mediaPillarCallContext.telephonyCallRefs.length;j++)this.mediaPillarCallContext.telephonyCallRefs[j].id===oldCallRef.id&&(i=j);-1!==i?(this.mediaPillarCallContext.telephonyCallRefs[i]=newCallRef,flagOldLinked&&newCallRef.setMediaPillarCall(this.getMediaPillarCallContext()),oldCallRef.setMediaPillarCall(null),0===i&&this.$log.log("[WebrtcGatewayService] replaceCallRefs | master MP call becomes : "+this.mediaPillarCallContext.telephonyCallRefs[0].id)):(this.$log.warn("[WebrtcGatewayService] replaceCallRefs | ANOMALY oldCallRef not found"),flagNewAlreadyExist&&(this.addTelCallRefs(newCallRef),flagNewLinked&&newCallRef.setMediaPillarCall(this.getMediaPillarCallContext())))}automatonDefenseTimout(call){let actionLevel=0;if(null!=call)if(call.type.value===call_model_1.Call.Type.PHONE.value)switch(this.$log.log("[WebrtcGatewayService] automatonDefenseTimout | transition telcall call="+call.id+" evt="+call.status.value+" then timout"),call.status){case call_model_1.Call.Status.RINGING_OUTGOING:case call_model_1.Call.Status.RINGING_INCOMMING:break;default:this.mediaPillarCallContext.callState!==MPCallState.CallActive&&this.mediaPillarCallContext.callState!==MPCallState.CallActiveNoWebMedia&&this.mediaPillarCallContext.callState!==MPCallState.CallOffer&&this.mediaPillarCallContext.callState!==MPCallState.CallOnGoing&&(actionLevel=2)}else if(this.isMediaPillarJid(this.xmppService.getBareJidFromJid(call.fullJid)))switch(this.$log.log("[WebrtcGatewayService] automatonDefenseTimout | transition webrtc "+call.status.value+" then timout"),call.status){case call_model_1.Call.Status.ACTIVE:break;default:this.mediaPillarCallContext.callState!==MPCallState.CallActive&&this.mediaPillarCallContext.callState!==MPCallState.CallActiveNoWebMedia&&this.mediaPillarCallContext.callState!==MPCallState.CallOffer&&this.mediaPillarCallContext.callState!==MPCallState.CallOnGoing&&(actionLevel=3)}else this.$log.warn("[WebrtcGatewayService] automatonDefenseTimout | anomaly transition webrtc call but Not a webrtcgateway case"),actionLevel=2;else this.mediaPillarCallContext.callState!==MPCallState.CallActive&&this.mediaPillarCallContext.callState!==MPCallState.CallActiveNoWebMedia&&this.mediaPillarCallContext.callState!==MPCallState.RemoteControled&&this.mediaPillarCallContext.callState!==MPCallState.CallOffer&&this.mediaPillarCallContext.callState!==MPCallState.CallOnGoing&&(this.$log.log("[WebrtcGatewayService] automatonDefenseTimout | anomaly timout in unexpected state"),actionLevel=2);switch(0!==actionLevel&&this.$log.warn("[WebrtcGatewayService] automatonDefenseTimout | actionlevel "+actionLevel),actionLevel){case 0:break;case 1:this.TO_PILLAR_POLLING=TO_PILLAR_POLLING_MIN,this.mediaPillarAlive||this.mediaPillarKeepAlivePolling("START",this.TO_PILLAR_POLLING);break;case 2:this.TO_PILLAR_POLLING=TO_PILLAR_POLLING_MIN,this.mediaPillarAlive||this.mediaPillarKeepAlivePolling("START",this.TO_PILLAR_POLLING),this.releaseMediaPillarCallContext();break;case 3:this.TO_PILLAR_POLLING=TO_PILLAR_POLLING_MIN,this.mediaPillarAlive||this.mediaPillarKeepAlivePolling("START",this.TO_PILLAR_POLLING),this.MediaPillarReleaseWebrtcCall(),this.releaseMediaPillarCallContext();break;default:this.TO_PILLAR_POLLING=TO_PILLAR_POLLING_MIN,this.mediaPillarAlive||this.mediaPillarKeepAlivePolling("START",this.TO_PILLAR_POLLING),this.MediaPillarCallTerminator()}this.mediaPillarCallContext.callState!==MPCallState.Free&&(this.mediaPillarCallContext.callState_TO=this.$interval(()=>{this.automatonDefenseTimout(null)},this.TO_transition,1))}onTelCallIncomming(call){if(this.mediaPillarCallContext.telephonyCallRefs.length>1&&this.mediaPillarCallContext.callState!==MPCallState.Free&&this.mediaPillarCallContext.callState!==MPCallState.WaitTelephony&&this.mediaPillarCallContext.callState!==MPCallState.WaitWebrtc)return this.$log.info("[WebrtcGatewayService] onTelCallIncomming | nth calls BUT trig the GUI & link the call"),call.setMediaPillarCall(this.getMediaPillarCallContext()),this.$log.info("[WebrtcGatewayService] onTelCallIncomming | ON_CONVERSATION_CALL_UPDATED_EVENT for call = "+call.id),this.mediaPillarCallContext.updateContactFlag=!0,void this.$rootScope.$broadcast("ON_CONVERSATION_CALL_UPDATED_EVENT",{conversation:null,call:call});switch(this.$log.info("[WebrtcGatewayService] onTelCallIncomming | mediapilaryse as necessary for call "+call.id),this.mediaPillaryseTheCall(call,null)){case"Ok":if(this.stopCallStateTimeOut(),this.mediaPillarCallContext.callState_TO=this.$interval(()=>{this.automatonDefenseTimout(call)},this.TO_transition,1),!this.isMediaPillarOutgoingCall()&&this.mediaPillarCallContext.callState===MPCallState.CallOffer&&this.mediaPillarCallContext.webrtcCallRef)for(var i=0;i<this.mediaPillarCallContext.telephonyCallRefs.length;i++)this.mediaPillarCallContext.telephonyCallRefs[i].status!==call_model_1.Call.Status.RINGING_INCOMMING&&this.mediaPillarCallContext.telephonyCallRefs[i].status!==call_model_1.Call.Status.QUEUED_INCOMMING||(this.$log.info("[WebrtcGatewayService] onTelCallIncomming | ON_CONVERSATION_CALL_UPDATED_EVENT for call = "+call.id),this.mediaPillarCallContext.updateContactFlag=!0,this.$rootScope.$broadcast("ON_CONVERSATION_CALL_UPDATED_EVENT",{conversation:null,call:this.mediaPillarCallContext.telephonyCallRefs[i]}));break;case"Update":this.stopCallStateTimeOut(),this.isMediaPillarOutgoingCall()||!this.mediaPillarCallContext.webrtcCallRef||call.status!==call_model_1.Call.Status.RINGING_INCOMMING&&call.status!==call_model_1.Call.Status.QUEUED_INCOMMING?this.$log.info("[WebrtcGatewayService] onTelCallIncomming | ignore update call"):(this.$rootScope.$broadcast("ON_CONVERSATION_CALL_UPDATED_EVENT",{conversation:null,call:call}),this.$log.info("[WebrtcGatewayService] onTelCallIncomming | update call"));break;case"Ignore":this.$log.info("[WebrtcGatewayService] onTelCallIncomming | ignore evt");break;default:this.$log.error("[WebrtcGatewayService] onTelCallIncomming | media Pillar call anomaly "+status)}}onTelCallDialling(call){if(this.mediaPillarCallContext.callState===MPCallState.Free||this.mediaPillarCallContext.callState===MPCallState.WaitTelephony)switch(this.mediaPillarCallContext.isOutgoingCall3PCC=!0,this.mediaPillarCallContext.callState_TO=this.$interval(()=>{this.automatonDefenseTimout(call)},this.TO_transition,1),this.mediaPillaryseTheCall(call,null)){case"Ok":this.mediaPillarCallContext.webrtcCallRef&&this.mediaPillarCallContext.callState===MPCallState.CallOffer&&(this.videoService.answerCall(this.mediaPillarCallContext.webrtcCallRef,"audio"),this.$log.info("[WebrtcGatewayService] onTelCallDialling | outgoing3PCC then send webrtc proceed")),this.stopCallStateTimeOut(),this.mediaPillarCallContext.callState_TO=this.$interval(()=>{this.automatonDefenseTimout(call)},this.TO_transition,1);break;case"Ignore":case"Update":this.$log.info("[WebrtcGatewayService] onTelCallDialling | ignore evt");break;default:this.$log.error("[WebrtcGatewayService] onTelCallDialling | media Pillar call anomaly "+status),this.MediaPillarCallTerminator()}else this.mediaPillarCallContext.callState===MPCallState.CallOffer||this.mediaPillarCallContext.callState===MPCallState.CallOnGoing?(this.$log.warn("[WebrtcGatewayService] onTelCallDialling | media Pillar call anomaly, on state : "+this.mediaPillarCallContext.callState),this.$log.info("[WebrtcGatewayService] onTelCallDialling | ignored , on state : "+this.mediaPillarCallContext.callState)):(this.$log.warn("[WebrtcGatewayService] onTelCallDialling | media Pillar call anomaly, MP context not compatible"),this.MediaPillarCallTerminator())}onTelCallOutgoing(call){this.isMediaPillarOutgoingCall()?(this.stopCallStateTimeOut(),this.mediaPillarCallContext.callState_TO=this.$interval(()=>{this.automatonDefenseTimout(call)},this.TO_transition_long,1)):(this.$log.warn("[WebrtcGatewayService] onTelCallOutgoing | media Pillar, not a 1st 3PCC outgoing call then ignore & release MP CallContext"),this.releaseMediaPillarCallContext())}onTelCallActive(call){switch(this.mediaPillarCallContext.callState){case MPCallState.CallOnGoing:this.stopCallStateTimeOut(),this.mediaPillarCallContext.callState=MPCallState.CallActive;break;case MPCallState.TelCallReleasing:this.$log.warn("[WebrtcGatewayService] onTelCallActive | media Pillar recv tel active on state = "+this.mediaPillarCallContext.callState),this.$log.info("[WebrtcGatewayService] onTelCallActive | media Pillar , RE-ACTIVATION"),this.stopCallStateTimeOut(),call.setMediaPillarCall(this.getMediaPillarCallContext()),this.mediaPillarCallContext.callState=MPCallState.CallActive;break;case MPCallState.CallActive:this.$log.info("[WebrtcGatewayService] onTelCallActive | media Pillar , ignore tel active on state CallActive ");break;case MPCallState.WebCallReleasing:this.$log.info("[WebrtcGatewayService] onTelCallActive | media Pillar recv tel active on state WebCallReleasing then releaseMediaPillarCallContext"),this.releaseMediaPillarCallContext();break;case MPCallState.Free:this.$log.info("[WebrtcGatewayService] onTelCallActive | media Pillar recv tel active on state = 1 ; probably call taken on deskphone ; ignore active & release call context "),this.releaseMediaPillarCallContext();break;default:this.$log.info("[WebrtcGatewayService] onTelCallActive | Anomaly media Pillar recv tel active on state = "+this.mediaPillarCallContext.callState)}}onTelCallReleasing(call){this.telephonyService.getCalls().length;if(this.mediaPillarCallContext.telephonyCallRefs.length>1)return call.setMediaPillarCall(null),this.removeTelCallRefs(call),void this.$log.info("[WebrtcGatewayService] onTelCallReleasing -- "+call.id+" -- postpone mediaPillarCallContext release ;  remaining calls = "+this.mediaPillarCallContext.telephonyCallRefs.length);this.isMediaPillarReleasableCall()?(call.setMediaPillarCall(null),this.removeTelCallRefs(call),this.mediaPillarCallContext.webrtcCallRef&&this.mediaPillarCallContext.callState!==MPCallState.WebCallReleasing&&this.mediaPillarCallContext.callState!==MPCallState.RemoteControled?this.mediaPillarCallContext.callState!==MPCallState.TelCallReleasing?(this.mediaPillarCallContext.callState=MPCallState.TelCallReleasing,this.stopCallStateTimeOut(),this.mediaPillarCallContext.callState_TO=this.$interval(()=>{this.automatonDefenseTimout(call)},this.TO_transition,1),this.$log.info("[WebrtcGatewayService] onTelCallReleasing -- "+call.id+" -- wait web release: state = "+this.mediaPillarCallContext.callState)):this.$log.info("[WebrtcGatewayService] onTelCallReleasing -- "+call.id+" -- ignore telrelease on state = "+this.mediaPillarCallContext.callState):this.mediaPillarCallContext.callState!==MPCallState.Free&&(this.releaseMediaPillarCallContext(),this.$log.info("[WebrtcGatewayService] onTelCallReleasing -- "+call.id+" -- release MP context"))):(this.$log.warn("[WebrtcGatewayService] onTelCallReleasing | media Pillar call release anomaly on state = "+this.mediaPillarCallContext.callState),this.MediaPillarCallTerminator())}onWebrtcCallIncomming(call){if(this.mediaPillarCallContext.webrtcCallRef)this.$log.info("[WebrtcGatewayService] onWebrtcCallIncomming -- "+call.id+" --- ignored other incomming");else{if(this.mediaPillarCallContext.callState===MPCallState.WebCallReleasing&&0!==this.mediaPillarCallContext.telephonyCallRefs.length&&this.mediaPillarCallContext.telephonyCallRefs[0].status!==call_model_1.Call.Status.UNKNOWN)return this.$log.info("[WebrtcGatewayService] onWebrtcCallIncomming -- "+call.id+" --- re propose during established tel call"),this.mediaPillarCallContext.webrtcCallRef=call,this.videoService.answerCall(this.mediaPillarCallContext.webrtcCallRef,"audio"),this.stopCallStateTimeOut(),this.mediaPillarCallContext.callState_TO=this.$interval(()=>{this.automatonDefenseTimout(call)},this.TO_transition,1),void(this.mediaPillarCallContext.callState=MPCallState.CallOnGoing);switch(this.mediaPillaryseTheCall(null,call)){case"Ok":if(this.stopCallStateTimeOut(),this.mediaPillarCallContext.callState_TO=this.$interval(()=>{this.automatonDefenseTimout(call)},this.TO_transition,1),this.isMediaPillarOutgoingCall())this.videoService.answerCall(this.mediaPillarCallContext.webrtcCallRef,"audio"),this.$log.info("[WebrtcGatewayService] onWebrtcCallIncomming | outgoing3PCC then send webrtc proceed");else if(this.mediaPillarCallContext.callState===MPCallState.CallOffer)for(var i=0;i<this.mediaPillarCallContext.telephonyCallRefs.length;i++)this.mediaPillarCallContext.telephonyCallRefs[i].status!==call_model_1.Call.Status.RINGING_INCOMMING&&this.mediaPillarCallContext.telephonyCallRefs[i].status!==call_model_1.Call.Status.QUEUED_INCOMMING||(this.$log.info("[WebrtcGatewayService] onWebrtcCallIncomming | ON_CONVERSATION_CALL_UPDATED_EVENT for call = "+this.mediaPillarCallContext.telephonyCallRefs[i].id),this.$rootScope.$broadcast("ON_CONVERSATION_CALL_UPDATED_EVENT",{conversation:null,call:this.mediaPillarCallContext.telephonyCallRefs[i]}));break;case"Ignore":break;default:this.$log.error("[WebrtcGatewayService] onWebrtcCallIncomming | media Pillar call anomaly "+status)}}}onWebrtcCallConnecting(call){return this.mediaPillarCallContext.callState===MPCallState.CallActive?(this.$log.info("[WebrtcGatewayService] onWebrtcCallConnecting -- media Pillar call reconnecting attempts"),this.mediaPillarCallContext.callState=MPCallState.CallActiveNoWebMedia,this.stopCallStateTimeOut(),void(this.mediaPillarCallContext.callState_TO=this.$interval(()=>{this.timeOutCallActiveNoWebMedia()},this.TO_NoWebMedia,1))):this.mediaPillarCallContext.callState===MPCallState.TelCallReleasing?(this.$log.info("[WebrtcGatewayService] onWebrtcCallConnecting -- media Pillar webrtc call reconnecting while TelCallReleasing"),this.mediaPillarCallContext.callState=MPCallState.CallActiveNoWebMedia,this.stopCallStateTimeOut(),void(this.mediaPillarCallContext.callState_TO=this.$interval(()=>{this.timeOutCallActiveNoWebMedia()},this.TO_NoWebMediaNotel,1))):void 0}onWebrtcCallActive(call){this.mediaPillarCallContext.callState===MPCallState.CallActiveNoWebMedia&&(this.$log.info("[WebrtcGatewayService] onWebrtcCallConnecting -- media Pillar call reconnected"),this.mediaPillarCallContext.callState=MPCallState.CallActive,this.stopCallStateTimeOut())}onWebrtcCallAnswering(call){this.mediaPillarCallContext.callState=MPCallState.CallOnGoing,this.stopCallStateTimeOut(),this.mediaPillarCallContext.callState_TO=this.$interval(()=>{this.automatonDefenseTimout(call)},this.TO_transition,1)}onWebrtcCallReleasing(call){this.isMediaPillarReleasableCall()?(call.setMediaPillarCall(null),this.mediaPillarCallContext.webrtcCallRef=null,0!==this.mediaPillarCallContext.telephonyCallRefs.length&&this.mediaPillarCallContext.callState!==MPCallState.TelCallReleasing&&this.mediaPillarCallContext.callState!==MPCallState.RemoteControled?this.mediaPillarCallContext.callState!==MPCallState.WebCallReleasing?(this.mediaPillarCallContext.callState=MPCallState.WebCallReleasing,this.stopCallStateTimeOut(),this.mediaPillarCallContext.callState_TO=this.$interval(()=>{this.automatonDefenseTimout(call)},this.TO_transition,1),this.releasePbxCallIfPbxConnectionDown(),this.$log.info("[WebrtcGatewayService] onWebrtcCallReleasing -- "+call.id+" -- wait tel release: state = "+this.mediaPillarCallContext.callState)):this.$log.info("[WebrtcGatewayService] onWebrtcCallReleasing -- "+call.id+" -- ignore webrelease on state = "+this.mediaPillarCallContext.callState):(this.releaseMediaPillarCallContext(),this.$log.info("[WebrtcGatewayService] onWebrtcCallReleasing -- "+call.id+" -- release MP context"))):(this.$log.warn("[WebrtcGatewayService] onWebrtcCallReleasing | media Pillar call release anomaly on state = "+this.mediaPillarCallContext.callState),this.MediaPillarCallTerminator())}releasePbxCallIfPbxConnectionDown(){let activePbxCall=this.getActivePbxCall();activePbxCall&&activePbxCall.pbxConnectionDown&&(this.$log.info("[WebrtcGatewayService] releasePbxCallIfPbxConnectionDown | release call"+activePbxCall),this.telephonyService.releaseCall(activePbxCall),activePbxCall.mediaPillarCall=null)}mediaPillarMakeCall(phoneNumber,contact){this.$log.info("[WebrtcGatewayService] mediaPillarMakeCall");let mediaPillarJid=this.getMyMediaPillarJid();if(phoneNumber.length>6&&contact&&(phoneNumber=contact.phonePbx),this.videoService.makingCall=!0,""!==mediaPillarJid){var call,id="web_"+this.uuid4.generate();if(contact&&null!==contact)(call=call_model_1.Call.create(call_model_1.Call.Status.DIALING,id,call_model_1.Call.Type.WEBRTC,contact)).fullJid=mediaPillarJid,this.mediaPillarStartCall(call,phoneNumber,mediaPillarJid);else(call=call_model_1.Call.create(call_model_1.Call.Status.DIALING,id,call_model_1.Call.Type.WEBRTC,this.mediaPillarContact)).fullJid=mediaPillarJid,this.mediaPillarStartCall(call,phoneNumber,mediaPillarJid)}else this.$log.info("[WebrtcGatewayService] mediaPillarMakeCall ANOMALY no mediaPillarJid")}mediaPillarStartCall(call,phoneNumber,mediaPillarJid){this.$log.info("[WebrtcGatewayService] mediaPillarStartCall for phone number "+phoneNumber),this.initiateMediaPillarCall(call).then(()=>{this.dummyRegisterMediaPillarCall().then(()=>{this.$log.info("[WebrtcGatewayService] mediaPillarMakeCall for number "+phoneNumber),this.videoService.makeJingleCall(call,mediaPillarJid,phoneNumber)}).catch(error=>{this.$log.info("[WebrtcGatewayService] mediaPillarMakeCall ANOMALY dummyRegisterMediaPillarCall then abort call"),this.abortCall(call)})}).catch(error=>{this.$log.info("[WebrtcGatewayService] mediaPillarMakeCall ANOMALY initiateMediaPillarCall then abort call"),this.abortCall(call)})}abortCall(call){this.videoService.makingCall=!1,call&&this.videoService.removeCallObject(call),this.videoService.resetToSafeState()}initiateMediaPillarCall(call){return this.$q((resolve,reject)=>{this.$log.info("[WebrtcGatewayService] initiateMediaPillarCall");var mediaToGet=["audio"];this.videoService.getBrowserMedia(mediaToGet).then(stream=>{call.isInitiator=!0,this.videoService.localStreams.push(stream),this.videoService.calls[call.id]=call,call.localMedia=call.localMedia|call_model_1.Call.Media.AUDIO,this.contactService.setBusyState("dnd",this.videoService.calculatePresenceMessage(call)),this.$rootScope.$broadcast("ON_CALL_UPDATED_EVENT",call),resolve()}).catch(error=>{this.$log.info("[WebrtcGatewayService]   | initate call failure : "+JSON.stringify({error:error.message})),mediaToGet.indexOf("sharing")>=0||-1===error.toString().indexOf("getUserMedia")||this.videoService.openErrorPopup(),reject(error)})})}dummyRegisterMediaPillarCall(){return this.$q((resolve,reject)=>{var xmppIq=$iq({from:this.myContact.fullJid,to:this.mediaPillarCallContext.mediaPillarJid,type:"set"}).c("mediapillar",{xmlns:"urn:xmpp:janus:1"}).c("register").c("jidIm").t(this.contactService.userContact.jid).up().c("jidTel").t(this.contactService.userContact.jidtel).up().c("number").t(this.mediaPillarCallContext.rainbowPhoneNumber).up().c("displayName").t(this.myContact.displayName).up().c("secret").t(this.mediaPillarCallContext.rainbowPhoneNumber).up();this.xmppService.sendIQ(xmppIq).then(data=>{resolve()}).catch(error=>{this.IsMediaPillarUserSelected()&&this.$log.warn("[WebrtcGatewayService] dummyRegisterMediaPillarCall -- register failure -- "+error.message),reject(error)})})}getMediaPillarData(){return this.$q((resolve,reject)=>{this.$http({method:"GET",url:this.portalURL+"/data",headers:this.authService.getRequestHeader()}).then(response=>{if(this.$log.log("[WebrtcGatewayService] getMediaPillarData success"),response.data&&response.data.data){let prefix=response.data.data.prefix,rainbowPhoneNumber=response.data.data.rainbowPhoneNumber;prefix&&rainbowPhoneNumber&&(this.mediaPillarCallContext.rainbowPhoneNumber=rainbowPhoneNumber,this.mediaPillarCallContext.remoteExtension=prefix+rainbowPhoneNumber);let jid=response.data.data.jid_im;jid&&-1===jid.indexOf("/")&&(jid+="/mediapillar"),resolve(jid)}else this.$log.error("[WebrtcGatewayService] getMediaPillarData success -- missing data"),reject(new Error("[WebrtcGatewayService] getMediaPillarData -- missing data in response"))}).catch(errorResponse=>{let error=this.errorHelperService.handleError(errorResponse);this.$log.info("[WebrtcGatewayService] getMediaPillarData error -- "+error.message),reject(error)})})}mediaPillarKeepAlivePolling(cmd,timer){if(this.started)switch(cmd){case"START":this.mediaPillarCallContext&&this.mediaPillarCallContext.keepAlive_TO&&(this.$interval.cancel(this.mediaPillarCallContext.keepAlive_TO),this.mediaPillarCallContext.keepAlive_TO=null),this.mediaPillarCallContext.keepAlive_TO=this.$interval(()=>{this.mediaPillarKeepAlive()},timer,1);break;case"STOP":this.mediaPillarCallContext&&this.mediaPillarCallContext.keepAlive_TO&&this.$interval.cancel(this.mediaPillarCallContext.keepAlive_TO),this.mediaPillarCallContext.keepAlive_TO=null;break;default:this.$log.error("[WebrtcGatewayService] mediaPillarKeepAlivePolling cmd error : "+cmd)}}mediaPillarUserSelectAndPolling(selected){this.started&&(this.$log.log("[WebrtcGatewayService] mediaPillarUserSelectAndPolling : "+selected),selected?(this.mediaPillarKeepAlivePolling("START",this.TO_PILLAR_POLLING),this.mediaPillarKeepAlive()):this.mediaPillarAlive&&this.mediaPillarKeepAlivePolling("STOP",0))}mediaPillarKeepAlive(){if(this.$log.info("[WebrtcGatewayService] mediaPillarKeepAlive"),this.mediaPillarKeepAliveSuspend)this.$log.info("[WebrtcGatewayService] KeepAlive suspended");else{let newSampleMediaPillarState=!1;this.dummyRegisterMediaPillarCall().then(()=>{newSampleMediaPillarState=!0,this.$log.info("[WebrtcGatewayService] mediaPillarKeepAlive webrtcgateway is UP")}).catch(error=>{newSampleMediaPillarState=!1,this.$log.info("[WebrtcGatewayService] mediaPillarKeepAlive webrtcgateway is DOWN")}).finally(()=>{this.mediaPillarAlive!==newSampleMediaPillarState&&(this.mediaPillarAlive=newSampleMediaPillarState,this.$rootScope.$broadcast("ON_WEBRTCGATEWAY_STATE_CHG",this.mediaPillarAlive),this.$log.info("[WebrtcGatewayService] mediaPillarKeepAlive ON_WEBRTCGATEWAY_STATE_CHG")),this.mediaPillarAlive?this.TO_PILLAR_POLLING<TO_PILLAR_POLLING_MAX?this.TO_PILLAR_POLLING+=TO_PILLAR_POLLING_STEP:this.TO_PILLAR_POLLING=TO_PILLAR_POLLING_MAX:(this.TO_PILLAR_POLLING=TO_PILLAR_POLLING_MIN,this.mediaPillarKeepAlivePolling("START",this.TO_PILLAR_POLLING)),this.IsMediaPillarUserSelected()&&this.mediaPillarAlive&&this.mediaPillarKeepAlivePolling("START",this.TO_PILLAR_POLLING)})}}forceMPpooling(){this.started&&(this.$log.log("[WebrtcGatewayService] forceMPpooling "),this.TO_PILLAR_POLLING=TO_PILLAR_POLLING_MIN,this.mediaPillarKeepAlivePolling("START",this.TO_PILLAR_POLLING),this.$rootScope.$broadcast("ON_WEBRTCGATEWAY_STATE_CHG",this.mediaPillarAlive))}getMyMediaPillarJid(){return this.$log.info("[WebrtcGatewayService] getMyMediaPillarJid : "+this.mediaPillarCallContext.mediaPillarJid),this.mediaPillarCallContext.mediaPillarJid}getMyMediaPillarRemoteExtension(){return this.mediaPillarCallContext.remoteExtension}shouldUseMediaPillar(){this.isMediaPillarAvailable()&&this.IsMediaPillarUserSelected();return void 0!==config.devMediaPillarEnabled&&config.devMediaPillarEnabled||!1,!1}isMediaPillarConfigured(){return this.mediaPillarConfigured&&this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.TELEPHONY_WEBRTC_PSTN_CALLING)}isMediaPillarAvailable(){var available=this.isMediaPillarConfigured();return available=available&&this.mediaPillarAlive}IsMediaPillarUserSelected(){return!this.telephonyService.nomadicObject.makeCallInitiatorIsMain&&this.telephonyService.getNomadicDestination()===this.getMyMediaPillarRemoteExtension()}isMediaPillarJid(fromJid){let indexMPinJid=-1;return!!fromJid&&0===(indexMPinJid=fromJid.search("mp_"))}isMediaPillarCallCase(){return this.isMediaPillarAvailable()&&this.IsMediaPillarUserSelected()}isMediaPillarCallSituation(call){var MP_situation=this.isMediaPillarCallCase();if(call)if(call.type===call_model_1.Call.Type.WEBRTC)MP_situation=MP_situation&&this.isMediaPillarJid(call.fullJid);else if(this.telephonyService.getCalls().length<=1&&this.mediaPillarCallContext.telephonyCallRefs.length<=1)switch(call.status){case call_model_1.Call.Status.RINGING_INCOMMING:case call_model_1.Call.Status.RINGING_OUTGOING:case call_model_1.Call.Status.QUEUED_INCOMMING:case call_model_1.Call.Status.DIALING:case call_model_1.Call.Status.RELEASING:break;default:MP_situation=!!call.mediaPillarCall&&(MP_situation&&this.isInTelCallRefs(call))}else switch(call.status){case call_model_1.Call.Status.RINGING_INCOMMING:case call_model_1.Call.Status.RINGING_OUTGOING:case call_model_1.Call.Status.QUEUED_INCOMMING:case call_model_1.Call.Status.DIALING:case call_model_1.Call.Status.RELEASING:break;default:MP_situation=!!call.mediaPillarCall&&((MP_situation=MP_situation&&call.mediaPillarCall.telephonyCallRefs.length>=1)&&this.isInTelCallRefs(call))}return MP_situation}mediaPillaryseTheCall(telephonyCall,webrtcCall){if(this.mediaPillarCallContext.callState!==MPCallState.Free){if(telephonyCall&&this.mediaPillarCallContext.updateContactFlag)return this.$log.info("[WebrtcGatewayService] mediaPillaryseTheCall | only Update"),telephonyCall.setMediaPillarCall(this.getMediaPillarCallContext()),"Update";if(telephonyCall&&this.mediaPillarCallContext.callState===MPCallState.TelCallReleasing&&telephonyCall.status===call_model_1.Call.Status.RINGING_INCOMMING)return this.$log.info("[WebrtcGatewayService] mediaPillaryseTheCall |  transfer managed as Update"),telephonyCall.setMediaPillarCall(this.getMediaPillarCallContext()),this.mediaPillarCallContext.callState=MPCallState.CallOffer,"Update";if(webrtcCall&&this.mediaPillarCallContext.callState!==MPCallState.WaitWebrtc)return this.$log.info("[WebrtcGatewayService] mediaPillaryseTheCall | only Ignore"),"Ignore"}var status="";if(!telephonyCall&&!webrtcCall)return"NoCallRef";if(telephonyCall&&webrtcCall)return"toManyCallRef";if(telephonyCall){switch(this.mediaPillarCallContext.callState){case MPCallState.Free:this.mediaPillarCallContext.callState=MPCallState.WaitWebrtc,status="Ok";break;case MPCallState.WaitTelephony:this.mediaPillarCallContext.callState=MPCallState.CallOffer,status="Ok";break;case MPCallState.WaitWebrtc:this.mediaPillarCallContext.telephonyCallRefs.length>1?(this.$log.info("[WebrtcGatewayService] mediaPillaryseTheCall but 2nd incomming in WaitWebrtc| only Ignore"),telephonyCall.setMediaPillarCall(this.getMediaPillarCallContext()),status="Ignore"):(this.mediaPillarCallContext.callState=MPCallState.AnomalyCCS,status="Ano_inTel_contextCallState_"+this.mediaPillarCallContext.callState,this.$log.info("[WebrtcGatewayService] mediaPillaryseTheCall again in WaitWebrtc"));break;default:this.mediaPillarCallContext.callState=MPCallState.AnomalyCCS,status="Ano_inTel_contextCallState_"+this.mediaPillarCallContext.callState}"Ok"===status&&(this.putAsMasterTelCallRefs(telephonyCall),telephonyCall.setMediaPillarCall(this.getMediaPillarCallContext()))}else if(webrtcCall){switch(this.mediaPillarCallContext.webrtcCallRef=webrtcCall,this.mediaPillarCallContext.callState){case MPCallState.Free:this.mediaPillarCallContext.callState=MPCallState.WaitTelephony,status="Ok";break;case MPCallState.WaitWebrtc:this.mediaPillarCallContext.callState=MPCallState.CallOffer,status="Ok";break;default:this.mediaPillarCallContext.callState=MPCallState.AnomalyCCS,status="Ano_inWrtc_contextCallState_"+this.mediaPillarCallContext.callState}"Ok"===status&&webrtcCall.setMediaPillarCall(this.getMediaPillarCallContext())}return status}getMediaPillarCallContext(){return this.mediaPillarCallContext}isMediaPillarOutgoingCall(){var compatibleCallState;switch(this.mediaPillarCallContext.callState){case MPCallState.WaitWebrtc:case MPCallState.WaitTelephony:case MPCallState.CallOffer:case MPCallState.CallOnGoing:case MPCallState.CallActive:case MPCallState.CallActiveNoWebMedia:case MPCallState.TelCallReleasing:case MPCallState.WebCallReleasing:compatibleCallState=!0;break;default:compatibleCallState=!1}return compatibleCallState&&this.mediaPillarCallContext.isOutgoingCall3PCC}isMediaPillarReleasableCall(){var compatibleCallState;switch(this.mediaPillarCallContext.callState){case MPCallState.AnomalyCCS:case MPCallState.Unknow:compatibleCallState=!1;break;default:compatibleCallState=!0}return compatibleCallState}MediaPillarReleaseWebrtcCall(){this.mediaPillarCallContext.webrtcCallRef&&(this.mediaPillarCallContext.webrtcCallRef.mediaPillarCall=null,this.videoService.releaseCall(this.mediaPillarCallContext.webrtcCallRef))}timeOutCallActiveNoWebMedia(){this.$log.info("[WebrtcGatewayService] timeOutCallActiveNoWebMedia"),this.mediaPillarCallContext.callState===MPCallState.CallActiveNoWebMedia&&(this.MediaPillarCallTerminator(),this.mediaPillarKeepAlive(),this.$log.info("[WebrtcGatewayService] timeOutCallActiveNoWebMedia noWebMedia then release calls if existing & force keepalive"))}MediaPillarCallTerminator(){0!==this.mediaPillarCallContext.telephonyCallRefs.length&&this.mediaPillarCallContext.telephonyCallRefs.forEach(callRef=>{null!==callRef&&callRef.type.value===call_model_1.Call.Type.PHONE.value&&(callRef.mediaPillarCall=null,this.telephonyService.releaseCall(callRef),this.$log.info("[WebrtcGatewayService] MediaPillarCallTerminator | release call"+callRef))}),this.MediaPillarReleaseWebrtcCall(),this.releaseMediaPillarCallContext(),this.resetEvtAutomaton(),this.TO_PILLAR_POLLING+=TO_PILLAR_POLLING_MIN,this.mediaPillarKeepAlivePolling("START",this.TO_PILLAR_POLLING),this.$log.warn("[WebrtcGatewayService] MediaPillarCallTerminator | Full cleaning")}createMediaPillarContact(jid){this.$log.info("[webrtcGatewayService] createMediaPillarContact -- "+jid);let contact=this.contactService.createBasicContact(jid);return contact.displayName="mediaPillar",contact.avatar=new Image,contact.avatar.src="/resources/skins/rainbow/images/conversations/unknownContact.png",contact}muteAudio(pbxCall,muted,conversation){if(pbxCall){if(this.isMediaPillarCallCase()){let webrtcCall=this.mediaPillarCallContext.webrtcCallRef;if(webrtcCall){var session=this.xmppService.connection.jingle.sessions[webrtcCall.id];if(session){session.muteAudio(muted),webrtcCall.isMuted=muted,conversation&&(conversation.isMutedAudio=muted),pbxCall.isMuted=muted,this.$log.info("[webrtcGatewayService] muteAudio conversation: "+(conversation?conversation.id:"undefined")+" / pbxcall: "+pbxCall.id+"-- "+(muted?"mute":"unumute"));let eventData={call:pbxCall};conversation&&(eventData.conversation=conversation),this.$rootScope.$broadcast("ON_CONVERSATION_CALL_MUTED_UPDATED_EVENT",eventData)}else this.$log.error("[webrtcGatewayService] muteAudio "+pbxCall.id+" -- failure: no session")}}}else this.$log.error("[webrtcGatewayService] muteAudio - trying to mute a non existing call !")}getActivePbxCall(){return this.isMediaPillarCallCase()&&this.mediaPillarCallContext?this.mediaPillarCallContext.telephonyCallRefs.find(pxbCall=>pxbCall.status===call_model_1.Call.Status.ACTIVE):null}}WebrtcGatewayService.$inject=["$q","$rootScope","$log","$http","authService","$interval","xmppService","videoService","errorHelperService","contactService","profileService","uuid4","telephonyService","settingsService"],angular.module("rainbow").service("webrtcGatewayService",WebrtcGatewayService)},function(module,exports){angular.module("rainbow").service("callLogService",["$q","$log","$rootScope","$interval","contactService","xmppService","CallLog","orderByFilter","profileService","$injector","telephonyService","webrtcGatewayService","utilService",function($q,$log,$rootScope,$interval,contactService,xmppService,CallLog,orderByFilter,profileService,$injector,telephonyService,webrtcGatewayService,utilService){"use strict";var that=this;this.started=!1,this.callLogs=[],this.orderByNameCallLogs=[],this.orderByDateCallLogs=[],this.orderByDateCallLogsBruts=[],this.simplifiedCallLogs=[],this.callLogsPromises=[],this.callLogNamespace="jabber:iq:telephony:call_log",this.callLogAckNamespace="urn:xmpp:telephony:call_log:receipts",this.callLogNotificationsNamespace="jabber:iq:notification:telephony:call_log",this.callLogHandlerRef=null,this.callLogMessageAckRef=null,this.callLogNotificationRef=null,this.numberMissedCalls=0,this.lastTimestamp=null,this.callLogsHistory=[],this.telephonyCallLog={},this.telephonyCallLogHistory={},this.deferedObject=null,this.callLogComplete=!1,this.callLogIndex=-1,this.start=function(stats){return $log.info(""),$log.info("[callLogService] === STARTING ==="),this.attachHandlers(),$interval((function(){var startDate=performance.now();that.getCallLogHistoryPage().then((function(){var startDuration=Math.round(performance.now()-startDate);stats.push({service:"callLogService",startDuration:startDuration}),$log.info("[callLogService] === STARTED ("+startDuration+" ms) ==="),that.started=!0})).catch((function(){$log.error("[callLogService] === STARTING FAILURE ===")}))}),3e3,1,!0),$q.when()},this.stop=function(){return $log.info("[callLogService] Stopping"),this.started=!1,this.callLogs=[],this.callLogsPromises=[],this.callLogHandlerRef=null,this.callLogMessageAckRef=null,this.orderByNameCallLogs=[],this.orderByDateCallLogs=[],this.orderByDateCallLogsBruts=[],this.simplifiedCallLogs=[],this.numberMissedCalls=0,this.lastTimestamp=null,this.telephonyCallLog={},this.telephonyCallLogHistory={},this.callLogComplete=!1,this.callLogIndex=-1,this.callLogsHistory=[],$log.info("[callLogService] Stopped"),$q.when()},this.attachHandlers=function(){$log.info("[callLogService] attachHandlers"),that.callLogHandlerRef&&(xmppService.connection.deleteHandler(that.callLogHandlerRef),that.callLogHandlerRef=null),that.callLogMessageAckRef&&(xmppService.connection.deleteHandler(that.callLogMessageAckRef),that.callLogMessageAckRef=null),that.callLogNotificationRef&&(xmppService.connection.deleteHandler(that.callLogNotificationRef),that.callLogNotificationRef=null),that.callLogHandlerRef=xmppService.connection.addHandler(that.onCallLogMessageReceived,that.callLogNamespace,null,null),that.callLogMessageAckRef=xmppService.connection.addHandler(that.onCallLogAckReceived,that.callLogAckNamespace,null,null),that.callLogNotificationRef=xmppService.connection.addHandler(that.callLogNotificationReceived,that.callLogNotificationsNamespace,null,null),that.started&&that.lastTimestamp&&$interval((function(){that.getCallLogHistoryPage(that.lastTimestamp)}),1e3,1,!0)},this.getCallLogHistoryPage=function(useAfter){$log.info("[callLogService] getCallLogHistoryPage");var userContact=contactService.userContact,msg=$iq({from:userContact.jid,type:"set"}).c("query",{xmlns:this.callLogNamespace});return msg.c("set",{xmlns:"http://jabber.org/protocol/rsm"}),msg.c("max").t(75).up(),useAfter?msg.c("after").t(useAfter).up():msg.c("before").t("").up(),msg.up(),msg.up(),xmppService.sendIQ(msg),$q.when()},this.deleteOneCallLog=function(id){$log.info("[callLogService] deleteOneCallLog "+id);var userContact=contactService.userContact,msg=$iq({from:userContact.jid,to:userContact.jid,type:"set"}).c("delete",{xmlns:this.callLogNamespace,call_id:id});xmppService.sendIQ(msg)},this.deleteCallLogsForContact=function(jid){$log.info("[callLogService] deleteCallLogsForContact "+jid);var userContact=contactService.userContact,msg=$iq({from:userContact.jid,to:userContact.jid,type:"set"}).c("delete",{xmlns:this.callLogNamespace,peer:jid});xmppService.sendIQ(msg)},this.deleteAllCallLogs=function(){$log.info("[callLogService] deleteAllCallLogs");var userContact=contactService.userContact,msg=$iq({from:userContact.jid,to:userContact.jid,type:"set"}).c("delete",{xmlns:this.callLogNamespace});xmppService.sendIQ(msg)},this.markCallLogAsRead=function(id){$log.info("[callLogService] markCallLogAsRead "+id);var userContact=contactService.userContact,msg=$msg({from:userContact.jid,to:userContact.jid}).c("read",{xmlns:this.callLogAckNamespace,call_id:id});xmppService.sendIQ(msg)},this.markAllCallsLogsAsRead=function(){$log.info("[callLogService] markAllCallsLogsAsRead ");for(var userContact=contactService.userContact,i=0;i<that.callLogs.length;i++)if(!that.callLogs[i].read){var msg=$msg({from:userContact.jid,to:userContact.jid}).c("read",{xmlns:this.callLogAckNamespace,call_id:that.callLogs[i].id});xmppService.sendIQ(msg)}},this.onCallLogMessageReceived=function(stanza){try{$(stanza).find("call_log").length>0?that.callLogsPromises.push(that.createCallLogFromMessage(stanza)):$(stanza).find("count").length>0&&$(stanza).find("query").length>0?(that.lastTimestamp=$(stanza).find("last").text(),$log.info("[callLogService] onCallLogMessageReceived : all call logs received"),$q.all(that.callLogsPromises).finally((function(){$log.info("[callLogService] onCallLogMessageReceived : all call logs are ready"),that.callLogsPromises=[],that.orderCallLogsFunction(),$rootScope.$broadcast("ON_CALL_LOG_UPDATED");var num=that.getMissedCallLogCounter();num!==that.numberMissedCalls&&(that.numberMissedCalls=num,$rootScope.$broadcast("ON_CALL_LOG_ACK_UPDATED"))}))):$log.info("[callLogService] onCallLogMessageReceived : ignored !")}catch(error){return $log.error("[callLogService] onCallLogMessageReceived "+error),!0}return!0},this.onCallLogAckReceived=function(stanza){try{if($log.info("[callLogService] onCallLogAckReceived"),$(stanza).find("read").length>0){var msgId=$(stanza).find("read").attr("call_id");that.callLogAckUpdate(msgId);var num=that.getMissedCallLogCounter();num!==that.numberMissedCalls&&(that.numberMissedCalls=num,$rootScope.$broadcast("ON_CALL_LOG_ACK_UPDATED"))}}catch(error){return $log.error("[callLogService] onCallLogAckReceived "+error),!0}return!0},this.callLogNotificationReceived=function(stanza){$log.info("[callLogService] callLogNotificationReceived");try{if($(stanza).find("deleted_call_log").length>0){$log.info("[callLogService] callLogNotificationReceived : deleted IQ");var peer=$(stanza).find("deleted_call_log").attr("peer");peer?that.removeCallLogsForUser(peer):that.resetCallLogs()}else $(stanza).find("updated_call_log").length>0&&($log.info("[callLogService] callLogNotificationReceived : Update call-logs"),that.callLogsPromises.push(that.createCallLogFromMessage(stanza)),$q.all(that.callLogsPromises).finally((function(){$log.info("[callLogService] callLogNotificationReceived : update is done"),that.callLogsPromises=[],that.orderCallLogsFunction(),$rootScope.$broadcast("ON_CALL_LOG_UPDATED");var num=that.getMissedCallLogCounter();num!==that.numberMissedCalls&&(that.numberMissedCalls=num,$rootScope.$broadcast("ON_CALL_LOG_ACK_UPDATED"))})))}catch(error){return $log.error("[callLogService] callLogNotificationReceived ERROR "+error),!0}return!0},this.removeCallLogsForUser=function(jid){jid.endsWith("@_")&&(jid=jid.substring(0,jid.length-2)),$log.info("[callLogService] removeCallLogsForUser with jid: "+jid);for(var newLogs=[],i=0;i<that.callLogs.length;i++)(!that.callLogs[i].contact||that.callLogs[i].contact.jid!==jid&&that.callLogs[i].contact.id!==jid)&&newLogs.push(that.callLogs[i]);that.callLogs=newLogs,that.orderCallLogsFunction(),$rootScope.$broadcast("ON_CALL_LOG_UPDATED");var num=that.getMissedCallLogCounter();num!==that.numberMissedCalls&&(that.numberMissedCalls=num,$rootScope.$broadcast("ON_CALL_LOG_ACK_UPDATED"))},this.createCallLogFromMessage=function(message){var defered=$q.defer(),messageElem=$(message),otherParticipantJid=null,otherParticipantNumber=null,direction="",id=messageElem.find("call_id").text(),callerJid=messageElem.find("caller").text(),calleeJid=messageElem.find("callee").text(),state=messageElem.find("state").text(),duration=parseInt(messageElem.find("duration").text(),10),callSubject=messageElem.find("subject").text(),foundidentity="",identityFirstName="",identityLastName="",type="webrtc";if(callerJid&&-1!==callerJid.indexOf("janusgateway")||calleeJid&&-1!==calleeJid.indexOf("janusgateway"))return $log.info("[callLogService] createCallLogFromMessage ignore janusgateway call-logs"),void $q.when();if(callerJid&&webrtcGatewayService.isMediaPillarJid(callerJid)||calleeJid&&webrtcGatewayService.isMediaPillarJid(calleeJid))return $log.info("[callLogService] createCallLogFromMessage ignore janusgateway call-logs"),void $q.when();var typeCall=messageElem.find("call_log").attr("type");typeCall||(typeCall=messageElem.find("type").text());var read="true"===messageElem.find("ack").attr("read"),date=messageElem.find("delay").attr("stamp"),conference="conference"===messageElem.find("call_log").attr("service");return(profileService.isFeatureEnabled(profileService.FeaturesEnum.TELEPHONY_PHONE_BOOK)||config.permitSearchFromPhoneBook)&&(foundidentity=messageElem.find("identity")),duration=duration>0?moment.duration(duration,"ms").format("h[H] mm[m] ss[s]"):0,date&&(date=new Date(date)),conference?(otherParticipantJid=callerJid,type="conference",direction=contactService.isUserContactJid(callerJid)?"outgoing":"incoming",-1===otherParticipantJid.indexOf("@")&&(otherParticipantNumber=otherParticipantJid,otherParticipantJid=null)):("phone"===typeCall&&(type="telephone"),contactService.isUserContactJid(callerJid)?(otherParticipantJid=calleeJid,direction="outgoing"):(otherParticipantJid=callerJid,direction="incoming"),-1===otherParticipantJid.indexOf("@")&&(otherParticipantNumber=otherParticipantJid,otherParticipantJid=null,type="telephone")),otherParticipantJid||otherParticipantNumber?contactService.getOrCreateContact(otherParticipantJid,otherParticipantNumber).then((function(contact){if($log.info("[callLogService] createCallLogFromMessage otherParticipant jid:"+otherParticipantJid+"  Number:"+utilService.anonymizePhoneNumber(otherParticipantNumber)+" => contact retrieved (temp:"+contact.temp+")"),!conference&&!otherParticipantJid&&contact.temp){if(foundidentity&&foundidentity.length){var foundFirstName=foundidentity.attr("firstName"),foundLastName=foundidentity.attr("lastName"),foundDisplayName=foundidentity.attr("displayName");identityFirstName=foundFirstName||"",""===(identityLastName=foundLastName||"")&&""===identityFirstName&&foundDisplayName&&0!==foundDisplayName.length&&foundDisplayName!==otherParticipantNumber&&(identityLastName=foundDisplayName),(identityFirstName.length||identityLastName.length)&&($log.debug("[callLogService] createCallLogFromMessage  xNames updated from directories for contact "+contact.id),contact.updateName(identityFirstName,identityLastName))}else try{var centralizedService=$injector.get("centralizedService");centralizedService.outlook.updateContactFromOutlookInfos(contact,otherParticipantNumber,!0).then((function(updateStatus){updateStatus?$log.debug("[callLogService] createCallLogFromMessage  xNames updated from outlook for contact "+contact.id):$log.debug("[callLogService] createCallLogFromMessage no update from outlook for contact :"+contact.id)}),(function(){$log.debug("[callLogService] createCallLogFromMessage  no Outlook search available")}))}catch(error){}var displayNameisAPhoneNumber=!1;if(telephonyService.started)displayNameisAPhoneNumber=contact.displayName.match(/^[0-9A-D #\-\+\*\(\)\./]{1,32}$/)&&telephonyService.startAsPhoneNumber(contact.displayName);displayNameisAPhoneNumber&&contact.phoneProCan&&""!==contact.phoneProCan&&(contact.displayName=contact.phoneProCan)}var callLog=CallLog.create(id,contact,state,duration,type,read,date,direction,callSubject);that.logAlreadyExists(callLog)||"failed"===state||"ongoing"===state?$log.info("[callLogService] createCallLogFromMessage ignore call log with id: "+id+", state: "+state):that.callLogs.push(callLog),$log.info("[callLogService] createCallLogFromMessage success"),defered.resolve(callLog)})).catch((function(error){$log.error("[callLogService] createCallLogFromMessage error "+error),defered.resolve()})):($log.info("[callLogService] createCallLogFromMessage  No jid or no phoneNumber "),defered.resolve()),defered.promise},this.getOrderByNameCallLogs=function(){return that.orderByNameCallLogs},this.getOrderByDateCallLogs=function(){return 0!==that.orderByDateCallLogs.length&&(that.orderByDateCallLogs[0].isLatestCall=!0,that.orderByDateCallLogs[1]&&(that.orderByDateCallLogs[1].isLatestCall=!1)),that.orderByDateCallLogs},this.getOrderByDateCallLogsBruts=function(){return that.orderByDateCallLogsBruts},this.getSimplifiedCallLogs=function(){return that.simplifiedCallLogs},this.orderCallLogsFunction=function(){$log.info("[callLogService] orderByFunction"),that.orderByNameCallLogs=orderByFilter(that.callLogs,CallLog.getNames,!1,CallLog.sortByContact),that.orderByDateCallLogsBruts=orderByFilter(that.callLogs,CallLog.getDate,!1,CallLog.sortByDate),that.simplifiedCallLogs=that.simplifyCallLogs(that.orderByDateCallLogsBruts),that.orderByNameCallLogs=that.fusionInformation(that.orderByNameCallLogs),that.orderByDateCallLogs=that.fusionInformation(that.orderByDateCallLogsBruts)},this.simplifyCallLogs=function(callLogs){for(var result=[],i=0;i<callLogs.length;i++)result[i]={},result[i].contact=callLogs[i].contact.id,result[i].contactDisplayName=callLogs[i].contact.displayName,result[i].contactInitials=callLogs[i].contact.initials,result[i].id=callLogs[i].id,result[i].state=callLogs[i].state,result[i].duration=callLogs[i].duration,result[i].direction=callLogs[i].direction,result[i].type=callLogs[i].type,result[i].read=callLogs[i].read,result[i].date=callLogs[i].date;return result},this.fusionInformation=function(callLogs){for(var passed={},current=0,fusion=[],i=0;i<callLogs.length;i++){var log=callLogs[i],jid=log.contact.jid;if(log.contact.jid||(jid=log.contact.id),"conference"!==log.type)if(0!==i)if(passed[jid]){var element=fusion[passed[jid]-1];element.editable&&(element.isMissed&&"missed"===log.state&&"incoming"===log.direction?element.count++:element.isNotAnswered&&"missed"===log.state&&"outgoing"===log.direction?element.count++:element.editable=!1)}else current++,passed[jid]=current+1,fusion[current]=log,fusion[current].count=1,fusion[current].editable=!0,"missed"===log.state&&"incoming"===log.direction?fusion[current].isMissed=!0:"missed"===log.state&&"outgoing"===log.direction&&(fusion[current].isNotAnswered=!0);else passed[jid]=1,fusion[current]=log,fusion[current].count=1,fusion[current].editable=!0,"missed"===log.state&&"incoming"===log.direction?fusion[current].isMissed=!0:"missed"===log.state&&"outgoing"===log.direction&&(fusion[current].isNotAnswered=!0);else 0!==i&&current++,fusion[current]=log,fusion[current].count=1,fusion[current].editable=!1}return fusion},this.callLogAckUpdate=function(id){that.callLogs.forEach((function(callLog){callLog.id!==id||(callLog.read=!0)}))},this.getMissedCallLogCounter=function(){var num=0;return that.callLogs.forEach((function(callLog){callLog.read||"missed"!==callLog.state||"incoming"!==callLog.direction||num++})),num},this.getNumberMissedCalls=function(){return that.numberMissedCalls},this.resetCallLogs=function(){$log.info("[callLogService] resetCallLogs"),that.callLogs=[],that.getCallLogHistoryPage()},this.logAlreadyExists=function(log){var i;for(i=0;i<that.callLogs.length;i++)if(that.callLogs[i].id===log.id)return!0;return!1}}])},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var _src_models_call_model__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0);angular.module("rainbow").service("videoService",["$q","$rootScope","$window","$log","$http","$interval","xmppService","contactService","browserService","gRTCStatsService","fRTCStatsService","platformService","gaService","settingsService","authService","VideoServiceEventHandler","extensionSharingService",function($q,$rootScope,$window,$log,$http,$interval,xmppService,contactService,browserService,gRTCStatsService,fRTCStatsService,platformService,gaService,settingsService,authService,VideoServiceEventHandler,extensionSharingService){var that=this;this.started=!1,this.connected=!1,this.RTC=null,this.videoEventHandler=null,this.config=null,this.companyConfig=null,this.calls={},this.localStream=null,this.autoreleaseTimeout=null,this.callsStats={},this.localStreams=[],this.makingCall=!1,this.reconnectCall=!1,this.statsInterval=null,this.audioProfileChanging=!1,this.reverseAudioCallInitiated=!1,this.alreadyAttaching=!1;var listeners=[];this.callsStatsSimplified={},this.allowDesktopSharing=function(){return!1},this.allowAdvancedDesktopSharing=function(){return!1},this.getDesktopSharingSource=function(){return null},this.askToAddSharing=function(__conversation_id){return!1},this.askToStartSharing=function(__contact_id,__media){return!1},this.isNativeApplication=function(){return!1},this.start=function(stats){$log.webrtc("[videoService] SERVICE | === STARTING ===");var startDate=performance.now();if(this.RTC=that.getBrowserMethodHandler(),this.RTC){that.started=!0,that.connected=!0,that.setWebrtcConfiguration();var startDuration=Math.round(performance.now()-startDate);stats.push({service:"videoService",startDuration:startDuration}),$log.info("[videoService] SERVICE | === STARTED ("+startDuration+" ms) ===")}else $log.error("[videoService] SERVICE | === STARTING FAILURE ===  webRTC capable browser is really required !");return listeners.push($rootScope.$on("ON_CONNECTION_STATE_CHANGE_EVENT",that.onConnectionStateChangeEvent)),listeners.push($rootScope.$on("ON_INPUT_DEVICE_CHANGED_EVENT",that.onAudioProfileChangeEvent)),listeners.push($rootScope.$on("ON_VIDEO_INPUT_DEVICE_CHANGED_EVENT",that.onVideoInputChangeEvent)),this.attachHandlers(),$q.when()},this.stop=function(){try{if(this.started){var listener;for($log.webrtc("[videoService] SERVICE | === STOPPING ==="),this.started=!1;listener=listeners.pop();)listener();for(var key in that.removeHandlers(),that.config=null,that.calls)if(that.calls.hasOwnProperty(key)){var call=that.calls[key];that.removeCallObject(call)}xmppService.connection.jingle.terminate(),that.connected=!1,that.reconnectCall=!1,that.makingCall=!1,that.statsInterval&&window.clearInterval(that.statsInterval),$log.webrtc("SERVICE | === STOPPED ===")}return $q.when()}catch(error){return $log.webrtc("[videoService] SERVICE | === STOPPING ERROR : "+error),$q.when()}},this.attachHandlers=function(){this.removeHandlers(),$log.info("[videoService] attachHandlers"),this.videoEventHandler=VideoServiceEventHandler.create(this)},this.removeHandlers=function(){$log.info("[videoService] removeHandlers"),this.videoEventHandler&&(this.videoEventHandler=null)},this.setIceConfig=function(){return $log.webrtc("[videoService] setIceConfig"),$q((function(resolve,reject){if(that.config)return $log.webrtc("[videoService] setIceConfig from stored variable"),xmppService.connection.jingle.ice_config=that.config,resolve();that.getIceConfig().then((function(config){that.config=config,"true"===settingsService.getSetting("enableDSCP")&&($log.webrtc("[videoService] setWebrtcConfiguration - DSCP is enabled"),that.config.enableDSCP=!0),"true"===settingsService.getSetting("dtx")&&($log.webrtc("[videoService] setWebrtcConfiguration - DTX is enabled"),that.config.dtx=!0),"true"===settingsService.getSetting("simulcast")&&($log.webrtc("[videoService] setWebrtcConfiguration - Simulcasting is enabled"),that.config.simulcast=!0),"true"===settingsService.getSetting("unifiedPlan")&&($log.webrtc("[videoService] setWebrtcConfiguration - unifiedPlan is enabled"),that.config.unifiedPlan=!0),"true"===settingsService.getSetting("debugWebRTC")&&($log.webrtc("[videoService] setWebrtcConfiguration - unifiedPlan is enabled"),that.config.debugWeRTC=!0),xmppService.connection.jingle.ice_config=that.config,settingsService.setIceConfig(that.config),$log.webrtc("[videoService] setIceConfig from server success !"),resolve()})).catch((function(error){$log.error("[videoService] setIceConfig from server ERROR : "+error),-1!==error.status&&that.openErrorPopup("IceConfigurationFailed"),reject()}))}))},this.setCompanyWebrtcConfig=function(){return $log.webrtc("[videoService] setCompanyWebrtcConfig"),$q((function(resolve,reject){if(that.companyConfig)return $log.webrtc("[videoService] setCompanyWebrtcConfig from stored variable"),xmppService.connection.jingle.company_config=that.companyConfig,that.setVideoQualityConfigurationForCompany(),resolve();that.getCompanyWebrtcConfig().then((function(config){that.companyConfig=config,xmppService.connection.jingle.company_config=that.companyConfig,that.setVideoQualityConfigurationForCompany(),$log.webrtc("[videoService] setCompanyWebrtcConfig from server success !"),resolve()})).catch((function(error){$log.error("[videoService] setCompanyWebrtcConfig from server ERROR : "+error),reject()}))}))},this.setWebrtcConfiguration=function(){return $q((function(resolve){var promises=[];promises.push(that.setIceConfig()),promises.push(that.setCompanyWebrtcConfig()),$q.all(promises).then((function(){$log.webrtc("[videoService] setWebrtcConfiguration -- done"),resolve()}))}))},this.onConnectionStateChangeEvent=function(__event,status){try{if("disconnected"===status){for(var key in $log.info("MEDIA   | onConnectionStateChangeEvent : disconnected"),that.connected=!1,that.config=null,that.calls)if(that.calls.hasOwnProperty(key)){var call=that.calls[key];that.reconnectCall=!0,call&&call.status!==_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.UNKNOWN&&($log.webrtc("INFO    | onConnectionStateChangeEvent : disconnected -> call goes to connecting state"),call.setStatus(_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.CONNECTING),$rootScope.$broadcast("ON_CALL_UPDATED_EVENT",call)),that.statsInterval&&window.clearInterval(that.statsInterval)}}else if("connected"===status){for(var key in $log.info("MEDIA   | onConnectionStateChangeEvent : connected"),that.attachHandlers(),that.setWebrtcConfiguration(),that.connected=!0,that.statsInterval&&(window.clearInterval(that.statsInterval),that.statsinterval=null),that.calls)if(that.calls.hasOwnProperty(key)){call=that.calls[key];var session=xmppService.connection.jingle.sessions[call.id];that.reconnectCall&&session&&session.peerconnection&&($log.info("MEDIA   | onConnectionStateChangeEvent : connected - start reconnection on session "+call.id),session.me=contactService.userContact.fullJid,session.isInitiator&&(session.initiator=session.me),session.connection=xmppService.connection,contactService.setBusyState("dnd",that.calculatePresenceMessage(call)),session.reconnectSession())}that.reconnectCall=!1}}catch(error){$log.info("MEDIA   | onConnectionStateChangeEvent : disconnected error : "+error)}},that.isUserContactInCall=function(){for(var key in that.calls){if(that.calls.hasOwnProperty(key))if(that.calls[key].status!==_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.UNKNOWN)return!0}return!1},this.getCurrentActiveSession=function(){for(var key in that.calls)if(that.calls.hasOwnProperty(key)){var call=that.calls[key];if(call.status!==_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.UNKNOWN)return xmppService.connection.jingle.sessions[call.id]}return null},that.getMediaPillarAudioCall=function(){for(var key in that.calls)if(that.calls.hasOwnProperty(key)){var call=that.calls[key];if(call.status!==_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.UNKNOWN&&call.localMedia&_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Media.AUDIO&&call.isMediaPillarCall())return call}return null},that.getWebrtcAudioCall=function(){for(var key in that.calls)if(that.calls.hasOwnProperty(key)){var call=that.calls[key];if(call.status!==_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.UNKNOWN&&call.localMedia&_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Media.AUDIO&&!call.isMediaPillarCall())return call}return null},that.getMediaPillarSession=function(){var mediaPillarAudioCall=that.getMediaPillarAudioCall();return mediaPillarAudioCall?xmppService.connection.jingle.sessions[mediaPillarAudioCall.id]:null},that.getCurrentSharingCall=function(){for(var key in that.calls)if(that.calls.hasOwnProperty(key)){var call=that.calls[key];if(call.status!==_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.UNKNOWN&&(call.localMedia===_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Media.SHARING||call.remoteMedia===_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Media.SHARING))return call}return null},that.endAllCallsForContact=function(contact){if(contact)for(var key in $log.webrtc("[videoService] endAllCallsForContact "+contact.jid),that.calls)if(that.calls.hasOwnProperty(key)){var call=that.calls[key];call.status!==_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.UNKNOWN&&call.contact&&call.contact.jid===contact.jid&&that.releaseCall(call)}},that.onVideoInputChangeEvent=function(){for(var key in $log.webrtc("MEDIA   | onVideoInputChangeEvent"),that.calls)if(that.calls.hasOwnProperty(key)){var call=that.calls[key];xmppService.connection.jingle.sessions[call.id]&&call.localMedia&&call.localMedia===_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Media.AUDIO+_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Media.VIDEO&&($log.webrtc("MEDIA   | audio + video call, renegotiate the profile"),that.escalateToVideoCall(call,!0))}},that.onAudioProfileChangeEvent=function(){if($log.webrtc("MEDIA   | onAudioProfileChangeEvent"),that.audioProfileChanging)$log.webrtc("MEDIA   | onAudioProfileChangeEvent -- already changing");else for(var key in that.calls)if(that.calls.hasOwnProperty(key)){var call=that.calls[key];xmppService.connection.jingle.sessions[call.id]&&call.localMedia&&(that.audioProfileChanging=!0,$interval((function(currentCall){that.audioProfileChanging=!1,that.renegotiateCurrentCall(currentCall)}),500,1,!0,call))}},this.renegotiateCurrentCall=function(call){call.localMedia===_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Media.AUDIO||call.localMedia===_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Media.AUDIO+_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Media.SHARING?($log.webrtc("MEDIA   | renegotiate the audio profile"),that.addAudioToCall(call,!0)):call.localMedia!==_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Media.AUDIO+_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Media.VIDEO&&call.localMedia!==_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Media.AUDIO+_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Media.SHARING+_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Media.VIDEO||($log.webrtc("MEDIA   | audio + video call, renegotiate the profile"),that.addVideoToCall(call,!0))},this.getCallByJid=function(jid){var result=null;if(!jid)return result;for(var key in $log.webrtc("[videoService] getCallByJid "+jid),that.calls)if(that.calls.hasOwnProperty(key)){var call=that.calls[key];if(call.contact&&call.contact.jid===jid){result=call;break}}return result},this.resetAudioOutputElement=function(){platformService.allowDevicesManagement()&&!this.audioProfileChanging&&($("#globalAudioTag").length?($log.webrtc("[videoService] resetAudioOutputElement"),this.audioProfileChanging=!0,platformService.getCurrentSpeaker().then((function(device){var sinkId="default";device&&device.id&&(sinkId=device.id);var anotherSink="default";"default"!==sinkId&&DetectRTC.audioOutputDevices.forEach((function(output){"default"!==output.deviceId&&"communications"!==output.deviceId&&output.deviceId!==sinkId&&(anotherSink=output.deviceId)})),$("#globalAudioTag")[0].setSinkId(anotherSink).then((function(){$log.webrtc("[videoService] resetAudioOutputElement sinkId is "+$("#globalAudioTag")[0].sinkId),"default"!==sinkId?$("#globalAudioTag")[0].setSinkId(sinkId).then((function(){$log.webrtc("[videoService] resetAudioOutputElement sinkId is "+$("#globalAudioTag")[0].sinkId),that.audioProfileChanging=!1,$("#globalAudioTag")[0].load&&$("#globalAudioTag")[0].load()})).catch((function(){that.audioProfileChanging=!1})):that.audioProfileChanging=!1})).catch((function(error){$log.warn("[videoService] resetAudioOutputElement globalAudioTag error "+error),that.audioProfileChanging=!1})),$interval((function(){$("#largevideo")[0]&&$("#largevideo")[0].setSinkId(anotherSink).then((function(){$log.webrtc("[videoService] resetAudioOutputElement largevideo "+$("#largevideo")[0].sinkId),"default"!==sinkId&&$("#largevideo")[0].setSinkId(sinkId).then((function(){$log.webrtc("[videoService] resetAudioOutputElement largevideo "+$("#largevideo")[0].sinkId)})).catch((function(error){$log.warn("[videoService] resetAudioOutputElement largevideo error "+error)}))})).catch((function(error){$log.warn("[videoService] resetAudioOutputElement largevideo error "+error)})),$("#p2pSecondVideo")[0]&&$("#p2pSecondVideo")[0].setSinkId(anotherSink).then((function(){"default"!==sinkId&&$("#p2pSecondVideo")[0].setSinkId(sinkId).then((function(){$log.webrtc("[videoService] resetAudioOutputElement p2pSecondVideo "+$("#p2pSecondVideo")[0].sinkId)})).catch((function(error){$log.warn("[videoService] resetAudioOutputElement p2pSecondVideo error "+error)}))})).catch((function(error){$log.warn("[videoService] resetAudioOutputElement p2pSecondVideo error "+error)}))}),3e3,1)})).catch((function(){$log.webrtc("[videoService] resetAudioOutputElement getCurrentSpeaker error"),that.audioProfileChanging=!1}))):$log.warn("[videoService] resetAudioOutputElement -- missing global audio tag !"))},this.disableAudioVideoMedia=function(session,sessionId){if(session?$log.webrtc("MEDIA   | disableAudioVideoMedia for session "+JSON.stringify({sid:session.sid})):sessionId?$log.webrtc("MEDIA   | disableAudioVideoMedia no session, sessionId: "+sessionId):$log.webrtc("MEDIA   | disableAudioVideoMedia no session, no session Id"),!session&&!sessionId){var localStreamsLength=that.localStreams.length;if(that.localStreams.length>0)for(that.localStreams.forEach((function(stream){stream.getTracks().forEach((function(track){track.enabled=!1,track.stop(),track=null})),stream.stop&&stream.stop(),stream=null}));that.localStreams.length>0;){that.localStreams.pop();null}$log.webrtc("MEDIA   | disableAudioVideoMedia : All local streams stopped and removed: "+localStreamsLength)}if(session){if(session.localStreams.length>0){var sessionStreamsLength=session.localStreams.length;for(session.localStreams.forEach((function(stream){stream.getTracks().forEach((function(track){track.enabled=!1,track.stop(),track=null})),stream.stop&&stream.stop(),stream=null})),that.localStreams=that.localStreams.filter((function(localStream){return!session.localStreams.includes(localStream)}));session.localStreams.length>0;){session.localStreams.pop();null}$log.webrtc("MEDIA   | disableAudioVideoMedia : Session streams stopped and removed: "+sessionStreamsLength+". Remaining local streams: "+that.localStreams.length)}}else if(sessionId){var streams=that.localStreams.filter((function(localStream){return localStream.callId===sessionId}));if(streams){sessionStreamsLength=streams.length;streams.forEach((function(stream){stream.getTracks().forEach((function(track){track.enabled=!1,track.stop(),track=null})),stream.stop&&stream.stop(),that.localStreams.splice(that.localStreams.indexOf(stream),1),stream=null})),$log.webrtc("MEDIA   | disableAudioVideoMedia : Locals streams for sessionId "+sessionId+" stopped and removed: "+sessionStreamsLength+". Remaining local streams: "+that.localStreams.length)}}that.statsInterval&&(window.clearInterval(that.statsInterval),that.statsinterval=null)},this.clearSrcObjectsFromElements=function(){this.RTC.clearMediaStream(angular.element("#largevideo"),null),this.RTC.clearMediaStream(angular.element("#globalVideoTag"),null),this.RTC.clearMediaStream(angular.element("#globalAudioTag"),null)},this.attachDistantMediaStreamsUnifiedPlan=function(call){var sess=xmppService.connection.jingle.sessions[call.id];sess.remoteStreamsObject[0]&&($log.webrtc("attachDistantMediaStreamsUnifiedPlan audio track for element globalAudioTag "+sess.remoteStreamsObject[0].id),this.RTC.attachMediaStream(angular.element("#globalAudioTag"),sess.remoteStreamsObject[0])),sess.remoteStreamsObject[1]&&sess.remoteStreamsObject[2]?(this.RTC.attachMediaStreamIfNeeded(angular.element("#largevideo"),sess.remoteStreamsObject[2],sess.remoteStreamsObject[2].id),angular.element("#largevideo")[0]&&(angular.element("#largevideo")[0].muted=!0,angular.element("#largevideo")[0].volume=0),this.RTC.attachMediaStreamIfNeeded(angular.element("#p2pSecondVideo"),sess.remoteStreamsObject[1],sess.remoteStreamsObject[2].id),angular.element("#p2pSecondVideo")[0]&&(angular.element("#p2pSecondVideo")[0].muted=!0,angular.element("#p2pSecondVideo")[0].volume=0)):sess.remoteStreamsObject[1]?(this.RTC.attachMediaStreamIfNeeded(angular.element("#largevideo"),sess.remoteStreamsObject[1],sess.remoteStreamsObject[1].id),angular.element("#largevideo")[0]&&(angular.element("#largevideo")[0].muted=!0,angular.element("#largevideo")[0].volume=0)):sess.remoteStreamsObject[2]&&(this.RTC.attachMediaStreamIfNeeded(angular.element("#largevideo"),sess.remoteStreamsObject[2],sess.remoteStreamsObject[2].id),angular.element("#largevideo")[0]&&(angular.element("#largevideo")[0].muted=!0,angular.element("#largevideo")[0].volume=0))},this.attachDistantMediaStreams=function(attach,call){if(attach){if(that.alreadyAttaching)return;if(that.alreadyAttaching=!0,call.unifiedPlanActivated)return that.attachDistantMediaStreamsUnifiedPlan(call),void(that.alreadyAttaching=!1);var sess=xmppService.connection.jingle.sessions[call.id];if(sess.remoteStreams){var mainRemoteTrack,secondRemoteTrack;if(sess.remoteStreams.length>1)sess.remoteStreams[0].getAudioTracks().length?(secondRemoteTrack=sess.remoteStreams[0],mainRemoteTrack=sess.remoteStreams[1]):(mainRemoteTrack=sess.remoteStreams[0],secondRemoteTrack=sess.remoteStreams[1]),mainRemoteTrack.getVideoTracks().length>0&&($log.webrtc("attachDistantMediaStreams video track for element largevideo "+mainRemoteTrack.id),that.RTC.attachMediaStreamIfNeeded(angular.element("#largevideo"),mainRemoteTrack,mainRemoteTrack.id),angular.element("#largevideo")[0]&&(angular.element("#largevideo")[0].muted=!0,angular.element("#largevideo")[0].volume=0)),mainRemoteTrack.getAudioTracks().length>0&&($log.webrtc("attachDistantMediaStreams audio track for element globalAudioTag "+mainRemoteTrack.id),that.RTC.attachMediaStream(angular.element("#globalAudioTag"),mainRemoteTrack)),secondRemoteTrack.getVideoTracks().length>0&&($log.webrtc("attachDistantMediaStreams video track for element p2pSecondVideo "+secondRemoteTrack.id),that.RTC.attachMediaStreamIfNeeded(angular.element("#p2pSecondVideo"),secondRemoteTrack,secondRemoteTrack.id),angular.element("#p2pSecondVideo")[0]&&(angular.element("#p2pSecondVideo")[0].muted=!0,angular.element("#p2pSecondVideo")[0].volume=0)),secondRemoteTrack.getAudioTracks().length>0&&($log.webrtc("attachDistantMediaStreams audio track for element globalAudioTag "+secondRemoteTrack.id),that.RTC.attachMediaStream(angular.element("#globalAudioTag"),secondRemoteTrack));else sess.remoteStreams.forEach((function(track){track.getVideoTracks().length>0&&($log.webrtc("attachDistantMediaStreams video track"),that.RTC.attachMediaStreamIfNeeded(angular.element("#largevideo"),track,track.id),angular.element("#largevideo")[0]&&(angular.element("#largevideo")[0].muted=!0,angular.element("#largevideo")[0].volume=0),that.RTC.attachMediaStreamIfNeeded(angular.element("#p2pSecondVideo"),track,track.id),angular.element("#p2pSecondVideo")[0]&&(angular.element("#p2pSecondVideo")[0].muted=!0,angular.element("#p2pSecondVideo")[0].volume=0)),track.getAudioTracks().length>0&&($log.webrtc("attachDistantMediaStreams audio track"),that.RTC.attachMediaStream(angular.element("#globalAudioTag"),track))}));that.alreadyAttaching=!1}}else that.isUserContactInCall()||(this.RTC.clearMediaStream(angular.element("#largevideo"),null),this.RTC.clearMediaStream(angular.element("#globalVideoTag"),null),this.RTC.clearMediaStream(angular.element("#globalAudioTag"),null))},this.attachLocalMediaStreams=function(attach){if($log.webrtc("attachLocalMediaStreams "+attach),attach){if(this.localStreams&&this.localStreams.length){var firstVideoStream=!1;this.localStreams.forEach((function(track){track.getVideoTracks().length&&track.getAudioTracks().length?(firstVideoStream?that.RTC.attachMediaStreamIfNeeded($("#minivideo2"),track,track.id):(firstVideoStream=!0,that.RTC.attachMediaStreamIfNeeded($("#minivideo"),track,track.id)),that.RTC.attachMediaStreamIfNeeded($("#callVideoPip"),track,track.id)):track.getVideoTracks().length&&(firstVideoStream?that.RTC.attachMediaStreamIfNeeded($("#minivideo2"),track,track.id):(firstVideoStream=!0,that.RTC.attachMediaStreamIfNeeded($("#minivideo"),track,track.id)),that.RTC.attachMediaStreamIfNeeded($("#callSharingPip"),track,track.id))}))}$("#callVideoPip")[0]&&($("#callVideoPip")[0].volume=0),$("#minivideo")[0]&&($("#minivideo")[0].volume=0),$("#minivideo2")[0]&&($("#minivideo2")[0].volume=0),$("#callSharingPip")[0]&&($("#callSharingPip")[0].volume=0)}else this.RTC.clearMediaStream($("#minivideo"),null),this.RTC.clearMediaStream($("#minivideo2"),null),this.RTC.clearMediaStream($("#callVideoPip"),null),this.RTC.clearMediaStream($("#callSharingPip"),null)},this.pushInLocalStreams=function(stream,callId){stream.callId=callId,that.localStreams.push(stream)},this.openErrorPopup=function(msg){msg||(msg="cameraNotAvailable"),$rootScope.$broadcast("ON_WEBRTC_CALL_ERROR_EVENT",msg)},this.openCalendarBusyPopup=function(id){$rootScope.$broadcast("ON_WEBRTC_CALENDAR_BUSY_EVENT",id)},this.makeVideoCall=function(contact){that.makeCall(contact,"videoOnly")},this.makeCall=function(contact,theMedia,message){$log.webrtc("MEDIA   | makeCall to "+JSON.stringify({displayName:contact.displayNameForLog(),resources:contact.resources})),that.makingCall?$log.info("MEDIA   | makeCall already making a call !"):(that.makingCall=!0,this.videoEventHandler.sendProposition(contact,theMedia,message))},this.makeJingleCall=function(call,mediaPillarJid,phoneNumber){$log.webrtc("MEDIA   | makeJingleCall"),that.setWebrtcConfiguration().then((function(){var localType="";call.localMedia&_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Media.AUDIO&&(localType="audio"),call.localMedia&_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Media.VIDEO&&(localType=localType?"audio+video":"video"),mediaPillarJid&&""!==mediaPillarJid&&$log.webrtc("MEDIA   | makeJingleCall in mediaPillar case for number : "+phoneNumber),mediaPillarJid&&""!==mediaPillarJid&&phoneNumber&&""!==phoneNumber?(localType="sip",xmppService.connection.jingle.initiate(mediaPillarJid,xmppService.connection.jid,localType,that.localStreams,call.id,null,phoneNumber)):xmppService.connection.jingle.initiate(call.fullJid,xmppService.connection.jid,localType,that.localStreams,call.id,null,null,call.unifiedPlanActivated),call.status=_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.CONNECTING,$rootScope.$broadcast("ON_CALL_UPDATED_EVENT",call)})).catch((function(error){$log.webrtc("MEDIA   | makeCall failure : "+JSON.stringify({error:error.message})),that.makingCall=!1,call&&that.removeCallObject(call),that.resetToSafeState()}))},this.makeJingleSharingCall=function(call){$log.webrtc("MEDIA   | makeJingleSharingCall - make desktop sharing call");var type="sharing";call.localMedia===_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Media.SHARING&&(type="sharing-only"),that.setWebrtcConfiguration().then((function(){$log.webrtc("SHARING | getUserMedia success");var mediaPillarSession=that.getMediaPillarSession(),callStreams=mediaPillarSession?that.localStreams.filter((function(localStream){return!(mediaPillarSession.localStreams&&mediaPillarSession.localStreams.includes(localStream))})):that.localStreams;xmppService.connection.jingle.initiate(call.fullJid,xmppService.connection.jid,type,callStreams,call.id,null,null,call.unifiedPlanActivated),call.status=_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.CONNECTING,$rootScope.$broadcast("ON_CALL_UPDATED_EVENT",call)})).catch((function(error){that.makingCall=!1,call&&that.removeCallObject(call),that.resetToSafeState(),$log.webrtc("MEDIA   | makeJingleSharingCall failure : "+JSON.stringify({error:error.message}))}))},this.startDesktopSharing=function(contact,media){that.makingCall?$log.info("MEDIA   | startDesktopSharing already making a call !"):(that.makingCall=!0,!that.askToStartSharing(contact.jid,media)&&that.makeDesktopSharingCall(contact,media))},this.startSharingCancelled=function(){that.makingCall=!1},this.makeDesktopSharingCall=function(contact,media){media||(media="sharing"),that.makingCall=!0,$log.webrtc("MEDIA   | makeDesktopSharingCall - trying to start a desktop sharing call with media "+media),this.videoEventHandler.sendProposition(contact,media)},this.answerJingleCall=function(call){$log.webrtc("MEDIA   | answerJingleCall "+call.id);var mediaToGet=[],localType="audio";call.localMedia&_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Media.AUDIO&&mediaToGet.push("audio"),call.localMedia&_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Media.VIDEO&&(mediaToGet.push("video"),localType="audio+video"),call.localMedia===_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Media.VIDEO&&(localType="video");var mediaConstraints={};call.isInConversationWithMobile()&&(mediaConstraints=that.getMobileMediaConstraints("video")),that.setWebrtcConfiguration().then((function(){that.getBrowserMedia(mediaToGet,mediaConstraints.fixedVideoWidth,mediaConstraints.fixedVideoHeight,mediaConstraints.fixedFrameRate).then((function(stream){var session=xmppService.connection.jingle.sessions[call.id];stream?(that.pushInLocalStreams(stream,call.id),session.addStream(that.localStreams[0]),session.localStreams.push(that.localStreams[0])):localType=null,session.localType=localType,session.sendAnswer(),session.accept(),$rootScope.$broadcast("ON_CALL_UPDATED_EVENT",call)})).catch((function(error){$log.webrtc("MEDIA   | answerJingleCall failure for : "+call+" failure : "+error.message),-1!==error.toString().indexOf("getUserMedia")&&(that.releaseCall(call),that.openErrorPopup()),that.resetToSafeState()}))}))},this.answerCall=function(call,type){this.videoEventHandler.acceptProposition(call,type)},this.rejectCall=function(call,__reason){call?(that.makingCall=!1,that.autoreleaseTimeout&&$interval.cancel(that.autoreleaseTimeout),xmppService.connection.jingle.sessions[call.id]?that.releaseCall(call):call.isInitiator?this.videoEventHandler.retractProposition(call):this.videoEventHandler.rejectProposition(call,__reason)):$log.webrtc("MEDIA   | rejectCall - trying to rejectCall a non existing call !")},this.releaseCall=function(call,reason,text){call?(that.makingCall=!1,this.execute("releaseCall",(function(){$log.webrtc("MEDIA   | releaseCall : "+call);try{var session=xmppService.connection.jingle.sessions[call.id];that.disableAudioVideoMedia(session),contactService.resetBusyState(),that.autoreleaseTimeout&&$interval.cancel(that.autoreleaseTimeout),that.createOrUpdateStatisticsForCall(call.id),that.callsStats[call.id]&&delete that.callsStats[call.id],that.callsStatsSimplified[call.id]&&delete that.callsStatsSimplified[call.id],that.removeCallObject(call,reason,text),that.displayWebRTCStats(call.id),that.isUserContactInCall()||that.clearSrcObjectsFromElements()}catch(error){$log.webrtc("MEDIA   | releaseCall ERROR"),$log.error(error),that.createOrUpdateStatisticsForCall(call.id),that.callsStats[call.id]&&delete that.callsStats[call.id],that.callsStatsSimplified[call.id]&&delete that.callsStatsSimplified[call.id],that.resetToSafeState(),that.displayWebRTCStats(call.id),that.removeCallObject(call)}}))):$log.webrtc("MEDIA   | releaseCall - trying to release a non existing call !")},this.askToAddDesktopSharing=function(conversation){$log.webrtc("MEDIA   | askToAddDesktopSharing - Desktop sharing escalation"),!that.askToAddSharing(conversation.id)&&that.addSharingToCall(conversation.videoCall)},this.addAudioToCall=function(call,mediaModify){$log.webrtc("MEDIA   | addAudioToCall");var session=xmppService.connection.jingle.sessions[call.id];session.isRenegotiating=!0;this.getBrowserMedia(["audio"]).then((function(stream){that.stopActiveAudioVideoStreams(session),that.pushInLocalStreams(stream,call.id);for(var i=0;i<that.localStreams.length;i++)session.removeStream(that.localStreams[i]);var type=mediaModify?"contentModify":"contentAdd";that.updateCurrentCall(call,session,"audio",type)})).catch((function(error){$log.webrtc("MEDIA   | addAudioToCall failure : "+error),that.releaseCall(call),that.resetToSafeState()}))},this.addSharingToCall=function(call){$log.webrtc("MEDIA   | addSharingToCall - Desktop sharing escalation");var session=xmppService.connection.jingle.sessions[call.id];session.isRenegotiating=!0;var mediaConstraints={};call.isInConversationWithMobile()&&(mediaConstraints=that.getMobileMediaConstraints("sharing")),this.getBrowserMedia(["sharing"],null,null,mediaConstraints.fixedFrameRate).then((function(stream){for(var i=0;i<that.localStreams.length;i++)session.removeStream(that.localStreams[i]),session.localStreams[i]=null;session.localStreams=[],that.pushInLocalStreams(stream,call.id);for(i=0;i<that.localStreams.length;i++)session.removeStream(that.localStreams[i]);that.updateCurrentCall(call,session,"sharing","contentAdd")})).catch((function(error){$log.webrtc("MEDIA   | addSharingToCall failure : "+error),session.isRenegotiating=!1,-1!==error.toString().indexOf("getUserMedia")&&that.openErrorPopup()}))},this.addVideoToCall=function(call,mediaModify){$log.webrtc("MEDIA   | addVideoToCall");var session=xmppService.connection.jingle.sessions[call.id];session.isRenegotiating=!0;var mediaConstraints={};call.isInConversationWithMobile()&&(mediaConstraints=that.getMobileMediaConstraints("video")),that.getBrowserMedia(["audio","video"],mediaConstraints.fixedVideoWidth,mediaConstraints.fixedVideoHeight,mediaConstraints.fixedFrameRate).then((function(stream){that.stopActiveAudioVideoStreams(session),that.pushInLocalStreams(stream,call.id);for(var i=0;i<that.localStreams.length;i++)session.removeStream(that.localStreams[i]);var type=mediaModify?"contentModify":"contentAdd";that.updateCurrentCall(call,session,"video",type)})).catch((function(error){$log.webrtc("MEDIA   | addVideoToCall failure for : "+call+" failure : "+error.message),-1!==error.toString().indexOf("getUserMedia")?($log.info("addVideoToCall impossible, no webcam plugged"),that.openErrorPopup()):(that.releaseCall(call),that.resetToSafeState())}))},this.removeSharingFromCall=function(call){$log.webrtc("MEDIA   | removeSharingFromCall");var session=xmppService.connection.jingle.sessions[call.id];this.stopAllActiveStreams(session);var mediaToGet=["audio"];call.localMedia&_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Media.VIDEO&&mediaToGet.push("video"),session.isRenegotiating=!0,that.getBrowserMedia(mediaToGet).then((function(stream){that.pushInLocalStreams(stream,call.id),that.updateCurrentCall(call,session,"sharing","contentRemove")})).catch((function(error){$log.webrtc("MEDIA   | removeSharingFromCall failure for : "+call+" failure : "+error.message),-1!==error.toString().indexOf("getUserMedia")&&that.openErrorPopup(),that.releaseCall(call),that.resetToSafeState()}))},this.removeVideoFromCall=function(call){$log.webrtc("MEDIA   | removeVideoFromCall"),this.reverseAudioCallInitiated=!0;var session=xmppService.connection.jingle.sessions[call.id];this.stopActiveAudioVideoStreams(session),this.localStreams.forEach((function(stream){session.removeStream(stream)}));session.isRenegotiating=!0,that.getBrowserMedia(["audio"]).then((function(stream){that.pushInLocalStreams(stream,call.id),that.updateCurrentCall(call,session,"video","contentRemove")})).catch((function(error){$log.webrtc("MEDIA   | removeVideoFromCall failure for : "+call+" failure : "+error),-1!==error.toString().indexOf("getUserMedia")&&that.openErrorPopup(),that.releaseCall(call),that.resetToSafeState()}))},this.calculatePresenceMessage=function(call){var message="audio";return call&&call.localMedia&_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Media.VIDEO&&(message="video"),call&&call.remoteMedia&_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Media.VIDEO&&(message="video"),call&&call.localMedia&_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Media.SHARING&&(message="sharing"),call&&call.remoteMedia&_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Media.SHARING&&(message="sharing"),message},this.calculateAudioState=function(data){var audioState=0;return data.availableIncomingAudioBandwidth&&(audioState=data.availableIncomingAudioBandwidth<15&&data.availableIncomingAudioBandwidth>0?1:data.availableIncomingAudioBandwidth>=15&&data.availableIncomingAudioBandwidth<30?2:3),audioState},this.calculateVideoState=function(data){var videoState=0;return data.availableIncomingVideoBandwidth&&(videoState=data.availableIncomingVideoBandwidth<300?1:data.availableIncomingVideoBandwidth>=300&&data.availableIncomingVideoBandwidth<500?2:3),videoState},this.execute=function(action,actionHandler,parameter){this.started||"releaseCall"===action?actionHandler(parameter):$log.webrtc("MEDIA   | "+action+" failure : videoService is not started")},this.getOrCreateCallByCallId=function(callId){var call=that.calls[callId];if(!call){var sess=xmppService.connection.jingle.sessions[callId],peerJid=xmppService.getBareJidFromJid(sess.peerjid),contact=contactService.getContactByJid(peerJid);call=_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.create(_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.UNKNOWN,callId,_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Type.WEBRTC,contact),that.calls[call.id]=call}return call},this.getCallByContact=function(contact){for(var key in this.calls)if(this.calls.hasOwnProperty(key)){var call=that.calls[key];if(call.contact&&contact.jid===call.contact.jid)return call}return null},this.removeCallObject=function(call,reason,text){try{if(call){$log.debug("removeCallObject Call id: "+call.id),call.status=_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.UNKNOWN;var session=xmppService.connection.jingle.sessions?xmppService.connection.jingle.sessions[call.id]:null;that.disableAudioVideoMedia(session,call.id),delete that.calls[call.id],$rootScope.$broadcast("ON_CALL_UPDATED_EVENT",call),session&&xmppService.connection.jingle.terminate(call.id,reason,text)}}catch(error){$log.error("removeCallObject error "+error)}},this.updateRemoteTypeMedia=function(remoteType,call){switch(remoteType){case"audio":call.remoteMedia=_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Media.AUDIO;break;case"video":call.remoteMedia=_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Media.VIDEO;break;case"audio+video":call.remoteMedia=_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Media.AUDIO|_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Media.VIDEO;break;case"sharing":call.remoteMedia=_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Media.SHARING|_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Media.AUDIO;break;case"sharing-only":call.remoteMedia=_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Media.SHARING;break;default:call.remoteMedia=null}$log.debug("REMOTE TYPE || REMOTE MEDIA  "+call.remoteMedia)},this.checkStreamAndStatus=function(stream,contact){return stream&&(0===stream.getAudioTracks().length&&0===stream.getVideoTracks().length||!1===stream.active)?(that.openErrorPopup(),!1):!(contact.capabilities&&!contact.capabilities.webRTC)||($log.webrtc("MEDIA   | initSharedDesktop failure : remote contact is no more available"),stream.stop&&stream.stop(),that.openErrorPopup("remoteUserNoMoreAvailable"),!1)},this.displayWebRTCStats=function(callId){try{var streams=null,i=0;if(gRTCStatsService.hasStatsForCall(callId)){if($log.webrtc("STATS   | Bundle policy used: "+gRTCStatsService.getBundlePolicyForCall(callId)),0===(streams=gRTCStatsService.getStreamsDetailsFromCall(callId)).length)$log.webrtc("STATS   | No channel information available for call "+callId);else for(i=0;i<streams.length;i++)$log.webrtc("STATS   | "+streams[i].id+": "+JSON.stringify(streams[i].streams));var codecs=gRTCStatsService.getCodecDetailsFromCall(callId);$log.webrtc("STATS   | codecs used: "+JSON.stringify(codecs)),gaService.trackCodecsUsed(codecs.codec.audio,codecs.codec.video)}else if(fRTCStatsService.hasStatsForCall(callId))if($log.webrtc("STATS   | Bundle policy used: "+fRTCStatsService.getBundlePolicyForCall(callId)),0===(streams=fRTCStatsService.getStreamsDetailsFromCall(callId)).length)$log.webrtc("STATS   | No channel information available for call "+callId);else for(i=0;i<streams.length;i++)$log.webrtc("STATS   | "+streams[i].id+": "+JSON.stringify(streams[i].streams))}catch(error){$log.error("[videoService] displayWebRTCStats error : "+error)}},this.muteAudio=function(conversation,state){var call=conversation.videoCall;if(call){$log.webrtc("MEDIA   | mute audio: "+call+" | state: "+state),conversation.isMutedAudio=state,call.isMuted=state;var session=xmppService.connection.jingle.sessions[call.id];session?(session.muteAudio(state),$rootScope.$broadcast("ON_CONVERSATION_CALL_MUTED_UPDATED_EVENT",{conversation:conversation,call:call})):$log.webrtc("MEDIA   | muteAudio - trying to mute a non existing session !")}else $log.webrtc("MEDIA   | muteAudio - trying to mute a non existing call !")},this.muteVideo=function(conversation,state){var call=conversation.videoCall;if(call){$log.webrtc("MEDIA   | muteVideo: "+call);var session=xmppService.connection.jingle.sessions[call.id];session&&(session.muteVideo(state),session.sendMute(state)),$rootScope.$broadcast("ON_CONVERSATION_CALL_MUTED_UPDATED_EVENT",{conversation:conversation,call:call})}else $log.webrtc("MEDIA   | muteVideo - trying to mute a non existing call !")},this.stopAllActiveStreams=function(session){this.stopActiveAudioVideoStreams(session,!0)},this.stopActiveAudioVideoStreams=function(session,stopAll){if(that.localStreams.length>0)if(that.localStreams.forEach((function(stream){(stream.getAudioTracks().length||stopAll)&&(stream.getTracks().forEach((function(track){track.enabled=!1,track.stop(),track=null})),stream.stop&&stream.stop(),stream=null)})),stopAll)for(;that.localStreams.length;){that.localStreams.pop();null}else for(var i=0;i<that.localStreams.length;i++)if(that.localStreams[i]&&that.localStreams[i].getAudioTracks().length){that.localStreams.splice(i,1);null}if(session&&session.localStreams){if(session.localStreams.forEach((function(stream){(stream.getAudioTracks().length||stopAll)&&(stream.getTracks().forEach((function(track){track.enabled=!1,track.stop(),track=null})),stream.stop&&stream.stop(),session.removeStream(stream))})),stopAll)for(;session.localStreams.length;){session.localStreams.pop();null}session.localStreams=[]}session&&xmppService.connection.jingle.localStream&&session.removeStream(xmppService.connection.jingle.localStream)},this.resetToSafeState=function(){$log.webrtc("MEDIA   | resetToSafeState"),that.autoreleaseTimeout&&$interval.cancel(that.autoreleaseTimeout),(that.localStream||that.localStreams.length)&&that.disableAudioVideoMedia(),contactService.resetBusyState()},this.vidRes={1080:[1920,1080],720:[1280,720],360:[640,360],180:[320,180],960:[960,720],640:[640,480],320:[320,240]},this.getMobileMediaConstraints=function(type){return this.mobileVideoQualityConfiguration[type]},this.setVideoQualityConfigurationForCompany=function(){this.companyConfig&&this.companyConfig.video&&(this.videoQualityConfiguration.video.fixedVideoHeight=this.companyConfig.video.height?this.companyConfig.video.height.ideal:this.videoQualityConfiguration.video.fixedVideoHeight,this.videoQualityConfiguration.video.fixedVideoWidth=this.companyConfig.video.width?this.companyConfig.video.width:this.videoQualityConfiguration.video.fixedVideoWidth,this.videoQualityConfiguration.video.fixedFrameRate=this.companyConfig.video.frameRate?this.companyConfig.video.frameRate:this.videoQualityConfiguration.video.fixedFrameRate)},this.videoQualityConfiguration={video:{fixedFrameRate:30,fixedVideoWidth:1280,fixedVideoHeight:720},sharing:{fixedFrameRate:8,fixedVideoWidth:1920,fixedVideoHeight:1080}},this.mobileVideoQualityConfiguration={video:{fixedFrameRate:20,fixedVideoWidth:640,fixedVideoHeight:480},sharing:{fixedFrameRate:8,fixedVideoWidth:1920,fixedVideoHeight:1080}},this.minFirefoxWebRTCVersion=45,this.minChromeWebRTCVersion=42,this.minEdgeWebRTCVersion=25,this.firefoxPreferedSharing="screen",this.getBrowserMedia=function(userMedia,fixedVideoWidth,fixedVideoHeight,fixedFrameRate){return userMedia&&0!==userMedia.length?new Promise((function(resolve,reject){var deferred=$q.defer(),shouldGetDisplayMedia=!1,constraints={audio:!1,video:!1},width=fixedVideoWidth||that.videoQualityConfiguration.video.fixedVideoWidth,height=fixedVideoHeight||that.videoQualityConfiguration.video.fixedVideoHeight,promises=[];if(platformService.allowDevicesManagement()){if(userMedia.indexOf("audio")>=0){var microphoneDeferred=$q.defer();platformService.getCurrentMicrophone().then((function(microphone){constraints.audio=!microphone||{optional:[{sourceId:microphone.id}]},microphoneDeferred.resolve(constraints);var mic="default";microphone&&(mic="id - "+microphone.id+" and label "+microphone.label),$log.info("[VideoService] GetUserMedia for microphone "+mic)})),promises.push(microphoneDeferred.promise)}if(userMedia.indexOf("video")>=0){var frameRate=fixedFrameRate||that.videoQualityConfiguration.video.fixedFrameRate,cameraDeferred=$q.defer();platformService.getCurrentCamera().then((function(camera){camera&&"default"!==camera.id?constraints.video={width:width,height:height,frameRate:frameRate,deviceId:{exact:camera.id}}:constraints.video={width:width,height:height,frameRate:frameRate},cameraDeferred.resolve(constraints);var cam="default";camera&&(cam="id - "+camera.id+" and label "+camera.label),$log.info("[VideoService] GetUserMedia for camera "+cam)})),promises.push(cameraDeferred.promise)}}else userMedia.indexOf("audio")>=0&&(constraints.audio=!0),userMedia.indexOf("video")>=0&&(constraints.video={width:width,height:height});if(userMedia.indexOf("sharing")>=0){frameRate=fixedFrameRate||8;if(extensionSharingService.extensionFound)constraints.video={mandatory:{chromeMediaSource:"desktop",maxWidth:1920,maxHeight:1080,maxFrameRate:frameRate}},promises.push(extensionSharingService.getStreamToShareFromExtension(constraints));else if(!that.isNativeApplication()&&"chrome"===adapter.default.browserDetails.browser&&adapter.default.browserDetails.version>=73)shouldGetDisplayMedia=!0,constraints={},constraints={video:{chromeMediaSource:"desktop",width:1920,height:1080,frameRate:frameRate}};else if("firefox"===adapter.default.browserDetails.browser)constraints.video={mediaSource:that.firefoxPreferedSharing};else{var sharingSources=that.getDesktopSharingSource(),chromeMediaSource=sharingSources&&sharingSources.chromeMediaSource?sharingSources.chromeMediaSource:"desktop",chromeMediaSourceId=sharingSources&&sharingSources.chromeMediaSourceId?sharingSources.chromeMediaSourceId:null;constraints.video={mandatory:{chromeMediaSource:chromeMediaSource,maxWidth:1920,minWidth:1920,maxHeight:1080,minHeight:1080,maxFrameRate:frameRate}},chromeMediaSourceId&&(constraints.video.mandatory.chromeMediaSourceId=chromeMediaSourceId)}}$q.all(promises).then((function(){deferred.resolve(constraints)})).catch((function(){deferred.resolve()})),deferred.promise.then((function(constraint){if($log.info("[VideoService] GetUserMedia with constraint "+JSON.stringify(constraint)),constraint)try{shouldGetDisplayMedia?navigator.mediaDevices.getDisplayMedia(constraint).then((function(stream){$log.webrtc("MEDIA   | getDisplayMedia success"),stream.getVideoTracks().length&&$log.info("[videoService] getDisplayMedia video stream kind "+stream.getVideoTracks()[0].kind+", id "+stream.getVideoTracks()[0].id+", label "+stream.getVideoTracks()[0].label+", readyState "+stream.getVideoTracks()[0].readyState+", enabled "+stream.getVideoTracks()[0].enabled),stream&&(0===stream.getAudioTracks().length&&0===stream.getVideoTracks().length||!1===stream.active)&&($log.webrtc("Stream has no active audio or video tracks"),gaService.trackGetUserMediaErrorNoTrack(),reject(new Error("getDisplayMedia failure : Stream has no active audio or video tracks"))),stream.getVideoTracks()[0].onended=function(){$log.info("Stop screensharing in chrome has been triggered"),$rootScope.$broadcast("ON_CHROME_STOP_SCREEN_SHARING_TRIGGERED")},resolve(stream),gaService.trackGetUserMediaSuccess()})).catch((function(error){$log.webrtc("MEDIA   | getDisplayMedia failure: "+error),gaService.trackGetUserMediaError(),$rootScope.$broadcast("ON_WEBRTC_GETUSERMEDIA_ERROR",error),reject(new Error("getDisplayMedia failure "+error))})):navigator.mediaDevices.getUserMedia(constraint).then((function(stream){$log.webrtc("MEDIA   | getUserMedia success"),stream.getAudioTracks().length&&$log.info("[videoService] getUserMedia audio stream kind "+stream.getAudioTracks()[0].kind+", id "+stream.getAudioTracks()[0].id+", label "+stream.getAudioTracks()[0].label+", readyState "+stream.getAudioTracks()[0].readyState+", enabled "+stream.getAudioTracks()[0].enabled),stream.getVideoTracks().length&&$log.info("[videoService] getUserMedia video stream kind "+stream.getVideoTracks()[0].kind+", id "+stream.getVideoTracks()[0].id+", label "+stream.getVideoTracks()[0].label+", readyState "+stream.getVideoTracks()[0].readyState+", enabled "+stream.getVideoTracks()[0].enabled),stream&&(0===stream.getAudioTracks().length&&0===stream.getVideoTracks().length||!1===stream.active)&&($log.webrtc("Stream has no active audio or video tracks"),gaService.trackGetUserMediaErrorNoTrack(),reject(new Error("getUserMedia failure : Stream has no active audio or video tracks"))),extensionSharingService.extensionFound&&userMedia.indexOf("sharing")>=0&&(stream.getVideoTracks()[0].onended=function(){$log.info("Stop screensharing in chrome has been triggered"),$rootScope.$broadcast("ON_CHROME_STOP_SCREEN_SHARING_TRIGGERED")}),stream&&stream.getAudioTracks().length&&(stream.getAudioTracks()[0].onended=function(event){$log.error("audio stream track ended"),console.log(this),console.log(event)}),resolve(stream),gaService.trackGetUserMediaSuccess()})).catch((function(error){$log.webrtc("MEDIA   | getUserMedia failure: "+error),gaService.trackGetUserMediaError(),$rootScope.$broadcast("ON_WEBRTC_GETUSERMEDIA_ERROR",error),reject(new Error("getUserMedia failure "+error))}))}catch(err){$log.webrtc("MEDIA   | getUserMedia failure: "+err),gaService.trackGetUserMediaError(),reject(new Error("getUserMedia failure "+err))}else reject({message:"getUserMedia cancelled"})}))})):$q.when()},this.getBrowserMethodHandler=function(){var version="",returnValue=null;if(navigator.mozGetUserMedia&&$window.mozRTCPeerConnection){if(version=browserService.extractBrowserVersion(navigator.userAgent,/Firefox\/([0-9]+)\./,1),$log.webrtc("BROWSER | Detect Firefox navigator (version "+version+")"),version<this.minFirefoxWebRTCVersion)return $log.webrtc("BROWSER | Firefox navigator is not WebRTC capable before version "+this.minFirefoxWebRTCVersion),returnValue;returnValue={browser:"firefox",attachMediaStream:function(element,stream){element&&element[0]&&(element[0].mozSrcObject=stream,element[0].srcObject=stream,element[0].play())},pc_constraints:{},clearMediaStream:function(element){try{angular.isDefined(element[0])&&(element[0].pause(),element[0].mozSrcObject=null,element[0].srcObject=null,element[0].uniqueId=null)}catch(err){$log.webrtc("BROWSER | clearMediaStream failure "+err)}},attachMediaStreamIfNeeded:function(element,stream,uniqueId){$log.webrtc("BROWSER | attachMediaStreamIfNeeded for ID "+uniqueId),element&&element[0]&&(element[0].uniqueId!==uniqueId||!element[0].mozSrcObject&&!element[0].srcObject)&&(element[0].uniqueId=uniqueId,that.RTC.attachMediaStream(element,stream))}}}else if(navigator.webkitGetUserMedia&&$window.webkitRTCPeerConnection){if(version=browserService.extractBrowserVersion(navigator.userAgent,/Chrom(e|ium)\/([0-9]+)\./,2),$log.webrtc("BROWSER | Detect Chrome navigator (version "+version+")"),version<this.minChromeWebRTCVersion)return $log.webrtc("BROWSER | Chrome navigator is not WebRTC capable before version "+this.minChromeWebRTCVersion),returnValue;returnValue={browser:"chrome",attachMediaStream:function(element,stream){$log.webrtc("BROWSER | attachMediaStream to element"),element&&element[0]&&(element[0].srcObject=stream),$interval((function(){element&&element[0]&&element[0].load&&element[0].load()}),1e3,1)},pc_constraints:{},clearMediaStream:function(element){angular.isDefined(element[0])&&(element[0].pause(),element[0].srcObject=null,element[0].uniqueId=null)},attachMediaStreamIfNeeded:function(element,stream,uniqueId){$log.webrtc("BROWSER | attachMediaStreamIfNeeded for ID "+uniqueId),!element||!element[0]||element[0].uniqueId===uniqueId&&element[0].srcObject||(element[0].uniqueId=uniqueId,that.RTC.attachMediaStream(element,stream))}}}else window.RTCPeerConnection&&navigator.userAgent.match(/AppleWebKit\/(\d+)\./)&&(returnValue={browser:"safari",attachMediaStream:function(element,stream){element&&element[0]&&(element[0].setAttribute("playsinline",!0),element[0].srcObject=stream,element[0].play())},pc_constraints:{},clearMediaStream:function(element){try{angular.isDefined(element[0])&&(element[0].pause(),element[0].srcObject=null,element[0].uniqueId=null)}catch(err){$log.webrtc("BROWSER | clearMediaStream failure "+err)}},attachMediaStreamIfNeeded:function(element,stream,uniqueId){$log.webrtc("BROWSER | attachMediaStreamIfNeeded for ID "+uniqueId),!element||!element[0]||element[0].uniqueId===uniqueId&&element[0].srcObject||(element[0].uniqueId=uniqueId,that.RTC.attachMediaStream(element,stream))}});return returnValue},this.getIceConfig=function(){return $q((function(resolve,reject){var portalURL=config.restServerUrl+"/api/rainbow/geolocation/v1.0/";$http({method:"GET",url:portalURL+"settings/iceservers?nbServers=2",headers:authService.getRequestHeader()}).then((function(result){$log.info("[videoService] getIceConfig success");var iceServers=result.data.data;iceServers.forEach((function(element){delete element.id}),this),resolve({iceServers:iceServers})})).catch((function(error){$log.error("[videoService] getIceConfig failure -- "+error.message),reject(error)}))}))},this.getCompanyWebrtcConfig=function(){return $q((function(resolve,reject){var apiURL=config.restServerUrl+"/api/rainbow/enduser/v1.0/settings/webrtc";$http({method:"GET",url:apiURL,headers:authService.getRequestHeader()}).then((function(result){$log.info("[videoService] getCompanyWebrtcConfig success");var config=result.data.data;resolve(config)})).catch((function(error){var msg=error&&error.data?error.data.errorDetails:"Unknown error";if(error&&error.data&&400100==error.data.errorDetailsCode)return $log.info("[videoService] getCompanyWebrtcConfig -- "+msg),resolve({});$log.error("[videoService] getCompanyWebrtcConfig failure -- "+msg),reject(error)}))}))},this.calculateNewCallType=function(call,session,type,action){var result=session.localType;return"contentAdd"===action&&("video"===type?(result=call.localMedia&_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Media.SHARING?"sharing+video":"video",call.localMedia=call.localMedia|_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Media.VIDEO):"sharing"===type?(result=call.localMedia&_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Media.VIDEO?"sharing+video":"sharing",call.localMedia=call.localMedia|_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Media.SHARING):"audio"===type&&(call.localMedia&_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Media.SHARING?(result="sharing",call.localMedia=call.localMedia|_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Media.AUDIO):(result="audio",call.localMedia=_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Media.AUDIO))),"contentRemove"===action&&("video"===type?call.localMedia&_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Media.SHARING?(result="sharing",call.localMedia=_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Media.AUDIO|_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Media.SHARING):(result="audio",call.localMedia=_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Media.AUDIO):"sharing"===type&&(call.localMedia&_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Media.VIDEO?(result="video",call.localMedia=_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Media.AUDIO|_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Media.VIDEO):(result="audio",call.localMedia=_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Media.AUDIO))),"contentModify"===action&&call.localMedia&_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Media.VIDEO&&!(call.localMedia&_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Media.SHARING)&&(result="video"),$log.info("[videoService] calculateNewCallType for type "+type+" and action "+action+" with result "+result),result},this.updateCurrentCall=function(call,session,type,action){$log.info("[videoService] updateCurrentCall for type "+type+" and action "+action);for(var newType=this.calculateNewCallType(call,session,type,action),i=0;i<that.localStreams.length;i++)"chrome"===adapter.default.browserDetails.browser?session.addStream(that.localStreams[i]):session.replaceStream(that.localStreams[i]),session.localStreams.push(that.localStreams[i]);switch(action){case"contentAdd":session.contentAdd(newType);break;case"contentRemove":session.contentRemove(newType);break;case"contentModify":session.contentModify(newType)}contactService.setBusyState("dnd",that.calculatePresenceMessage(call)),$rootScope.$broadcast("ON_CALL_UPDATED_EVENT",call),$rootScope.$broadcast("ON_WEBRTC_CALL_ESCALATION",call)},this.createOrUpdateStatisticsForCall=function(callId){var call=this.calls[callId];if(call){var metrics=[];if(this.callsStats[callId])return this.callsStats[callId].RainMetrics&&this.callsStats[callId].push(this.callsStats[callId].RainMetrics),metrics.push({connectionId:callId,stats:this.callsStats[callId]}),void this.updateStatisticsForCall(this.callsStats[callId].id,callId,call.contact.dbId,"ended",metrics);$log.info("[videoService] createOrUpdateStatisticsForCall "+callId),this.callsStats[callId]={},metrics.push({connectionId:callId,stats:this.callsStats[callId]}),this.createStatisticsForSession(callId,call.contact.dbId,"pending",metrics).then((function(id){that.callsStats[callId].id=id,$log.info("[videoService] createOrUpdateStatisticsForCall success for session "+callId+" with id "+id)})).catch((function(error){$log.error("[videoService] createOrUpdateStatisticsForCall "+error.message)}))}else $log.warn("[videoService] createOrUpdateStatisticsForCall -- missing call "+callId)},this.createStatisticsForSession=function(callId,peerId,callState,metrics){return $q((function(resolve,reject){$log.info("[videoService] createStatisticsForSession "+callId);var portalURL=config.restServerUrl+"/api/rainbow/metrics/v1.0/";$http({method:"POST",url:portalURL+"webrtcmetrics",headers:authService.getRequestHeader(),data:{callId:callId,peerId:peerId,callState:callState}}).then((function(response){$log.info("[videoService] createStatisticsForSession success"),response&&response.data&&response.data.data&&response.data.data.id&&(that.callsStats[callId]||(that.callsStats[callId]={}),resolve(response.data.data.id))}),(function(response){$log.error("[videoService] createStatisticsForSession failure "+response.errorMsg),reject(new Error(response.errorMsg))}))}))},this.updateStatisticsForCall=function(id,callId,peerId,callState,metrics){if($log.info("[videoService] updateStatisticsForCall "+callId),id){var portalURL=config.restServerUrl+"/api/rainbow/metrics/v1.0/";$http({method:"POST",url:portalURL+"webrtcmetrics/"+id+"/metrics",headers:authService.getRequestHeader(),data:{metrics:metrics}}).then((function(){$log.info("[videoService] updateStatisticsForCall success"),"ended"===callState&&($log.info("[videoService] updateStatisticsForCall -- update call state with "+callState),$http({method:"PUT",url:portalURL+"webrtcmetrics/"+id,headers:authService.getRequestHeader(),data:{callState:callState}}).then((function(){$log.info("[videoService] updateStatisticsForCall -- update call state success")}),(function(response){$log.error("[videoService] updateStatisticsForCall failure "+response.errorMsg)})))}),(function(response){$log.error("[videoService] updateStatisticsForCall failure "+response.errorMsg)}))}else $log.warn("[videoService] updateStatisticsForCall -- missing id for callId "+callId)},this.sendDTMF=function(dialString,call,skipHandle){var session=xmppService.connection.jingle.sessions[call.id];if(session&&session.peerconnection){var audioDtmfSender=session.peerconnection.getSenders().find((function(sender){return sender.dtmf&&sender.track&&sender.track.enabled&&"audio"===sender.track.kind})),dtmfSender=audioDtmfSender?audioDtmfSender.dtmf:null;dtmfSender?($log.debug("[videoService] sendDTMF: dtmf sender found on webrtc session for call id "+call.id+" dialstring: "+dialString),dtmfSender.ontonechange=skipHandle?this.silentToneChangeEventHandle:this.handleToneChangeEvent,dtmfSender.insertDTMF(dialString)):$log.error("[videoService] sendDTMF: no dtmf sender found on webrtc session for call id "+call.id)}else $log.error("[videoService] sendDTMF: no webrtc session found for call id "+call.id)},this.handleToneChangeEvent=function(event){""!==event.tone&&($log.debug("[videoService] Dtmf Tone played: "+event.tone),$rootScope.$broadcast("ON_DTMF_SENT",event.tone))},this.silentToneChangeEventHandle=function(event){$log.debug("[videoService] Dtmf Tone played: "+event.tone)},angular.element(document).bind("transportreplace.jingle",(function(__event,callId){$log.webrtc("JINGLE  | transportreplace.jingle "+callId);var sess=xmppService.connection.jingle.sessions[callId];sess?sess.sendAnswer(void 0,"transport-accept"):$log.warn("JINGLE  | transportreplace.jingle no such session !")})),angular.element(document).bind("callactive.jingle",(function(__event,callId){$log.webrtc("JINGLE  | callactive "+callId)})),angular.element(document).bind("remotestreamadded.jingle",(function(__event,sid,hasAudioTracks){$log.webrtc("JINGLE  | remoteStreamadded "+sid);var sess=xmppService.connection.jingle.sessions[sid];if(sess&&sess.remoteStreams&&!sess.confId){var call=that.calls[sid];call&&that.attachDistantMediaStreams(!0,call),$rootScope.$broadcast("ON_WEBRTC_REMOTE_STREAM_ADDED",sess.remoteStreams)}hasAudioTracks&&that.resetAudioOutputElement()})),angular.element(document).bind("remotestreamremoved.jingle",(function(__event,sid){$log.webrtc("JINGLE  | remotestreamremoved "+sid)})),angular.element(document).bind("callaccepted.jingle",(function(__event,sid){$log.webrtc("JINGLE  | callaccepted "+sid);var call=that.calls[sid],sess=xmppService.connection.jingle.sessions[sid];call&&sess&&(that.statsInterval&&($log.webrtc("JINGLE  | remove getStats interval"),window.clearInterval(that.statsInterval),that.statsinterval=null),that.createOrUpdateStatisticsForCall(call.id),$log.webrtc("JINGLE  | start getStats interval"),that.statsInterval=sess.getStats(5e3)),call&&call.status.key!==_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.ACTIVE.key&&($log.webrtc("INFO    | call has been accepted. Set current call to ACTIVE state"),angular.element(document).trigger("callactive.jingle",[sid]))})),angular.element(document).bind("nostuncandidates.jingle",(function(__event,sid){$log.webrtc("JINGLE  | nostuncandidates "+sid),gaService.trackICENoSTUNCandidate()})),angular.element(document).bind("ringing.jingle",(function(__event,sid){$log.webrtc("JINGLE  | callremoteringing "+sid)})),angular.element(document).bind("mediafailure.jingle",(function(){$log.webrtc("JINGLE  | callmediafailure")})),angular.element(document).bind("mute.jingle",(function(__event,sid){$log.webrtc("JINGLE  | mute "+sid);var call=that.calls[sid];call.isRemoteVideoMuted=!0,$rootScope.$broadcast("ON_CALL_UPDATED_EVENT",call)})),angular.element(document).bind("unmute.jingle",(function(__event,sid){$log.webrtc("JINGLE  | unmute "+sid);var call=that.calls[sid];call.isRemoteVideoMuted=!1,$rootScope.$broadcast("ON_CALL_UPDATED_EVENT",call)})),angular.element(document).bind("hold.jingle",(function(__event,sid){$log.webrtc("JINGLE  | hold "+sid);var session=xmppService.connection.jingle.sessions[sid];session?(session.muteAudio(!0),$rootScope.$broadcast("ON_HOLD_TONE_EVENT","hold")):$log.webrtc("MEDIA   | hold - received on a non existing session !")})),angular.element(document).bind("unhold.jingle",(function(__event,sid){$log.webrtc("JINGLE  | unhold "+sid);var session=xmppService.connection.jingle.sessions[sid];session?(session.muteAudio(!1),$rootScope.$broadcast("ON_HOLD_TONE_EVENT","unhold")):$log.webrtc("MEDIA   | unhold - received on a non existing session !")})),angular.element(document).bind("remoteIceFailed.jingle",(function(sid){$log.webrtc("JINGLE  | remoteIceFailed "+sid),that.openErrorPopup("IceConnectionFailed")})),angular.element(document).bind("mediamodified.jingle",(function(__event,sid,mediaType){$log.webrtc("JINGLE  | mediamodified "+sid),that.videoEventHandler.mediaModified(sid,mediaType)})),angular.element(document).bind("statsChrome.jingle",(function(__event,sid,items){for(var i=0;i<items.length;++i)switch(items[i].type){case"googComponent":gRTCStatsService.addStreamToCall(sid,items[i]);break;case"ssrc":gRTCStatsService.addSSRCToStream(sid,items[i])}})),angular.element(document).bind("statsFirefox.jingle",(function(__event,sid,items){for(var i=0;i<items.length;++i)switch(items[i].type){case"inboundrtp":case"outboundrtp":fRTCStatsService.addStreamToCall(sid,items[i]);break;case"candidatepair":fRTCStatsService.addCandidatePairToCall(sid,items[i])}})),angular.element(document).bind("webrtcFirefoxStats.jingle",(function(__event,sid,data){if(that.callsStats.sid||(that.callsStats.sid={}),that.callsStats[sid]||(that.callsStats[sid]={}),that.calls[sid]){var currentStats=that.callsStats[sid];currentStats&&(data.videoReceived?currentStats.video=data:currentStats.audio=data,that.callsStats[sid]=currentStats)}})),angular.element(document).bind("webrtcConnectionType.jingle",(function(__event,sid,connectionType){var activeCall=that.calls[sid];connectionType&&($log.webrtc("STATS   | Local candidate ("+connectionType.localAddress+") type is "+connectionType.localCandidateType),$log.webrtc("STATS   | Remote candidate  ("+connectionType.remoteAddress+") type is "+connectionType.remoteCandidateType),activeCall&&activeCall.isInitiator&&gaService.trackICEUsed(connectionType.localCandidateTypee,connectionType.remoteCandidateType),connectionType.networkType&&($log.webrtc("STATS   | Network type is "+connectionType.networkType),activeCall&&activeCall.isInitiator&&gaService.trackICETopology(connectionType.networkType)))})),angular.element(document).bind("webrtcSessionStats.jingle",(function(__event,sid,data){that.callsStats.sid||(that.callsStats.sid={}),that.callsStats[sid]||(that.callsStats[sid]={});var id=that.callsStats[sid].id;that.callsStats[sid]=data,that.callsStats[sid].id=id}))}])},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var _src_models_call_model__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0);angular.module("rainbow").factory("VideoServiceEventHandler",["$log","$rootScope","$interval","contactService","xmppService","profileService","gaService","uuid4",function($log,$rootScope,$interval,contactService,xmppService,profileService,gaService,uuid4){function VideoServiceEventHandler(videoService){this.videoService=videoService,this.nameSpace="urn:xmpp:jingle-message:0"}return VideoServiceEventHandler.create=function(videoService){return new VideoServiceEventHandler(videoService)},VideoServiceEventHandler.prototype.setRemoteTypeMedia=function(remoteType,call){call.remoteMedia=0;for(var i=0;i<remoteType.length;i++)switch(remoteType[i]){case"audio":call.remoteMedia=call.remoteMedia|_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Media.AUDIO;break;case"video":call.remoteMedia=call.remoteMedia|_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Media.VIDEO;break;case"sharing":call.remoteMedia=call.remoteMedia|_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Media.SHARING;break;default:call.remoteMedia=null}$log.debug("REMOTE TYPE || REMOTE MEDIA  "+call.remoteMedia)},VideoServiceEventHandler.prototype.setLocalTypeMedia=function(localType,call){call.localMedia=0;for(var i=0;i<localType.length;i++)switch(localType[i]){case"audio":call.localMedia=call.localMedia|_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Media.AUDIO;break;case"video":call.localMedia=call.localMedia|_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Media.VIDEO;break;case"sharing":call.localMedia=call.localMedia|_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Media.SHARING;break;default:call.localMedia=null}$log.debug("LOCAL TYPE || LOCAL MEDIA  "+call.localMedia)},VideoServiceEventHandler.prototype.sendProposition=function(contact,media,message){$log.info("[VideoServiceEventHandler]   | sendProposition to "+JSON.stringify({displayName:contact.displayNameForLog(),resources:contact.resources}));var that=this,mediaToGet=["audio"],secondMediaToGet=[];"video"===media?mediaToGet.push("video"):"videoOnly"===media?mediaToGet=["video"]:"sharing"===media?(mediaToGet=["sharing"],secondMediaToGet=["audio"]):"sharingOnly"===media&&(mediaToGet=["sharing"]);var id="web_"+uuid4.generate(),call=_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.create(_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.DIALING,id,_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Type.WEBRTC,contact);this.videoService.getBrowserMedia(mediaToGet).then((function(stream){that.videoService.getBrowserMedia(secondMediaToGet).then((function(extraStream){if(that.videoService.makingCall&&that.videoService.started){call.isInitiator=!0,stream.callId=id,that.videoService.localStreams.push(stream),extraStream&&(extraStream.callId=id,that.videoService.localStreams.push(extraStream),mediaToGet.push(secondMediaToGet.pop())),that.videoService.calls[call.id]=call,that.setLocalTypeMedia(mediaToGet,call);var idPropose="web_"+uuid4.generate(),xmppMessage=$msg({from:contactService.userContact.fullJid,to:contact.jid,id:idPropose});xmppMessage.c("propose",{xmlns:that.nameSpace,id:id}),message&&xmppMessage.c("subject",{xmlns:"urn:xmpp:jingle-subject:0"}).t(message).up(),xmppMessage.c("description",{xmlns:"urn:xmpp:jingle:apps:rtp:1",media:mediaToGet[0]}).up(),mediaToGet[1]&&(xmppMessage=xmppMessage.c("description",{xmlns:"urn:xmpp:jingle:apps:rtp:1",media:mediaToGet[1]}).up()),profileService.isFeatureEnabled(profileService.FeaturesEnum.WEBRTC_UNIFIED_PLAN)&&(xmppMessage=xmppMessage.c("unifiedplan",{xmlns:"urn:xmpp:jingle:apps:jsep:1"}).up()),xmppService.send(xmppMessage),that.videoService.makingCall=!1,contactService.setBusyState("dnd",that.videoService.calculatePresenceMessage(call)),$rootScope.$broadcast("ON_CALL_UPDATED_EVENT",call),that.videoService.autoreleaseTimeout&&$interval.cancel(that.videoService.autoreleaseTimeout),that.videoService.autoreleaseTimeout=$interval((function(_call){$log.webrtc("MEDIA   | send proposition : no response after 30 seconds : release the call"),call&&that.videoService.rejectCall(_call)}),3e4,1,!0,call)}else $log.warn("[VideoServiceEventHandler]   | sendProposition -- call should no longer be made !"),that.videoService.makingCall=!1,stream.getTracks().forEach((function(track){track.enabled=!1,track.stop(),track=null})),stream.stop&&stream.stop(),stream=null,extraStream&&(extraStream.getTracks().forEach((function(track){track.enabled=!1,track.stop(),track=null})),extraStream.stop&&extraStream.stop(),extraStream=null)})).catch((function(error){$log.info("[VideoServiceEventHandler]   | sendProposition failure : "+JSON.stringify({error:error.message})),that.videoService.makingCall=!1,-1!==error.toString().indexOf("getUserMedia")&&that.videoService.openErrorPopup(),that.videoService.removeCallObject(call),that.videoService.isUserContactInCall()||that.videoService.resetToSafeState(),that.videoService.autoreleaseTimeout&&$interval.cancel(that.videoService.autoreleaseTimeout)}))})).catch((function(error){$log.info("[VideoServiceEventHandler]   | sendProposition failure : "+JSON.stringify({error:error.message})),that.videoService.makingCall=!1,mediaToGet.indexOf("sharing")>=0||-1===error.toString().indexOf("getUserMedia")||that.videoService.openErrorPopup(),that.videoService.removeCallObject(call),that.videoService.isUserContactInCall()||that.videoService.resetToSafeState()}))},VideoServiceEventHandler.prototype.retractProposition=function(call){$log.info("[VideoServiceEventHandler]   | retractProposition for call "+call.id);var idRetract="web_"+uuid4.generate(),xmppMessage=$msg({from:contactService.userContact.fullJid,to:call.contact.jid,id:idRetract}).c("retract",{xmlns:this.nameSpace,id:call.id});xmppService.send(xmppMessage),contactService.resetBusyState(),this.videoService.removeCallObject(call)},VideoServiceEventHandler.prototype.acceptProposition=function(call,type){if(call.status!==_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.ANSWERING){$log.info("[VideoServiceEventHandler]   | acceptProposition for call "+call.id),call.status=_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.ANSWERING;var idAccept="web_"+uuid4.generate(),xmppMessage=$msg({from:contactService.userContact.fullJid,to:contactService.userContact.jid,id:idAccept}).c("accept",{xmlns:this.nameSpace,id:call.id});xmppService.send(xmppMessage);var idProceed="web_"+uuid4.generate();xmppMessage=$msg({from:contactService.userContact.fullJid,to:call.fullJid,id:idProceed}).c("proceed",{xmlns:this.nameSpace,id:call.id}),call.unifiedPlanActivated&&(xmppMessage=xmppMessage.c("unifiedplan",{xmlns:"urn:xmpp:jingle:apps:jsep:1"}).up(),xmppService.connection.jingle.jid2session[call.fullJid]={unifiedPlan:!0}),xmppService.send(xmppMessage);var mediaToGet=["audio"];type&&"video"===type&&mediaToGet.push("video"),call.remoteMedia===_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Media.VIDEO&&(mediaToGet=["video"]),call.remoteMedia===_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Media.SHARING&&(mediaToGet=[]),this.setLocalTypeMedia(mediaToGet,call),contactService.setBusyState("dnd",this.videoService.calculatePresenceMessage(call)),$rootScope.$broadcast("ON_CALL_UPDATED_EVENT",call);var that=this;that.videoService.autoreleaseTimeout&&$interval.cancel(that.videoService.autoreleaseTimeout),that.videoService.autoreleaseTimeout=$interval((function(_call){_call&&(null!==call.getMediaPillarCall()?$log.warn("[webrtcgateway/VideoServiceEventHandler] | acceptProposition autoreleaseTimeout after 45 s : remove the call :"+_call.id):$log.webrtc("[VideoServiceEventHandler] | acceptProposition autoreleaseTimeout after 45 s : remove the call "+_call.id),that.videoService.removeCallObject(_call),contactService.resetBusyState())}),45e3,1,!0,call)}else $log.warn("[VideoServiceEventHandler]   | acceptProposition for call "+call.id+" -- ignored! Already answering")},VideoServiceEventHandler.prototype.rejectProposition=function(call,__reason){$log.info("[VideoServiceEventHandler]   | rejectProposition for call "+call.id);var idRejectToMe="web_"+uuid4.generate(),xmppMessage=$msg({from:contactService.userContact.fullJid,to:contactService.userContact.jid,id:idRejectToMe}).c("reject",{xmlns:this.nameSpace,id:call.id});xmppService.send(xmppMessage);var mediaPillarContext=call.getMediaPillarCall(),otherJid=mediaPillarContext&&mediaPillarContext.mediaPillarJid?mediaPillarContext.mediaPillarJid:call.contact.jid,idRejectToDistant="web_"+uuid4.generate();otherJid?(xmppMessage=$msg({from:contactService.userContact.fullJid,to:otherJid,id:idRejectToDistant}).c("reject",{xmlns:this.nameSpace,id:call.id,reason:__reason}),xmppService.send(xmppMessage)):$log.error("[VideoServiceEventHandler] | rejectProposition -- missing other JID !"),call&&(call.status=_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.UNKNOWN,delete this.videoService.calls[call.id],$rootScope.$broadcast("ON_CALL_UPDATED_EVENT",call)),this.videoService.setWebrtcConfiguration(),this.videoService.autoreleaseTimeout&&$interval.cancel(this.videoService.autoreleaseTimeout)},VideoServiceEventHandler.prototype.onMessageReceived=function(stanza){var that=this;try{$rootScope.$apply((function(){$log.info("[VideoServiceEventHandler]   | onMessageReceived");var temp=$(stanza);temp.find("error").length>0||temp.find("delay").length>0||$(stanza).find("service-unavailable").length>0?that.onMessageReceivedError():temp.find("propose").length>0?that.onPropositionReceived(stanza):temp.find("retract").length>0?that.onRetractReceived(stanza):temp.find("reject").length>0?that.onRejectReceived(stanza):temp.find("accept").length>0?that.onAcceptReceived(stanza):temp.find("proceed").length>0&&that.onProceedReceived(stanza)}))}catch(error){return $log.error("[VideoServiceEventHandler]   | onMessageReceived error "+error),!0}return!0},VideoServiceEventHandler.prototype.onMessageReceivedError=function(stanza){$log.info("[VideoServiceEventHandler]   | onMessageReceivedError");var id=$(stanza).find("propose").attr("id"),call=this.videoService.calls[id];call&&$log.error("[VideoServiceEventHandler]   | onMessageReceivedError call is in "+call.status.value+" state")},VideoServiceEventHandler.prototype.onPropositionReceived=function(stanza){var id=$(stanza).find("propose").attr("id");$log.info("[VideoServiceEventHandler]   | onPropositionReceived for ID "+id);var call=this.videoService.calls[id],that=this;if(call){if($(stanza).find("subject").length>0){var subject=$(stanza).find("subject")[0];$log.debug("[VideoServiceEventHandler]   | onPropositionReceived subject Detected: "+subject.textContent),call.setSubject(subject.textContent)}call.setStatus(_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.RINGING_INCOMMING),that.videoService.config.unifiedPlan&&(call.unifiedPlanActivated=!0);remoteMedia=[];for(var length=$(stanza).find("description").length,i=0;i<length;i++){var description=$(stanza).find("description")[i];remoteMedia.push($(description).attr("media"))}this.setRemoteTypeMedia(remoteMedia,call),$rootScope.$broadcast("ON_CALL_UPDATED_EVENT",call),that.videoService.autoreleaseTimeout&&$interval.cancel(that.videoService.autoreleaseTimeout),that.videoService.autoreleaseTimeout=$interval((function(_call){_call&&($log.webrtc("[VideoServiceEventHandler]   | onPropositionReceived autoreleaseTimeout after 2 min : remove the call "+_call.id),that.videoService.removeCallObject(_call))}),12e4,1,!0,call)}else{var jid=$(stanza).attr("from"),remoteMedia=[],peerJid=xmppService.getBareJidFromJid(jid);(call=_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.create(_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.UNKNOWN,id,_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Type.WEBRTC)).fullJid=jid,that.videoService.calls[call.id]=call,that.videoService.config.unifiedPlan&&(call.unifiedPlanActivated=!0),profileService.isFeatureEnabled(profileService.FeaturesEnum.WEBRTC_UNIFIED_PLAN)&&$(stanza).find("unifiedplan").length&&(call.unifiedPlanActivated=!0),contactService.getOrCreateContact(peerJid).then((function(contact){for(var length=$(stanza).find("description").length,i=0;i<length;i++){var description=$(stanza).find("description")[i];remoteMedia.push($(description).attr("media"))}if(that.videoService.calls[call.id]){if(call.contact=contact,$(stanza).find("subject").length>0){var subject=$(stanza).find("subject")[0];$log.debug("[VideoServiceEventHandler]   | onPropositionReceived subject Detected: "+subject.textContent),call.setSubject(subject.textContent)}call.setStatus(_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.RINGING_INCOMMING),that.setRemoteTypeMedia(remoteMedia,call),$rootScope.$broadcast("ON_CALL_UPDATED_EVENT",call),that.videoService.autoreleaseTimeout&&$interval.cancel(that.videoService.autoreleaseTimeout),that.videoService.autoreleaseTimeout=$interval((function(_call){_call&&($log.webrtc("[VideoServiceEventHandler]   | onPropositionReceived autoreleaseTimeout after 2 min : remove the call "+_call.id),that.videoService.removeCallObject(_call))}),12e4,1,!0,call)}})).catch((function(error){$log.error("[VideoServiceEventHandler]   | onPropositionReceived error "+error),that.videoService.removeCallObject(call)}))}},VideoServiceEventHandler.prototype.onRetractReceived=function(stanza){$log.info("[VideoServiceEventHandler]   | onRetractReceveid");var id=$(stanza).find("retract").attr("id"),call=this.videoService.calls[id];call&&(call.status===_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.ANSWERING&&contactService.resetBusyState(),this.videoService.removeCallObject(call)),this.videoService.autoreleaseTimeout&&$interval.cancel(this.videoService.autoreleaseTimeout)},VideoServiceEventHandler.prototype.onRejectReceived=function(stanza){$log.info("[VideoServiceEventHandler]   | onRejectReceived");var id=$(stanza).find("reject").attr("id"),call=this.videoService.calls[id],fullJid=$(stanza).attr("from"),calendarBusy="calendarBusy"===$(stanza).find("reject").attr("reason");this.videoService.autoreleaseTimeout&&$interval.cancel(this.videoService.autoreleaseTimeout),call&&(call.status===_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.RINGING_INCOMMING&&(null!==call.getMediaPillarCall()&&$rootScope.$broadcast("ON_MEDIAPILLAR_CALL_REMOTE_CTRL_EVENT",call),this.videoService.removeCallObject(call)),call.status===_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.DIALING&&(contactService.resetBusyState(),this.videoService.removeCallObject(call)),call.status!==_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.ACTIVE&&call.status!==_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.CONNECTING||call.fullJid&&call.fullJid===fullJid&&(contactService.resetBusyState(),this.videoService.removeCallObject(call))),calendarBusy&&this.videoService.openCalendarBusyPopup(call.contact.id)},VideoServiceEventHandler.prototype.onAcceptReceived=function(stanza){$log.info("[VideoServiceEventHandler]   | onAcceptReceived");var id=$(stanza).find("accept").attr("id"),call=this.videoService.calls[id],fullJid=$(stanza).attr("from");call&&fullJid!==contactService.userContact.fullJid&&(null!==call.getMediaPillarCall()&&$rootScope.$broadcast("ON_MEDIAPILLAR_CALL_REMOTE_CTRL_EVENT",call),this.videoService.removeCallObject(call)),fullJid!==contactService.userContact.fullJid&&this.videoService.autoreleaseTimeout&&$interval.cancel(this.videoService.autoreleaseTimeout)},VideoServiceEventHandler.prototype.onProceedReceived=function(stanza){$log.info("[VideoServiceEventHandler]   | onProceedReceived"),this.videoService.autoreleaseTimeout&&$interval.cancel(this.videoService.autoreleaseTimeout);var id=$(stanza).find("proceed").attr("id"),call=this.videoService.calls[id],fullJid=$(stanza).attr("from");if(call.fullJid=fullJid,this.videoService.config.unifiedPlan&&(call.unifiedPlanActivated=!0),$(stanza).find("unifiedplan").length&&(call.unifiedPlanActivated=!0),call.isInConversationWithMobile()&&call.localMedia&_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Media.VIDEO){var that=this,mediaToGet=[],mediaConstraints=that.videoService.getMobileMediaConstraints("video");mediaToGet=["audio","video"],call.localMedia&_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Media.AUDIO||(mediaToGet=["video"]),that.videoService.getBrowserMedia(mediaToGet,mediaConstraints.fixedVideoWidth,mediaConstraints.fixedVideoHeight,mediaConstraints.fixedFrameRate).then((function(stream){$log.info("[VideoServiceEventHandler]   | onProceedReceived --\x3e renegociate video quality"),call.localMedia&_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Media.VIDEO&&that.videoService.stopActiveAudioVideoStreams(null,!0),that.videoService.localStreams.push(stream),that.videoService.makeJingleCall(call)})).catch((function(error){$log.info("[VideoServiceEventHandler]   | onProceedReceived "+call+" failure : "+error.message),-1!==error.toString().indexOf("getUserMedia")?($log.info("onProceedReceived impossible, no webcam plugged"),that.videoService.openErrorPopup()):(that.videoService.releaseCall(call),that.videoService.resetToSafeState())}))}else call.localMedia&_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Media.SHARING?this.videoService.makeJingleSharingCall(call):this.videoService.makeJingleCall(call)},VideoServiceEventHandler.prototype.incomingCall=function(callId){$log.info("[VideoServiceEventHandler] incomingCall "+callId);var that=this,call=null,sess=xmppService.connection.jingle.sessions[callId];if(sess&&sess.peerjid){var peerJid=xmppService.getBareJidFromJid(sess.peerjid),contact=contactService.getContactByJid(peerJid);call=this.videoService.getCallByJid(contact.jid)}call?(sess.sendRinging(),$interval((function(_call){that.videoService.answerJingleCall(_call)}),350,1,!0,call),$rootScope.$broadcast("ON_CALL_UPDATED_EVENT",call),this.videoService.autoreleaseTimeout&&$interval.cancel(this.videoService.autoreleaseTimeout),this.videoService.statsInterval&&($log.info("[VideoServiceEventHandler] remove getStats interval"),window.clearInterval(this.videoService.statsInterval),this.videoService.statsinterval=null),that.videoService.createOrUpdateStatisticsForCall(call.id),$log.info("[VideoServiceEventHandler] start getStats interval"),this.videoService.statsInterval=sess.getStats(5e3)):($log.warn("[VideoServiceEventHandler] incomingCall no such call ! Terminate the session "),contactService.resetBusyState(),sess&&sess.terminate())},VideoServiceEventHandler.prototype.activeCall=function(callId){$log.info("[VideoServiceEventHandler] activeCall "+callId);var sess=xmppService.connection.jingle.sessions[callId];this.videoService.autoreleaseTimeout&&$interval.cancel(this.videoService.autoreleaseTimeout);var call=this.videoService.calls[callId];this.videoService.updateRemoteTypeMedia(sess.remoteType,call),call&&call.status.key!==_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.RELEASING.key&&call.status.key!==_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.UNKNOWN.key&&(call.setStatus(_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.ACTIVE),$rootScope.$broadcast("ON_CALL_UPDATED_EVENT",call)),call.isInitiator&&gaService.trackCallSuccessNumber(sess.localType)},VideoServiceEventHandler.prototype.terminatedCall=function(callId,callReason){0===Object.keys(xmppService.connection.jingle.sessions).length&&$log.webrtc("INFO    | all calls terminated");var call=this.videoService.calls[callId];call||0===this.videoService.calls.length?("busy"===callReason&&this.videoService.openErrorPopup("remoteUserNoMoreAvailable"),this.videoService.autoreleaseTimeout&&$interval.cancel(this.videoService.autoreleaseTimeout),this.videoService.disableAudioVideoMedia(null,callId),this.videoService.createOrUpdateStatisticsForCall(callId),this.videoService.callsStats[callId]&&delete this.videoService.callsStats[callId],call&&("cancel"!==callReason&&gaService.trackCallDuration((new Date).getTime()-call.startDate.getTime()),this.videoService.removeCallObject(call)),$interval((function(){contactService.resetBusyState()}),1e3,1,!0),this.videoService.statsInterval&&(window.clearInterval(this.videoService.statsInterval),this.videoService.statsinterval=null),this.videoService.displayWebRTCStats(callId),this.videoService.isUserContactInCall()||this.videoService.clearSrcObjectsFromElements()):$log.webrtc("INFO    | terminatedCall : no call with "+callId+" exists.")},VideoServiceEventHandler.prototype.onJingleError=function(sid){sid&&this.videoService.calls[sid]&&this.videoService.calls[sid].status!==_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.ACTIVE&&(this.videoService.removeCallObject(this.calls[sid]),this.videoService.resetToSafeState(),this.videoService.openErrorPopup("IceConnectionFailed"))},VideoServiceEventHandler.prototype.iceConnectionStateChange=function(sid,sess){$log.info("[VideoServiceEventHandler] iceConnectionStateChange for "+sid);var that=this,activeCall=null,call=that.videoService.calls[sess.sid];try{if(sess.peerconnection&&"stable"===sess.peerconnection.signalingState&&"connected"===sess.peerconnection.iceConnectionState){$log.webrtc("INFO    | ICE Connection established successfully"),angular.element("#globalAudioTag")[0]&&$log.info("[VideoServiceEventHandler] sinkId for globalAudioTag is "+angular.element("#globalAudioTag")[0].sinkId),that.videoService.reconnectCall=!1,(activeCall=that.videoService.calls[sid])&&activeCall.status!==_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.ACTIVE&&($log.webrtc("INFO    | ICE Connection : call is active now !"),this.activeCall(sid)),sess.isRenegotiating&&($log.webrtc("INFO    | Renegotiating done"),sess.isRenegotiating=!1,$rootScope.$broadcast("ON_WEBRTC_CALL_ESCALATION",activeCall),$rootScope.$broadcast("ON_WEBRTC_CALL_ESCALATION_SUCCESS",activeCall)),sess.autoReconnectTimer&&($interval.cancel(sess.autoReconnectTimer),sess.autoReconnectTimer=null),gaService.endNegotiationTime();var negotiationTime=gaService.negotiationTime();negotiationTime&&($log.webrtc("INFO    | negotiation time: "+negotiationTime+"ms"),gaService.trackNegotiationTime()),activeCall&&activeCall.isInitiator&&gaService.trackICESuccess(sid)}sess.peerconnection&&"stable"===sess.peerconnection.signalingState&&"completed"===sess.peerconnection.iceConnectionState&&($log.webrtc("INFO    | ICE Connection completed successfully"),that.videoService.reconnectCall=!1,(activeCall=that.videoService.calls[sid])&&activeCall.status!==_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.ACTIVE&&($log.webrtc("INFO    | ICE Connection : call is active now !"),this.activeCall(sid)),sess.isRenegotiating&&($log.webrtc("INFO    | Renegotiating done"),sess.isRenegotiating=!1,$rootScope.$broadcast("ON_WEBRTC_CALL_ESCALATION",activeCall),$rootScope.$broadcast("ON_WEBRTC_CALL_ESCALATION_SUCCESS",activeCall))),sess.peerconnection&&"stable"===sess.peerconnection.signalingState&&"disconnected"===sess.peerconnection.iceConnectionState&&($log.webrtc("INFO    | signalingState disconnected"),call&&call.status!==_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.UNKNOWN&&($log.webrtc("INFO    | iceConnectionStateChange go to connecting state"),call.setStatus(_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.CONNECTING),$rootScope.$broadcast("ON_CALL_UPDATED_EVENT",call)),that.videoService.connected||(that.videoService.reconnectCall=!0),sess.autoReconnectTimer||(console.error("arm autoReconnectTimer"),sess.autoReconnectTimer=$interval((function(session){console.error("autoReconnectTimer -- execute"),that.videoService.connected&&(console.error("autoReconnectTimer -- network OK, proceed with reconnect"),session.reconnectSession())}),1e3,1,!0,sess))),sess.peerconnection&&"stable"===sess.peerconnection.signalingState&&"failed"===sess.peerconnection.iceConnectionState&&($log.webrtc("INFO    | signalingState FAILED"),call&&call.status!==_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.UNKNOWN&&($log.webrtc("INFO    | iceConnectionStateChange go to connecting state"),call.setStatus(_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.CONNECTING),$rootScope.$broadcast("ON_CALL_UPDATED_EVENT",call),$rootScope.$broadcast("ON_RECORDING_CNXLOST_EVENT")),that.videoService.connected||(that.videoService.reconnectCall=!0),that.videoService.connected&&(console.error("[videoServiceEventHandler] signalingState FAILED -- network OK, proceed with reconnect"),session.reconnectSession()))}catch(error){try{$log.error("JINGLE  | iceconnectionstatechange error "+error),call?that.videoService.removeCallObject(call,"unsupported-applications"):xmppService.connection.jingle.terminate(null,"unsupported-applications"),contactService.resetBusyState()}catch(err){$log.error("JINGLE  | iceconnectionstatechange error "+err),contactService.resetBusyState()}}},VideoServiceEventHandler.prototype.mediaModified=function(sid,mediaType){$log.info("[VideoServiceEventHandler] mediaModified "+sid);var call=this.videoService.calls[sid];xmppService.connection.jingle.sessions[sid].isRenegotiating=!0,call.remoteMedia="sharing"===mediaType?_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Media.AUDIO|_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Media.SHARING:"video"===mediaType?_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Media.AUDIO|_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Media.VIDEO:"sharing+video"===mediaType?_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Media.AUDIO|_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Media.VIDEO|_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Media.SHARING:_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Media.AUDIO,contactService.setBusyState("dnd",this.videoService.calculatePresenceMessage(call)),$rootScope.$broadcast("ON_WEBRTC_CALL_ESCALATION",call)},VideoServiceEventHandler}])},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var _src_models_call_model__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0);angular.module("rainbow").service("webrtcServiceEventHandler",["$log","$q","$rootScope","videoService","webConferenceService","xmppService","contactService",function($log,$q,$rootScope,videoService,webConferenceService,xmppService,contactService){var service=this;this.nameSpace="urn:xmpp:jingle-message:0",this.messageHandlerRef=null,this.started=!1,this.start=function(){return this.started=!0,this.attachHandlers(),$q.when()},this.stop=function(){return this.started=!1,service.removeHandlers(),$q.when()},this.attachHandlers=function(){this.removeHandlers(),$log.info("[webrtcServiceEventHandler] attachHandlers"),this.messageHandlerRef||(this.messageHandlerRef=xmppService.addHandler((function(stanza){try{return service.onMessageReceived(stanza),!0}catch(err){return $log.error("[webrtcServiceEventHandler] caught error "+err),!0}}),service.nameSpace,"message"))},this.removeHandlers=function(){$log.info("[webrtcServiceEventHandler] removeHandlers"),this.messageHandlerRef&&(xmppService.deleteHandler(this.messageHandlerRef),this.messageHandlerRef=null)},this.onMessageReceived=function(stanza){var fromJid=$(stanza).attr("from"),bareJid=xmppService.getBareJidFromJid(fromJid),conferenceSessionId=$(stanza).find("propose").find("conference").attr("id");if(webConferenceService.getConferenceSessionById(conferenceSessionId))try{if($log.info("[webrtcServiceEventHandler]   | onMessageReceived"),$(stanza).find("propose").length>0){var id=$(stanza).find("propose").attr("id"),xmppMessage=$msg({from:contactService.userContact.fullJid,to:contactService.userContact.jid}).c("accept",{xmlns:this.nameSpace,id:id});xmppService.send(xmppMessage);xmppMessage=$msg({from:contactService.userContact.fullJid,to:bareJid}).c("proceed",{xmlns:this.nameSpace,id:id});return xmppService.send(xmppMessage),!0}}catch(error){return videoService.videoEventHandler.onMessageReceived(stanza)}return videoService.videoEventHandler.onMessageReceived(stanza)},this.checkSessionAudioSentHealthStatus=function(sid){$log.info("[webrtcServiceEventHandler]   | checkSessionAudioSentHealthStatus --- 0 audio packets sent !");var call=videoService.calls[sid];if(call&&!call.isInCallWithMediaPillar()){if(call.status.key===_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.ACTIVE.key&&call.localMedia&_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Media.AUDIO&&!call.isMuted){if(videoService.callsStatsSimplified[sid].numberOfErrorAudioSent+=1,videoService.callsStatsSimplified[sid].numberOfErrorAudioSent%2)return void $log.info("[webrtcServiceEventHandler]   | checkSessionAudioSentHealthStatus --- ingore");var session=xmppService.connection.jingle.sessions[call.id];session&&!session.isRenegotiating&&($log.info("[webrtcServiceEventHandler]   | checkSessionAudioSentHealthStatus --- renego P2P call"),videoService.renegotiateCurrentCall(call)),$rootScope.$broadcast("ON_WEBRTC_CALL_AUDIO_ISSUE",!0)}}else{var confSession=webConferenceService.getActiveConferenceSession();if(confSession&&confSession.id&&confSession.active&&"connected"===confSession.status){var audioSession=webConferenceService.getRemoteAudioSession(confSession.id);if(audioSession&&audioSession.sid===sid){if(videoService.callsStatsSimplified[sid].numberOfErrorAudioSent+=1,videoService.callsStatsSimplified[sid].numberOfErrorAudioSent%2)return void $log.info("[webrtcServiceEventHandler]   | checkSessionAudioSentHealthStatus --- ingore");$log.info("[webrtcServiceEventHandler]   | checkSessionAudioSentHealthStatus --- renego SFU conference"),webConferenceService.onAudioProfileChangeEvent()}}}},this.checkSessionAudioReceivedHealthStatus=function(sid){$log.info("[webrtcServiceEventHandler]   | checkSessionAudioReceivedHealthStatus --- user hears nothing !");var call=videoService.calls[sid];if(call&&!call.isInCallWithMediaPillar())call.status.key===_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Status.ACTIVE.key&&call.remoteMedia&_src_models_call_model__WEBPACK_IMPORTED_MODULE_0__.Call.Media.AUDIO&&(videoService.callsStatsSimplified[sid].errorAudioReceived=1,$log.info("[webrtcServiceEventHandler]   | checkSessionAudioReceivedHealthStatus --- reset output device"),videoService.resetAudioOutputElement());else{var confSession=webConferenceService.getActiveConferenceSession();if(confSession&&confSession.id&&confSession.active&&"connected"===confSession.status){var audioSession=webConferenceService.getRemoteAudioSession(confSession.id);audioSession&&audioSession.sid===sid&&(videoService.callsStatsSimplified[sid].errorAudioReceived=1,$log.info("[webrtcServiceEventHandler]   | checkSessionAudioReceivedHealthStatus --- renego SFU conference"),videoService.resetAudioOutputElement())}}},angular.element(document).bind("callincoming.jingle",(function(__event,sessId){$log.webrtc("webrtcServiceEventHandler  | callincoming.jingle "+sessId);var session=xmppService.connection.jingle.sessions[sessId];session&&session.confId?webConferenceService.onIncomingCall(sessId):videoService.videoEventHandler.incomingCall(sessId)})),angular.element(document).bind("callterminated.jingle",(function(__event,sessId,reason){$rootScope.$apply((function(){var callReason=reason||"";($log.webrtc("webrtcServiceEventHandler  | callterminated "+sessId+" reason: "+callReason),"multi-device"===reason)?webConferenceService.onConferenceCallSwitched(sessId):videoService.calls[sessId]?videoService.videoEventHandler.terminatedCall(sessId,callReason):webConferenceService.onTerminatedCall(sessId)}))})),angular.element(document).bind("iceconnectionstatechange.jingle",(function(__event,sid,sess){sess.peerconnection?($log.webrtc("JINGLE  | iceconnectionstatechange "+sid+" "+sess.peerconnection.iceConnectionState+"|"+sess.peerconnection.signalingState),videoService.calls[sid]?videoService.videoEventHandler.iceConnectionStateChange(sid,sess):webConferenceService.onIceConnectionStateChange(sid,sess)):$log.webrtc("JINGLE  | iceconnectionstatechange - peerConnection does not exist anymore !!!")})),angular.element(document).bind("error.jingle",(function(__event,obj){$log.error("JINGLE  | callerror"),obj&&obj.error&&$log.error(JSON.stringify(obj.error));var sid=obj.sid;sid&&(videoService.calls[sid]?videoService.videoEventHandler.onJingleError(sid):webConferenceService.onJingleError(sid))})),angular.element(document).bind("webrtcSessionBitRate.jingle",(function(__event,sid,data){videoService.config.debugWeRTC&&$rootScope.$broadcast("ON_WEBRTC_CALL_BITRATE",sid,data)})),angular.element(document).bind("webrtcSessionStatsSimplyfied.jingle",(function(__event,sid,data){videoService.callsStatsSimplified[sid]||(videoService.callsStatsSimplified[sid]={},videoService.callsStatsSimplified[sid].numberOfErrorAudioSent=0,videoService.callsStatsSimplified[sid].errorAudioReceived=0),data.numberOfErrorAudioSent=videoService.callsStatsSimplified[sid].numberOfErrorAudioSent,data.errorAudioReceived=videoService.callsStatsSimplified[sid].errorAudioReceived,videoService.callsStatsSimplified[sid]=data,$log.info("[videoService] on webrtcSessionStatsSimplyfied for session "+sid+" : "+JSON.stringify(data)),"chrome"===adapter.default.browserDetails.browser&&adapter.default.browserDetails.version<71&&(0===data.packetsAudioSent||0===data.audioInputLevel?service.checkSessionAudioSentHealthStatus(sid):(videoService.callsStatsSimplified[sid].numberOfErrorAudioSent&&$rootScope.$broadcast("ON_WEBRTC_CALL_AUDIO_ISSUE",!1),videoService.callsStatsSimplified[sid].numberOfErrorAudioSent=0)),data.packetsAudioReceived&&0===data.audioOutputLevel&&0===data.errorAudioReceived&&service.checkSessionAudioReceivedHealthStatus(sid)}))}])},function(module,exports){angular.module("rainbow").service("settingsService",["$rootScope","$translate","$localStorage",function($rootScope,$translate,$localStorage){"use strict";var service=this;service.initialize=function(){$localStorage.get(["redirectVoIP"]).then((function(result){null!==result.redirectVoIP?service.redirectVoIP="true"===result.redirectVoIP:(service.setRedirectVoIP(!1),service.redirectVoIP=!1)})),service.automaticHookOff=!1,service.automaticHookOffTime=0,service.defaultLanguage={label:"English",settingCode:"en",code:"en",isoCode:"en",codeMoment:"en",unicode:"1f1ec-1f1e7",beta:!1},service.languages=[service.defaultLanguage,{label:"Français",settingCode:"fr",code:"fr",isoCode:"fr",codeMoment:"fr",unicode:"1f1eb-1f1f7",beta:!1},{label:"Deutsch",settingCode:"de",code:"de",isoCode:"de",codeMoment:"de",unicode:"1f1e9-1f1ea",beta:!1},{label:"Español",settingCode:"es-es",code:"es-es",isoCode:"es-ES",codeMoment:"es",unicode:"1f1ea-1f1f8",beta:!1},{label:"Suomi",settingCode:"fi",code:"fi",isoCode:"fi",codeMoment:"fi",unicode:"1f1eb-1f1ee",beta:!0},{label:"Italiano",settingCode:"it",code:"it",isoCode:"it",codeMoment:"it",unicode:"1f1ee-1f1f9",beta:!1},{label:"עברית",settingCode:"he",code:"he",isoCode:"he",codeMoment:"he",unicode:"1f1ee-1f1f1",beta:!1},{label:"日本語",settingCode:"ja",code:"ja",isoCode:"ja",codeMoment:"ja",unicode:"1f1ef-1f1f5",beta:!1},{label:"한국어",settingCode:"ko",code:"ko",isoCode:"ko",codeMoment:"ko",unicode:"1f1f0-1f1f7",beta:!1},{label:"Nederlands",settingCode:"nl",code:"nl",isoCode:"nl",codeMoment:"nl",unicode:"1F1F3-1F1F1",beta:!1},{label:"Nynorsk",settingCode:"no",code:"no",isoCode:"no",codeMoment:"nn",unicode:"1F1F3-1F1F4",beta:!0},{label:"Português do Brasil",settingCode:"pt-br",code:"pt-BR",isoCode:"pt-BR",codeMoment:"pt-br",unicode:"1F1E7-1F1F7",beta:!1},{label:"Português",settingCode:"pt-pt",code:"pt-PT",isoCode:"pt-PT",codeMoment:"pt",unicode:"1F1F5-1F1F9",beta:!1},{label:"Polski",settingCode:"pl",code:"pl",isoCode:"pl",codeMoment:"pl",unicode:"1F1F5-1F1F1",beta:!0},{label:"Svenskt",settingCode:"sv-se",code:"sv-SE",isoCode:"sv-SE",codeMoment:"sv",unicode:"1F1F8-1F1EA",beta:!0},{label:"Türkçe",settingCode:"tr",code:"tr",isoCode:"tr",codeMoment:"tr",unicode:"1f1f9-1f1f7",beta:!1},{label:"中文",settingCode:"zh-cn",code:"zh-cn",isoCode:"zh-CN",codeMoment:"zh-cn",unicode:"1f1e8-1f1f3",beta:!1},{label:"繁體中文",settingCode:"zh-tw",code:"zh-TW",isoCode:"zh-TW",codeMoment:"zh-tw",unicode:"1F1F9-1F1FC",beta:!1},{label:"العربية",settingCode:"ar",code:"ar",isoCode:"ar",codeMoment:"ar",unicode:"0600–06FF",beta:!1}],service.languageCodes=service.getAvailableLanguages().map((function(language){return language.settingCode})),service.settings={init:!0,lang:"en",imSound:"true",imNotif:"true",notifReminder:"gentle",displayOrder:"FL",nbMaxConversations:"100",skin:"rainbow",microphone:"default",headsetMicrophone:null,speakerphoneMicrophone:null,customMicrophone:null,headsetDeviceName:null,speakerphoneDeviceName:null,speaker:"default",headsetSpeaker:null,speakerphoneSpeaker:null,customSpeaker:null,ringingSpeaker:"default",ringingSpeakerName:"",camera:"default",cameraUsed:"",audioProfile:"handfree",currentDevice:null,iceConfig:null,sdk:!1,userWiewOrderType:"lastname",userWiewFilterType:"all",one2oneColors:"true",accessibleColors:"false",autoStartAnimatedGif:"false",translationMsg:"false",newUI:"false",autoAcceptRoomInvite:"false",server:null,activeAlarm:"relax1",activeNotif:"stairs",devMode:"false",hasSecondRinger:"false",validationMode:"false",disableCalendarPresence:"false",giphy:"false",deviceList:"[]",displayFilesType:"document-cell--as-grid",handFreeInputDeviceName:null,handFreeOutputDeviceName:null,customSpeakerName:null,customMicrophoneName:null,showBodyMessage:"false",bubblesFilterType:"all",bubblesOrderType:"lastActivityDate",suggestionDisplayed:"null",protectionAgainstMailTypeOffline:!1,channelMarkdown:"false",chrisPrankMode:"true",joinSfuSound:"true",guideTourDisplayed:"null",searchFilterValue:"NoFiltering",enableSingleSignOnWebAuthPopup:"false",enableSingleSignOnConfig:"false",enableDSCP:!1,dtx:!1,simulcast:!1,debugWebRTC:!1,unifiedPlan:!1,sipWiseMode:"false",lastInactiveBubbleShownDate:null,userEnvironment:""},$localStorage.get(Object.keys(service.settings)).then((function(settings){settings.nbMaxConversations?parseInt(settings.nbMaxConversations,10)<15&&service.setSetting("nbMaxConversations",15):settings.nbMaxConversations=service.settings.nbMaxConversations;if(settings.skin||(settings.skin=service.settings.skin),$rootScope.default_language&&(settings.lang=getMappedLanguage($rootScope.default_language),service.setSetting("lang",settings.lang)),"default"===settings.headsetMicrophone&&(settings.headsetMicrophone=null),"default"===settings.headsetSpeaker&&(settings.headsetSpeaker=null),"default"===settings.speakerphoneMicrophone&&(settings.speakerphoneMicrophone=null),"default"===settings.speakerphoneSpeaker&&(settings.speakerphoneSpeaker=null),"default"===settings.customMicrophone&&(settings.customMicrophone=null),"default"===settings.customSpeaker&&(settings.customSpeaker=null),null===settings.init){var preferredLanguage=navigator.languages?navigator.languages[0]:navigator.language||navigator.userLanguage;service.settings.lang=settings.lang?settings.lang:getMappedLanguage(preferredLanguage),$localStorage.set(service.settings)}else Object.keys(settings).forEach((function(item){null!==settings[item]&&(service.settings[item]=settings[item])}));var currentLanguage=service.getAppliLanguage();$translate.use(currentLanguage.code),moment.locale(currentLanguage.codeMoment)}))},service.getSetting=function(key){return service.settings[key]},service.setSetting=function(key,value){service.settings[key]=value,$localStorage.set(service.settings)},service.removeSetting=function(key){service.settings[key]=void 0,$localStorage.remove([key])},service.getAvailableLanguages=function(){return service.languages.filter((function(language){return!1===language.beta||config.betaLanguages}))},service.getAppliLanguage=function(){var language=service.getAvailableLanguages().filter((function(item){return item.settingCode===service.settings.lang}))[0];return language||service.defaultLanguage},service.setAppliLanguageCode=function(lang,save){save?service.setSetting("lang",lang):service.settings.lang=lang;var language=service.getAppliLanguage();moment.locale(language.codeMoment),$translate.use(language.code).then((function(){$rootScope.$broadcast("ON_LANGUAGE_UPDATED_EVENT",lang)}))},service.getAppliLanguageCodeForServer=function(){var langArray=service.settings.lang.split("-");return 1===langArray.length?service.settings.lang:langArray[0]+"-"+langArray[1].toUpperCase()},service.setAppliLangageCodeFromServer=function(serverCode){var langArray=serverCode.split("-"),clientCode=langArray[0];clientCode&&(clientCode=clientCode.toLowerCase()),2===langArray.length&&(clientCode+="-"+langArray[1].toLowerCase()),clientCode=getMappedLanguage(clientCode),clientCode=service.languageCodes.indexOf(clientCode)>=0?clientCode:"en",service.setAppliLanguageCode(clientCode)},service.getLanguageByIsoCode=function(isoCode){return service.languages.find((function(lang){return lang.isoCode===isoCode}))},service.getBestLanguageForIsoCode=function(isoCode){var language=service.getLanguageByIsoCode(isoCode);if(!language){if(-1!==isoCode.indexOf("-")){var isoLanguageWithoutCountry=isoCode.split("-")[0];language=service.getLanguageByIsoCode(isoLanguageWithoutCountry)}language||(language=service.getLanguageByIsoCode("en"))}return language},service.getRedirectVoIP=function(){return service.redirectVoIP},service.setRedirectVoIP=function(isActivated){$localStorage.set({redirectVoIP:isActivated}),service.redirectVoIP=isActivated},service.isAutomaticHookOff=function(){return service.automaticHookOff},service.setAutomaticHookOff=function(isActivated){service.automaticHookOff=isActivated},service.getAutomaticHookOffTime=function(){return service.automaticHookOffTime},service.setAutomaticHookOffTime=function(millisecondes){service.automaticHookOffTime=millisecondes},service.setIceConfig=function(iceConfig){service.settings.iceConfig=iceConfig},service.forceTurn=function(turnOn){config.turnOn=turnOn;var message=turnOn?"Debug mode : Only use turn servers":"Normal mode : use stun and turn servers";$rootScope.$broadcast("ON_SETTING_FORCE_TURN_EVENT",message)},service.enableRemoteConsole=function(channelId){var script=document.createElement("script");script.src="//console.re/connector.js",script.id="consolerescript",script.setAttribute("data-channel",channelId),script.onreadystatechange=script.onload=function(){app.remoteConsole.info=!0,app.remoteConsole.debug=!0,app.remoteConsole.log=!0,console.re.info("Connected")},document.getElementsByTagName("head")[0].appendChild(script)};var getMappedLanguage=function(codedLanguage){var lang="en";if(codedLanguage)switch(codedLanguage.split("-")[0]){case"ar":lang="ar";break;case"en":lang="en";break;case"fr":lang="fr";break;case"de":lang="de";break;case"es":lang="es-es";break;case"fi":lang="fi";break;case"it":lang="it";break;case"he":lang="he";break;case"ja":lang="ja";break;case"ko":lang="ko";break;case"nl":lang="nl";break;case"no":lang="no";break;case"pt":lang="pt-br"===codedLanguage.toLowerCase()?"pt-br":"pt-pt";break;case"pl":lang="pl";break;case"sv":lang="sv-se";break;case"tr":lang="tr";break;case"zh":lang=["zh-cn","zh-tw"].indexOf(codedLanguage.toLowerCase())>=0?codedLanguage.toLowerCase():"zh-cn";break;default:lang="en"}return lang};service.initialize()}])},function(module,exports){class FeedChannel{constructor(){this.messages=[],this.complete=!1,this.pageIndex=0,this.isLoading=!1,this.type="AGGREGATE"}}class ChannelService{constructor($q,$http,$log,$interval,$rootScope,authService,xmppService,contactService,Channel,roomService,Contact,profileService){this.$q=$q,this.$http=$http,this.$log=$log,this.$interval=$interval,this.$rootScope=$rootScope,this.authService=authService,this.xmppService=xmppService,this.contactService=contactService,this.Channel=Channel,this.roomService=roomService,this.Contact=Contact,this.profileService=profileService,this.listeners=[],this.isStarted=!1,this.channels={},this.channelsList=[],this.LIST_EVENT_TYPE={ADD:0,UPDATE:1,REMOVE:2,DELETE:3,SUBSCRIBE:4,UNSUBSCRIBE:5,CREATE:6},this.USER_ROLE={NONE:"none",OWNER:"owner",PUBLISHER:"publisher",MEMBER:"member"},this.MESSAGE_ACTION={ADD:0,RETRACT:1},this.xmpp_message_handler=null,this.xmpp_management_handler=null,this.notificationCounter=0,this.messageCounter=0,this.invitationCounter=0,this.CHANNEL_UPDATE_EVENT="CHANNEL_UPDATE_EVENT",this.CHANNEL_MESSAGE_RECEIVED="CHANNEL_MESSAGE_RECEIVED",this.CHANNEL_USERS_UPDATE_EVENT="CHANNEL_USERS_UPDATE_EVENT",this.CHANNEL_NOTIFICATION_NUMBER_UPDATED="CHANNEL_NOTIFICATION_NUMBER_UPDATED",this.CHANNEL_USER_SUBSCRIPTION_EVENT="CHANNEL_USER_SUBSCRIPTION_EVENT"}start(stats){return this.$q(resolve=>{this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.CHANNEL_ACTIVATED)||resolve(),this.contactService.userContact.isCPaaSGuest()&&resolve(),this.$log.info("[channelService] === STARTING ===");let startDate=performance.now();this.feedChannel=new FeedChannel,this.portalURL=config.restServerUrl+"/api/rainbow/channels/v1.0/channels",resolve(),this.getMyChannels().then(()=>{let startDuration=Math.round(performance.now()-startDate);this.$log.info("[channelService] === STARTED ("+startDuration+" ms) ==="),stats.push({service:"channelService",startDuration:startDuration}),this.attachHandlers(),this.attachListeners(),this.isStarted=!0,this.$rootScope.$broadcast("ON_CHANNEL_SERVICE_STARTED")}).catch(error=>{this.$log.info("[channelService] === STARTING FAILURE === "+error.message)})})}attachHandlers(){this.$log.info("[channelService] attachHandlers"),this.xmpp_message_handler&&(this.xmppService.connection.deleteHandler(this.xmpp_message_handler),this.xmpp_message_handler=null),this.xmpp_management_handler&&(this.xmppService.connection.deleteHandler(this.xmpp_management_handler),this.xmpp_management_handler=null),this.xmpp_message_handler=this.xmppService.connection.addHandler(stanza=>this.onChannelMessageReceived(stanza),null,"message","headline"),this.xmpp_management_handler=this.xmppService.connection.addHandler(stanza=>this.onChannelManagementReceived(stanza),null,"message","management")}attachListeners(){this.listeners.push(this.$rootScope.$on(this.CHANNEL_USERS_UPDATE_EVENT,(_event,channelId,users)=>this.usersUpdateHandler(_event,channelId,users)))}stop(){return this.$q(resolve=>{this.$log.info("[channelService] === STOPPING ==="),this.listeners.forEach(destroyFunction=>{destroyFunction()}),this.channels={},this.channelsList=[],this.feedChannel=null,this.notificationCounter=0,this.$log.info("[channelService] === STOPPED ==="),resolve()})}reconnect(){return this.$q(resolve=>{this.$log.info("[channelService] reconnect"),this.stop(),this.start([]),resolve()})}removeChannelFromCache(channelId){return this.$q((resolve,reject)=>{let channelToRemove=this.getChannelFromCache(channelId);if(channelToRemove){let channelName=channelToRemove.name;channelToRemove.invited&&this.decrementInvitationCounter(),delete this.channels[channelId],this.updateChannelsList(),this.feedChannel.messages=[],this.retrieveLatests().then(()=>{resolve(channelName)}).catch(err=>{reject(err)})}})}onChannelMessageReceived(stanza){try{return this.$rootScope.$apply(()=>{let eventNode=angular.element(stanza).find("event");if(eventNode&&"http://jabber.org/protocol/pubsub#event"===eventNode.attr("xmlns")){this.$log.info("[channelService] onChannelMessageReceived ");let items=eventNode.find("items"),item=items.find("item"),retract=items.find("retract");if(1===item.length)this.onNewMessage(item);else if(1===retract.length){let messageId=retract.attr("id"),channelId=items.attr("node").split(":")[0];this.onRetractMessage(channelId,messageId)}}}),!0}catch(err){return this.$log.error("[channelService] onChannelMessageReceived -- failure -- "+err.message),!0}}onNewMessage(item){let entry=item.find("entry"),messageId=item.attr("id"),channelId=entry.attr("channelId"),action=entry.attr("creation")?"modify":"new";this.$log.info("[channelService] onChannelMessageReceived -- "+action+" message "+messageId+" on channel "+channelId);let message={id:messageId,displayId:messageId+"-"+entry.attr("timestamp"),channelId:channelId,from:entry.attr("from"),fromDetails:null,new:!1,entry:{type:entry.find("type").length?entry.find("type")[0].textContent:"",message:entry.find("message").length?entry.find("message")[0].textContent:"",title:entry.find("title").length?entry.find("title")[0].textContent:"",url:entry.find("url").length?entry.find("url")[0].textContent:"",images:[],attachments:[],video:null},modified:"modify"===action,timestamp:new Date(entry.attr("timestamp"))};message.entry.message=message.entry.message.replace(/<a/gi,"<a target='_blank' rel='noopener noreferrer' ");let imagesElem=item.find("images");0!==imagesElem.length&&imagesElem.find("id").each((index,image)=>{message.entry.images.push({id:image.textContent})});let attachmentsElem=item.find("attachments");0!==attachmentsElem.length&&attachmentsElem.find("id").each((index,attachment)=>{message.entry.attachments.push({id:attachment.textContent})});let videoElem=item.find("video");0!==videoElem.length&&(message.entry.video={provider:videoElem.find("provider")[0].textContent,id:videoElem.find("id")[0].textContent});let channel=this.getChannelFromCache(channelId);this.contactService.getOrCreateContact(message.from).then(author=>{if(message.fromDetails={displayName:author.displayName,id:author.dbId,avatar:author.avatar},message.fromContact=author,"new"===action)channel.loaded&&channel.messages.unshift(message),this.feedChannel.messages.unshift(message),this.contactService.userContact.jid!==message.from&&(message.new=!0,this.incrementMessagesCounter()),this.$rootScope.$broadcast(this.CHANNEL_MESSAGE_RECEIVED,this.MESSAGE_ACTION.ADD,message);else{let channelMessageIndex=channel.messages.findIndex(mess=>mess.id===messageId),feedMessageIndex=this.feedChannel.messages.findIndex(mess=>mess.id===messageId);-1!==channelMessageIndex&&channel.messages.splice(channelMessageIndex,1,message),-1!==feedMessageIndex&&this.feedChannel.messages.splice(feedMessageIndex,1,message)}})}onRetractMessage(channelId,messageId){this.$log.info("[channelService] onChannelMessageReceived -- retract message "+messageId+" on channel "+channelId);let channel=this.getChannelFromCache(channelId),messageIndex=channel.messages.findIndex(message=>message.id===messageId);if(-1!==messageIndex){channel.messages[messageIndex].new&&this.decrementMessagesCounter(),channel.messages.splice(messageIndex,1)}let messageListIndex=this.feedChannel.messages.findIndex(message=>message.id===messageId);-1!==messageListIndex&&this.feedChannel.messages.splice(messageListIndex,1),this.$rootScope.$broadcast(this.CHANNEL_MESSAGE_RECEIVED,this.MESSAGE_ACTION.RETRACT,messageId)}onChannelManagementReceived(stanza){try{return this.$rootScope.$apply(()=>{let channelElem=angular.element(stanza).find("channel");if(channelElem&&channelElem.length>0){let channelId=channelElem.attr("channelid"),channel=this.getChannelFromCache(channelId);if(channel){let avatarElem=channelElem.find("avatar"),nameElem=channelElem.find("name"),topicElem=channelElem.find("topic"),categoryElem=channelElem.find("category");avatarElem&&avatarElem.length>0&&this.onAvatarChange(channelId,avatarElem),nameElem&&nameElem.length>0&&(channel.name=nameElem.text()),topicElem&&topicElem.length>0&&(channel.topic=topicElem.text()),categoryElem&&categoryElem.length>0&&(channel.category=categoryElem.text())}let action=channelElem.attr("action");switch(this.$log.info("[channelService] onChannelManagementReceived -- "+action+" event received on channel "+channelId),action){case"add":this.onAddToChannel(channelId);break;case"update":this.onUpdateToChannel(channelId);break;case"remove":this.onRemovedFromChannel(channelId);break;case"subscribe":this.onSubscribeToChannel(channelId,channelElem.attr("subscribers"));break;case"unsubscribe":this.onUnsubscribeToChannel(channelId,channelElem.attr("subscribers"));break;case"delete":this.onDeleteChannel(channelId)}}let channelSubscriptionElem=angular.element(stanza).find("channel-subscription");if(channelSubscriptionElem&&channelSubscriptionElem.length>0){let channelId=channelSubscriptionElem.attr("channelid"),action=channelSubscriptionElem.attr("action"),userId=channelSubscriptionElem.attr("id"),subscribers=channelSubscriptionElem.attr("subscribers");switch(this.getChannelFromCache(channelId).subscribers_count=Number.parseInt(subscribers),this.$log.info("[channelService] onChannelManagementReceived -- subscription-"+action+" event received on channel "+channelId),action){case"subscribe":this.onUserSubscribeEvent(channelId,userId);break;case"unsubscribe":this.onUserUnsubscribeEvent(channelId,userId)}}}),!0}catch(err){return this.$log.error("[channels] onChannelManagementReceived -- failure -- "+err.message),!0}}onAvatarChange(channelId,avatar){let action=avatar.attr("action"),updateDate=avatar.attr("lastAvatarUpdateDate")?new Date(avatar.attr("lastAvatarUpdateDate")):null;if(this.$log.info("[channelService] onChannelManagementReceived -- "+action+" avatar for "+channelId),"delete"===action||"update"===action){let channel=this.getChannelFromCache(channelId);channel.lastAvatarUpdateDate=updateDate,null!==updateDate&&(channel.avatar=config.restServerUrl+"/api/channel-avatar/"+channelId+"?size=256&ts="+new Date(updateDate).getTime())}}onUpdateToChannel(channelId){this.getChannelFromCache(channelId);this.getChannel(channelId).then(newChannel=>{newChannel.invited&&(this.addChannelToCache(newChannel),this.$rootScope.$broadcast(this.CHANNEL_UPDATE_EVENT,this.LIST_EVENT_TYPE.ADD,newChannel.id))})}onAddToChannel(channelId){let channel=this.getChannelFromCache(channelId);this.getChannel(channelId).then(newChannel=>{channel||newChannel.invited?!channel&&newChannel.invited?(this.addChannelToCache(newChannel),this.incrementInvitationCounter(),this.$rootScope.$broadcast(this.CHANNEL_UPDATE_EVENT,this.LIST_EVENT_TYPE.SUBSCRIBE,newChannel.id)):channel&&newChannel.userRole!==this.USER_ROLE.NONE&&(channel.userRole=newChannel.userRole,this.feedChannel.messages=[],this.retrieveLatests().then(()=>{this.$rootScope.$broadcast(this.CHANNEL_UPDATE_EVENT,this.LIST_EVENT_TYPE.SUBSCRIBE,channelId)})):(this.addChannelToCache(newChannel),this.$rootScope.$broadcast(this.CHANNEL_UPDATE_EVENT,this.LIST_EVENT_TYPE.ADD,newChannel.id))})}onRemovedFromChannel(channelId){this.removeChannelFromCache(channelId).then(channelName=>{this.$rootScope.$broadcast(this.CHANNEL_UPDATE_EVENT,this.LIST_EVENT_TYPE.DELETE,channelId)})}onSubscribeToChannel(channelId,subscribersInfo){let channel=this.getChannelFromCache(channelId),subscribers=Number.parseInt(subscribersInfo);channel?(channel.invited=!1,channel.subscribed=!0,channel.subscribers_count=subscribers,this.feedChannel.messages=[],this.retrieveLatests().then(()=>{this.$rootScope.$broadcast(this.CHANNEL_UPDATE_EVENT,this.LIST_EVENT_TYPE.SUBSCRIBE,channelId)})):this.getChannel(channelId).then(newChannel=>(this.addChannelToCache(newChannel),this.feedChannel.messages=[],this.retrieveLatests())).then(()=>{this.$rootScope.$broadcast(this.CHANNEL_UPDATE_EVENT,this.LIST_EVENT_TYPE.SUBSCRIBE,channelId)})}onUnsubscribeToChannel(channelId,subscribersInfo){let subscribers=Number.parseInt(subscribersInfo),channel=this.getChannelFromCache(channelId);channel.subscribers_count=subscribers,channel.subscribed=!1,this.feedChannel.messages=[],this.retrieveLatests().then(()=>{this.$rootScope.$broadcast(this.CHANNEL_UPDATE_EVENT,this.LIST_EVENT_TYPE.UNSUBSCRIBE,channelId)})}onDeleteChannel(channelId){this.removeChannelFromCache(channelId).then(()=>{this.$rootScope.$broadcast(this.CHANNEL_UPDATE_EVENT,this.LIST_EVENT_TYPE.DELETE,channelId)})}onUserSubscribeEvent(channelId,userId){this.$rootScope.$broadcast(this.CHANNEL_USER_SUBSCRIPTION_EVENT,this.LIST_EVENT_TYPE.SUBSCRIBE,channelId,userId)}onUserUnsubscribeEvent(channelId,userId){this.$rootScope.$broadcast(this.CHANNEL_USER_SUBSCRIPTION_EVENT,this.LIST_EVENT_TYPE.UNSUBSCRIBE,channelId,userId)}getChannelNextPage(channel,reset=!1){return this.$q((resolve,reject)=>{let logChannelName="AGGREGATE"===channel.type?"feedChannel":channel.id;if(channel.isLoading)return this.$log.info("[channelService] getChannelNextPage("+logChannelName+", "+channel.pageIndex+") -- ignored (isLoading)"),resolve();channel.isLoading=!0,reset&&(channel.pageIndex=0);channel.messages.length;let askedMessagesNumber=(channel.pageIndex+1)*ChannelService.PAGE_SIZE;if(askedMessagesNumber<=channel.messages.length)this.$log.info("[channelService] getChannelNextPage("+logChannelName+", "+channel.pageIndex+") -- success from cache"),channel.pageIndex+=1,channel.isLoading=!1,resolve({messages:channel.messages,nbMessages:askedMessagesNumber});else if(channel.complete)this.$log.info("[channelService] getChannelNextPage("+logChannelName+", "+channel.pageIndex+") -- success from cache (complete)"),channel.isLoading=!1,resolve({messages:channel.messages,nbMessages:channel.messages.length});else{let messages=channel.messages,lastMessageDate=messages.length?messages[messages.length-1].timestamp:null;this.getChannelMessages(channel,lastMessageDate).then(nbMessages=>{nbMessages<ChannelService.PAGE_SIZE&&(channel.complete=!0),this.$log.info("[channelService] getChannelNextPage("+logChannelName+", "+channel.pageIndex+") -- success from server "+(channel.complete?"(complete)":"")+" -- retreive "+nbMessages+" message(s)"),channel.pageIndex+=1,channel.loaded=!0,channel.isLoading=!1,resolve({messages:channel.messages,nbMessages:channel.messages.length})}).catch(error=>{channel.isLoading=!1,this.channelErrorHandler("getChannelNextPage("+logChannelName+", "+channel.pageIndex+")",reject,error)})}})}getChannelPublishers(channel){return this.$q((resolve,reject)=>{if(channel.publishersRetreived)return resolve();this.getChannelUsers(channel.id,{format:"full",types:"owner publisher"}).then(usersData=>{usersData.data.forEach(userData=>{let contact=this.contactService.getContactByJid(userData.jid_im);contact||((contact=new this.Contact).updateFromUserData(userData),contact.updateRichStatus(),this.contactService.contacts[contact.id]=contact,this.contactService.dbContacts[contact.dbId]=contact,this.contactService.jtelContacts[contact.jidtel]=contact),channel.users.push(contact)}),channel.publishersRetreived=!0,this.$log.info("[channelService] getChannelPublishers ("+channel.id+") -- success -- find "+usersData.length+" publisher(s)"),resolve()}).catch(err=>{this.channelErrorHandler("getChannelPublishers ("+channel.id+")",reject,err)})})}getChannelMessages(channel,beforeDate){return this.$q((resolve,reject)=>{let provider=null;(provider="AGGREGATE"===channel.type?this.getLatestMessages(10,beforeDate):this.getChannelItems(channel.id,ChannelService.PAGE_SIZE,beforeDate)).then(messages=>{messages.forEach(message=>{"null"===message.entry.images&&(message.entry.images=[]),"null"!==message.entry.attachments&&void 0!==message.entry.attachments||(message.entry.attachments=[]),message.entry.attachments instanceof Array||(message.entry.attachments=[message.entry.attachments]),message.entry.message&&(message.entry.message=message.entry.message.replace(/<a/gi,"<a target='_blank' rel='noopener noreferrer' "));message.entry.message&&message.entry.message;this.contactService.getOrCreateContact(message.from).then(contact=>{message.fromDetails={displayName:contact.displayName,id:contact.dbId,avatar:contact.avatar},message.fromContact=contact})}),channel.messages.push.apply(channel.messages,messages),resolve(messages.length)})})}getMyChannels(){return this.$q((resolve,reject)=>{this.$http({method:"GET",url:this.portalURL+"?format=full",headers:this.authService.getRequestHeader()}).then(response=>{this.$log.info("[channelService] getMyChannels -- success"),response.data.data.forEach(channelData=>{let channel=this.Channel(channelData);channel.invited&&this.incrementInvitationCounter(),(channel.subscribed||channel.invited)&&(this.channels[channel.id]=channel)}),this.updateChannelsList(),resolve(this.channelsList)}).catch(err=>{this.channelErrorHandler("getMyChannels",reject,err)})})}createChannel(name,mode,topic="",category="globalnews",autoProvisionning=!1,max_items=100){return this.$q((resolve,reject)=>{let url=this.portalURL+(autoProvisionning?"?auto_provisioning=true":""),data={name:name,mode:mode,topic:topic,category:category,max_items:max_items};this.$http({method:"POST",url:url,headers:this.authService.getPostHeader(),data:data}).then(response=>{this.$log.info("[channelService] createChannel -- "+name+" -- "+mode+" -- success");let channel=this.Channel(response.data.data);resolve(channel)}).catch(err=>{this.channelErrorHandler("createChannel -- "+name+" -- "+mode,reject,err)})})}deleteChannel(channelId){return this.$q((resolve,reject)=>{this.$http({method:"DELETE",url:this.portalURL+"/"+channelId,headers:this.authService.getPostHeader()}).then(response=>{this.$log.info("[channelService] deleteChannel -- "+channelId+" -- success"),resolve(response)}).catch(err=>{this.channelErrorHandler("deleteChannel ("+channelId+")",reject,err)})})}findChannels(filter){return this.$q((resolve,reject)=>{let query="?sortOrder="+(filter.sortOrder&&1===filter.sortOrder?"1":"-1");void 0!==filter.subscribed&&(query+="&subscribed="+filter.subscribed),filter.name&&(query+="&name="+filter.name),filter.topic&&(query+="&topic="+filter.topic),filter.limit&&(query+="&limit="+filter.limit),filter.offset&&(query+="&offset="+filter.offset),filter.sortField&&(query+="&sortField="+filter.sortField),filter.category&&(query+="&category="+filter.category),this.$http({method:"GET",url:this.portalURL+"/search"+query,headers:this.authService.getRequestHeader()}).then(response=>{let channels=[];response.data.data.forEach(channelData=>{channels.push(this.Channel(channelData))}),resolve(channels)}).catch(err=>{this.channelErrorHandler("findChannels ("+query+")",reject,err)})})}browseChannels(filter){return this.$q((resolve,reject)=>{let query="?sortOrder="+(filter.sortOrder&&1===filter.sortOrder?"1":"-1");filter.category&&(query+="&category="+filter.category),filter.excluded_category&&(query+="&excluded_category="+filter.excluded_category),void 0!==filter.subscribed&&(query+="&subscribed="+filter.subscribed),filter.limit&&(query+="&limit="+filter.limit),filter.offset&&(query+="&offset="+filter.offset),filter.sortField&&(query+="&sortField="+filter.sortField),this.$http({method:"GET",url:this.portalURL+"/browse"+query,headers:this.authService.getRequestHeader()}).then(response=>{let channels=[];response.data.data.forEach(channelData=>{channels.push(this.Channel(channelData))}),resolve(channels)}).catch(err=>{this.channelErrorHandler("browseChannels ("+query+")",reject,err)})})}getChannel(channelId){return this.$q((resolve,reject)=>{this.$http({method:"GET",url:this.portalURL+"/"+channelId,headers:this.authService.getRequestHeader()}).then(response=>{this.$log.info("[channelService] getChannel -- "+channelId+" -- success");let channel=this.Channel(response.data.data);resolve(channel)}).catch(err=>{this.channelErrorHandler("getChannel ("+channelId+")",reject,err)})})}getChannelFromCache(channelId){let channel=this.channels[channelId];return void 0!==channel?channel:null}publishToChannel(channelId,itemId,type,message,title,url,images,video,attachments){return this.$q((resolve,reject)=>{let data={type:type,title:title||"",message:message||"",images:images||[],attachments:attachments||[]},queryParam=itemId?"?itemId="+itemId:"";video&&(data.video=video),this.$http({method:"POST",url:this.portalURL+"/"+channelId+"/publish"+queryParam,headers:this.authService.getRequestHeader(),data:data}).then(response=>{this.$log.info("[channelService] publishToChannel -- "+channelId+" -- "+type+" -- success"),resolve(response)}).catch(err=>{this.channelErrorHandler("publishToChannel ("+channelId+")",reject,err)})})}subscribeToChannel(channel){return this.$q((resolve,reject)=>{this.$http({method:"POST",url:this.portalURL+"/"+channel.id+"/subscribe",headers:this.authService.getRequestHeader()}).then(response=>{this.$log.info("[channelService] subscribeToChannel -- "+channel.id+" -- success"),channel.subscribed=!0,channel.users_count+=1,resolve(response)}).catch(err=>{this.channelErrorHandler("subscribeToChannel ("+channel.id+")",reject,err)})})}unsubscribeToChannel(channel){return this.$q((resolve,reject)=>{this.$http({method:"DELETE",url:this.portalURL+"/"+channel.id+"/subscribe",headers:this.authService.getRequestHeader()}).then(response=>{this.$log.info("[channelService] unsubscribeToChannel -- success"),channel.subscribed=!1,channel.users_count-=1,resolve(response)}).catch(err=>{this.channelErrorHandler("unsubscribeToChannel",reject,err)})})}updateChannel(channelId,options){return this.$q((resolve,reject)=>{this.$http({method:"PUT",url:this.portalURL+"/"+channelId,headers:this.authService.getPostHeader(),data:options}).then(response=>{let channel=this.getChannelFromCache(channelId);channel.name=response.data.data.name,channel.topic=response.data.data.topic,channel.category=response.data.data.category,this.$log.info("[channelService] updateChannel ( "+channelId+") -- success"),this.$rootScope.$broadcast(this.CHANNEL_UPDATE_EVENT,this.LIST_EVENT_TYPE.UPDATE,channel.id),resolve(channel)}).catch(err=>{this.channelErrorHandler("updateChannel ("+channelId+")",reject,err)})})}getChannelItems(channelId,maxMessages,beforeDate=null,afterDate=null){return this.$q((resolve,reject)=>{this.$http({method:"GET",url:this.portalURL+"/"+channelId+"/items",headers:this.authService.getRequestHeader(),params:{max:maxMessages,before:beforeDate,after:afterDate}}).then(response=>{this.$log.info("[channelService] getChannelItems -- success"),this.chewReceivedItems(response.data.data.items),resolve(response.data.data.items)}).catch(err=>{this.channelErrorHandler("getChannelItems",reject,err)})})}deleteChannelItem(channelId,itemId){return this.$q((resolve,reject)=>{this.$http({method:"DELETE",url:this.portalURL+"/"+channelId+"/items/"+itemId,headers:this.authService.getRequestHeader()}).then(response=>{this.$log.info("[channelService] deleteChannelItem ("+channelId+") -- success"),resolve()}).catch(err=>{this.channelErrorHandler("deleteChannelItem ("+channelId+")",reject,err)})})}getChannelUsers(channelId,options){return this.$q((resolve,reject)=>{let data={};options&&(options.format&&"string"==typeof options.format&&options.format.length&&(data.format=options.format),options.types&&"string"==typeof options.types&&options.types.length&&(data.types=options.types),options.limit&&"number"==typeof options.limit&&options.limit>0&&(data.limit=options.limit),options.offset&&"number"==typeof options.offset&&options.offset>0&&(data.offset=options.offset),options.sortField&&"string"==typeof options.sortField&&options.sortField.length&&(data.sortField=options.sortField),!options.sortOrder||"-1"!==options.sortOrder&&"1"!==options.sortOrder||(data.sortOrder=options.sortOrder)),this.$http({method:"GET",url:this.portalURL+"/"+channelId+"/users",headers:this.authService.getRequestHeader(),params:data}).then(response=>{this.$log.info("[channelService] getChannelUsers ("+channelId+") -- success"),resolve(response.data)}).catch(err=>{this.channelErrorHandler("getChannelUsers ("+channelId+")",reject,err)})})}searchUsersByName(channelId,displayName,options){return options.displayName=displayName,this.$q((resolve,reject)=>{this.$http({method:"GET",url:this.portalURL+"/"+channelId+"/users/search",headers:this.authService.getRequestHeader(),params:options}).then(response=>{this.$log.info("[channelService] searchUsersByName ("+channelId+" -- success"),resolve(response.data.data)}).catch(err=>{this.channelErrorHandler("searchUsersByName ("+channelId+")",reject,err)})})}deleteChannelAvatar(channelId){return this.$q((resolve,reject)=>{this.$http({method:"DELETE",url:this.portalURL+"/"+channelId+"/avatar",headers:this.authService.getRequestHeader()}).then(response=>{this.$log.info("[channelService] deleteChannelAvatar "+channelId+" -- success"),resolve(response)}).catch(err=>{this.channelErrorHandler("deleteChannelAvatar "+channelId,reject,err)})})}uploadChannelAvatar(channelId,avatar,avatarSize){return this.$q((resolve,reject)=>{this.roomService.resizeImage(avatar,avatarSize,avatarSize).then(resizedImage=>{var binaryData=this.roomService.getBinaryData(resizedImage);this.$http({method:"POST",url:this.portalURL+"/"+channelId+"/avatar",headers:this.authService.getPostHeader("image/"+binaryData.type),data:binaryData.data,transformRequest:[]}).then(response=>{this.$log.info("[channelService] uploadChannelAvatar "+channelId+" -- success"),resolve(response)}).catch(err=>{this.channelErrorHandler("uploadChannelAvatar",reject,err)})})})}updateChannelUsers(channelId,users,userType){return this.$q((resolve,reject)=>{let members=users.map(user=>({id:user.dbId,type:userType}));this.$http({method:"PUT",url:this.portalURL+"/"+channelId+"/users",headers:this.authService.getRequestHeader(),data:{data:members}}).then(response=>{this.$log.info("[channelService] updateChannelUsers -- success");let usersLists=response.data.data;this.$rootScope.$broadcast(this.CHANNEL_USERS_UPDATE_EVENT,channelId,usersLists),resolve(usersLists)}).catch(err=>{this.channelErrorHandler("updateChannelUsers",reject,err)})})}usersUpdateHandler(_event,channelId,users){let channel=this.getChannelFromCache(channelId);if(null!==users&&(channel.users_count+=users.added.length-users.removed.length,channel.users.length)){for(let i=0;i<users.added.length;i++)this.contactService.getContactByDBId(users.added[i]).then(contact=>{channel.users.push(contact)});for(let i=0;i<users.removed.length;i++)for(let j=channel.users.length-1;j>=0;j--)if(channel.users[j].dbId===users.removed[i]){channel.users.splice(j,1);break}}}retrieveUsers(channel){if(this.$log.info("Retrieving users"),0===channel.users.length&&channel.userRole===this.USER_ROLE.OWNER){let publishers,owner=this.contactService.userContact;return owner.type="owner",this.getChannelUsers(channel.id,{format:"full",types:"publisher",limit:19}).then(pubs=>(publishers=pubs.data.length?pubs.data:[]).length<19?this.getChannelUsers(channel.id,{format:"full",types:"member",limit:19-publishers.length}):[]).then(members=>{publishers.push.apply(publishers,members.data);const users=publishers;return this.usersToContacts(users).then(contacts=>(channel.users=contacts,channel.users.unshift(owner),contacts))})}return this.$q.resolve(null)}usersToContacts(users){if(null!==users){let userPromises=[];for(let i=0;i<users.length;i++){let user=this.Contact.create(users[i].jid_im,users[i].firstName,users[i].lastName,users[i].company,users[i].loginEmail);user.dbId=users[i].id,user.lastAvatarUpdateDate=users[i].lastAvatarUpdateDate,user.type=users[i].type||users[i].affiliation,userPromises.push(user.getAvatar())}return this.$q.all(userPromises).then(contacts=>contacts)}}retrieveMessages(channel){return channel.messageRetrieved?this.$q.resolve(null):this.getChannelItems(channel.id,100,null,null).then(messages=>{channel.messages=messages;let authorPromises=[];var uniqueAuthors=Array.from(new Set(channel.messages.map(msg=>msg.from)));for(let i=0;i<uniqueAuthors.length;i++){let contact=this.contactService.getOrCreateContact(uniqueAuthors[i]);authorPromises.push(contact)}return this.$q.all(authorPromises).then(authors=>{for(let i=0;i<channel.messages.length;i++){let contact=authors.find(author=>author.id===channel.messages[i].from);channel.messages[i].fromDetails={displayName:contact.displayName,id:contact.dbId,avatar:contact.avatar},channel.messages[i].fromContact=contact}return channel.messageRetrieved=!0,this.$q.resolve(channel.messages)})})}retrieveLatests(beforeDate=null){return this.getLatestMessages(10,beforeDate,null).then(messages=>(this.feedChannel.messages.push.apply(this.feedChannel.messages,messages),messages.length))}incrementMessagesCounter(){this.messageCounter+=1,this.updateNotificationCounter()}decrementMessagesCounter(){this.messageCounter-=1,this.updateNotificationCounter()}incrementInvitationCounter(){this.invitationCounter+=1,this.updateNotificationCounter()}decrementInvitationCounter(){this.invitationCounter-=1,this.updateNotificationCounter()}ackMessages(){this.messageCounter=0,this.updateNotificationCounter(),this.feedChannel.messages.forEach(message=>{message.new=!1})}ackMessage(messageId){this.feedChannel.messages.forEach(message=>{message.id===messageId&&(message.new=!1)}),this.decrementMessagesCounter()}updateNotificationCounter(){this.notificationCounter=this.messageCounter+this.invitationCounter,this.notificationCounter<0&&(this.notificationCounter=0),this.$rootScope.$broadcast(this.CHANNEL_NOTIFICATION_NUMBER_UPDATED,this.notificationCounter)}removeAllUsersFromChannel(channelId){return this.$q((resolve,reject)=>{this.$http({method:"DELETE",url:this.portalURL+"/"+channelId+"/users",headers:this.authService.getRequestHeader()}).then(response=>{this.$log.info("[channelService] Removed all users from channel -- success"),this.$rootScope.$broadcast(this.CHANNEL_USERS_UPDATE_EVENT,channelId,null),resolve(response)}).catch(err=>{this.channelErrorHandler("removeAllUsersFromChannel",reject,err)})})}getPortalInfos(){return this.$q((resolve,reject)=>{this.$http({method:"GET",url:config.restServerUrl+"/api/rainbow/channels/v1.0/about",headers:this.authService.getRequestHeader()}).then(response=>{this.$log.info("[channelService] successfully retrieved portal infos -- success"),resolve(response.data)}).catch(err=>{this.channelErrorHandler("getPortalInfos",reject,err)})})}getLatestMessages(maxMessages,beforeDate=null,afterDate=null){return this.$q((resolve,reject)=>{this.$http({method:"GET",url:this.portalURL+"/latest-items",headers:this.authService.getRequestHeader(),params:{max:maxMessages,before:beforeDate,after:afterDate}}).then(response=>{this.chewReceivedItems(response.data.data.items),resolve(response.data.data.items)}).catch(err=>{this.channelErrorHandler("getLatestMessages",reject,err)})})}acceptInvitation(channelId){return this.$q((resolve,reject)=>{this.$http({method:"PUT",url:this.portalURL+"/"+channelId+"/accept",headers:this.authService.getRequestHeader()}).then(response=>{this.$log.info("[channelService] acceptInvitation ("+channelId+") -- success"),this.decrementInvitationCounter(),resolve(response)}).catch(err=>{this.channelErrorHandler("acceptInvitation",reject,err)})})}declineInvitation(channelId){return this.$q((resolve,reject)=>{this.$http({method:"PUT",url:this.portalURL+"/"+channelId+"/decline",headers:this.authService.getRequestHeader()}).then(response=>{this.$log.info("[channelService] declineInvitation ("+channelId+") -- success"),this.decrementInvitationCounter(),resolve(response)}).catch(err=>{this.channelErrorHandler("declineInvitation",reject,err)})})}chewReceivedItems(items){items.forEach(item=>{"urn:xmpp:channels:simple"===item.type&&(item.entry={message:item.message},delete item.message),item.displayId=item.id+"-"+item.timestamp,item.modified=void 0!==item.creation})}updateChannelsList(){this.channelsList=Object.keys(this.channels).map(key=>this.channels[key])}addChannelToCache(channel){this.channels[channel.id]=channel,this.updateChannelsList()}channelErrorHandler(methodName,reject,err){let error=null;err.data?(this.$log.error("[channelService] "+methodName+" -- failure -- "+err.data.errorDetails),error=new RBError(err.data.errorMsg,err.data.errorDetails,err.data.errorDetailsCode)):(this.$log.error("[channelService] "+methodName+" -- failure -- Server failure"),error=new RBError("Server failure")),reject(error)}}ChannelService.PAGE_SIZE=10,ChannelService.$inject=["$q","$http","$log","$interval","$rootScope","authService","xmppService","contactService","Channel","roomService","Contact","profileService"],angular.module("rainbow").service("channelService",ChannelService)},function(module,exports){},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var crypto_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(2);angular.module("rainbow").service("companyService",["$q","$log","$http","$rootScope","authService","errorHelperService","userInfoService","Company",function($q,$log,$http,$rootScope,authService,errorHelperService,userInfoService,Company){var service=this,listeners=[];service.start=function(stats){$log.info(""),$log.info("[companyService] === STARTING ===");var startDate=performance.now();service.portalURL=config.restServerUrl+"/api/rainbow/enduser/v1.0/",service.companies={};var startDuration=Math.round(performance.now()-startDate);return stats.push({service:"companyService",startDuration:startDuration}),$log.info("[companyService] === STARTED ("+startDuration+" ms) ==="),listeners.push($rootScope.$on("ON_COMPANY_CHANGE_EVENT",(function(__event,companyId){service.getCompanyById(companyId,!0)}))),$q.when()},service.stop=function(){var listener;for($log.info(""),$log.info("[companyService] === STOPPING ===");listener=listeners.pop();)listener();return $log.info("[companyService] === STOPPED ==="),service.companies={},$q.when()},service.searchCompanies=function(searchText,hasBP,isBP,bpType){return $q((function(resolve,reject){var url=service.portalURL+"companies?name="+searchText+"&format=full";null!=hasBP&&(url+="&hasBP="+hasBP),null!=isBP&&(url+="&isBP="+isBP),bpType&&(url+="&bpType="+bpType),$http({method:"GET",url:url,headers:authService.getRequestHeader()}).then((function(response){var companiesData=response.data.data,companies=[];angular.forEach(companiesData,(function(companyData){if("Default"!==companyData.name&&"Rainbow"!==companyData.name&&"active"===companyData.status){var company=service.companies[companyData.id];company||(company=Company.createFromData(companyData),service.companies[company.id]=company,service.getCompanyLogo(company)),companies.push(company)}})),$log.info("[companyService] searchCompanies with criteria '"+searchText+"' - success - found "+companiesData.length+" companies : returns "+companies.length+" companies"),resolve(companies)}),(function(response){var error=errorHelperService.handleError(response);$log.error("[companyService] "+errorHelperService.getErrorFullMessage(response,"searchCompanies")),reject(error)}))}))},service.getCompanyById=function(companyId,update){return $q((function(resolve,reject){if(!companyId)return $log.error("[companyService] getCompanyById -- missing companyId"),void reject(new Error("[companyService] getCompanyById -- missing companyId"));var company=service.companies[companyId];company&&!update?($log.info("[companyService] getCompanyById (cache) "+companyId+" - success"),resolve(company)):$http({method:"GET",url:service.portalURL+"companies/"+companyId,headers:authService.getRequestHeader()}).then((function(response){var companyData=response.data.data;company?(company.updateFromData(companyData),$log.info("[companyService] getCompanyById (update) "+companyId+" - success")):(company=Company.createFromData(companyData),service.companies[company.id]=company,$log.info("[companyService] getCompanyById "+companyId+" - success")),service.getCompanyLogo(company),service.getCompanyBanner(company),resolve(company)}),(function(response){var error=errorHelperService.handleError(response);$log.error("[companyService] "+errorHelperService.getErrorFullMessage(response,"getCompanyById")),reject(error)}))}))},service.getAdministratorIds=function(companyId){return $q((function(resolve,reject){var serverUrl=service.portalURL+"companies/"+companyId+"/administrators";$http({method:"GET",url:serverUrl,headers:authService.getRequestHeader()}).then((function(response){var data=response.data.data,administratorIds=[];data.forEach((function(userData){administratorIds.push(userData.id)})),$log.info("[companyService] getAdministratorIds success)"),resolve(administratorIds)}),(function(response){var error=errorHelperService.handleError(response);$log.error("[companyService] "+errorHelperService.getErrorFullMessage(response,"getAdministratorIds")),reject(error)}))}))},service.getCompanyLogo=function(company){return $q((function(resolve,reject){var companyColor=userInfoService.computeUserColor(company.name),companyInitials=company.name.substr(0,1);userInfoService.getAvatarImage(company.id,companyInitials,companyColor.color,130,company.lastAvatarUpdateDate).then((function(companyLogo){company.logo=companyLogo,$rootScope.$broadcast("ON_COMPANY_LOGO_UPDATED",company.id),$log.info("[companyService] getCompanyLogo - "+company.getNameForLogs()+" - success"),resolve(companyLogo)})).catch((function(error){$log.error("[companyService] getCompanyLogo - failure - "+error.message),reject(error)}))}))},service.getCompanyBanner=function(company){return $q((function(resolve){var image=new Image;if(company.lastBannerUpdateDate){var serverURL=config.webservices.protocol+"://"+config.webservices.currentServer;$rootScope.cdn&&(serverURL=$rootScope.cdnServer);var imgSrc=serverURL+"/api/banner/"+company.id+"?size=831";imgSrc+="&update="+Object(crypto_js__WEBPACK_IMPORTED_MODULE_0__.MD5)(crypto_js__WEBPACK_IMPORTED_MODULE_0__.enc.Latin1.parse(company.lastBannerUpdateDate)).toString(crypto_js__WEBPACK_IMPORTED_MODULE_0__.enc.Hex),image.onload=function(){var loadedBannerImage=this;$rootScope.$apply((function(){company.banner=loadedBannerImage,$rootScope.$broadcast("ON_COMPANY_BANNER_UPDATED",company.id),$log.log("[companyService] Load banner for "+company.getNameForLogs()+" success"),resolve(loadedBannerImage)}))},image.onerror=function(){$rootScope.$apply((function(){$log.warn("[companyService] Load banner for "+company.getNameForLogs()+" failure"),resolve(null)}))},image.src=imgSrc}else window.rainbowSDK?image=null:image.src="/cache/images/company-banner-01.svg",company.banner=image,$rootScope.$broadcast("ON_COMPANY_BANNER_UPDATED",company.id),$log.log("[companyService] Load default banner for "+company.getNameForLogs()+" success"),resolve(image)}))}}])},function(module,exports){!function(){"use strict";angular.module("rainbow").service("browserService",[function(){this.extractBrowserVersion=function(uastring,expr,pos){var match=uastring.match(expr);return match&&match.length>=pos&&parseInt(match[pos],10)}}])}()},function(module,exports){angular.module("rainbow").service("gRTCStatsService",[function(){"use strict";var calls={};this.resetStatsForAllCalls=function(){calls={}},this.resetStatsForCall=function(callid){callid in calls&&delete calls[callid]},this.getCalls=function(){return calls},this.nbCalls=function(){return Object.keys(calls).length},this.hasStatsForCall=function(callid){return callid in calls},this.addStreamToCall=function(callid,stream){callid in calls||(calls[callid]={});var call=calls[callid];call[stream.id]={},call[stream.id].stream=stream},this.nbStreamsInACall=function(callid){return callid in calls?Object.keys(calls[callid]).length:0},this.getBundlePolicyForCall=function(callid){if(!(callid in calls))return"unknown";var call=calls[callid],nbActiveStream=0,nbTotalStreams=this.nbStreamsInACall(callid);for(var componentID in call)"selectedCandidatePairId"in call[componentID].stream&&nbActiveStream++;if(4===nbTotalStreams)switch(nbActiveStream){case 0:return"failed";case 1:return"max-bundle";case 2:return"balanced";case 4:return"max-compat";default:return"unknown"}else{if(2!==nbTotalStreams)return"unknown";switch(nbActiveStream){case 0:return"failed";case 1:return"max-bundle";case 2:return"max-compat";default:return"unknown"}}},this.addSSRCToStream=function(callid,ssrc){var call,stream=null;"ssrc"===ssrc.type&&callid in calls&&(call=calls[callid],ssrc.transportId in call&&((stream=call[ssrc.transportId]).ssrc||(stream.ssrc={}),stream.ssrc[ssrc.ssrc]=ssrc))},this.hasSSRCInStream=function(callid,streamid,ssrcid){var call,stream;return callid in calls&&(streamid in(call=calls[callid])&&(!!(stream=call[streamid]).ssrc&&ssrcid in stream.ssrc))},this.getSSRCMediaType=function(callid,streamid,ssrcid){var call,stream;return callid in calls&&streamid in(call=calls[callid])&&(stream=call[streamid]).ssrc&&ssrcid in stream.ssrc?stream.ssrc[ssrcid].mediaType:"unknown"},this.getSSRCDirection=function(callid,streamid,ssrcid){var call,stream,ssrc;return callid in calls&&streamid in(call=calls[callid])&&(stream=call[streamid]).ssrc&&ssrcid in stream.ssrc?(ssrc=stream.ssrc[ssrcid],getDirection(ssrc.id)):"unknown"},this.getSSRCAudioCodecName=function(callid,streamid,ssrcid){var call,stream;return callid in calls&&streamid in(call=calls[callid])&&(stream=call[streamid]).ssrc&&ssrcid in stream.ssrc?stream.ssrc[ssrcid].googCodecName:"unknown"},this.isSSRCFlowing=function(callid,streamid,ssrcid){var call,stream,ssrc;if(!(callid in calls))return!1;if(!(streamid in(call=calls[callid])))return!1;if(!(stream=call[streamid]).ssrc)return!1;if(!(ssrcid in stream.ssrc))return!1;ssrc=stream.ssrc[ssrcid];return("IN"===getDirection(ssrc.id)?parseInt(ssrc.bytesReceived,10):parseInt(ssrc.bytesSent,10))>0},this.getStreamsDetailsFromCall=function(callid){var call=null,stream=null;if(!(callid in calls))return[];call=calls[callid];var streams=[];for(var streamid in call)if(call.hasOwnProperty(streamid)){stream=call[streamid];var audioResult="no",videoResult="no",hasAudioIN=!1,hasVideoIN=!1,hasAudioOUT=!1,hasVideoOUT=!1;for(var ssrcid in stream.ssrc)if(stream.ssrc&&stream.ssrc.hasOwnProperty&&stream.ssrc.hasOwnProperty(ssrcid)){var type=this.getSSRCMediaType(callid,streamid,ssrcid),direction=this.getSSRCDirection(callid,streamid,ssrcid),isFlowing=this.isSSRCFlowing(callid,streamid,ssrcid);"audio"===type&&"IN"===direction&&isFlowing?hasAudioIN=!0:"audio"===type&&"OUT"===direction&&isFlowing?hasAudioOUT=!0:"video"===type&&"IN"===direction&&isFlowing?hasVideoIN=!0:"video"===type&&"OUT"===direction&&isFlowing&&(hasVideoOUT=!0)}hasAudioIN&&hasAudioOUT?audioResult="IN|OUT":hasAudioIN?audioResult="IN":hasAudioOUT&&(audioResult="OUT"),hasVideoIN&&hasVideoOUT?videoResult="IN|OUT":hasVideoIN?videoResult="IN":hasVideoOUT&&(videoResult="OUT"),hasAudioIN||hasAudioOUT||hasVideoIN||hasVideoOUT?streams.push({id:streamid,streams:{audio:audioResult,video:videoResult}}):streams.push({id:streamid,streams:{}})}return streams},this.getCodecDetailsFromCall=function(callid){var call=null,stream=null,audioCodec="-",videoCodec="-",codecs={codec:{audio:audioCodec,video:videoCodec}};if(!(callid in calls))return codecs;for(var streamid in call=calls[callid])if(call.hasOwnProperty(streamid))for(var ssrcid in(stream=call[streamid]).ssrc)"audio"===stream.ssrc[ssrcid].mediaType&&(audioCodec=this.getSSRCAudioCodecName(callid,streamid,ssrcid)),"video"===stream.ssrc[ssrcid].mediaType&&(videoCodec=this.getSSRCAudioCodecName(callid,streamid,ssrcid));return codecs.codec.audio=audioCodec,codecs.codec.video=videoCodec,codecs};var getDirection=function(id){return id.indexOf("recv")>-1?"IN":"OUT"}}])},function(module,exports){angular.module("rainbow").service("fRTCStatsService",[function(){"use strict";var calls={};this.getCalls=function(){return calls},this.nbCalls=function(){return Object.keys(calls).length},this.addStreamToCall=function(callid,stream){if(!stream.isRemote){callid in calls||(calls[callid]={});var call=calls[callid];call.streams||(call.streams={}),call.streams[stream.id]={},call.streams[stream.id]=stream}},this.nbStreamsInACall=function(callid){return callid in calls?Object.keys(calls[callid].streams).length:0},this.resetStatsForAllCalls=function(){calls={}},this.resetStatsForCall=function(callid){callid in calls&&delete calls[callid]},this.hasStatsForCall=function(callid){return callid in calls},this.hasSSRCInStream=function(callid,streamid,ssrcid){var call;return callid in calls&&(!!(call=calls[callid]).streams&&(streamid in call.streams&&call.streams[streamid].ssrc===ssrcid))},this.hasStreamInCall=function(callid,streamid){return callid in calls&&streamid in calls[callid].streams},this.getSSRCMediaType=function(callid,streamid){var call;return callid in calls&&streamid in(call=calls[callid]).streams?call.streams[streamid].mediaType:"unknown"},this.getStreamsDetailsFromCall=function(callid){var call=null;if(!(callid in calls))return[];call=calls[callid];var streams=[];for(var streamid in call.streams)if(call.streams.hasOwnProperty(streamid)){var type=this.getSSRCMediaType(callid,streamid),direction=getDirection(streamid);"audio"===type?streams.push({id:streamid,streams:{audio:direction}}):"video"===type&&streams.push({id:streamid,streams:{video:direction}})}return streams},this.addCandidatePairToCall=function(callid,candidatePair){var call=null,hasAlreadyThisCandidatePair=!1;if(callid in calls){(call=calls[callid]).candidatesPairs||(call.candidatesPairs=[]);for(var i=0;i<call.candidatesPairs.length;i++)if(call.candidatesPairs[i].id===candidatePair.id){hasAlreadyThisCandidatePair=!0;break}!hasAlreadyThisCandidatePair&&"succeeded"===candidatePair.state&&candidatePair.selected&&call.candidatesPairs.push(candidatePair)}},this.getNbCandidatePairs=function(callid){var call,nbCandidatePairs=0;return callid in calls?((call=calls[callid]).candidatesPairs&&(nbCandidatePairs=call.candidatesPairs.length),nbCandidatePairs):nbCandidatePairs},this.getBundlePolicyForCall=function(callid){var policy="unknown";if(!(callid in calls))return policy;switch(this.getNbCandidatePairs(callid)){case 0:policy="failed";break;case 1:policy="max-bundle";break;case 2:policy=this.nbStreamsInACall(callid)>2?"balanced":"max-compat";break;default:policy="max-compat"}return policy};var getDirection=function(id){return id.indexOf("inbound")>-1?"IN":"OUT"}}])},function(module,exports){angular.module("rainbow").service("platformService",["$log","$rootScope","$window","$interval","settingsService","$q","$filter","$http","authService","errorHelperService",function($log,$rootScope,$window,$interval,settingsService,$q,$filter,$http,authService,errorHelperService){"use strict";var service=this,listeners=[];service.$q=$q,this.isWin=navigator.platform.toUpperCase().indexOf("WIN")>=0,service.start=function(stats){return $q((function(resolve,__reject){var startDate=performance.now();$log.info(""),$log.info("[platformService] === STARTING ==="),service.languages=["en","fr","es","de","it"],listeners.push($rootScope.$on("$translateChangeSuccess",(function(){service.fixDeviceLabels()}))),listeners.push($rootScope.$on("ON_INPUT_DEVICE_CHANGED_EVENT",onAudioInputChange)),listeners.push($rootScope.$on("ON_OUTPUT_DEVICE_CHANGED_EVENT",updateOutputDevice)),listeners.push($rootScope.$on("ON_CONNECTION_STATE_CHANGE_EVENT",service.onAuthenticationStatusChangedEvent)),service.isAskingMedia=!1,service.hasAudioPermission=!1,service.hasVideoPermission=!1,service.stopWatcher(),$interval(service.startWatcher,2e3,1);var startDuration=Math.round(performance.now()-startDate);stats.push({service:"platformService",startDuration:startDuration}),$log.info("[platformService] === STARTED ("+startDuration+" ms) ==="),resolve()}))},service.stop=function(){return $log.info("[platformService] === STOPPING ==="),listeners.forEach((function(listener){listener()})),service.stopWatcher(),this.mediaDevicesLength=0,this.mediaDevices=[],$log.info("[platformService] === STOPPED ==="),$q.when()},service.onAuthenticationStatusChangedEvent=function(__event,status){"connected"===status&&(!service.allowDevicesManagement()||!angular.element("#globalAudioTag")[0]||angular.element("#globalAudioTag")[0].sinkId&&"default"!==angular.element("#globalAudioTag")[0].sinkId||($log.info("[platformService] onAuthenticationStatusChangedEvent -- update global audio tag"),service.getCurrentSpeaker().then((function(device){device&&device.id&&updateCurrentOutputDevice(device.id)}))),service.testGetUserMedia())},this.audioDevices=0,this.videoDevices=0,this.detectRTCLoaded=function(){service.hasAudioPermission=DetectRTC.isWebsiteHasMicrophonePermissions,service.hasVideoPermission=DetectRTC.isWebsiteHasWebcamPermissions,service.fixDeviceLabels();var shouldAskAudio=!1,shouldAskVideo=!1,shouldAskMedia=service.shouldAskGetUserMedia();(DetectRTC.audioInputDevices&&DetectRTC.audioInputDevices.length||DetectRTC.audioOutputDevices&&DetectRTC.audioOutputDevices.length)&&(!service.hasAudioPermission||shouldAskMedia.audio?shouldAskAudio=!0:_isWebsiteHasMicrophonePermissions=!0),DetectRTC.videoInputDevices&&DetectRTC.videoInputDevices.length&&(!service.hasVideoPermission||shouldAskMedia.video?shouldAskVideo=!0:_isWebsiteHasWebcamPermissions=!0),shouldAskAudio||shouldAskVideo?service.isAskingMedia||(service.isAskingMedia=!0,service.getUserMedia(shouldAskAudio,shouldAskVideo)):(service.fixDeviceLabels(),updateHeadsetDevices().then((function(){service.isDesktop()&&service.updateNewDesktopDevicesIds(),updateAvailability(),service.audioDevices!==DetectRTC.audioInputDevices.length+DetectRTC.audioOutputDevices.length&&(service.audioDevices=DetectRTC.audioInputDevices.length+DetectRTC.audioOutputDevices.length,service.audioMediaDeviceUpdated()),service.videoDevices!==DetectRTC.videoInputDevices.length&&(service.videoDevices=DetectRTC.videoInputDevices.length,service.videoMediaDeviceUpdated()),angular.forEach(DetectRTC.MediaDevices,(function(mediaDevice){mediaDevice&&$log.info("[PlatformService] DetectRTC.MediaDevices device "+mediaDevice.id+" with kind "+mediaDevice.kind+" with label "+mediaDevice.label)})),service.getCurrentSpeaker().then((function(device){device&&device.id&&updateCurrentOutputDevice(device.id)})),service.newDevice&&service.checkAndUpdateHandFreeProfile(),service.startWatcher()})))},this.testGetUserMedia=function(){if(service.hasAudioPermission){var startDate=performance.now();service.getCurrentMicrophone().then((function(microphone){var constraints={},mic="default";microphone?(constraints.audio={optional:[{sourceId:microphone.id}]},mic="id - "+microphone.id+" and label "+microphone.label):constraints.audio=!0,$log.info("[PlatformService] testGetUserMedia -- getUserMedia for Mic "+mic),navigator.mediaDevices.getUserMedia(constraints).then((function(stream){var completeStartDuration=Math.round(performance.now()-startDate);$log.info("[PlatformService] testGetUserMedia -- getUserMedia success for time : "+completeStartDuration+" ms"),angular.forEach(stream.getTracks(),(function(mediaStreamTrack){$log.info("[PlatformService] testGetUserMedia mediaStreamTrack -- "+mediaStreamTrack.label),mediaStreamTrack.stop()})),service.isAskingMedia=!1})).catch((function(error){$log.info("[PlatformService] testGetUserMedia -- getUserMedia error "+error),service.isAskingMedia=!1}))}))}else $log.info("[PlatformService] testGetUserMedia -- no audio permission given")},this.shouldAskGetUserMedia=function(){var result={audio:!1,video:!1};return angular.forEach(DetectRTC.MediaDevices,(function(mediaDevice){mediaDevice&&mediaDevice.label&&-1!==mediaDevice.label.indexOf("invoke getUserMedia")&&("audioinput"===mediaDevice.kind||"audiooutput"===mediaDevice.kind?result.audio=!0:result.video=!0)})),$log.info("[platformService] shouldAskGetUserMedia : audio "+result.audio+" and video "+result.video),result},this.updateNewDesktopDevicesIds=function(){var handFreeInputDeviceName=settingsService.getSetting("handFreeInputDeviceName"),handFreeOutputDeviceName=settingsService.getSetting("handFreeOutputDeviceName"),headsetDeviceName=settingsService.getSetting("headsetDeviceName"),customMicrophoneName=settingsService.getSetting("customMicrophoneName"),customSpeakerName=settingsService.getSetting("customSpeakerName"),cameraUsed=settingsService.getSetting("cameraUsed"),secondRinging=settingsService.getSetting("ringingSpeakerName");(handFreeInputDeviceName||handFreeOutputDeviceName||headsetDeviceName||customMicrophoneName||customSpeakerName)&&angular.forEach(DetectRTC.MediaDevices,(function(mediaDevice){"audioinput"===mediaDevice.kind?(mediaDevice.normalizedLabel===headsetDeviceName&&settingsService.setSetting("headsetMicrophone",mediaDevice.id),mediaDevice.normalizedLabel===handFreeInputDeviceName&&settingsService.setSetting("microphone",mediaDevice.id),mediaDevice.normalizedLabel===customMicrophoneName&&settingsService.setSetting("customMicrophone",mediaDevice.id)):"audiooutput"===mediaDevice.kind&&(mediaDevice.normalizedLabel===headsetDeviceName&&settingsService.setSetting("headsetSpeaker",mediaDevice.id),mediaDevice.normalizedLabel===handFreeOutputDeviceName&&settingsService.setSetting("speaker",mediaDevice.id),mediaDevice.normalizedLabel===customSpeakerName&&settingsService.setSetting("customSpeaker",mediaDevice.id))})),cameraUsed&&angular.forEach(DetectRTC.MediaDevices,(function(mediaDevice){"videoinput"===mediaDevice.kind&&mediaDevice.label===cameraUsed&&settingsService.setSetting("camera",mediaDevice.id)})),secondRinging&&angular.forEach(DetectRTC.MediaDevices,(function(mediaDevice){"audiooutput"===mediaDevice.kind&&mediaDevice.normalizedLabel===secondRinging&&settingsService.setSetting("ringingSpeaker",mediaDevice.id)}))},this.mediaDevicesLength=0,this.mediaDevices=[],this.newDevice=null,this.devicesWatcher=function(){navigator.mediaDevices.enumerateDevices().then((function(devices){(service.mediaDevicesLength!==devices.length||service.checkForIdChange(devices))&&($log.debug("[platformService] MediaDevices count changed ! from "+service.mediaDevicesLength+" to "+devices.length),$log.debug("[platformService] MediaDevices brut devices list "+JSON.stringify(devices)),devices.length-service.mediaDevicesLength==1?service.newDevice=service.getNewDevice(service.mediaDevices,devices):service.newDevice=null,service.mediaDevicesLength=devices.length,service.mediaDevices=devices,service.stopWatcher(),DetectRTC.load(service.detectRTCLoaded))}))},service.checkAndUpdateHandFreeProfile=function(){$log.info("[platformService] checkAndUpdateHandFreeProfile");var activeProfile=service.getActiveAudioProfile();1===activeProfile.key&&!0===activeProfile.available&&service.getCurrentSpeaker().then((function(speaker){speaker&&speaker.groupId===service.newDevice.groupId&&($log.info("[platformService] checkAndUpdateHandFreeProfile -- should update the Jack Mic"),$rootScope.$broadcast("ON_HANDFREE_JACK_MICROPHONE_EVENT",service.newDevice))}))},service.checkForIdChange=function(devices){var changed=!1;return service.mediaDevices.length&&angular.forEach(service.mediaDevices,(function(device){if("default"!==device.deviceId&&"communications"!==device.deviceId){for(var found=!1,i=0;i<devices.length;i++)device.deviceId===devices[i].deviceId&&(found=!0);found||(changed=!0)}})),changed&&$log.info("[platformService] checkForIdChange "+changed),changed},service.getNewDevice=function(oldDevices,newDevices){var newDevice=null;return newDevices.length&&angular.forEach(newDevices,(function(device){if("default"!==device.deviceId&&"communications"!==device.deviceId){for(var found=!1,i=0;i<oldDevices.length;i++)device.deviceId===oldDevices[i].deviceId&&(found=!0);found||"audioinput"!==device.kind||(newDevice=device)}})),newDevice},service.tryToGetUserMediaForEachDevice=function(){if($log.info("[platformService] tryToGetUserMediaForEachDevice"),DetectRTC.audioInputDevices&&DetectRTC.audioInputDevices.length){for(var chain=$q.when(),i=0;i<DetectRTC.audioInputDevices.length;i++)!function(index){var device=DetectRTC.audioInputDevices[index];chain=chain.then((function(){return service.getUserMediaForAudioDevice(device.id)}))}(i);chain=chain.finally((function(){if($log.info("[platformService] tryToGetUserMediaForEachDevice finally -- has audio permission "+service.hasAudioPermission),service.hasAudioPermission)service.loadDetectRTC();else{_isWebsiteHasMicrophonePermissions=!1,_isWebsiteHasWebcamPermissions=!1,service.isAskingMedia=!1;$rootScope.$broadcast("ON_OPEN_GLOBAL_POPUP",{popupTitle:"information",popupBody:"devicePermission",okLabel:"ok"}),service.startWatcher()}}))}else $log.warn("[platformService] tryToGetUserMediaForEachDevice -- no audio devices found, restart the watcher"),service.startWatcher()},service.getUserMediaForAudioDevice=function(id){return $q((function(resolve){if(service.hasAudioPermission)return $log.info("[platformService] getUserMediaForAudioDevice for id: "+id+" no longer needed !"),void resolve();if(!id)return $log.info("[platformService] getUserMediaForAudioDevice missing id !"),void resolve();$log.info("[platformService] getUserMediaForAudioDevice for id: "+id);var constraints={};constraints.audio={optional:[{sourceId:id}]},navigator.mediaDevices.getUserMedia(constraints).then((function(stream){$log.info("[platformService] getUserMediaForAudioDevice for id: "+id+" success"),angular.forEach(stream.getAudioTracks(),(function(mediaStreamTrack){mediaStreamTrack.stop()})),service.hasAudioPermission=!0,_isWebsiteHasMicrophonePermissions=!0,service.hasVideoPermission=!0,_isWebsiteHasWebcamPermissions=!0,resolve()})).catch((function(error){$log.info("[platformService] getUserMediaForAudioDevice for id: "+id+" failed with error "+error),resolve()}))}))},service.getUserMedia=function(audio,video){$log.info("[platformService] getUserMedia audio: "+audio+" and video: "+video),navigator.mediaDevices.getUserMedia({audio:audio,video:video}).then((function(stream){$log.info("[platformService] getUserMedia audio: "+audio+" and video: "+video+" -- success!"),angular.forEach(stream.getAudioTracks(),(function(mediaStreamTrack){mediaStreamTrack.stop()})),angular.forEach(stream.getVideoTracks(),(function(mediaStreamTrack){mediaStreamTrack.stop()})),audio&&(service.hasAudioPermission=!0,_isWebsiteHasMicrophonePermissions=!0),video&&(service.hasVideoPermission=!0,_isWebsiteHasWebcamPermissions=!0),stream=null,service.loadDetectRTC()})).catch((function(error){$log.error("[platformService] getUserMedia -- error -- "+error),service.tryToGetUserMediaForEachDevice()}))},service.loadDetectRTC=function(){DetectRTC.load((function(){service.fixDeviceLabels(),updateHeadsetDevices().then((function(){service.isDesktop()&&service.updateNewDesktopDevicesIds(),updateAvailability(),service.isAskingMedia=!1,service.audioDevices!==DetectRTC.audioInputDevices.length+DetectRTC.audioOutputDevices.length&&(service.audioDevices=DetectRTC.audioInputDevices.length+DetectRTC.audioOutputDevices.length,service.audioMediaDeviceUpdated()),service.videoDevices!==DetectRTC.videoInputDevices.length&&(service.videoDevices=DetectRTC.videoInputDevices.length,service.videoMediaDeviceUpdated()),angular.forEach(DetectRTC.MediaDevices,(function(mediaDevice){mediaDevice&&$log.info("[PlatformService] DetectRTC.MediaDevices device "+mediaDevice.id+" with kind "+mediaDevice.kind+" with label "+mediaDevice.label)})),service.getCurrentSpeaker().then((function(device){device&&device.id&&updateCurrentOutputDevice(device.id)})),service.startWatcher()}))}))},service.getWhatsNew=function(){return $q((function(resolve){var url=config.restServerUrl+"/api/rainbow/enduser/v1.0/settings/changelogs";$http({method:"GET",url:url,headers:authService.getRequestHeader()}).then((function(response){$log.info("[adminPlatformService] getWhatsNew -- success");var data=response.data.data.changeLog.split("§%§"),whatsNew={};data.forEach((function(markdown,index){whatsNew[service.languages[index]]=markdown})),Object.keys(whatsNew).forEach((function(key){0===whatsNew[key].length&&(whatsNew[key]=whatsNew.en)})),whatsNew.en||(whatsNew={en:"",fr:"",es:"",de:"",it:""}),resolve(whatsNew)}),(function(response){resolve({en:"",fr:"",es:"",de:"",it:""}),$log.error("[adminPlatformService] "+errorHelperService.getErrorFullMessage(response,"getWhatsNew"))}))}))},service.getAvailableLanguage=function(lang){var mainLang=lang.split("-")[0],realLang=service.languages.find((function(language){return language===mainLang}));return realLang||"en"},this.isDesktop=function(){return navigator.userAgent.indexOf(" Rainbow/")>=0},this.allowDevicesManagement=function(){return $window.chrome||this.isDesktop()};var _isWebsiteHasWebcamPermissions=!1;this.isWebsiteHasWebcamPermissions=function(){return!!service.allowDevicesManagement()&&_isWebsiteHasWebcamPermissions};var _isWebsiteHasMicrophonePermissions=!1;this.isWebsiteHasMicrophonePermissions=function(){return!!service.allowDevicesManagement()&&_isWebsiteHasMicrophonePermissions};var audioProfile={HANDFREE:{key:1,value:"handfree",available:!1},HEADSET:{key:2,value:"headset",available:!1},SPEAKERPHONE:{key:3,value:"speakerphone",available:!1},CUSTOM:{key:4,value:"custom",available:!1}};this.audioProfileEnum=audioProfile,this.getAudioProfiles=function(){return audioProfile},this.currentAudioProfile=audioProfile.HANDFREE,this.getCurrentAudioProfile=function(){var profile=null;switch(settingsService.getSetting("audioProfile")){case audioProfile.HEADSET.value:profile=audioProfile.HEADSET;break;case audioProfile.HANDFREE.value:profile=audioProfile.HANDFREE;break;case audioProfile.SPEAKERPHONE.value:profile=audioProfile.SPEAKERPHONE;break;case audioProfile.CUSTOM.value:profile=audioProfile.CUSTOM;break;default:profile=audioProfile.HANDFREE,settingsService.setSetting("audioProfile",profile.value)}return profile},this.getActiveAudioProfile=function(){var profile=this.getCurrentAudioProfile();return profile.key===audioProfile.HANDFREE.key||profile.available?profile:audioProfile.HANDFREE},this.setCurrentAudioProfile=function(profile){profile&&(service.currentAudioProfile=profile)},this.isHandfreeAvailable=function(){return service.isHandfreeMicrophoneAvailable()&&service.isHandfreeSpeakerAvailable()},this.isHeadsetAvailable=function(){return service.isHeadsetMicrophoneAvailable()&&service.isHeadsetSpeakerAvailable()},this.isSpeakerphoneAvailable=function(){return service.isSpeakerphoneMicrophoneAvailable()&&service.isSpeakerphoneSpeakerAvailable()},this.isCustomAvailable=function(){return service.isCustomMicrophoneAvailable()&&service.isCustomSpeakerAvailable()},this.getCurrentMicrophone=function(){if("sdk"===settingsService.getSetting("apiMode")){var microphone=service.getMicrophoneForSDK();if(microphone)return microphone}switch(service.getActiveAudioProfile()){case audioProfile.SPEAKERPHONE:return service.getSpeakerphoneMicrophone();case audioProfile.CUSTOM:return service.getCustomMicrophone();case audioProfile.HEADSET:return service.getHeadsetMicrophone();default:return service.getHandfreeMicrophone()}},this.getMicrophoneForSDK=function(){var deferred=$q.defer();return service.getMicrophones().then((function(devices){deferred.resolve(service.getDeviceWithId(devices,settingsService.getSetting("microphone")))})),deferred.promise},this.getSecondRingerStatusFromSettings=function(){return settingsService.getSetting("hasSecondRinger")},this.setSecondRingerStatusFromSettings=function(val){return settingsService.setSetting("hasSecondRinger",val)},this.getHandfreeMicrophoneFromSettings=function(){return settingsService.getSetting("microphone")},this.getHandfreeMicrophone=function(){var deferred=$q.defer();return service.getMicrophones().then((function(devices){deferred.resolve(service.getDeviceWithId(devices,service.getHandfreeMicrophoneFromSettings()))})),deferred.promise},this.getHeadsetMicrophoneFromSettings=function(){return settingsService.getSetting("headsetMicrophone")},this.getHeadsetMicrophone=function(){var deferred=$q.defer();return service.getMicrophones().then((function(devices){deferred.resolve(service.getDeviceWithId(devices,service.getHeadsetMicrophoneFromSettings()))})),deferred.promise},this.getHeadsetDeviceName=function(){var deferred=$q.defer();return deferred.resolve(settingsService.getSetting("headsetDeviceName")),deferred.promise},this.getSpeakerphoneMicrophoneFromSettings=function(){return settingsService.getSetting("speakerphoneMicrophone")},this.getSpeakerphoneMicrophone=function(){var deferred=$q.defer();return service.getMicrophones().then((function(devices){deferred.resolve(service.getDeviceWithId(devices,service.getSpeakerphoneMicrophoneFromSettings()))})),deferred.promise},this.getSpeakerphoneDeviceName=function(){var deferred=$q.defer();return deferred.resolve(settingsService.getSetting("speakerphoneDeviceName")),deferred.promise},this.getCustomMicrophoneFromSettings=function(){return settingsService.getSetting("customMicrophone")},this.getCustomMicrophone=function(){var deferred=$q.defer();return service.getMicrophones().then((function(devices){deferred.resolve(service.getDeviceWithId(devices,service.getCustomMicrophoneFromSettings()))})),deferred.promise},this.getMicrophones=function(){var deferred=$q.defer();return this.allowDevicesManagement()||deferred.resolve([]),service.getAudioInputDevices().then((function(devices){deferred.resolve(devices&&devices.constructor===Array&&_isWebsiteHasMicrophonePermissions?devices:[])})).catch((function(error){return $log.info("[PlatformService] === SERVICES FAILURE === : "+error.message),deferred.reject(error),deferred.promise})),deferred.promise},this.isHandfreeMicrophoneAvailable=function(){return service.isDeviceAvailable(service.mediaDevices,service.getHandfreeMicrophoneFromSettings(),"audioinput")},this.isHeadsetMicrophoneAvailable=function(){return service.isDeviceAvailable(service.mediaDevices,service.getHeadsetMicrophoneFromSettings(),"audioinput")},this.isSpeakerphoneMicrophoneAvailable=function(){return service.isDeviceAvailable(service.mediaDevices,service.getSpeakerphoneMicrophoneFromSettings(),"audioinput")},this.isCustomMicrophoneAvailable=function(){return service.isDeviceAvailable(service.mediaDevices,service.getCustomMicrophoneFromSettings(),"audioinput")},this.getCurrentSpeaker=function(){if("sdk"===settingsService.getSetting("apiMode")){var speaker=service.getSpeakerForSDK();if(speaker)return speaker}switch(service.getActiveAudioProfile()){case audioProfile.SPEAKERPHONE:return service.getSpeakerphoneSpeaker();case audioProfile.CUSTOM:return service.getCustomSpeaker();case audioProfile.HEADSET:return service.getHeadsetSpeaker();default:return service.getHandfreeSpeaker()}},this.getSpeakerForSDK=function(){var deferred=$q.defer();return service.getSpeakers().then((function(devices){deferred.resolve(service.getDeviceWithId(devices,settingsService.getSetting("speaker")))})),deferred.promise},this.getHandfreeSpeakerFromSettings=function(){return settingsService.getSetting("speaker")},this.getHandfreeSpeaker=function(){var deferred=$q.defer();return service.getSpeakers().then((function(devices){deferred.resolve(service.getDeviceWithId(devices,service.getHandfreeSpeakerFromSettings(),!0))})),deferred.promise},this.getHeadsetSpeakerFromSettings=function(){return settingsService.getSetting("headsetSpeaker")},this.getHeadsetSpeaker=function(){var deferred=$q.defer();return service.getSpeakers().then((function(devices){deferred.resolve(service.getDeviceWithId(devices,service.getHeadsetSpeakerFromSettings()))})),deferred.promise},this.getSpeakerphoneSpeakerFromSettings=function(){return settingsService.getSetting("speakerphoneSpeaker")},this.getSpeakerphoneSpeaker=function(){var deferred=$q.defer();return service.getSpeakers().then((function(devices){deferred.resolve(service.getDeviceWithId(devices,service.getSpeakerphoneSpeakerFromSettings()))})),deferred.promise},this.getCustomSpeakerFromSettings=function(){return settingsService.getSetting("customSpeaker")},this.getCustomSpeaker=function(){var deferred=$q.defer();return service.getSpeakers().then((function(devices){deferred.resolve(service.getDeviceWithId(devices,service.getCustomSpeakerFromSettings()))})),deferred.promise},this.getRingingSpeakerFromSettings=function(){return settingsService.getSetting("ringingSpeaker")},this.getRingingSpeaker=function(){var deferred=$q.defer();return service.getSpeakers().then((function(devices){deferred.resolve(service.getDeviceWithId(devices,service.getRingingSpeakerFromSettings()))})),deferred.promise},this.setSpeakerForElement=function(element,sinkId){var defered=$q.defer();if(!element||!element.setSinkId)return $log.warn("[platformService] setSpeakerForElement -- missing element"),$q.when();if(this.allowDevicesManagement()){if(sinkId===element.sinkId)return $q.when();element.id&&$log.log("[platformService] setSpeakerForElement "+element.id+" with "+sinkId),element.setSinkId(sinkId).then((function(){$log.log("[platformService] Success, audio output device attached: "+sinkId),angular.element("#globalAudioTag")[0]&&$log.log("[platformService] sinkId for globalAudioTag is "+angular.element("#globalAudioTag")[0].sinkId),defered.resolve()})).catch((function(error){var errorMessage=error;"SecurityError"===error.name&&(errorMessage="[platformService] You need to use HTTPS for selecting audio output device: "+error),$log.error("[platformService] "+errorMessage),defered.resolve()}))}else $log.warn("[platformService] Browser does not support output device selection."),defered.resolve();return defered.promise},this.getSpeakers=function(){var deferred=$q.defer();return service.allowDevicesManagement()||deferred.resolve([]),service.getAudioOutputDevices().then((function(devices){deferred.resolve(devices&&devices.constructor===Array&&_isWebsiteHasMicrophonePermissions?devices:[])})).catch((function(error){return $log.info("[PlatformService] === SERVICES FAILURE === : "+error.message),deferred.reject(error),deferred.promise})),deferred.promise},this.isHandfreeSpeakerAvailable=function(){return service.isDeviceAvailable(service.mediaDevices,service.getHandfreeSpeakerFromSettings(),"audiooutput")};var _handfreeAvailibilityStatus=!1;this.isHeadsetSpeakerAvailable=function(){return service.isDeviceAvailable(service.mediaDevices,service.getHeadsetSpeakerFromSettings(),"audiooutput")};var _headsetAvailibilityStatus=null;this.isSpeakerphoneSpeakerAvailable=function(){return service.isDeviceAvailable(service.mediaDevices,service.getSpeakerphoneSpeakerFromSettings(),"audiooutput")};var _speakerphoneAvailibilityStatus=!1;this.isCustomSpeakerAvailable=function(){return service.isDeviceAvailable(service.mediaDevices,service.getCustomSpeakerFromSettings(),"audiooutput")};var _customAvailibilityStatus=!1;function onAudioInputChange(){updateAvailability(),service.isAskingMedia?$log.info("[PlatformService] onAudioInputChange -- already asking media -- ignore"):(service.isAskingMedia=!0,$interval(service.testGetUserMedia,2e3,1))}function updateAvailability(){var isAvailable;isAvailable=service.isHandfreeAvailable(),_handfreeAvailibilityStatus!==isAvailable&&($log.info("[PlatformService] Handfree is now "+(isAvailable?"available":"unavailable")),_handfreeAvailibilityStatus=isAvailable,audioProfile.HANDFREE.available=isAvailable,$rootScope.$broadcast("ON_AUDIO_PROFILE_CHANGED_EVENT",isAvailable),$rootScope.$broadcast("ON_INPUT_DEVICE_CHANGED_EVENT"),isAvailable||service.getCurrentSpeaker().then((function(device){device&&device.id&&updateCurrentOutputDevice(device.id)}))),function(isAvailable){if(_headsetAvailibilityStatus!==isAvailable){if($log.info("[PlatformService] Headset is now "+(isAvailable?"available":"unavailable")),_headsetAvailibilityStatus=isAvailable,audioProfile.HEADSET.available=isAvailable,isAvailable)settingsService.getSetting("audioProfile")===audioProfile.HANDFREE.value&&(settingsService.setSetting("audioProfile",audioProfile.HEADSET.value),service.getCurrentSpeaker().then((function(device){device&&device.id&&updateCurrentOutputDevice(device.id)})));else settingsService.getSetting("audioProfile")===audioProfile.HEADSET.value&&settingsService.setSetting("audioProfile",audioProfile.HANDFREE.value),service.getCurrentSpeaker().then((function(device){device&&device.id&&updateCurrentOutputDevice(device.id)}));$rootScope.$broadcast("ON_AUDIO_PROFILE_CHANGED_EVENT",isAvailable),$rootScope.$broadcast("ON_INPUT_DEVICE_CHANGED_EVENT")}}(service.isHeadsetAvailable()),function(isAvailable){_speakerphoneAvailibilityStatus!==isAvailable&&($log.info("[PlatformService] Speakerphone is now "+(isAvailable?"available":"unavailable")),_speakerphoneAvailibilityStatus=isAvailable,audioProfile.SPEAKERPHONE.available=isAvailable,$rootScope.$broadcast("ON_AUDIO_PROFILE_CHANGED_EVENT",isAvailable),$rootScope.$broadcast("ON_INPUT_DEVICE_CHANGED_EVENT"),isAvailable||service.getCurrentSpeaker().then((function(device){device&&device.id&&updateCurrentOutputDevice(device.id)})))}(service.isSpeakerphoneAvailable()),function(isAvailable){_customAvailibilityStatus!==isAvailable&&($log.info("[PlatformService] Custom is now "+(isAvailable?"available":"unavailable")),_customAvailibilityStatus=isAvailable,audioProfile.CUSTOM.available=isAvailable,$rootScope.$broadcast("ON_AUDIO_PROFILE_CHANGED_EVENT",isAvailable),$rootScope.$broadcast("ON_INPUT_DEVICE_CHANGED_EVENT"),isAvailable||service.getCurrentSpeaker().then((function(device){device&&device.id&&updateCurrentOutputDevice(device.id)})))}(service.isCustomAvailable())}function updateOutputDevice(__event,device_id){updateAvailability(),$log.info("[PlatformService] updateOutputDevice "+device_id),service.allowDevicesManagement()&&device_id&&updateCurrentOutputDevice(device_id)}var currentUpdatingDeviceId="";function updateCurrentOutputDevice(device_id){$log.info("[PlatformService] updateCurrentOutputDevice "+device_id),angular.element("#globalAudioTag")[0]&&angular.element("#globalAudioTag")[0].sinkId!==device_id&&currentUpdatingDeviceId!==device_id?(currentUpdatingDeviceId=device_id,$log.info("[PlatformService] updateCurrentOutputDevice current ID "+angular.element("#globalAudioTag")[0].sinkId+" new id "+device_id),service.setSpeakerForElement(angular.element("#globalAudioTag")[0],"default").then((function(){service.setSpeakerForElement(angular.element("#globalAudioTag")[0],device_id),currentUpdatingDeviceId=""})).catch((function(){currentUpdatingDeviceId=""}))):$log.info("[PlatformService] updateCurrentOutputDevice -- ignored ")}var microphones=[],speakers=[],allDevices=[],headsetDevices=[],speakerphoneDevices=[],firstDeviceUpdateHeadset=!0,handfreeSupportedDevices=["realtek","soundmax","high definition audio","nomachine"];service.arrayContains=function(array,textSearched){return array.some((function(element){return textSearched.indexOf(element)>-1}))},service.getDeviceType=function(deviceLabel){return deviceLabel=deviceLabel.toLowerCase(),service.arrayContains(handfreeSupportedDevices,deviceLabel)?audioProfile.HANDFREE:audioProfile.HEADSET},this.normalizeAnyLabel=function(anyDevice){return anyDevice?("default"===anyDevice.id||"communications"===anyDevice.id||anyDevice.normalizedLabel||(service.isWin?-1!==anyDevice.label.indexOf("Realtek Audio")||-1!==anyDevice.label.indexOf("Realtek(R) Audio")?anyDevice.normalizedLabel=anyDevice.label:anyDevice.normalizedLabel=anyDevice.label.substring(anyDevice.label.indexOf("(")+1,anyDevice.label.indexOf(")")):anyDevice.normalizedLabel=anyDevice.label),anyDevice):null};var updateHeadsetDevices=function(){var deferred=$q.defer();return service.getMicrophones().then((function(devices){return microphones=devices,service.getSpeakers()})).then((function(devices){speakers=devices;var _headsetDevices=[];angular.forEach(microphones,(function(microphone){"default"!==microphone.id&&"communications"!==microphone.id&&(microphone=service.normalizeAnyLabel(microphone),_headsetDevices.some((function(device){return device.microphone.normalizedLabel===microphone.normalizedLabel}))||angular.forEach(speakers,(function(speaker){if(speaker=service.normalizeAnyLabel(speaker),microphone.normalizedLabel===speaker.normalizedLabel&&service.getDeviceType(microphone.normalizedLabel)===audioProfile.HEADSET){var _device={label:microphone.normalizedLabel,microphone:microphone,speaker:speaker};_headsetDevices.push(_device),firstDeviceUpdateHeadset&&allDevices.push(_device)}})))}));var headSetName=settingsService.getSetting("headsetDeviceName");headSetName&&"null"!==headSetName||!_headsetDevices.length||(headSetName=_headsetDevices[0].label,settingsService.setSetting("headsetDeviceName",_headsetDevices[0].label),settingsService.setSetting("headsetMicrophone",_headsetDevices[0].microphone.id),settingsService.setSetting("headsetSpeaker",_headsetDevices[0].speaker.id));var ringingSpeakerName=settingsService.getSetting("ringingSpeakerName");if((!ringingSpeakerName||"null"===ringingSpeakerName)&&speakers.length)for(var i=0;i<speakers.length;i++)if("default"!==speakers[i].id&&"communications"!==speakers[i].id){settingsService.setSetting("ringingSpeakerName",speakers[i].normalizedLabel),settingsService.setSetting("ringingSpeaker",speakers[i].id);break}var newHeadsetDevices=[];firstDeviceUpdateHeadset||(angular.forEach(_headsetDevices,(function(newDevice){headsetDevices.some((function(oldDevice){return oldDevice.label===newDevice.label}))||(newHeadsetDevices.push(newDevice),allDevices.push(newDevice))})),newHeadsetDevices.length>0&&($log.info("[PlatformService] hotplugged headset(s): "+(newHeadsetDevices.length>1?newHeadsetDevices.reduce((function(deviceA,deviceB){return{label:deviceA.Label+", "+deviceB.Label}})).label:newHeadsetDevices[0].label)),$rootScope.$broadcast("ON_AUDIO_HOTPLUG_DEVICES_CHANGED_EVENT",{devices:newHeadsetDevices,action:"add"})));var disconnectedDevices=[];!firstDeviceUpdateHeadset&&headsetDevices.length>_headsetDevices.length&&(angular.forEach(headsetDevices,(function(newDevice){if(!_headsetDevices.some((function(oldDevice){return oldDevice.label===newDevice.label}))){disconnectedDevices.push(newDevice);var index=allDevices.map((function(dev){return dev.label})).indexOf(newDevice.label);allDevices.splice(index,1)}})),disconnectedDevices.length>0&&($log.info("[PlatformService] unplugged headset(s): "+(disconnectedDevices.length>1?disconnectedDevices.reduce((function(deviceA,deviceB){return{label:deviceA.Label+", "+deviceB.Label}})).label:disconnectedDevices[0].label)),$rootScope.$broadcast("ON_AUDIO_HOTPLUG_DEVICES_CHANGED_EVENT",{devices:disconnectedDevices,action:"remove"}))),firstDeviceUpdateHeadset=!1,headsetDevices=_headsetDevices,deferred.resolve(_headsetDevices)})),deferred.promise};this.getHeadsetDevices=function(){return headsetDevices};var watcher;this.getSpeakerphoneDevices=function(){return speakerphoneDevices},this.getAllDevices=function(){return allDevices},this.getHandFreeDevice=function(){var deferred=$q.defer();return service.getHandfreeMicrophone().then((function(microphone){var curMic=microphone;service.getHandfreeSpeaker().then((function(speaker){var curSpeak=speaker;(!service.handFreeDevice||service.handFreeDevice.microphone&&service.handFreeDevice.microphone.id!==curMic.id||service.handFreeDevice.speaker&&service.handFreeDevice.speaker.id!==curSpeak.id)&&(service.handFreeDevice={label:"",microphone:curMic,speaker:curSpeak,profile:audioProfile.HANDFREE}),deferred.resolve(service.handFreeDevice)}))})),deferred.promise},this.getCustomDevice=function(){var deferred=$q.defer();return service.getCustomMicrophone().then((function(microphone){var curMic=microphone;service.getCustomSpeaker().then((function(speaker){var curSpeak=speaker;(!service.customDevice||service.customDevice.microphone&&service.customDevice.microphone.id!==curMic.id||service.customDevice.speaker&&service.customDevice.speaker.id!==curSpeak.id)&&(service.customDevice={label:"",microphone:curMic,speaker:curSpeak,profile:audioProfile.CUSTOM}),deferred.resolve(service.customDevice)}))})),deferred.promise},this.getAvailableDevices=function(){var deferred=$q.defer(),res=[];return service.getHandFreeDevice().then((function(device){res.push(device),headsetDevices.forEach((function(elem){elem.profile=audioProfile.HEADSET,res.push(elem)})),speakerphoneDevices.forEach((function(elem){elem.profile=audioProfile.SPEAKERPHONE,res.push(elem)})),service.getCustomDevice().then((function(customDevice){res.push(customDevice),deferred.resolve(res)}))})),deferred.promise},this.getStoredDeviceList=function(){return settingsService.getSetting("deviceList")},this.saveDeviceList=function(devices){for(var deviceLabelList=[],i=0;i<devices.length;i++)deviceLabelList[i]=devices[i].label;settingsService.setSetting("deviceList",angular.toJson(deviceLabelList))},this.getCurrentCamera=function(){var deferred=$q.defer();return service.getCameras().then((function(devices){deferred.resolve(service.getDeviceWithId(devices,settingsService.getSetting("camera")))})),deferred.promise},this.getCameraForSDK=function(){return{id:settingsService.getSetting("camera")}},this.getCameras=function(){var deferred=$q.defer();return this.allowDevicesManagement()||deferred.resolve([]),service.getVideoInputDevices().then((function(devices){deferred.resolve(devices&&devices.constructor===Array&&_isWebsiteHasWebcamPermissions?devices:[])})).catch((function(error){return $log.info("[PlatformService] === SERVICES FAILURE === : "+error.message),deferred.reject(error),deferred.promise})),deferred.promise},this.isDeviceAvailable=function(devices,id,kind){var current_device=devices.find((function(device){return device.kind===kind&&device.deviceId===id}));return angular.isDefined(current_device)},this.getDeviceWithId=function(devices,id,isSpeaker){if(devices.constructor!==Array)return null;var current_device=null;"default"!==id&&"communications"!==id||(isSpeaker?(default_device=service.mediaDevices.find((function(device){return device.deviceId===id&&"audioinput"===device.kind})))&&(current_device=devices.find((function(device){return"default"!==device.id&&"communications"!==device.id&&default_device.groupId===device.groupId}))):(default_device=devices.find((function(device){return device.id===id})))&&(current_device=devices.find((function(device){return"default"!==device.id&&"communications"!==device.id&&default_device.groupId===device.groupId}))));if(current_device)return current_device;if(!(current_device=devices.find((function(device){return device.id===id})))){var default_device;if(isSpeaker)(default_device=service.mediaDevices.find((function(device){return"default"===device.deviceId&&"audioinput"===device.kind})))&&(current_device=devices.find((function(device){return"default"!==device.id&&"communications"!==device.id&&default_device.groupId===device.groupId})));current_device||(default_device=devices.find((function(device){return"default"===device.id})))&&(current_device=devices.find((function(device){return"default"!==device.id&&"communications"!==device.id&&default_device.groupId===device.groupId})))}return current_device||(devices.length>0?devices[0]:null)},this.startWatcher=function(){if(service.allowDevicesManagement()){if(angular.isDefined(watcher))return;watcher=$interval(service.devicesWatcher,1e3)}},this.stopWatcher=function(){angular.isDefined(watcher)&&($interval.cancel(watcher),watcher=void 0)},this.capitalizeFirstLetter=function(string){return string.charAt(0).toUpperCase()+string.slice(1)},this.fixDeviceLabels=function(){angular.forEach(DetectRTC.MediaDevices,(function(mediaDevice){mediaDevice&&("default"!==mediaDevice.id||mediaDevice.label&&"Default"!==mediaDevice.label?mediaDevice.id.length<64&&"Please invoke getUserMedia once."===mediaDevice.label&&(mediaDevice.label=service.capitalizeFirstLetter(mediaDevice.id)):mediaDevice.label=service.findAndUpdateDefaultDeviceLabel(mediaDevice.kind,mediaDevice.groupId),$log.info("[PlatformService] fixDeviceLabels || update device "+mediaDevice.id+" with kind "+mediaDevice.kind+" with label "+mediaDevice.label))}))},this.findAndUpdateDefaultDeviceLabel=function(kind,groupId){for(var label="audioinput"===kind?$filter("translate")("yourComputerMicrophoneDevice"):$filter("translate")("yourComputerSpeakerDevice"),i=0;i<DetectRTC.MediaDevices.length;i++)if("default"!==DetectRTC.MediaDevices[i].id&&DetectRTC.MediaDevices[i].kind===kind&&DetectRTC.MediaDevices[i].groupId===groupId){label=label+" - "+DetectRTC.MediaDevices[i].label;break}return label},this.updatePermissions=function(){var result=!1;return angular.forEach(DetectRTC.MediaDevices,(function(mediaDevice){mediaDevice&&mediaDevice.id.length>=64&&("Please invoke getUserMedia once."===mediaDevice.label?result=!0:("videoinput"!==mediaDevice.kind||_isWebsiteHasWebcamPermissions||(_isWebsiteHasWebcamPermissions=!0),"audioinput"!==mediaDevice.kind||_isWebsiteHasMicrophonePermissions||(_isWebsiteHasMicrophonePermissions=!0)))})),result},this.isGetUserMediaRequested=function(){return(!_isWebsiteHasWebcamPermissions||!_isWebsiteHasMicrophonePermissions)&&service.updatePermissions(DetectRTC.MediaDevices)},this.audioMediaDeviceUpdated=function(){service.fixDeviceLabels(),$rootScope.$broadcast("ON_USER_AUDIO_MEDIA_CHANGED_EVENT")},this.videoMediaDeviceUpdated=function(){service.fixDeviceLabels(),$rootScope.$broadcast("ON_USER_VIDEO_MEDIA_CHANGED_EVENT")};var removeDuplicates=function(devices){var result=[];return angular.forEach(devices,(function(device){result.some((function(item){return item.id===device.id}))||result.push(device)})),result};this.getAudioInputDevices=function(){return $q.when(removeDuplicates(DetectRTC.audioInputDevices))},this.getAudioOutputDevices=function(){var deferred=$q.defer();return deferred.resolve(removeDuplicates(DetectRTC.audioOutputDevices)),deferred.promise},this.getVideoInputDevices=function(){var deferred=$q.defer();return deferred.resolve(removeDuplicates(DetectRTC.videoInputDevices)),deferred.promise}}])},function(module,exports){angular.module("rainbow").service("gaService",[function(){"use strict";var analytics_ICEFailed={category:"webrtc",action:"CallsSuccessRate",label:"error_failed"},analytics_ICESuccess={category:"webrtc",action:"CallsSuccessRate",label:"success"},analytics_ICENoSTUNCandidate={category:"webrtc",action:"CallsSuccessRate",label:"error_no_stun_candidate"},analytics_ICEUsed={category:"webrtc",action:"ICEDistribution"},analytics_ICETopology={category:"webrtc",action:"ICETopology"},analytics_NegotiationTime={category:"webrtc",action:"ICENegotiation",label:"DurationMs"},analytics_GetUserMedia={category:"webrtc",action:"GetUserMediaRate",label:"success"},analytics_GetUserMediaErrorNoTrack={category:"webrtc",action:"GetUserMediaRate",label:"error_no_Track"},analytics_GetUserMediaError={category:"webrtc",action:"GetUserMediaRate",label:"error"},analytics_CodecsUsed={category:"webrtc",action:"CodecsDistribution"},analytics_NbSuccessCall={category:"webrtc",action:"CallsDistribution"},analytics_CallsDuration={category:"webrtc",action:"CallsDurationRange"},analytics_DragAndDrop={category:"ux",action:"dragAndDrop"},analytics_InviteFromProvider={category:"invitations",action:"inviteFromProvider"},_startNegotiationTime=null,_endNegotiationTime=null,_pendingComputation=!1,_lastICESuccessTracked=null,_lastICEFailedTracked=null,_ga=null;this.provideGA=function(ga){_ga=ga},this.hasGA=function(){return null!==_ga},this.trackICEUsed=function(local,remote){if(_ga){var localICEUsed="",remoteICEUsed="";switch(local){case"local":localICEUsed="host";break;case"peerreflexive":case"prflx":case"serverreflexive":localICEUsed="stun";break;case"relayed":localICEUsed="relay";break;default:localICEUsed=local}switch(remote){case"local":remoteICEUsed="host";break;case"peerreflexive":case"prflx":case"serverreflexive":remoteICEUsed="stun";break;case"relayed":remoteICEUsed="relay";break;default:remoteICEUsed=remote}_ga.send("event",analytics_ICEUsed.category,analytics_ICEUsed.action,localICEUsed+"|"+remoteICEUsed)}},this.trackICEFailed=function(sid){_ga&&sid&&_lastICEFailedTracked!==sid&&(_ga.send("event",analytics_ICEFailed.category,analytics_ICEFailed.action,analytics_ICEFailed.label),_lastICEFailedTracked=sid)},this.trackICESuccess=function(sid){_ga&&sid&&_lastICESuccessTracked!==sid&&(_ga.send("event",analytics_ICESuccess.category,analytics_ICESuccess.action,analytics_ICESuccess.label),_lastICESuccessTracked=sid)},this.trackICENoSTUNCandidate=function(){_ga&&_ga.send("event",analytics_ICENoSTUNCandidate.category,analytics_ICENoSTUNCandidate.action,analytics_ICENoSTUNCandidate.label)},this.trackICETopology=function(topology){_ga&&_ga.send("event",analytics_ICETopology.category,analytics_ICETopology.action,topology)},this.trackGetUserMediaSuccess=function(){_ga&&_ga.send("event",analytics_GetUserMedia.category,analytics_GetUserMedia.action,analytics_GetUserMedia.label)},this.trackGetUserMediaErrorNoTrack=function(){_ga&&_ga.send("event",analytics_GetUserMediaErrorNoTrack.category,analytics_GetUserMediaErrorNoTrack.action,analytics_GetUserMediaErrorNoTrack.label)},this.trackGetUserMediaError=function(){_ga&&_ga.send("event",analytics_GetUserMediaError.category,analytics_GetUserMediaError.action,analytics_GetUserMediaError.label)},this.trackCodecsUsed=function(audioCodec,videoCodec){_ga&&_ga.send("event",analytics_CodecsUsed.category,analytics_CodecsUsed.action,audioCodec+"|"+videoCodec)},this.negotiationTime=function(){return _endNegotiationTime&&_startNegotiationTime?_endNegotiationTime<_startNegotiationTime?null:_endNegotiationTime-_startNegotiationTime:null},this.startNegotiationTime=function(time){_startNegotiationTime=time||(new Date).getTime(),_pendingComputation=!0},this.endNegotiationTime=function(time){_pendingComputation&&(_endNegotiationTime=time||(new Date).getTime(),_pendingComputation=!1)},this.trackNegotiationTime=function(){if(_ga){var duration=this.negotiationTime();duration&&_ga.send("event",analytics_NegotiationTime.category,analytics_NegotiationTime.action,analytics_NegotiationTime.label,duration),_endNegotiationTime=null,_startNegotiationTime=null}},this.resetProvider=function(){_ga=null},this.trackCallSuccessNumber=function(type){type&&type.length>0&&_ga&&_ga.send("event",analytics_NbSuccessCall.category,analytics_NbSuccessCall.action,type)},this.trackCallDuration=function(durationMs){if(_ga&&angular.isDefined(durationMs)&&durationMs>=0){var durationCategoryLabel="",durationInSeconds=Math.round(durationMs/1e3);durationCategoryLabel=durationInSeconds<15?"very_short_less_15s":durationInSeconds<30?"very_short_less_30s":durationInSeconds<60?"short_less_60s":durationInSeconds<120?"short_less_120s":durationInSeconds<300?"short_less_300s":durationInSeconds<600?"normal_less_600s":durationInSeconds<1200?"normal_less_1200s":durationInSeconds<1800?"normal_less_1800s":durationInSeconds<3600?"long_less_3600s":"long_more_3600s",_ga.send("event",analytics_CallsDuration.category,analytics_CallsDuration.action,durationCategoryLabel)}},this.trackDragAndDrop=function(type){_ga&&_ga.send("event",analytics_DragAndDrop.category,analytics_DragAndDrop.action,type)},this.inviteContactsFromProvider=function(provider,number){_ga&&_ga.send("event",analytics_InviteFromProvider.category,analytics_InviteFromProvider.action,provider,number)}}])},function(module,exports){angular.module("rainbow").service("countryService",["$http","$q","$log","$translate","authService",function($http,$q,$log,$translate,authService){"use strict";var service=this;service.datacenters=[{name:"France","alpha-3":"FRA","alpha-2":"FR",region:"Europe"},{name:"Germany","alpha-3":"DEU","alpha-2":"DE",region:"Europe"},{name:"Canada","alpha-3":"CAN","alpha-2":"CA",region:"America"},{name:"Singapore","alpha-3":"SGP","alpha-2":"SG",region:"Asia-Pacific"}],service.countries=[{name:"Australia","alpha-3":"AUS","country-code":"036","alpha-2":"AU"},{name:"Austria","alpha-3":"AUT","country-code":"040","alpha-2":"AT"},{name:"Belgium","alpha-3":"BEL","country-code":"056","alpha-2":"BE"},{name:"Brazil","alpha-3":"BRA","country-code":"076","alpha-2":"BR"},{name:"Canada","alpha-3":"CAN","country-code":"124","alpha-2":"CA"},{name:"China","alpha-3":"CHN","country-code":"156","alpha-2":"CN"},{name:"Czech Republic","alpha-3":"CZE","country-code":"203","alpha-2":"CZ"},{name:"Denmark","alpha-3":"DNK","country-code":"208","alpha-2":"DK"},{name:"Finland","alpha-3":"FIN","country-code":"246","alpha-2":"FI"},{name:"France","alpha-3":"FRA","country-code":"250",default:!0,"alpha-2":"FR"},{name:"Germany","alpha-3":"DEU","country-code":"276","alpha-2":"DE"},{name:"Hong Kong","alpha-3":"HKG","country-code":"344","alpha-2":"HK"},{name:"Ireland","alpha-3":"IRL","country-code":"372","alpha-2":"IE"},{name:"Israel","alpha-3":"ISR","country-code":"376","alpha-2":"IL"},{name:"Italy","alpha-3":"ITA","country-code":"380","alpha-2":"IT"},{name:"Mexico","alpha-3":"MEX","country-code":"484","alpha-2":"MX"},{name:"Netherlands","alpha-3":"NLD","country-code":"528","alpha-2":"NL"},{name:"Norway","alpha-3":"NOR","country-code":"578","alpha-2":"NO"},{name:"Poland","alpha-3":"POL","country-code":"616","alpha-2":"PL"},{name:"Portugal","alpha-3":"PRT","country-code":"620","alpha-2":"PT"},{name:"Russia","alpha-3":"RUS","country-code":"643","alpha-2":"RU"},{name:"South Africa","alpha-3":"ZAF","country-code":"710","alpha-2":"ZA"},{name:"South Korea","alpha-3":"KOR","country-code":"410","alpha-2":"KR"},{name:"Spain","alpha-3":"ESP","country-code":"724","alpha-2":"ES"},{name:"Sweden","alpha-3":"SWE","country-code":"752","alpha-2":"SE"},{name:"Switzerland","alpha-3":"CHE","country-code":"756","alpha-2":"CH"},{name:"Taiwan","alpha-3":"TWN","country-code":"158","alpha-2":"TW"},{name:"Turkey","alpha-3":"TUR","country-code":"792","alpha-2":"TR"},{name:"United Kingdom","alpha-3":"GBR","country-code":"826","alpha-2":"GB"},{name:"United States of America","alpha-3":"USA","country-code":"840","alpha-2":"US"},{name:"Afghanistan","alpha-3":"AFG","country-code":"004","alpha-2":"AF"},{name:"Albania","alpha-3":"ALB","country-code":"008","alpha-2":"AL"},{name:"Algeria","alpha-3":"DZA","country-code":"012","alpha-2":"DZ"},{name:"Andorra","alpha-3":"AND","country-code":"020","alpha-2":"AD"},{name:"Angola","alpha-3":"AGO","country-code":"024","alpha-2":"AO"},{name:"Anguilla","alpha-3":"AIA","country-code":"660","alpha-2":"AI"},{name:"Antigua and Barbuda","alpha-3":"ATG","country-code":"028","alpha-2":"AG"},{name:"Argentina","alpha-3":"ARG","country-code":"032","alpha-2":"AR"},{name:"Armenia","alpha-3":"ARM","country-code":"051","alpha-2":"AM"},{name:"Aruba","alpha-3":"ABW","country-code":"533","alpha-2":"AW"},{name:"Azerbaijan","alpha-3":"AZE","country-code":"031","alpha-2":"AZ"},{name:"Bahamas","alpha-3":"BHS","country-code":"044","alpha-2":"BS"},{name:"Bahrain","alpha-3":"BHR","country-code":"048","alpha-2":"BH"},{name:"Bangladesh","alpha-3":"BGD","country-code":"050","alpha-2":"BD"},{name:"Barbados","alpha-3":"BRB","country-code":"052","alpha-2":"BB"},{name:"Belarus","alpha-3":"BLR","country-code":"112","alpha-2":"BY"},{name:"Belize","alpha-3":"BLZ","country-code":"084","alpha-2":"BZ"},{name:"Benin","alpha-3":"BEN","country-code":"204","alpha-2":"BJ"},{name:"Bermuda","alpha-3":"BMU","country-code":"060","alpha-2":"BM"},{name:"Bhutan","alpha-3":"BTN","country-code":"064","alpha-2":"BT"},{name:"Bolivia","alpha-3":"BOL","country-code":"068","alpha-2":"BO"},{name:"Bosnia and Herzegovina","alpha-3":"BIH","country-code":"070","alpha-2":"BA"},{name:"Botswana","alpha-3":"BWA","country-code":"072","alpha-2":"BW"},{name:"British Virgin Islands","alpha-3":"VGB","country-code":"092","alpha-2":"VG"},{name:"Brunei Darussalam","alpha-3":"BRN","country-code":"096","alpha-2":"BN"},{name:"Bulgaria","alpha-3":"BGR","country-code":"100","alpha-2":"BG"},{name:"Burkina Faso","alpha-3":"BFA","country-code":"854","alpha-2":"BF"},{name:"Burundi","alpha-3":"BDI","country-code":"108","alpha-2":"BI"},{name:"Cambodia","alpha-3":"KHM","country-code":"116","alpha-2":"KH"},{name:"Cameroon","alpha-3":"CMR","country-code":"120","alpha-2":"CM"},{name:"Cape Verde","alpha-3":"CPV","country-code":"132","alpha-2":"CV"},{name:"Cayman Islands","alpha-3":"CYM","country-code":"136","alpha-2":"KY"},{name:"Central African Republic","alpha-3":"CAF","country-code":"140","alpha-2":"CF"},{name:"Chad","alpha-3":"TCD","country-code":"148","alpha-2":"TD"},{name:"Chile","alpha-3":"CHL","country-code":"152","alpha-2":"CL"},{name:"Colombia","alpha-3":"COL","country-code":"170","alpha-2":"CO"},{name:"Comoros","alpha-3":"COM","country-code":"174","alpha-2":"KM"},{name:"Congo","alpha-3":"COG","country-code":"178","alpha-2":"CG"},{name:"Congo, Democratic Republic of","alpha-3":"COD","country-code":"180","alpha-2":"CD"},{name:"Costa Rica","alpha-3":"CRI","country-code":"188","alpha-2":"CR"},{name:"Ivory Coast","alpha-3":"CIV","country-code":"384","alpha-2":"CI"},{name:"Croatia","alpha-3":"HRV","country-code":"191","alpha-2":"HR"},{name:"Cyprus","alpha-3":"CYP","country-code":"196","alpha-2":"CY"},{name:"Djibouti","alpha-3":"DJI","country-code":"262","alpha-2":"DJ"},{name:"Dominica","alpha-3":"DMA","country-code":"212","alpha-2":"DM"},{name:"Dominican Republic","alpha-3":"DOM","country-code":"214","alpha-2":"DO"},{name:"Ecuador","alpha-3":"ECU","country-code":"218","alpha-2":"EC"},{name:"El Salvador","alpha-3":"SLV","country-code":"222","alpha-2":"SV"},{name:"Egypt","alpha-3":"EGY","country-code":"818","alpha-2":"EG"},{name:"Eritrea","alpha-3":"ERI","country-code":"232","alpha-2":"ER"},{name:"Estonia","alpha-3":"EST","country-code":"233","alpha-2":"EE"},{name:"Ethiopia","alpha-3":"ETH","country-code":"231","alpha-2":"ET"},{name:"Fiji","alpha-3":"FJI","country-code":"242","alpha-2":"FJ"},{name:"French Guiana","alpha-3":"GUF","country-code":"254","alpha-2":"GF"},{name:"French Polynesia","alpha-3":"PYF","country-code":"258","alpha-2":"PF"},{name:"Gabon","alpha-3":"GAB","country-code":"266","alpha-2":"GA"},{name:"Gambia","alpha-3":"GMB","country-code":"270","alpha-2":"GM"},{name:"Georgia","alpha-3":"GEO","country-code":"268","alpha-2":"GE"},{name:"Ghana","alpha-3":"GHA","country-code":"288","alpha-2":"GH"},{name:"Greece","alpha-3":"GRC","country-code":"300","alpha-2":"GR"},{name:"Grenada","alpha-3":"GRD","country-code":"308","alpha-2":"GD"},{name:"Guadeloupe","alpha-3":"GLP","country-code":"312","alpha-2":"GP"},{name:"Guatemala","alpha-3":"GTM","country-code":"320","alpha-2":"GT"},{name:"Guinea","alpha-3":"GIN","country-code":"324","alpha-2":"GN"},{name:"Guyana","alpha-3":"GUY","country-code":"328","alpha-2":"GY"},{name:"Haiti","alpha-3":"HTI","country-code":"332","alpha-2":"HT"},{name:"Honduras","alpha-3":"HND","country-code":"340","alpha-2":"HN"},{name:"Hungary","alpha-3":"HUN","country-code":"348","alpha-2":"HU"},{name:"Iceland","alpha-3":"ISL","country-code":"352","alpha-2":"IS"},{name:"India","alpha-3":"IND","country-code":"356","alpha-2":"IN"},{name:"Indonesia","alpha-3":"IDN","country-code":"360","alpha-2":"ID"},{name:"Iraq","alpha-3":"IRQ","country-code":"368","alpha-2":"IQ"},{name:"Jamaica","alpha-3":"JAM","country-code":"388","alpha-2":"JM"},{name:"Japan","alpha-3":"JPN","country-code":"392","alpha-2":"JP"},{name:"Jordan","alpha-3":"JOR","country-code":"400","alpha-2":"JO"},{name:"Kazakhstan","alpha-3":"KAZ","country-code":"398","alpha-2":"KZ"},{name:"Kenya","alpha-3":"KEN","country-code":"404","alpha-2":"KE"},{name:"Kuwait","alpha-3":"KWT","country-code":"414","alpha-2":"KW"},{name:"Kyrgyzstan","alpha-3":"KGZ","country-code":"417","alpha-2":"KG"},{name:"Latvia","alpha-3":"LVA","country-code":"428","alpha-2":"LV"},{name:"Lebanon","alpha-3":"LBN","country-code":"422","alpha-2":"LB"},{name:"Lesotho","alpha-3":"LSO","country-code":"426","alpha-2":"LS"},{name:"Liberia","alpha-3":"LBR","country-code":"430","alpha-2":"LR"},{name:"Libya","alpha-3":"LBY","country-code":"434","alpha-2":"LY"},{name:"Liechtenstein","alpha-3":"LIE","country-code":"438","alpha-2":"LI"},{name:"Lithuania","alpha-3":"LTU","country-code":"440","alpha-2":"LT"},{name:"Luxembourg","alpha-3":"LUX","country-code":"442","alpha-2":"LU"},{name:"Macao","alpha-3":"MAC","country-code":"446","alpha-2":"MO"},{name:"Macedonia","alpha-3":"MKD","country-code":"807","alpha-2":"MK"},{name:"Madagascar","alpha-3":"MDG","country-code":"450","alpha-2":"MG"},{name:"Malawi","alpha-3":"MWI","country-code":"454","alpha-2":"MW"},{name:"Malaysia","alpha-3":"MYS","country-code":"458","alpha-2":"MY"},{name:"Maldives","alpha-3":"MDV","country-code":"462","alpha-2":"MV"},{name:"Mali","alpha-3":"MLI","country-code":"466","alpha-2":"ML"},{name:"Malta","alpha-3":"MLT","country-code":"470","alpha-2":"MT"},{name:"Mauritius","alpha-3":"MUS","country-code":"480","alpha-2":"MU"},{name:"Mayotte","alpha-3":"MYT","country-code":"175","alpha-2":"YT"},{name:"Moldova","alpha-3":"MDA","country-code":"498","alpha-2":"MD"},{name:"Monaco","alpha-3":"MCO","country-code":"492","alpha-2":"MC"},{name:"Mongolia","alpha-3":"MNG","country-code":"496","alpha-2":"MN"},{name:"Montenegro","alpha-3":"MNE","country-code":"499","alpha-2":"ME"},{name:"Montserrat","alpha-3":"MSR","country-code":"500","alpha-2":"MS"},{name:"Morocco","alpha-3":"MAR","country-code":"504","alpha-2":"MA"},{name:"Mozambique","alpha-3":"MOZ","country-code":"508","alpha-2":"MZ"},{name:"Myanmar","alpha-3":"MMR","country-code":"104","alpha-2":"MM"},{name:"Namibia","alpha-3":"NAM","country-code":"516","alpha-2":"NA"},{name:"Nepal","alpha-3":"NPL","country-code":"524","alpha-2":"NP"},{name:"New Zealand","alpha-3":"NZL","country-code":"554","alpha-2":"NZ"},{name:"Nicaragua","alpha-3":"NIC","country-code":"558","alpha-2":"NI"},{name:"Niger","alpha-3":"NER","country-code":"562","alpha-2":"NE"},{name:"Nigeria","alpha-3":"NGA","country-code":"566","alpha-2":"NG"},{name:"Oman","alpha-3":"OMN","country-code":"512","alpha-2":"OM"},{name:"Pakistan","alpha-3":"PAK","country-code":"586","alpha-2":"PK"},{name:"Palestine","alpha-3":"PSE","country-code":"275","alpha-2":"PS"},{name:"Panama","alpha-3":"PAN","country-code":"591","alpha-2":"PA"},{name:"Paraguay","alpha-3":"PRY","country-code":"600","alpha-2":"PY"},{name:"Peru","alpha-3":"PER","country-code":"604","alpha-2":"PE"},{name:"Philippines","alpha-3":"PHL","country-code":"608","alpha-2":"PH"},{name:"Puerto Rico","alpha-3":"PRI","country-code":"630","alpha-2":"PR"},{name:"Qatar","alpha-3":"QAT","country-code":"634","alpha-2":"QA"},{name:"Romania","alpha-3":"ROU","country-code":"642","alpha-2":"RO"},{name:"Rwanda","alpha-3":"RWA","country-code":"646","alpha-2":"RW"},{name:"Saint Kitts and Nevis","alpha-3":"KNA","country-code":"659","alpha-2":"KN"},{name:"Saint Lucia","alpha-3":"LCA","country-code":"662","alpha-2":"LC"},{name:"Saint Vincent and the Grenadines","alpha-3":"VCT","country-code":"670","alpha-2":"VC"},{name:"Saudi Arabia","alpha-3":"SAU","country-code":"682","alpha-2":"SA"},{name:"Senegal","alpha-3":"SEN","country-code":"686","alpha-2":"SN"},{name:"Serbia","alpha-3":"SRB","country-code":"688","alpha-2":"RS"},{name:"Sierra Leone","alpha-3":"SLE","country-code":"694","alpha-2":"SL"},{name:"Singapore","alpha-3":"SGP","country-code":"702","alpha-2":"SG"},{name:"Slovakia","alpha-3":"SVK","country-code":"703","alpha-2":"SK"},{name:"Slovenia","alpha-3":"SVN","country-code":"705","alpha-2":"SI"},{name:"South Sudan","alpha-3":"SSD","country-code":"728","alpha-2":"SS"},{name:"Sri Lanka","alpha-3":"LKA","country-code":"144","alpha-2":"LK"},{name:"Sudan","alpha-3":"SDN","country-code":"729","alpha-2":"SD"},{name:"Swaziland","alpha-3":"SWZ","country-code":"748","alpha-2":"SZ"},{name:"Tajikistan","alpha-3":"TJK","country-code":"762","alpha-2":"TJ"},{name:"Tanzania","alpha-3":"TZA","country-code":"834","alpha-2":"TZ"},{name:"Thailand","alpha-3":"THA","country-code":"764","alpha-2":"TH"},{name:"Togo","alpha-3":"TGO","country-code":"768","alpha-2":"TG"},{name:"Trinidad and Tobago","alpha-3":"TTO","country-code":"780","alpha-2":"TT"},{name:"Tunisia","alpha-3":"TUN","country-code":"788","alpha-2":"TN"},{name:"Turkmenistan","alpha-3":"TKM","country-code":"795","alpha-2":"TM"},{name:"Turks and Caicos Islands","alpha-3":"TCA","country-code":"796","alpha-2":"TC"},{name:"Uganda","alpha-3":"UGA","country-code":"800","alpha-2":"UG"},{name:"Ukraine","alpha-3":"UKR","country-code":"804","alpha-2":"UA"},{name:"United Arab Emirates","alpha-3":"ARE","country-code":"784","alpha-2":"AE"},{name:"Virgin Islands, US","alpha-3":"VIR","country-code":"850","alpha-2":"VI"},{name:"Uruguay","alpha-3":"URY","country-code":"858","alpha-2":"UY"},{name:"Uzbekistan","alpha-3":"UZB","country-code":"860","alpha-2":"UZ"},{name:"Venezuela","alpha-3":"VEN","country-code":"862","alpha-2":"VE"},{name:"Vietnam","alpha-3":"VNM","country-code":"704","alpha-2":"VN"},{name:"Zambia","alpha-3":"ZMB","country-code":"894","alpha-2":"ZM"},{name:"Zimbabwe","alpha-3":"ZWE","country-code":"716","alpha-2":"ZW"}],service.statesOfCanada={AB:"Alberta",BC:"British Columbia",MB:"Manitoba",NB:"New Brunswick",NL:"Newfoundland and Labrador",NS:"Nova Scotia",NT:"Northwest Territories",NU:"Nunavut",ON:"Ontario",PE:"Prince Edward Island",QC:"Quebec",SK:"Saskatchewan",YT:"Yukon"},service.statesOfAmerica={AL:"Alabama",AK:"Alaska",AZ:"Arizona",AR:"Arkansas",AA:"Armed Forces America",AE:"Armed Forces",AP:"Armed Forces Pacific",CA:"California",CO:"Colorado",CT:"Connecticut",DE:"Delaware",FL:"Florida",GA:"Georgia",GU:"Guam",HI:"Hawaii",ID:"Idaho",IL:"Illinois",IN:"Indiana",IA:"Iowa",KS:"Kansas",KY:"Kentucky",LA:"Louisiana",ME:"Maine",MD:"Maryland",MA:"Massachusetts",MI:"Michigan",MN:"Minnesota",MS:"Mississippi",MO:"Missouri",MT:"Montana",NE:"Nebraska",NV:"Nevada",NH:"New Hampshire",NJ:"New Jersey",NM:"New Mexico",NY:"New York",NC:"North Carolina",ND:"North Dakota",OH:"Ohio",OK:"Oklahoma",OR:"Oregon",PA:"Pennsylvania",PR:"Puerto Rico",RI:"Rhode Island",SC:"South Carolina",SD:"South Dakota",TN:"Tennessee",TX:"Texas",UT:"Utah",VT:"Vermont",VI:"Virgin Islands",VA:"Virginia",WA:"Washington",DC:"Washington DC",WV:"West Virginia",WI:"Wisconsin",WY:"Wyoming"},service.countryToLanguageMapping={ad:"ca",ae:"ar",af:"fa,ps",ag:"en",ai:"en",al:"sq",am:"hy",an:"nl,en",ao:"pt",ar:"es",as:"en,sm",at:"de",au:"en",aw:"nl,pap",ax:"sv",ba:"bs,hr,sr",bb:"en",bd:"bn",be:"nl,fr,de",bf:"fr",bh:"ar",bi:"fr",bj:"fr",bl:"fr",bm:"en",bn:"ms",bo:"es,qu,ay",br:"pt",bs:"en",bt:"dz",bv:"no",bw:"en,tn",by:"be,ru",bz:"en",ca:"en,fr",cc:"en",cd:"fr",cf:"fr",cg:"fr",ch:"de,fr,it,rm",ci:"fr",ck:"en,rar",cl:"es",cm:"fr,en",cn:"zh",co:"es",cr:"es",cu:"es",cv:"pt",cx:"en",cy:"el,tr",cz:"cs","// de":"de",dj:"fr,ar,so",dk:"da",dm:"en",do:"es",dz:"ar",ec:"es",ee:"et",eg:"ar",eh:"ar,es,fr",er:"ti,ar,en",es:"ast,ca,es,eu,gl",et:"am,om",fi:"fi,sv,se",fj:"en",fk:"en",fm:"en",ga:"fr",gb:"en,ga,cy,gd,kw",gd:"en",ge:"ka",gf:"fr",gg:"en",gh:"en",gi:"en",gl:"kl,da",gm:"en",gn:"fr",gp:"fr",gq:"es,fr,pt",gr:"el",gs:"en",gt:"es",gu:"en,ch",gw:"pt",gy:"en",hk:"zh,en",hm:"en",hn:"es",ht:"fr,ht",ie:"en,ga",il:"he",im:"en",in:"hi,en",io:"en",iq:"ar,ku",ir:"fa",it:"it,de,fr",je:"en",jm:"en",jo:"ar",jp:"ja",ke:"sw,en",kg:"ky,ru",kh:"km",ki:"en",km:"ar,fr",kn:"en",kp:"ko",kr:"ko,en",kw:"ar",ky:"en",kz:"kk,ru",la:"lo",lb:"ar,fr",lc:"en",li:"de",lk:"si,ta",lr:"en",ls:"en,st",lu:"lb,fr,de",ly:"ar",ma:"ar",mc:"fr",md:"ru,uk,ro",me:"srp,sq,bs,hr,sr",mf:"fr",mg:"mg,fr",mh:"en,mh",ml:"fr",mm:"my",mo:"zh,pt",mp:"ch",mq:"fr",mr:"ar,fr",ms:"en",mt:"mt,en",mu:"mfe,fr,en",mv:"dv",mw:"en,ny",mx:"es",my:"ms",mz:"pt",na:"en,sf,de",nc:"fr",ne:"fr",nf:"en,pih",ng:"en",ni:"es",no:"nb,nn,no,se",np:"ne",nr:"na,en",nu:"niu,en",nz:"mi,en",om:"ar",pa:"es",pe:"es",pf:"fr",pg:"en,tpi,ho",ph:"en,tl",pk:"en,ur",pm:"fr",pn:"en,pih",pr:"es,en",ps:"ar,he",pw:"en,pau,ja,sov,tox",py:"es,gn",qa:"ar",re:"fr",rs:"sr",rw:"rw,fr,en",sa:"ar",sb:"en",sc:"fr,en,crs",sd:"ar,en",se:"sv",sg:"en,ms,zh,ta",sh:"en",si:"sl",sj:"no",sl:"en",sm:"it",sn:"fr",so:"so,ar",sr:"nl",st:"pt",ss:"en",sv:"es",sy:"ar",sz:"en,ss",tc:"en",td:"fr,ar",tf:"fr",tg:"fr",tj:"tg,ru",tk:"tkl,en,sm",tl:"pt,tet",tm:"tk",tn:"ar",to:"en",tt:"en",tv:"en",tw:"zh",tz:"sw,en",ua:"uk",ug:"en,sw",um:"en",us:"en",uy:"es",uz:"uz,kaa",va:"it",vc:"en",ve:"es",vg:"en",vi:"en",vn:"vi",vu:"bi,en,fr",wf:"fr",ws:"sm,en",ye:"ar",yt:"fr",za:"zu,xh,af,st,tn,en",zm:"en",zw:"en,sn,nd "},service.init=function(){this.portalURL=config.restServerUrl+"/api/rainbow/enduser/v1.0/"},service.start=function(stats){$log.info(""),$log.info("[countryService] === STARTING ===");var startDate=performance.now();return $q((function(resolve,__reject){service.init(),service.getAvailableCountries().then((function(availableCountries){service.countries=availableCountries.map((function(country){var entry={name:country.fullname,"alpha-3":country.isoAlpha3Code,"alpha-2":country.isoAlpha2Code};return"FRA"===country.isoAlpha3Code&&(entry.default=!0),entry}))})).catch((function(error){$log.info("[countryService] === warning === "+error.message)})).finally((function(){var startDuration=Math.round(performance.now()-startDate);stats.push({service:"countryService",startDuration:startDuration}),$log.info("[countryService] === STARTED ("+startDuration+" ms) === "+service.countries.length+" countries"),$log.info(""),resolve()}))}))},service.stop=function(){$log.info("[countryService] STOPPED")},service.getAvailableCountries=function(){return $q((function(resolve,reject){$http({method:"GET",url:service.portalURL+"countries",headers:authService.getRequestHeader()}).then((function(response){resolve(response.data.data)})).catch((function(response){var errorMessage=response.data?response.data.errorDetails||response.data.errorMsg:response.message;$log.error("[countryService] getAvailableCountries failure -- "+errorMessage+" - status "+response.status),reject(new Error(errorMessage))}))}))},service.getCountries=function(){var countries=service.countries.map(service.translateCountryName);return countries.sort(service.sortByCountryName),countries},service.sortByCountryName=function(country1,country2){return country1.name.localeCompare(country2.name,$translate.use())},service.translateCountryName=function(country){var label=service.getCountryLabel(country["alpha-2"]);if(label){var name=$translate.instant(label);name&&name!==label&&(country.name=name)}return country},service.getCountryStates=function(country){return country&&"USA"===country["alpha-3"]?service.statesOfAmerica:country&&"CAN"===country["alpha-3"]?service.statesOfCanada:{}},service.getCountry=function(countryCode,defaulted){if(!countryCode)return defaulted?service.getDefaultCountry():null;var countries=service.countries.filter((function(country){return country["alpha-3"]===countryCode}));return countries.length>0?countries[0]:null},service.getDefaultCountry=function(){var countries=service.countries.filter((function(country){return!0===country.default}));return countries.length>0?countries[0]:service.countries[0]},service.getCountryName=function(countryCode){return service.getCountry(countryCode)?service.getCountry(countryCode).name:null},service.getCountryCode=function(country){return country?country["alpha-3"]:null},service.getStateName=function(country,state){return country&&state?"USA"===country?service.statesOfAmerica[state]:"CAN"===country?service.statesOfCanada[state]:void 0:""},service.getDefaultState=function(country){return country&&"USA"===country["alpha-3"]?"AL":country&&"CAN"===country["alpha-3"]?"AB":null},service.getAlpha2Code=function(alpha3Code){if(!alpha3Code)return null;var countries=service.countries.filter((function(country){return country["alpha-3"]===alpha3Code}));return countries.length>0?countries[0]["alpha-2"]:null},service.getCountryLabel=function(alphaCode){if(3===alphaCode.length)var alpha2Code=service.getAlpha2Code(alphaCode);else alpha2Code=alphaCode;return alpha2Code?"country"+alpha2Code:null},service.getDataCenterLabel=function(datacenterLocation,companyCountry){var label=service.getRegionLabel(datacenterLocation.name);if(datacenterLocation.country===companyCountry)label=service.getCountryLabel(datacenterLocation.country);else{var datacenter=service.datacenters.find((function(dc){return dc["alpha-3"]===datacenterLocation.country}));datacenter&&(label=service.getRegionLabel(datacenter.region))}return label},service.getRegionLabel=function(regionName){return regionName},service.mapCountryToLanguages=function(countryAlpha2Code){if(countryAlpha2Code){var countryCode=countryAlpha2Code.toLowerCase();return void 0!==service.countryToLanguageMapping[countryCode]?service.countryToLanguageMapping[countryCode].split(","):[countryCode]}}}]),angular.module("rainbow").filter("countryFilter",["countryService",function(countryService){"use strict";return function(input){return countryService.getCountryName(input)}}])},function(module,exports){angular.module("rainbow").service("usersService",["$q","$log","$rootScope","contactService",function($q,$log,$rootScope,contactService){"use strict";var that=this,listeners=[];this.started=!1,this.start=function(stats){$log.info("[usersService] === STARTING ==="),that.started=!0;var startDate=performance.now();$log.info("[usersService] start"),that.contactsInRoster=that.getAllRosterContacts(),that.lastNameList=that.orderContacts("lastname"),that.firstNameList=that.orderContacts("firstname"),that.companyNameList=that.orderContacts("company"),listeners.push($rootScope.$on("ON_CONTACT_ROSTER_UPDATE_EVENT",that.onContactUpdatedEvent));var startDuration=Math.round(performance.now()-startDate);return stats.push({service:"usersService",startDuration:startDuration}),$log.info("[usersService] === STARTED ("+startDuration+" ms) ==="),$q.when()},this.stop=function(){var listener;for($log.info("[usersService] === STOPPING ==="),that.started&&(that.started=!1);listener=listeners.pop();)listener();return $log.info("[usersService] === STOPPED ==="),$q.when()},this.onContactUpdatedEvent=function(){$log.info("[usersService] onContactUpdatedEvent");var newRosterList=that.getAllRosterContacts();newRosterList.length-that.contactsInRoster.length!=0&&($log.info("[usersService] onContactUpdatedEvent - update all user lists"),that.contactsInRoster=newRosterList,that.lastNameList=that.orderContacts("lastname"),that.firstNameList=that.orderContacts("firstname"),that.companyNameList=that.orderContacts("company"),$rootScope.$broadcast("ON_USER_SERVICE_ROSTER_UPDATE_EVENT"))},this.getLastNameList=function(){return that.lastNameList},this.getFirstNameList=function(){return that.firstNameList},this.getCompanyNameList=function(){return that.companyNameList},this.getAllRosterContacts=function(){return contactService.getContacts().filter((function(contact){return contact.displayName&&contact.roster}))},this.addSeparators=function(users,sortByMember){var result=[],label="",paramExtractor=null;return paramExtractor="company"!==sortByMember?function(user){return user[sortByMember].charAt(0)}:function(user){return user.company.name},users.forEach((function(user){var sortString=paramExtractor(user).toUpperCase().trim().normalize("NFD").replace(/[\u0300-\u036f]/g,"");label!==sortString&&(label=sortString,result.push({value:label,type:"separator",id:label})),result.push(user)})),result},this.orderContacts=function(criteria){var orderedUsers=that.getOrderedUsers(that.contactsInRoster,criteria);return that.addSeparators(orderedUsers,criteria)},this.getFilterAndOrderUsersGroupedByOrderLabel=function(users,orderType,filterType,isGroup){isGroup=Boolean(!0&isGroup);var listOrderUsers=that.getFilterAndOrderUsers(users,orderType,filterType,isGroup);return"firstname"===orderType?that.addSeparators(listOrderUsers,"firstname"):"company"===orderType?that.addSeparators(listOrderUsers,"company"):that.addSeparators(listOrderUsers,"lastname")},this.getFilterAndOrderUsersGroupedByOrderLabelAndUpdateActivity=function(users,orderType,filterType,isGroup){isGroup=Boolean(!0&isGroup);var listOrderUsers=that.getFilterAndOrderUsers(users,orderType,filterType,isGroup);return"firstname"===orderType?that.addSeparators(listOrderUsers,"firstname"):"company"===orderType?that.addSeparators(listOrderUsers,"company"):that.addSeparators(listOrderUsers,"lastname")},this.getFilterAndOrderUsers=function(users,orderType,filterType,isGroup){var listFilteredUsers=that.getFilteredUsers(users,filterType,isGroup);return that.getOrderedUsers(listFilteredUsers,orderType)},this.getFilteredUsers=function(contactList,filter,isGroup){var contacts;return contacts=(contacts=contactList.filter((function(contact){if("separator"===contact.type)return!0;var isExistingContact=contact.displayName&&contact.roster||isGroup,isContactOnline="offline"!==contact.status&&"wait"!==contact.status&&"xa"!==contact.status&&"unknown"!==contact.status,isContactPending="wait"===contact.status,isContactTerminated=contact.isTerminated;return"online"===filter?isExistingContact&&isContactOnline:"offline"===filter?isExistingContact&&!isContactOnline&&!isContactTerminated:"pending"===filter?isExistingContact&&isContactPending:"all"===filter?isExistingContact&&!isContactTerminated:isExistingContact}))).filter((function(contact,index){return!!("separator"!==contact.type||contacts[index+1]&&"separator"!==contacts[index+1].type)}))},this.getOrderedUsers=function(contactList,orderType){return contactList.sort((function(aa,bb){var sortName;if("lastname"===orderType)return 0===(sortName=aa.lastname.localeCompare(bb.lastname))?aa.firstname.localeCompare(bb.firstname):sortName;if("firstname"===orderType)return 0===(sortName=aa.firstname.localeCompare(bb.firstname))?aa.lastname.localeCompare(bb.lastname):sortName;if("company"===orderType){var sortCompany=aa.company.name.localeCompare(bb.company.name);return 0===sortCompany?aa.lastname.localeCompare(bb.lastname):sortCompany}return 0}))}}])},function(module,exports){angular.module("rainbow").service("utilService",["$log",function($log){"use strict";var defaultDiacriticsRemovalMap=[{base:"A",letters:/[\u0041\u24B6\uFF21\u00C0\u00C1\u00C2\u1EA6\u1EA4\u1EAA\u1EA8\u00C3\u0100\u0102\u1EB0\u1EAE\u1EB4\u1EB2\u0226\u01E0\u00C4\u01DE\u1EA2\u00C5\u01FA\u01CD\u0200\u0202\u1EA0\u1EAC\u1EB6\u1E00\u0104\u023A\u2C6F]/g},{base:"AA",letters:/[\uA732]/g},{base:"AE",letters:/[\u00C6\u01FC\u01E2]/g},{base:"AO",letters:/[\uA734]/g},{base:"AU",letters:/[\uA736]/g},{base:"AV",letters:/[\uA738\uA73A]/g},{base:"AY",letters:/[\uA73C]/g},{base:"B",letters:/[\u0042\u24B7\uFF22\u1E02\u1E04\u1E06\u0243\u0182\u0181]/g},{base:"C",letters:/[\u0043\u24B8\uFF23\u0106\u0108\u010A\u010C\u00C7\u1E08\u0187\u023B\uA73E]/g},{base:"D",letters:/[\u0044\u24B9\uFF24\u1E0A\u010E\u1E0C\u1E10\u1E12\u1E0E\u0110\u018B\u018A\u0189\uA779]/g},{base:"DZ",letters:/[\u01F1\u01C4]/g},{base:"Dz",letters:/[\u01F2\u01C5]/g},{base:"E",letters:/[\u0045\u24BA\uFF25\u00C8\u00C9\u00CA\u1EC0\u1EBE\u1EC4\u1EC2\u1EBC\u0112\u1E14\u1E16\u0114\u0116\u00CB\u1EBA\u011A\u0204\u0206\u1EB8\u1EC6\u0228\u1E1C\u0118\u1E18\u1E1A\u0190\u018E]/g},{base:"F",letters:/[\u0046\u24BB\uFF26\u1E1E\u0191\uA77B]/g},{base:"G",letters:/[\u0047\u24BC\uFF27\u01F4\u011C\u1E20\u011E\u0120\u01E6\u0122\u01E4\u0193\uA7A0\uA77D\uA77E]/g},{base:"H",letters:/[\u0048\u24BD\uFF28\u0124\u1E22\u1E26\u021E\u1E24\u1E28\u1E2A\u0126\u2C67\u2C75\uA78D]/g},{base:"I",letters:/[\u0049\u24BE\uFF29\u00CC\u00CD\u00CE\u0128\u012A\u012C\u0130\u00CF\u1E2E\u1EC8\u01CF\u0208\u020A\u1ECA\u012E\u1E2C\u0197]/g},{base:"J",letters:/[\u004A\u24BF\uFF2A\u0134\u0248]/g},{base:"K",letters:/[\u004B\u24C0\uFF2B\u1E30\u01E8\u1E32\u0136\u1E34\u0198\u2C69\uA740\uA742\uA744\uA7A2]/g},{base:"L",letters:/[\u004C\u24C1\uFF2C\u013F\u0139\u013D\u1E36\u1E38\u013B\u1E3C\u1E3A\u0141\u023D\u2C62\u2C60\uA748\uA746\uA780]/g},{base:"LJ",letters:/[\u01C7]/g},{base:"Lj",letters:/[\u01C8]/g},{base:"M",letters:/[\u004D\u24C2\uFF2D\u1E3E\u1E40\u1E42\u2C6E\u019C]/g},{base:"N",letters:/[\u004E\u24C3\uFF2E\u01F8\u0143\u00D1\u1E44\u0147\u1E46\u0145\u1E4A\u1E48\u0220\u019D\uA790\uA7A4]/g},{base:"NJ",letters:/[\u01CA]/g},{base:"Nj",letters:/[\u01CB]/g},{base:"O",letters:/[\u004F\u24C4\uFF2F\u00D2\u00D3\u00D4\u1ED2\u1ED0\u1ED6\u1ED4\u00D5\u1E4C\u022C\u1E4E\u014C\u1E50\u1E52\u014E\u022E\u0230\u00D6\u022A\u1ECE\u0150\u01D1\u020C\u020E\u01A0\u1EDC\u1EDA\u1EE0\u1EDE\u1EE2\u1ECC\u1ED8\u01EA\u01EC\u00D8\u01FE\u0186\u019F\uA74A\uA74C]/g},{base:"OI",letters:/[\u01A2]/g},{base:"OO",letters:/[\uA74E]/g},{base:"OU",letters:/[\u0222]/g},{base:"P",letters:/[\u0050\u24C5\uFF30\u1E54\u1E56\u01A4\u2C63\uA750\uA752\uA754]/g},{base:"Q",letters:/[\u0051\u24C6\uFF31\uA756\uA758\u024A]/g},{base:"R",letters:/[\u0052\u24C7\uFF32\u0154\u1E58\u0158\u0210\u0212\u1E5A\u1E5C\u0156\u1E5E\u024C\u2C64\uA75A\uA7A6\uA782]/g},{base:"S",letters:/[\u0053\u24C8\uFF33\u1E9E\u015A\u1E64\u015C\u1E60\u0160\u1E66\u1E62\u1E68\u0218\u015E\u2C7E\uA7A8\uA784]/g},{base:"T",letters:/[\u0054\u24C9\uFF34\u1E6A\u0164\u1E6C\u021A\u0162\u1E70\u1E6E\u0166\u01AC\u01AE\u023E\uA786]/g},{base:"TZ",letters:/[\uA728]/g},{base:"U",letters:/[\u0055\u24CA\uFF35\u00D9\u00DA\u00DB\u0168\u1E78\u016A\u1E7A\u016C\u00DC\u01DB\u01D7\u01D5\u01D9\u1EE6\u016E\u0170\u01D3\u0214\u0216\u01AF\u1EEA\u1EE8\u1EEE\u1EEC\u1EF0\u1EE4\u1E72\u0172\u1E76\u1E74\u0244]/g},{base:"V",letters:/[\u0056\u24CB\uFF36\u1E7C\u1E7E\u01B2\uA75E\u0245]/g},{base:"VY",letters:/[\uA760]/g},{base:"W",letters:/[\u0057\u24CC\uFF37\u1E80\u1E82\u0174\u1E86\u1E84\u1E88\u2C72]/g},{base:"X",letters:/[\u0058\u24CD\uFF38\u1E8A\u1E8C]/g},{base:"Y",letters:/[\u0059\u24CE\uFF39\u1EF2\u00DD\u0176\u1EF8\u0232\u1E8E\u0178\u1EF6\u1EF4\u01B3\u024E\u1EFE]/g},{base:"Z",letters:/[\u005A\u24CF\uFF3A\u0179\u1E90\u017B\u017D\u1E92\u1E94\u01B5\u0224\u2C7F\u2C6B\uA762]/g},{base:"a",letters:/[\u0061\u24D0\uFF41\u1E9A\u00E0\u00E1\u00E2\u1EA7\u1EA5\u1EAB\u1EA9\u00E3\u0101\u0103\u1EB1\u1EAF\u1EB5\u1EB3\u0227\u01E1\u00E4\u01DF\u1EA3\u00E5\u01FB\u01CE\u0201\u0203\u1EA1\u1EAD\u1EB7\u1E01\u0105\u2C65\u0250]/g},{base:"aa",letters:/[\uA733]/g},{base:"ae",letters:/[\u00E6\u01FD\u01E3]/g},{base:"ao",letters:/[\uA735]/g},{base:"au",letters:/[\uA737]/g},{base:"av",letters:/[\uA739\uA73B]/g},{base:"ay",letters:/[\uA73D]/g},{base:"b",letters:/[\u0062\u24D1\uFF42\u1E03\u1E05\u1E07\u0180\u0183\u0253]/g},{base:"c",letters:/[\u0063\u24D2\uFF43\u0107\u0109\u010B\u010D\u00E7\u1E09\u0188\u023C\uA73F\u2184]/g},{base:"d",letters:/[\u0064\u24D3\uFF44\u1E0B\u010F\u1E0D\u1E11\u1E13\u1E0F\u0111\u018C\u0256\u0257\uA77A]/g},{base:"dz",letters:/[\u01F3\u01C6]/g},{base:"e",letters:/[\u0065\u24D4\uFF45\u00E8\u00E9\u00EA\u1EC1\u1EBF\u1EC5\u1EC3\u1EBD\u0113\u1E15\u1E17\u0115\u0117\u00EB\u1EBB\u011B\u0205\u0207\u1EB9\u1EC7\u0229\u1E1D\u0119\u1E19\u1E1B\u0247\u025B\u01DD]/g},{base:"f",letters:/[\u0066\u24D5\uFF46\u1E1F\u0192\uA77C]/g},{base:"g",letters:/[\u0067\u24D6\uFF47\u01F5\u011D\u1E21\u011F\u0121\u01E7\u0123\u01E5\u0260\uA7A1\u1D79\uA77F]/g},{base:"h",letters:/[\u0068\u24D7\uFF48\u0125\u1E23\u1E27\u021F\u1E25\u1E29\u1E2B\u1E96\u0127\u2C68\u2C76\u0265]/g},{base:"hv",letters:/[\u0195]/g},{base:"i",letters:/[\u0069\u24D8\uFF49\u00EC\u00ED\u00EE\u0129\u012B\u012D\u00EF\u1E2F\u1EC9\u01D0\u0209\u020B\u1ECB\u012F\u1E2D\u0268\u0131]/g},{base:"j",letters:/[\u006A\u24D9\uFF4A\u0135\u01F0\u0249]/g},{base:"k",letters:/[\u006B\u24DA\uFF4B\u1E31\u01E9\u1E33\u0137\u1E35\u0199\u2C6A\uA741\uA743\uA745\uA7A3]/g},{base:"l",letters:/[\u006C\u24DB\uFF4C\u0140\u013A\u013E\u1E37\u1E39\u013C\u1E3D\u1E3B\u017F\u0142\u019A\u026B\u2C61\uA749\uA781\uA747]/g},{base:"lj",letters:/[\u01C9]/g},{base:"m",letters:/[\u006D\u24DC\uFF4D\u1E3F\u1E41\u1E43\u0271\u026F]/g},{base:"n",letters:/[\u006E\u24DD\uFF4E\u01F9\u0144\u00F1\u1E45\u0148\u1E47\u0146\u1E4B\u1E49\u019E\u0272\u0149\uA791\uA7A5]/g},{base:"nj",letters:/[\u01CC]/g},{base:"o",letters:/[\u006F\u24DE\uFF4F\u00F2\u00F3\u00F4\u1ED3\u1ED1\u1ED7\u1ED5\u00F5\u1E4D\u022D\u1E4F\u014D\u1E51\u1E53\u014F\u022F\u0231\u00F6\u022B\u1ECF\u0151\u01D2\u020D\u020F\u01A1\u1EDD\u1EDB\u1EE1\u1EDF\u1EE3\u1ECD\u1ED9\u01EB\u01ED\u00F8\u01FF\u0254\uA74B\uA74D\u0275]/g},{base:"oi",letters:/[\u01A3]/g},{base:"ou",letters:/[\u0223]/g},{base:"oo",letters:/[\uA74F]/g},{base:"p",letters:/[\u0070\u24DF\uFF50\u1E55\u1E57\u01A5\u1D7D\uA751\uA753\uA755]/g},{base:"q",letters:/[\u0071\u24E0\uFF51\u024B\uA757\uA759]/g},{base:"r",letters:/[\u0072\u24E1\uFF52\u0155\u1E59\u0159\u0211\u0213\u1E5B\u1E5D\u0157\u1E5F\u024D\u027D\uA75B\uA7A7\uA783]/g},{base:"s",letters:/[\u0073\u24E2\uFF53\u00DF\u015B\u1E65\u015D\u1E61\u0161\u1E67\u1E63\u1E69\u0219\u015F\u023F\uA7A9\uA785\u1E9B]/g},{base:"t",letters:/[\u0074\u24E3\uFF54\u1E6B\u1E97\u0165\u1E6D\u021B\u0163\u1E71\u1E6F\u0167\u01AD\u0288\u2C66\uA787]/g},{base:"tz",letters:/[\uA729]/g},{base:"u",letters:/[\u0075\u24E4\uFF55\u00F9\u00FA\u00FB\u0169\u1E79\u016B\u1E7B\u016D\u00FC\u01DC\u01D8\u01D6\u01DA\u1EE7\u016F\u0171\u01D4\u0215\u0217\u01B0\u1EEB\u1EE9\u1EEF\u1EED\u1EF1\u1EE5\u1E73\u0173\u1E77\u1E75\u0289]/g},{base:"v",letters:/[\u0076\u24E5\uFF56\u1E7D\u1E7F\u028B\uA75F\u028C]/g},{base:"vy",letters:/[\uA761]/g},{base:"w",letters:/[\u0077\u24E6\uFF57\u1E81\u1E83\u0175\u1E87\u1E85\u1E98\u1E89\u2C73]/g},{base:"x",letters:/[\u0078\u24E7\uFF58\u1E8B\u1E8D]/g},{base:"y",letters:/[\u0079\u24E8\uFF59\u1EF3\u00FD\u0177\u1EF9\u0233\u1E8F\u00FF\u1EF7\u1E99\u1EF5\u01B4\u024F\u1EFF]/g},{base:"z",letters:/[\u007A\u24E9\uFF5A\u017A\u1E91\u017C\u017E\u1E93\u1E95\u01B6\u0225\u0240\u2C6C\uA763]/g}];this.removeDiacritis=function(str){for(var i=0;i<defaultDiacriticsRemovalMap.length;i++)str=str.replace(defaultDiacriticsRemovalMap[i].letters,defaultDiacriticsRemovalMap[i].base);return str},this.escapeHtml=function(unsafe){return unsafe.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#039;")},this.extractHtmlContent=function(html){var parser=new DOMParser,content="{}";try{content=parser.parseFromString(html,"text/html").documentElement.textContent}catch(e){$log.error("[utilService] error in extractHtmlContent:",e),content="{}"}return content},this.sortAlphaNum=function(nameA,nameB){var reA=/[^a-zA-Z]/g,reN=/[^0-9]/g,aA=nameA.replace(reA,""),bA=nameB.replace(reA,"");if(aA===bA){var aN=parseInt(nameA.replace(reN,""),10),bN=parseInt(nameB.replace(reN,""),10);return aN===bN?0:aN>bN?1:-1}return aA>bA?1:-1},this.anonymizePhoneNumber=function(number){if(null==number)return null;if(config&&config.debug)return number;var result="";return 0===number.indexOf("+")&&(result="+"),result=number.length>4?result+"*".repeat(number.length-4-result.length)+number.slice(number.length-4):number},this.anonymizeString=function(inputString){if(null==inputString)return null;if(config&&config.debug)return inputString;var result="";return result=inputString.length>4?result+"*".repeat(inputString.length-4-result.length)+inputString.slice(inputString.length-4):inputString},this.bytesToSize=function(bytes){if(0==bytes)return"0 Byte";var i=parseInt(Math.floor(Math.log(bytes)/Math.log(1024)));return Math.round(bytes/Math.pow(1024,i),2)+" "+["Bytes","KB","MB","GB","TB"][i]}}])},function(module,exports){},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const crypto_js_1=__webpack_require__(2),crypto_js_2=__webpack_require__(2);class LocalImage{constructor(fd,blob){blob&&(this.url=URL.createObjectURL(blob)),this.fd=fd}release(){URL.revokeObjectURL(this.url)}}class FileServerService{constructor($q,$http,$log,authService,fileStorageService,TransfertPromiseQueue,FileDescriptorEventHandler,xmppService,errorHelperService,$rootScope,$interval){this.$q=$q,this.$http=$http,this.$log=$log,this.authService=authService,this.fileStorageService=fileStorageService,this.TransfertPromiseQueue=TransfertPromiseQueue,this.FileDescriptorEventHandler=FileDescriptorEventHandler,this.xmppService=xmppService,this.errorHelperService=errorHelperService,this.$rootScope=$rootScope,this.$interval=$interval,this.ONE_KILOBYTE=1024,this.ONE_MEGABYTE=1048576,this.ONE_GIGABYTE=1073741824,this.started=!1,this.thumbnailPromises=[]}start(stats){this.$log.info("[FileServerService] === STARTING ===");let startDate=performance.now();return this.started=!1,this.portalURL=config.restServerUrl+"/api/rainbow/fileserver/v1.0/files",this.getServercapabilities().then(()=>{this.attachHandlers(),this.transfertPromiseQueue=this.TransfertPromiseQueue.create();var startDuration=Math.round(performance.now()-startDate);stats.push({service:"FileServerService",startDuration:startDuration}),this.$log.info("[FileServerService] === STARTED ("+startDuration+" ms) ===")}).catch(error=>{this.$log.error("[FileServerService] === STARTING FAILURE === "+error.message)}),this.$q.when()}stop(){return this.$log.info("[FileServerService] === STOPPING ==="),this.started&&(this.started=!1),this.$log.info("[FileServerService] === STOPPED ==="),this.$q.when()}attachHandlers(){this.removeHandlers(),this.fileDescriptorEventHandler=this.FileDescriptorEventHandler.create(this),this.fileMessageHandlerRef||(this.fileMessageHandlerRef=this.xmppService.addHandler(stanza=>(this.$interval(()=>{this.fileDescriptorEventHandler.onManagementMessageReceived(stanza)},250,1),!0),null,"message","management"))}removeHandlers(){this.fileDescriptorEventHandler=void 0,this.fileMessageHandlerRef=void 0}getLocalImage(fileDescriptorId,thumbnail,forced=!0){return this.$q((resolve,reject)=>{let fileDescriptor=this.fileStorageService.getFileDescriptorById(fileDescriptorId);(fileDescriptor?this.$q.resolve(fileDescriptor):this.fileStorageService.retrieveAndStoreOneFileDescriptor(fileDescriptorId)).then(aFileDescriptor=>{let fileLoader=null;(fileLoader=thumbnail&&aFileDescriptor.previewBlob&&!forced?this.$q.resolve(aFileDescriptor.previewBlob):thumbnail?this.getLargeBlobThumbnail(aFileDescriptor):this.getBlobFromFileDescriptor(aFileDescriptor,!1,null)).then(blob=>{resolve(new LocalImage(aFileDescriptor,blob))})}).catch(error=>{new LocalImage(null,null).url="/resources/skins/rainbow/images/wizard/chrome.png",this.$log.error(`[fileServerService] getFileLocalURL -- no file descriptor found with ${fileDescriptorId} + " id.`),resolve(null)})})}getLargeBlobThumbnail(fileDescriptor){let url=fileDescriptor.url+"?thumbnail500=true";return this.getBlobFromUrl(url,fileDescriptor.typeMIME,fileDescriptor.size,fileDescriptor.fileName)}getPartialDataFromServer(url,minRange,maxRange,index){return this.$q((resolve,reject)=>{this.$http({method:"GET",url:url,headers:this.authService.getRequestHeaderWithRange("bytes="+minRange+"-"+maxRange),responseType:"arraybuffer"}).then(response=>{resolve({data:response.data,index:index})},errorResponse=>{let error=this.errorHelperService.handleError(errorResponse),errorDataObj=JSON.parse(String.fromCharCode.apply(null,new Uint8Array(errorResponse.data))),translatedErrorMessage=this.errorHelperService.getLocalizedError(errorDataObj.errorDetailsCode);this.$log.error(translatedErrorMessage),reject(error)})})}getFileStorageService(){return this.fileStorageService}getBlobThumbnailFromFileDescriptor(fileDescriptor,large=!1){if(fileDescriptor.thumbnail.isThumbnailAvailable()||fileDescriptor.isImage()&&fileDescriptor.size<20*this.ONE_KILOBYTE){var existingPromise=this.thumbnailPromises[fileDescriptor.id];if(existingPromise)return this.$log.info("[FileServerService] getBlobThumbnailFromFileDescriptor "+fileDescriptor.id+" already lauched"),existingPromise.promise;var defered=this.$q.defer();this.thumbnailPromises[fileDescriptor.id]=defered;let url=fileDescriptor.url;return fileDescriptor.thumbnail.isThumbnailAvailable()&&(fileDescriptor.size>=20*this.ONE_KILOBYTE||fileDescriptor.isPDF())?url+="?thumbnail500=true":fileDescriptor.uploadedDate&&(url+="?update="+crypto_js_1.MD5(crypto_js_2.enc.Latin1.parse(fileDescriptor.uploadedDate)).toString(crypto_js_2.enc.Hex)),this.getBlobFromUrl(url,fileDescriptor.typeMIME,fileDescriptor.size,fileDescriptor.fileName).then(blob=>{fileDescriptor.previewBlob=blob,this.$rootScope.$broadcast("ON_FILE_TRANSFER_EVENT",{result:"success",type:"download",fileDesc:fileDescriptor}),this.thumbnailPromises[fileDescriptor.id]&&this.thumbnailPromises[fileDescriptor.id].resolve(blob),delete this.thumbnailPromises[fileDescriptor.id],defered.resolve(blob)}).catch(error=>{this.$rootScope.$broadcast("ON_FILE_TRANSFER_EVENT",{result:"failure",type:"download",message:error.message,fileDesc:fileDescriptor}),delete this.thumbnailPromises[fileDescriptor.id],defered.reject(error)}),defered.promise}return this.$q.reject()}getBlobFromFileDescriptor(fd,cancelable=!0,actionOnPartialResponse){if(!fd)return this.$log.warn("[FileServerService] getBlobFromFileDescriptor : missing file descriptor"),this.$q.reject();if(this.$log.info("[FileServerService] getBlobFromFileDescriptor: "+fd.id),"uploaded"!==fd.state)return this.$log.warn("[FileServerService] getBlobFromFileDescriptor : file is not in uploaded state="+fd.state),this.$q.reject();let url=fd.url;fd.uploadedDate&&(url+="?update="+crypto_js_1.MD5(crypto_js_2.enc.Latin1.parse(fd.uploadedDate)).toString(crypto_js_2.enc.Hex));let range=this.ONE_MEGABYTE;if(this.capabilities.maxChunkSizeDownload&&0!==fd.size&&fd.size>range){fd.size>=100*range&&(range=fd.size/100+this.ONE_KILOBYTE,this.$log.debug("[FileServerService] changing chunk size: "+range));var defered=this.$q.defer();let blobArray=new Array,promiseArray=[];fd.state="downloading",fd.chunkTotalNumber=Math.ceil(fd.size/range),fd.chunkPerformed=0,fd.chunkPerformedPercent=0,this.$rootScope.$broadcast("ON_FILE_TRANSFER_EVENT",{type:"download",fileDesc:fd,cancelable:cancelable}),this.$log.info("[FileServerService] getBlobFromFileDescriptor: need to download "+fd.chunkTotalNumber+" chunks");for(let i=0,minRange=0,maxRange=range-1,repetition=Math.ceil(fd.size/range);repetition>0;i++,repetition--,minRange+=range,maxRange+=range)maxRange=maxRange<fd.size?maxRange:fd.size,promiseArray.push(()=>{var promiseArrayDeferred=this.$q.defer();return this.getPartialDataFromServer(url,minRange,maxRange,i).then(response=>(fd.chunkPerformed++,fd.chunkPerformedPercent=100*fd.chunkPerformed/fd.chunkTotalNumber,this.$log.info("[FileServerService] getBlobFromFileDescriptor : chunk downloaded="+fd.chunkPerformed),blobArray[response.index]=response.data,this.$rootScope.$broadcast("ON_FILE_TRANSFER_EVENT",{type:"download",fileDesc:fd,cancelable:cancelable}),actionOnPartialResponse?actionOnPartialResponse(response,fd.id).then(()=>promiseArrayDeferred.resolve(response.data)):promiseArrayDeferred.resolve(response))).catch(error=>{this.$log.info("[FileServerService] error on chunk download="+error),promiseArrayDeferred.reject(error)}),promiseArrayDeferred.promise});var promisesCompletion=()=>{let blob=new Blob(blobArray,{type:fd.typeMIME});this.$log.info("[FileServerService] getBlobFromFileDescriptor success"),fd.state="uploaded",fd.chunkPerformed=0,fd.chunkTotalNumber=0,fd.chunkPerformedPercent=0,this.$rootScope.$broadcast("ON_FILE_TRANSFER_EVENT",{type:"download",fileDesc:fd}),defered.resolve(blob)};return this.transfertPromiseQueue.addPromiseArray(fd.id,promiseArray,promisesCompletion,errorResponse=>{let error=this.errorHelperService.handleError(errorResponse);fd.state="uploaded",fd.chunkPerformed=0,fd.chunkTotalNumber=0,fd.chunkPerformedPercent=0;let errorDataObj=JSON.parse(String.fromCharCode.apply(null,new Uint8Array(errorResponse.data))),translatedErrorMessage=this.errorHelperService.getLocalizedError(errorDataObj.errorDetailsCode);this.$log.error(translatedErrorMessage),this.$rootScope.$broadcast("ON_FILE_TRANSFER_EVENT",{result:"failure",type:"download",message:translatedErrorMessage||error.message,fileDesc:fd}),defered.reject(error)}),defered.promise}return fd.state="downloading",fd.chunkTotalNumber=1,fd.chunkPerformed=0,fd.chunkPerformedPercent=0,this.$rootScope.$broadcast("ON_FILE_TRANSFER_EVENT",{fileDesc:fd,cancelable:!1}),this.getBlobFromUrl(url,fd.typeMIME,fd.size,fd.fileName).then(blob=>(fd.state="uploaded",this.$rootScope.$broadcast("ON_FILE_TRANSFER_EVENT",{fileDesc:fd}),this.$q.resolve(blob))).catch(error=>(fd.state="uploaded",this.$rootScope.$broadcast("ON_FILE_TRANSFER_EVENT",{fileDesc:fd}),this.$log.info("[FileServerService] arrayPromise : error "+error.message),this.$q.reject(error)))}getBlobFromUrl(url,mime,fileSize,fileName){return this.$log.debug("[FileServerService] >getBlobFromUrl: "+url),this.$q((resolve,reject)=>{this.$http({method:"GET",url:url,headers:this.authService.getRequestHeader(),responseType:"arraybuffer"}).then(response=>{let blob=new Blob([response.data],{type:mime});this.$log.debug("[FileServerService] getBlobFromUrl success"),resolve(blob)},errorResponse=>{let error=this.errorHelperService.handleError(errorResponse);this.$log.error("[FileServerService] "+error.translatedMessage),reject(error)})})}getBlobUrlAndOrientationByFileDescriptorId(id){return this.$q((resolve,reject)=>{let fileDescriptor=this.fileStorageService.getFileDescriptorById(id);fileDescriptor?this.getBlobFromFileDescriptor(fileDescriptor,!1,null).then(blob=>{let result={};if(result.blobUrl=URL.createObjectURL(blob),result.id=id,fileDescriptor.orientation)return result.orientation=fileDescriptor.orientation,void resolve(result);this.setImageOrientationForFileDescriptor(fileDescriptor,blob).then(orientation=>{result.orientation=orientation,resolve(result)}).catch(()=>{resolve(result)})}).catch(error=>{reject(error)}):(this.$log.error("[FileServerService] getBlobUrlAndOrientationById no file descriptor found for ID "+id),reject(new Error("[FileServerService] getBlobUrlAndOrientationById no file descriptor found")))})}setImageOrientationForFileDescriptor(fileDescriptor,blob){return this.$q((resolve,reject)=>{if(fileDescriptor&&fileDescriptor.isImage()){var reader=new FileReader;reader.onload=e=>{fileDescriptor.orientation=1;var arrayBuffer=e.target.result,view=new DataView(arrayBuffer);if(65496===view.getUint16(0,!1)){for(var length=view.byteLength,offset=2;offset<length;){if(view.getUint16(offset+2,!1)<=8)return void reject();var marker=view.getUint16(offset,!1);if(offset+=2,65505===marker){if(1165519206!==view.getUint32(offset+=2,!1))return void reject();var little=18761===view.getUint16(offset+=6,!1);offset+=view.getUint32(offset+4,little);var tags=view.getUint16(offset,little);offset+=2;for(var i=0;i<tags;i++)if(274===view.getUint16(offset+12*i,little)){var orientation=view.getUint16(offset+12*i+8,little);return fileDescriptor.orientation=orientation,void resolve(orientation)}}else{if(65280!=(65280&marker))break;offset+=view.getUint16(offset,!1)}}reject()}else reject()},reader.readAsArrayBuffer(blob)}else reject()})}uploadAFile(fileId,file,mime){return this.$q((resolve,reject)=>{let fileDescriptor=this.fileStorageService.getFileDescriptorById(fileId);fileDescriptor&&(fileDescriptor.state="uploading"),this.$http({method:"PUT",url:this.portalURL+"/"+fileId,headers:this.authService.getPostHeader("application/octet-stream"),data:file,uploadEventHandlers:{progress:e=>{this.$log.log(e)}}}).then(response=>{let newFileDescriptor=this.fileStorageService.getFileDescriptorById(fileId);newFileDescriptor&&(newFileDescriptor.state="uploaded"),this.$log.info("[FileServerService] uploadAFile success"),this.$rootScope.$broadcast("ON_FILE_TRANSFER_EVENT",{result:"success",type:"upload",fileDesc:newFileDescriptor}),this.fileStorageService.orderDocuments(),resolve(newFileDescriptor)},errorResponse=>{let error=this.errorHelperService.handleError(errorResponse);this.$rootScope.$broadcast("ON_FILE_TRANSFER_EVENT",{result:"failure",type:"upload",fileDesc:fileDescriptor}),reject(error),this.$log.error("[FileServerService] "+error.message)})})}sendPartialDataToServer(fileId,filePart,initialSize,minRange,maxRange,index){return this.$q((resolve,reject)=>{this.$http({method:"PUT",url:this.portalURL+"/"+fileId+"/parts/"+index,headers:this.authService.getPostHeaderWithRange("bytes "+minRange+"-"+maxRange+"/"+initialSize,"application/octet-stream"),data:filePart,uploadEventHandlers:{progress:e=>{this.$log.log(e)}}}).then(response=>{let chunkResponse=response.data.data;this.$log.info("[FileServerService] sendPartialDataToServer success"),resolve(chunkResponse)},errorResponse=>{let error=this.errorHelperService.handleError(errorResponse);reject(error),this.$log.error("[FileServerService] "+error.message)})})}calculateMd5(blob,callback){var reader=new FileReader;reader.readAsBinaryString(blob),reader.onloadend=()=>{callback(crypto_js_1.MD5(crypto_js_2.enc.Latin1.parse(reader.result)).toString(crypto_js_2.enc.Hex))}}uploadAFileByChunk(fileDescriptor,file,message,progressCallback){this.$log.info("[FileServerService] >uploadAFileByChunk");let range=this.ONE_MEGABYTE;if(range<file.size){file.size>=100*range&&(range=Math.round(file.size/100+this.ONE_KILOBYTE),this.$log.debug("[FileServerService] changing chunk size: "+range));var defered=this.$q.defer();fileDescriptor.chunkTotalNumber=Math.ceil(file.size/range),fileDescriptor.chunkPerformed=0,fileDescriptor.chunkPerformedPercent=0,fileDescriptor.state="uploading",this.$rootScope.$broadcast("ON_FILE_TRANSFER_EVENT",{fileDesc:fileDescriptor,cancelable:!0});let promiseArray=[];for(let i=0,minRange=0,maxRange=range-1,repetition=Math.ceil(file.size/range);repetition>0;i++,repetition--,minRange+=range,maxRange+=range){let max=maxRange<file.size?maxRange:file.size,blob=file.slice(minRange,max+1);promiseArray.push(()=>{var promiseArrayDeferred=this.$q.defer();return this.calculateMd5(blob,blobChecksum=>{this.$log.info("[FileServerService] sendPartialDataToServer calculated checksum="+blobChecksum),this.sendPartialDataToServer(fileDescriptor.id,blob,file.size,minRange,max,i).then(response=>{if(this.$log.info("[FileServerService] sendPartialDataToServer md5sum="+response.md5sum),!response.md5sum.localeCompare(blobChecksum))return fileDescriptor.chunkPerformed++,fileDescriptor.chunkPerformedPercent=100*fileDescriptor.chunkPerformed/fileDescriptor.chunkTotalNumber,progressCallback&&progressCallback(message,fileDescriptor),this.$rootScope.$broadcast("ON_FILE_TRANSFER_EVENT",{fileDesc:fileDescriptor,cancelable:!0}),promiseArrayDeferred.resolve(response);this.$log.error("[FileServerService] Wrong Checksum for chunk detected: "+response.md5sum+"/"+blobChecksum);promiseArrayDeferred.reject({errorDetailsCode:500,message:"Wrong Checksum for chunk"})}).catch(error=>{this.$log.info("[FileServerService] error on chunk upload="+error),promiseArrayDeferred.reject(error)})}),promiseArrayDeferred.promise})}return this.transfertPromiseQueue.addPromiseArray(fileDescriptor.id,promiseArray,()=>{this.$http({method:"PUT",url:this.portalURL+"/"+fileDescriptor.id+"/parts/end",headers:this.authService.getPostHeader("application/octet-stream"),uploadEventHandlers:{progress:e=>{this.$log.log(e)}}}).then(response=>{this.$log.info("[FileServerService] uploadAFileByChunk success"),fileDescriptor.state="uploaded",fileDescriptor.chunkPerformed=0,fileDescriptor.chunkTotalNumber=0,fileDescriptor.chunkPerformedPercent=0,progressCallback&&progressCallback(message,fileDescriptor),this.$rootScope.$broadcast("ON_FILE_TRANSFER_EVENT",{result:"success",type:"upload",fileDesc:fileDescriptor}),this.fileStorageService.orderDocuments(),this.fileStorageService.retrieveUserConsumption(),defered.resolve(fileDescriptor)},errorResponse=>{let error=this.errorHelperService.handleError(errorResponse);this.$rootScope.$broadcast("ON_FILE_TRANSFER_EVENT",{result:"failure",type:"upload",fileDesc:fileDescriptor}),defered.reject(error)})},errorResponse=>{let error=this.errorHelperService.handleError(errorResponse);this.$rootScope.$broadcast("ON_FILE_TRANSFER_EVENT",{result:"failure",type:"upload",fileDesc:fileDescriptor}),defered.reject(error)}),defered.promise}return progressCallback&&progressCallback(message,fileDescriptor),this.uploadAFile(fileDescriptor.id,file,fileDescriptor.typeMIME).then(response=>(this.$log.info("[FileServerService] uploadAFile success"),progressCallback&&progressCallback(message,fileDescriptor),this.fileStorageService.retrieveUserConsumption(),this.$q.resolve(fileDescriptor)))}isTransferInProgress(){return this.transfertPromiseQueue.isTransferInProgress()}cancelAllTransfers(){this.transfertPromiseQueue.cancelAllTransfers()}cancelCurrentFiletransfer(id){this.transfertPromiseQueue.cancelCurrentFiletransfer(id)}getServercapabilities(){return this.$q((resolve,reject)=>{this.$http({method:"GET",url:config.restServerUrl+"/api/rainbow/fileserver/v1.0/capabilities",headers:this.authService.getRequestHeader()}).then(response=>{this.$log.info("[FileServerService] getServercapabilities -- success"),this.capabilities=response.data.data,resolve(this.capabilities)},errorResponse=>{let error=this.errorHelperService.handleError(errorResponse);this.$log.error("[FileServerService] getServercapabilities "+error.message),reject(error)})})}getBlobFromUrlWithOptimization(url,mime,fileSize=0,fileName="",uploadedDate=""){return 0!==uploadedDate.length&&(url+="?update="+crypto_js_1.MD5(crypto_js_2.enc.Latin1.parse(uploadedDate)).toString(crypto_js_2.enc.Hex)),this.$q((resolve,reject)=>{if(this.capabilities.maxChunkSizeDownload&&0!==fileSize&&fileSize>this.capabilities.maxChunkSizeDownload){let range=this.capabilities.maxChunkSizeDownload;range>this.ONE_MEGABYTE&&(range=this.ONE_MEGABYTE);let minRange=0,maxRange=range-1,repetition=Math.ceil(fileSize/range),blobArray=new Array(repetition);this.$log.debug("[FileServerService] getBlobFromUrlWithOptimization : "+repetition+" chunks to be downloaded");let promiseArray=[];for(let i=0;repetition>0;i++,repetition--,minRange+=range,maxRange+=range)promiseArray.push(this.getPartialDataFromServer(url,minRange,maxRange,i).then(response=>(blobArray[response.index]=response.data,response.data)));this.$q.all(promiseArray).then(()=>{let blob=new Blob(blobArray,{type:mime});this.$log.debug("[FileServerService] getBlobFromUrlWithOptimization success"),resolve(blob)},errorResponse=>{let error=this.errorHelperService.handleError(errorResponse),errorDataObj=JSON.parse(String.fromCharCode.apply(null,new Uint8Array(errorResponse.data))),translatedErrorMessage=this.errorHelperService.getLocalizedError(errorDataObj.errorDetailsCode);this.$log.error(translatedErrorMessage),reject(error)})}else this.getBlobFromUrl(url,mime,fileSize,fileName).then(blob=>{resolve(blob)}).catch(error=>{reject(error)})})}getBlobUrlFromUrl(url,mime,filesize=0,fileName=""){return this.$q((resolve,reject)=>{this.getBlobFromUrlWithOptimization(url,mime,filesize,fileName).then(blob=>{resolve(URL.createObjectURL(blob))}).catch(error=>{reject(error)})})}}FileServerService.$inject=["$q","$http","$log","authService","fileStorageService","TransfertPromiseQueue","FileDescriptorEventHandler","xmppService","errorHelperService","$rootScope","$interval"],angular.module("rainbow").service("fileServerService",FileServerService)},function(module,exports){class FileStorageService{constructor($injector,$q,$http,$log,$rootScope,authService,fileViewerFactory,errorHelperService,orderByFilter,contactService,helpersService,fileViewerElementFactory,fileDescriptorFactory){this.$injector=$injector,this.$q=$q,this.$http=$http,this.$log=$log,this.$rootScope=$rootScope,this.authService=authService,this.fileViewerFactory=fileViewerFactory,this.errorHelperService=errorHelperService,this.orderByFilter=orderByFilter,this.contactService=contactService,this.helpersService=helpersService,this.fileViewerElementFactory=fileViewerElementFactory,this.fileDescriptorFactory=fileDescriptorFactory,this.started=!1,this.listeners=[],this.rotationValues={1:"rotate(0deg)",3:"rotate(180deg)",6:"rotate(90deg)",8:"rotate(270deg)"}}start(stats){this.$log.info("[FileStorageService] === STARTING ===");let startDate=performance.now();return this.started=!1,this.portalURL=config.restServerUrl+"/api/rainbow/filestorage/v1.0/files",this.fileDescriptors=[],this.voiceMessageFileDescriptors=[],this.fileDescriptorsByDate=[],this.fileDescriptorsByName=[],this.fileDescriptorsBySize=[],this.receivedFileDescriptors=[],this.receivedFileDescriptorsByName=[],this.receivedFileDescriptorsByDate=[],this.receivedFileDescriptorsBySize=[],this.consumptionData={},this.channelService=this.$injector.get("channelService"),this.retrieveFileDescriptorsListPerOwner().then(()=>this.retrieveReceivedFiles(this.contactService.userContact.dbId)).then(()=>(this.orderDocuments(),this.retrieveUserConsumption())).then(()=>{this.started=!0;var startDuration=Math.round(performance.now()-startDate);stats.push({service:"FileStorageService",startDuration:startDuration}),this.$log.info("[FileStorageService] === STARTED ("+startDuration+" ms) ===")}).catch(error=>{this.$log.error("[FileStorageService] === STARTING === failure -- "+error.message)}),this.retrieveVoiceMessageFileDescriptorsListPerOwner().then(()=>{this.$log.info("[FileStorageService] === STARTED (retrieveVoiceMessageFileDescriptorsListPerOwner)")}).catch(error=>{this.$log.error("[FileStorageService] === STARTING === failure -- (retrieveVoiceMessageFileDescriptorsListPerOwner)")}),this.listeners.push(this.$rootScope.$on("ROOM_UPDATE_EVENT",(__event,room,action)=>{action&&"remove"===action&&(this.$log.info("[FileStorageService] ROOM_UPDATE_EVENT REMOVED for roomId="+room.dbId),this.removeRoomFileViewer(room))})),this.$q.when()}stop(){return this.$log.info("[FileStorageService] === STOPPING ==="),this.started&&(this.started=!1),this.listeners&&this.listeners.forEach(unregisterListener=>{unregisterListener()}),this.$log.info("[FileStorageService] === STOPPED ==="),this.$q.when()}reinit(isBlocking){return this.$q((resolve,reject)=>{if(!isBlocking)return this.$log.info("[FileStorageService] === reinit not blocking ==="),resolve(),void this.reinitInternal();this.$log.info("[FileStorageService] === reinit blocking ==="),this.reinitInternal().then(()=>{resolve()}).catch(()=>{reject()})})}reinitInternal(){return this.$q((resolve,reject)=>{this.retrieveFileDescriptorsListPerOwner().then(()=>this.retrieveReceivedFiles(this.contactService.userContact.dbId)).then(()=>{this.orderDocuments(),this.$log.info("[FileStorageService] reinitInternal done"),resolve()}).catch(error=>{this.$log.error("[FileStorageService] reinitInternal failure -- "+error.message),reject()})})}removeRoomFileViewer(room){let fileDesc;this.$log.info("[FileStorageService] >removeRoomFileViewer: "+room.dbId);do{if(fileDesc=this.getFileDescriptorByViewerId(room.dbId)){var viewerFound=fileDesc.viewers.find(element=>element.viewerId===room.dbId);viewerFound&&(this.$log.info("[FileStorageService] >viewer found delete it"),fileDesc.viewers.splice(fileDesc.viewers.indexOf(viewerFound),1))}}while(fileDesc)}getFileDescriptorByViewerId(id){for(let fileDescriptor of this.fileDescriptors)for(let viewer of fileDescriptor.viewers)if(viewer.viewerId===id)return fileDescriptor;for(let fileDescriptor of this.receivedFileDescriptors)if(fileDescriptor.id===id)return fileDescriptor;return null}getFileDescriptorById(id){for(let fileDescriptor of this.fileDescriptors)if(fileDescriptor.id===id)return fileDescriptor;for(let fileDescriptor of this.receivedFileDescriptors)if(fileDescriptor.id===id)return fileDescriptor;return null}getCompleteFileDescriptorById(id){return this.$q((resolve,reject)=>{let fileDescriptor;if(this.fileDescriptors.some(fd=>fd.id===id&&(fileDescriptor=fd,!0))){let promiseArray=[];for(let viewer of fileDescriptor.viewers)"user"===viewer.type&&promiseArray.push(this.contactService.getContactByDBId(viewer.viewerId).then(contact=>(viewer.contact=contact,viewer)).catch(error=>{this.$log.error("[FileStorageService] "+error),reject(error)}));this.$q.all(promiseArray).then(()=>{resolve(fileDescriptor)}).catch(error=>{this.$log.error("[FileStorageService] "+error),reject(error)})}else reject()})}getDocuments(){return this.fileDescriptors}getReceivedDocuments(){return this.receivedFileDescriptors}getDocumentsByName(received){return received?this.receivedFileDescriptorsByName:this.fileDescriptorsByName}getDocumentsByDate(received){return received?this.receivedFileDescriptorsByDate:this.fileDescriptorsByDate}getDocumentsBySize(received){return received?this.receivedFileDescriptorsBySize:this.fileDescriptorsBySize}getReceivedFilesFromContact(dbId){return this.receivedFileDescriptorsByDate.filter(file=>file.ownerId===dbId)}getSentFilesToContact(dbId){return this.fileDescriptorsByDate.filter(file=>{for(let i=0;i<file.viewers.length;i++)if(file.viewers[i].viewerId===dbId)return!0;return!1})}getReceivedFilesForRoom(dbId){return this.receivedFileDescriptorsByDate.filter(file=>{for(let i=0;i<file.viewers.length;i++)if(file.viewers[i].viewerId===dbId&&file.ownerId!==this.contactService.userContact.dbId)return!0;return!1})}getConsumptionData(){return this.consumptionData}getVoiceMessageFileDescriptorByMsgId(msgId){return this.voiceMessageFileDescriptors.find(file=>null!==file.tags&&file.tags.msgId===msgId)}createFileDescriptor(name,extension,size,viewers,voiceMessageData=null){return this.$q((resolve,reject)=>{let data={fileName:name,extension:extension,size:size,viewers:viewers};voiceMessageData&&(data.voicemessage=!0,data.encoding=!0,data.duration=voiceMessageData.duration),this.$http({method:"POST",url:this.portalURL,headers:this.authService.getRequestHeader(),data:data}).then(response=>{const fileDescriptor=this.createFileDescriptorFromData(response.data.data);this.$log.info("[FileStorageService] createFileDescriptor -- "+fileDescriptor.id+" -- success"),fileDescriptor&&this.fileDescriptors.push(fileDescriptor),this.orderDocuments(),resolve(fileDescriptor)}).catch(errorResponse=>{const error=this.errorHelperService.handleError(errorResponse,"createFileDescriptor");403153===error.errorDetailsCode&&(this.contactService.userContact.fileSharingEnabled=!1),this.$log.error("[FileStorageService] "+error.message),reject(error)})})}createFileDescriptorFromData(data){if(data){let viewers=[];if(data.viewers)for(let viewerData of data.viewers)viewers.push(this.fileViewerElementFactory(viewerData.viewerId,viewerData.type,viewerData.contact,this.contactService,this.channelService));let url=data.url;url||(url=config.restServerUrl+"/api/rainbow/fileserver/v1.0/files/"+data.id);var state="unknown";state=data.isUploaded?"uploaded":"not_uploaded";var virusScanState="unknown";virusScanState=null===data.isClean?"notScanned":!0===data.isClean?"isClean":"isInfected";var voiceMessage=!1;return data.tags&&"voicemail"===data.tags.purpose&&(voiceMessage=!0),this.fileDescriptorFactory(data.id,url,data.ownerId,data.fileName,data.extension,data.typeMIME,data.size,data.registrationDate,data.uploadedDate,data.dateToSort,viewers,state,data.thumbnail,data.orientation,data.tags,virusScanState,voiceMessage)}}deleteFileDescriptor(id){return this.$q((resolve,reject)=>{this.$http({method:"DELETE",url:this.portalURL+"/"+id,headers:this.authService.getRequestHeader()}).then(()=>{this.$log.info("[FileStorageService] deleteFileDescriptor -- success"),this.deleteFileDescriptorFromCache(id,!1),this.$rootScope.$broadcast("ON_FILE_REMOVED_FROM_STORE_EVENT",{fileId:id}),this.retrieveUserConsumption(),resolve(void 0)}).catch(errorResponse=>{let error=this.errorHelperService.handleError(errorResponse,"deleteFileDescriptor");reject(error),this.$log.error("[FileStorageService] "+error.message)})})}deleteAllFileDescriptor(){return this.$q((resolve,reject)=>{this.$http({method:"DELETE",url:this.portalURL+"/all",headers:this.authService.getRequestHeader()}).then(()=>{this.$log.info("[FileStorageService] deleteAllFileDescriptor -- success"),this.deleteAllFilesDescriptorsFromCache(),this.retrieveUserConsumption(),resolve()}).catch(errorResponse=>{let error=this.errorHelperService.handleError(errorResponse,"deleteAllFileDescriptor");this.$log.error("[FileStorageService]"+error.message),reject(error)})})}retrieveFileDescriptorsListPerOwner(){return this.fileDescriptors||(this.fileDescriptors=[]),this.$q((resolve,reject)=>{this.$http({method:"GET",url:this.portalURL+"?format=full&limit=1000",headers:this.authService.getRequestHeader()}).then(response=>{this.fileDescriptors=[];let fileDescriptorsData=response.data.data;fileDescriptorsData||resolve();let limit=response.data.limit,total=response.data.total,getAllFileDescriptorPromise=null;if(total<=limit)getAllFileDescriptorPromise=this.$q.resolve([]);else{let offset=limit,requestCount=total/limit,requestArray=[];for(let index=1;index<requestCount;index++)requestArray.push(this.retrieveFileDescriptorsListPerOwnerwithOffset(offset,limit)),offset+=limit;getAllFileDescriptorPromise=this.$q.all(requestArray)}getAllFileDescriptorPromise.then(responsesData=>{responsesData.forEach(responseData=>{fileDescriptorsData=fileDescriptorsData.concat(responseData)});for(let fileDescriptorData of fileDescriptorsData){let fileDescriptor=this.createFileDescriptorFromData(fileDescriptorData);"not_uploaded"===fileDescriptor.state?(this.$log.info("[FileStorageService] file "+fileDescriptor.fileName+" not uploaded"),fileDescriptor.ownerId===this.contactService.userContact.dbId?(this.$log.info("[FileStorageService] file "+fileDescriptor.fileName+" is our property, we can delete it"),this.deleteFileDescriptor(fileDescriptor.id)):this.$log.info("[FileStorageService] file "+fileDescriptor.fileName+" is NOT our property, we CANNOT delete it")):this.fileDescriptors.push(fileDescriptor)}this.$log.info("[FileStorageService] retrieveFileDescriptorsListPerOwner -- success"),resolve(this.fileDescriptors)})}).catch(errorResponse=>{let error=this.errorHelperService.handleError(errorResponse,"retrieveFileDescriptorsListPerOwner");reject(error),this.$log.error("[FileStorageService] "+error.message)})})}retrieveVoiceMessageFileDescriptorsListPerOwner(){return this.voiceMessageFileDescriptors||(this.voiceMessageFileDescriptors=[]),this.$q((resolve,reject)=>{this.$http({method:"GET",url:this.portalURL+"?format=full&path=/voice-messages",headers:this.authService.getRequestHeader()}).then(response=>{this.voiceMessageFileDescriptors=[];let fileDescriptorsData=response.data.data;fileDescriptorsData||resolve();for(let fileDescriptorData of fileDescriptorsData){let fileDescriptor=this.createFileDescriptorFromData(fileDescriptorData);"not_uploaded"===fileDescriptor.state?(this.$log.info("[FileStorageService] file "+fileDescriptor.fileName+" not uploaded"),fileDescriptor.ownerId===this.contactService.userContact.dbId?(this.$log.info("[FileStorageService] file "+fileDescriptor.fileName+" is our property, we can delete it"),this.deleteFileDescriptor(fileDescriptor.id)):this.$log.info("[FileStorageService] file "+fileDescriptor.fileName+" is NOT our property, we CANNOT delete it")):this.voiceMessageFileDescriptors.push(fileDescriptor)}this.$log.info("[FileStorageService] retrieveVoiceMessageFileDescriptorsListPerOwner -- success"),resolve(this.voiceMessageFileDescriptors)}).catch(errorResponse=>{let error=this.errorHelperService.handleError(errorResponse,"retrieveVoiceMessageFileDescriptorsListPerOwner");reject(error),this.$log.error("[FileStorageService] "+error.message)})})}retrieveFileDescriptorsListPerOwnerwithOffset(offset,limit){return this.$q((resolve,reject)=>{this.$http({method:"GET",url:this.portalURL+"?format=full&limit="+limit+"&offset="+offset,headers:this.authService.getRequestHeader()}).then(response=>{resolve(response.data.data)})})}retrieveFilesReceivedFromPeer(userId,peerId){return this.$q((resolve,reject)=>{this.$http({method:"GET",url:this.portalURL+"/viewers/"+userId+"?ownerId="+peerId+"&format=full",headers:this.authService.getRequestHeader()}).then(response=>{let receivedFileDescriptors=[],fileDescriptorsData=response.data.data;if(fileDescriptorsData)for(let fileDescriptorData of fileDescriptorsData){let fileDescriptor=this.createFileDescriptorFromData(fileDescriptorData);receivedFileDescriptors.push(fileDescriptor)}this.$log.info("[FileStorageService] retrieveFilesReceivedFromPeer success"),resolve(receivedFileDescriptors)}).catch(errorResponse=>{let error=this.errorHelperService.handleError(errorResponse,"retrieveFilesReceivedFromPeer");this.$log.error("[FileStorageService] "+error.message),reject(error)})})}retrieveSentFiles(peerId){return this.$log.info("[FileStorageService] >retrieveSentFiles"),this.$q((resolve,reject)=>{this.$http({method:"GET",url:this.portalURL+"?format=full&viewerId="+peerId,headers:this.authService.getRequestHeader()}).then(response=>{let sentFilesDescriptors=[],fileDescriptorsData=response.data.data;if(fileDescriptorsData)for(let fileDescriptorData of fileDescriptorsData){let fileDescriptor=this.createFileDescriptorFromData(fileDescriptorData);"not_uploaded"===fileDescriptor.state?this.$log.warn("[FileStorageService] file "+fileDescriptor.fileName+" not uploaded"):sentFilesDescriptors.push(fileDescriptor)}this.$log.info("[FileStorageService] retrieveSentFiles success"),resolve(sentFilesDescriptors)}).catch(errorResponse=>{let error=this.errorHelperService.handleError(errorResponse,"retrieveSentFiles");this.$log.error("[FileStorageService] "+error.message),reject(error)})})}retrieveReceivedFilesForRoom(roomId){return this.$q((resolve,reject)=>{this.$http({method:"GET",url:this.portalURL+"/viewers/"+roomId+"?format=full",headers:this.authService.getRequestHeader()}).then(response=>{let fileDescriptorsData=response.data.data,result=[];fileDescriptorsData?(fileDescriptorsData.forEach(fileDescriptorData=>{if(fileDescriptorData.ownerId!==this.contactService.userContact.dbId){fileDescriptorData.viewers=[];let newFileDesc=this.createFileDescriptorFromData(fileDescriptorData);result.push(newFileDesc),this.receivedFileDescriptors.find(fd=>fd.id===fileDescriptorData.id)||this.receivedFileDescriptors.push(newFileDesc)}}),resolve(result)):resolve(result)}).catch(errorResponse=>{let error=this.errorHelperService.handleError(errorResponse,"retrieveReceivedFilesForRoom");this.$log.error("[FileStorageService] "+error.message),reject(error)})})}retrieveReceivedFiles(viewerId){return this.receivedFileDescriptors||(this.receivedFileDescriptors=[]),this.$q((resolve,reject)=>{this.$http({method:"GET",url:this.portalURL+"/viewers/"+viewerId+"?format=full&limit=1000",headers:this.authService.getRequestHeader()}).then(response=>{this.receivedFileDescriptors=[];let fileDescriptorsData=response.data.data;if(!fileDescriptorsData)return void resolve();let limit=response.data.limit,total=response.data.total,getReceivedFileDescriptorPromise=null;if(total<=limit)getReceivedFileDescriptorPromise=this.$q.resolve([]);else{let offset=limit,requestCount=total/limit,requestArray=[];for(let index=1;index<requestCount;index++)requestArray.push(this.retrieveReceivedFilesWithOffset(viewerId,offset,limit)),offset+=limit;getReceivedFileDescriptorPromise=this.$q.all(requestArray)}getReceivedFileDescriptorPromise.then(responsesData=>{responsesData.forEach(responseData=>{fileDescriptorsData=fileDescriptorsData.concat(responseData)});for(let fileDescriptorItem of fileDescriptorsData){let fileDescriptor=this.createFileDescriptorFromData(fileDescriptorItem);if(fileDescriptor.ownerId!==this.contactService.userContact.dbId){let oldFileDesc=this.getFileDescriptorById(fileDescriptor.id);oldFileDesc&&(fileDescriptor.previewBlob=oldFileDesc.previewBlob),this.receivedFileDescriptors.push(fileDescriptor)}}this.orderReceivedDocuments(),this.$log.info("[FileStorageService] retrieveReceivedFiles -- success"),resolve(this.receivedFileDescriptors)})}).catch(errorResponse=>{let error=this.errorHelperService.handleError(errorResponse,"retrieveReceivedFiles");this.$log.error("[FileStorageService] "+error.message),reject(error)})})}retrieveReceivedFilesWithOffset(viewerId,offset,limit){return this.$q((resolve,reject)=>{this.$http({method:"GET",url:this.portalURL+"/viewers/"+viewerId+"?format=full&limit="+limit+"&offset="+offset,headers:this.authService.getRequestHeader()}).then(response=>{resolve(response.data.data)})})}retrieveUserConsumption(){return this.$q((resolve,reject)=>{this.$http({method:"GET",url:config.restServerUrl+"/api/rainbow/filestorage/v1.0/users/consumption",headers:this.authService.getRequestHeader()}).then(response=>{this.consumptionData=response.data.data,this.$log.info("[FileStorageService] retrieveUserConsumption success"),this.$rootScope.$broadcast("ON_CONSUMPTION_DATA_UPDATED_EVENT"),resolve(this.consumptionData)}).catch(errorResponse=>{let error=this.errorHelperService.handleError(errorResponse,"retrieveUserConsumption");this.$log.error("[FileStorageService] "+error.message),reject(error)})})}deleteFileViewer(viewerId,fileId){return this.$q((resolve,reject)=>{this.$http({method:"DELETE",url:this.portalURL+"/"+fileId+"/viewers/"+viewerId,headers:this.authService.getRequestHeader()}).then(response=>{this.$log.info("[FileStorageService] deleteFileViewer "+response.statusText);let fd=this.getFileDescriptorById(fileId);if(fd){let index=-1;for(let i=0;i<fd.viewers.length;i++)if(fd.viewers[i].viewerId===viewerId){index=i;break}-1!==index&&fd.viewers.splice(index,1)}resolve()},errorResponse=>{let error=this.errorHelperService.handleError(errorResponse,"deleteFileViewer");reject(error),this.$log.error("[FileStorageService] "+error.message)})})}addFileViewer(fileId,viewerId,viewerType){let fileDescriptor=this.getFileDescriptorById(fileId);return fileDescriptor&&fileDescriptor.isAlreadyFileViewer(viewerId)?this.$q.resolve(fileDescriptor):this.$q((resolve,reject)=>{this.$http({method:"POST",url:this.portalURL+"/"+fileId+"/viewers",headers:this.authService.getRequestHeader(),data:{viewerId:viewerId,type:viewerType}}).then(response=>{this.$log.info("[FileStorageService] addFileViewer success");let fd=this.getFileDescriptorById(fileId);if(fd){var viewerAdded=this.fileViewerFactory([{viewerId:response.data.data.viewerId,type:response.data.data.type}])[0];"user"===viewerAdded.type?this.contactService.getContactByDBId(viewerId).then(contact=>{viewerAdded.contact=contact,fd.viewers.push(viewerAdded),resolve(fd)}).catch(error=>{this.$log.error("[FileStorageService] "+error),reject(error)}):(fd.viewers.push(viewerAdded),resolve(fd))}},errorResponse=>{const error=this.errorHelperService.handleError(errorResponse,"addFileViewer");reject(error),this.$log.error("[FileStorageService] "+error.message)})})}copyFileToUserCloudStorage(fileId){return this.$q((resolve,reject)=>{this.$http({method:"POST",url:this.portalURL+"/"+fileId+"/copy",headers:this.authService.getRequestHeader()}).then(response=>{this.$log.info("[FileStorageService] copyFileToUserCloudStorage | copyFile "+fileId+" -- success"),this.retrieveAndStoreOneFileDescriptor(response.data.data.id,!0).then(fileDescriptor=>{resolve(fileDescriptor)}).catch(error=>{reject(error)})}).catch(errorResponse=>{let error=this.errorHelperService.handleError(errorResponse,"copyFileToUserCloudStorage");this.$log.error("[FileStorageService] copyFileToUserCloudStorage "+error.message),reject(error)})})}retrieveOneFileDescriptor(fileId){return this.$q((resolve,reject)=>{this.$http({method:"GET",url:this.portalURL+"/"+fileId+"?format=full",headers:this.authService.getRequestHeader()}).then(response=>{let fileDescriptor=this.createFileDescriptorFromData(response.data.data);this.$log.info("[FileStorageService] getOneFileDescriptor "+fileId+" -- success"),resolve(fileDescriptor)}).catch(errorResponse=>{let error=this.errorHelperService.handleError(errorResponse,"getOneFileDescriptor");this.$log.error("[FileStorageService] "+error.message),reject(error)})})}retrieveAndStoreOneFileDescriptor(fileId,forceRetrieve){let fileDescriptor=this.getFileDescriptorById(fileId);return fileDescriptor&&!forceRetrieve?(this.$log.info("[FileStorageService] retrieveAndStoreOneFileDescriptor -- return existing fileDescriptor "+fileId),this.$q.resolve(fileDescriptor)):this.retrieveOneFileDescriptor(fileId).then(retrievedFileDescriptor=>{fileDescriptor&&fileDescriptor.isImage()&&(retrievedFileDescriptor.previewBlob=fileDescriptor.previewBlob);let oldFileDescriptorIndex=this.helpersService.findIndex(this.fileDescriptors,_fileDescriptor=>_fileDescriptor.id===retrievedFileDescriptor.id);oldFileDescriptorIndex>-1&&this.fileDescriptors.splice(oldFileDescriptorIndex,1);let oldReceivedFileDescriptorIndex=this.helpersService.findIndex(this.receivedFileDescriptors,_fileDescriptor=>_fileDescriptor.id===retrievedFileDescriptor.id);if(oldReceivedFileDescriptorIndex>-1&&this.receivedFileDescriptors.splice(oldReceivedFileDescriptorIndex,1),retrievedFileDescriptor.ownerId===this.contactService.userContact.dbId)this.fileDescriptors.push(retrievedFileDescriptor),this.$log.info("[FileStorageService] retrieveAndStoreOneFileDescriptor -- fileDescriptor "+retrievedFileDescriptor.id+" -- now stored in my files");else{this.receivedFileDescriptors.push(retrievedFileDescriptor),this.$log.info("[FileStorageService] retrieveAndStoreOneFileDescriptor -- fileDescriptor "+retrievedFileDescriptor.id+" -- now stored in received files"),this.$rootScope.$broadcast("ON_MESSAGE_WITH_FILE_RECEIVED_EVENT")}return this.orderDocuments(),this.$rootScope.$broadcast("ON_FILE_DESCRIPTOR_RECEIVED_EVENT",{fileId:retrievedFileDescriptor.id}),this.$q.resolve(retrievedFileDescriptor)}).catch(errorResponse=>{this.$log.warn("[FileStorageService] Error on getting FileDescriptor: "+errorResponse.errorDetailsCode);let error=this.errorHelperService.handleError(errorResponse,"retrieveAndStoreOneFileDescriptor");return error.status>=400&&error.status<500&&fileDescriptor&&(404===error.status&&this.deleteFileDescriptorFromCache(fileDescriptor.id,!0),this.orderDocuments(),this.$log.debug("[FileStorageService] Sending ON_FILE_REMOVED_FROM_STORE_EVENT"),this.$rootScope.$broadcast("ON_FILE_REMOVED_FROM_STORE_EVENT",{fileId:fileDescriptor.id})),this.$q.reject(errorResponse)})}deleteFileDescriptorFromCache(id,forceDelete){this.$log.info("[FileStorageService] deleteFileDescriptorFromCache "+id);for(let index=0;index<this.receivedFileDescriptors.length;index++)if(this.receivedFileDescriptors[index].id===id){this.receivedFileDescriptors.splice(index,1);break}for(let index=0;index<this.fileDescriptors.length;index++)if(this.fileDescriptors[index].id===id){forceDelete?this.fileDescriptors.splice(index,1):this.fileDescriptors[index].state="deleted";break}this.orderDocuments()}deleteAllFilesDescriptorsFromCache(){this.$log.info("[FileStorageService] deleteAllFilesDesceiptorsFromCache"),this.fileDescriptors.forEach(fileDescriptor=>{fileDescriptor.state="deleted",this.receivedFileDescriptors.forEach((receivedFileDescriptor,index)=>{receivedFileDescriptor.id===fileDescriptor.id&&this.receivedFileDescriptors.splice(index,1)})}),this.fileDescriptors=[],this.orderDocuments()}orderDocuments(){this.$log.debug("[FileStorageService] orderDocuments: "+this.fileDescriptors.length),this.replaceOrderedByFilter(this.fileDescriptorsByDate,this.fileDescriptors,this.getDate,!1,this.sortByDate),this.replaceOrderedByFilter(this.fileDescriptorsByName,this.fileDescriptors,this.getName,!1,this.sortByName),this.replaceOrderedByFilter(this.fileDescriptorsBySize,this.fileDescriptors,this.getSize,!1,this.sortBySize),this.orderReceivedDocuments()}orderReceivedDocuments(){this.$log.debug("[FileStorageService] orderReceivedDocuments: "+this.receivedFileDescriptors.length),this.replaceOrderedByFilter(this.receivedFileDescriptorsByName,this.receivedFileDescriptors,this.getName,!1,this.sortByName),this.replaceOrderedByFilter(this.receivedFileDescriptorsByDate,this.receivedFileDescriptors,this.getDate,!1,this.sortByDate),this.replaceOrderedByFilter(this.receivedFileDescriptorsBySize,this.receivedFileDescriptors,this.getSize,!1,this.sortBySize)}orderDocumentsForRoom(documents){return this.orderByFilter(documents,this.getDate,!1,this.sortByDate)}replaceOrderedByFilter(resultArray,originalArray,filterFct,flag,sortFct){this.$log.debug("[FileStorageService] replaceOrderedByFilter"),resultArray.length=0;let orderedArrayResult=this.orderByFilter(originalArray,filterFct,flag,sortFct);for(let fileResult of orderedArrayResult)"deleted"!==fileResult.state&&resultArray.push(fileResult)}getName(file){let date,result={name:"",date:""};return file.fileName&&(result.name=file.fileName),date=file.uploadedDate?new Date(file.uploadedDate):file.registrationDate?new Date(file.registrationDate):new Date(file.dateToSort),result.date=date.getTime(),result}getDate(file){let date;return(date=file.uploadedDate?new Date(file.uploadedDate):file.registrationDate?new Date(file.registrationDate):new Date(file.dateToSort)).getTime()}getSize(file){let result={name:"",size:""};return file.name&&(result.name=file.fileName),result.size=file.size,result}sortByName(fileA,fileB){let res=-1;return fileA.value.name&&fileB.value.name&&0===(res=fileA.value.name.localeCompare(fileB.value.name))&&(res=fileB.value.date-fileA.value.date),res}sortBySize(fileA,fileB){let res=-1;return fileA.value.size&&fileB.value.size&&(res=fileB.value.size-fileA.value.size),res}sortByDate(fileA,fileB){let res=1;return fileA&&fileB&&(res=fileB.value-fileA.value),res}extractFileIdFromUrl(url){let parts=url.split("/");return parts.pop()||parts.pop()}retrieveAndStoreOneVoiceMessageFileDescriptor(fileId){this.retrieveOneFileDescriptor(fileId).then(retrievedFileDescriptor=>{if(retrievedFileDescriptor.tags&&"/voice-messages"===retrievedFileDescriptor.tags.path){if(void 0!==this.voiceMessageFileDescriptors.find(file=>file.id===fileId)){let fileDescriptorIndex=this.voiceMessageFileDescriptors.findIndex(oneFileDescriptor=>oneFileDescriptor.id===retrievedFileDescriptor.id);fileDescriptorIndex>-1&&this.voiceMessageFileDescriptors.splice(fileDescriptorIndex,1,retrievedFileDescriptor),this.$log.info("[FileStorageService] getRetrieveAndStoreOneVoiceMessageFileDescriptor "+fileId+" -- success")}else this.voiceMessageFileDescriptors.push(retrievedFileDescriptor)}})}deleteVoiceMessageFileDescriptor(fileId){this.$log.info("[FileStorageService] deleteVoiceMessageFileDescriptore "+fileId);let fileDescriptorExist=this.voiceMessageFileDescriptors.find(file=>file.id===fileId);if(void 0!==fileDescriptorExist){let fileDescriptorIndex=this.voiceMessageFileDescriptors.findIndex(oneFileDescriptor=>oneFileDescriptor.id===fileDescriptorExist.id);fileDescriptorIndex>-1&&this.voiceMessageFileDescriptors.splice(fileDescriptorIndex,1)}}}FileStorageService.$inject=["$injector","$q","$http","$log","$rootScope","authService","fileViewerFactory","errorHelperService","orderByFilter","contactService","helpersService","fileViewerElementFactory","fileDescriptorFactory"],angular.module("rainbow").service("fileStorageService",FileStorageService)},function(module,exports){angular.module("rainbow").factory("FileDescriptorEventHandler",["$log","$rootScope","contactService",function($log,$rootScope,contactService){"use strict";function FileDescriptorEventHandler(fileServerService){var that=this;this.fileServerService=fileServerService,this.fileStorageService=fileServerService.getFileStorageService(),that.onManagementMessageReceived=function(stanza){try{var stanzaElem=$(stanza);return stanzaElem.find("file").length>0?this.manageFileStanzaData(stanzaElem.find("file")):stanzaElem.find("thumbnail").length>0?this.manageThumbnailStanzaData(stanzaElem.find("thumbnail")):$log.info("[FileDescriptorEventHandler] onManagementMessageReceived  -- ignore the message"),!0}catch(error){return $log.error("[FileDescriptorEventHandler] onManagementMessageReceived ERROR "+error),!0}},that.manageFileStanzaData=function(stanza){for(var action=$(stanza).attr("action"),filesId=$(stanza).find("fileid"),updateConsumption=!1,i=0;i<filesId.length;i++){var fileId=$(filesId[i]).text(),fileDescriptor=this.fileStorageService.getFileDescriptorById(fileId);switch($log.info("[FileDescriptorEventHandler] manageFileStanzaData -- "+action+" fileDescriptor "+fileId),action){case"create":$log.debug("[FileDescriptorEventHandler] fileDescriptor "+fileId+" created on server -- do nothing");break;case"delete":fileDescriptor&&(fileDescriptor.ownerId===contactService.userContact.dbId&&"deleted"!==fileDescriptor.state&&(updateConsumption=!0),this.fileStorageService.deleteFileDescriptorFromCache(fileId),this.fileStorageService.deleteVoiceMessageFileDescriptor(fileId),$rootScope.$broadcast("ON_FILE_REMOVED_FROM_STORE_EVENT",{fileId:fileId}));break;case"update":fileDescriptor||(updateConsumption=!0),that.fileStorageService.retrieveAndStoreOneFileDescriptor(fileId,!0).then((function(fileDesc){$log.info("[FileDescriptorEventHandler] fileDescriptor retrieved"),fileDesc.previewBlob||that.fileServerService.getBlobThumbnailFromFileDescriptor(fileDesc).then((function(blob){fileDesc.previewBlob=blob,$rootScope.$broadcast("ON_FILE_DESCRIPTOR_RECEIVED_EVENT",{fileId:fileDesc.id})}))})),that.fileStorageService.retrieveAndStoreOneVoiceMessageFileDescriptor(fileId)}}updateConsumption&&this.fileStorageService.retrieveUserConsumption()},that.manageThumbnailStanzaData=function(stanza){var action=$(stanza).attr("action"),fileId=$(stanza).find("fileid").text(),fileUrl=$(stanza).find("url").text(),fileMime=$(stanza).find("mime").text(),fileName=$(stanza).find("filename").text(),fileSize=$(stanza).find("size").text(),md5sum=$(stanza).find("md5sum").text();if($log.info("[FileDescriptorEventHandler] manageThumbnailStanzaData -- "+action+" fileDescriptor "+fileId),$log.debug("[FileDescriptorEventHandler]   fileUrl="+fileUrl),$log.debug("[FileDescriptorEventHandler]   fileMime="+fileMime),$log.debug("[FileDescriptorEventHandler]   fileName="+fileName),$log.debug("[FileDescriptorEventHandler]   fileSize="+fileSize),$log.debug("[FileDescriptorEventHandler]   md5sum="+md5sum),$log.debug("[FileDescriptorEventHandler]   fileId="+fileId),"create"===action||"update"===action){var fileDescriptor=this.fileStorageService.getFileDescriptorById(fileId);fileDescriptor?($log.debug("[FileDescriptorEventHandler] updating Thumbnail of found FileDescriptor "+fileId),fileDescriptor.previewBlob&&!fileDescriptor.thumbnail.availableThumbnail||!fileDescriptor.previewBlob?($rootScope.$broadcast("ON_FILE_DESCRIPTOR_THUMBNAIL_READY",fileDescriptor.id),fileDescriptor.thumbnail.availableThumbnail=!0,fileDescriptor.thumbnail.md5sum=md5sum,fileDescriptor.thumbnail.size=fileSize,$log.info("[FileDescriptorEventHandler] preview not already downloaded for "+fileId+" -- download it"),this.fileServerService.getBlobThumbnailFromFileDescriptor(fileDescriptor).then((function(){$rootScope.$broadcast("ON_FILE_DESCRIPTOR_RECEIVED_EVENT",{fileId:fileDescriptor.id})}))):($rootScope.$broadcast("ON_FILE_DESCRIPTOR_THUMBNAIL_READY",fileDescriptor.id),$log.info("[FileDescriptorEventHandler] preview already downloaded for "+fileId+" -- do nothing"))):$log.error("[FileDescriptorEventHandler] FileDescriptor not found and we do nothing and its not OK")}}}return FileDescriptorEventHandler.create=function(fileServerService){return new FileDescriptorEventHandler(fileServerService)},FileDescriptorEventHandler}])},function(module,exports){angular.module("rainbow").service("extensionSharingService",["$q","$log","$rootScope",function($q,$log,$rootScope){"use strict";var that=this;this.extensionFound=!1,this.minVersion="1.5.1",this.port=null,this.currentStreamId="screen",this.start=function(){this.extensionId=this.extensionId||this.getExtensionId(config.webservices.server);var defered=$q.defer();return $log.info("[extensionService] === STARTING ==="),window.chrome&&window.chrome.runtime?($log.info("[extensionService] Chrome extension - try to ping...",this.extensionId),chrome.runtime.sendMessage(this.extensionId,{type:"ping",data:null},null,(function(extensionMessageResponse){extensionMessageResponse&&"pong"===extensionMessageResponse.type?($log.info("[extensionService] Chrome extension - pong received"),$log.info("[extensionService] Chrome extension - extension installed and detected"),$log.info("[extensionService] Chrome extension - try to connect..."),that.port=chrome.runtime.connect(that.extensionId),that.port?($log.info("[extensionService] Chrome extension - port created"),that.port.onDisconnect.addListener((function(){$log.info("Extension DISCONNECTED"),that.extensionFound=!1,that.port=null})),that.port.onMessage.addListener((function(msg){switch($log.info("[extensionService] Chrome extension - connected"),msg.type){case"loginResponse":that.extensionFound=!0,$log.info("[extensionService] Chrome extension - ready!"),$log.info("[extensionService] === STARTED ==="),$rootScope.$broadcast("ON_EXTENSION_SHARING_READY"),defered.resolve();break;case"getVersionResponse":0===msg.code&&msg.version?($rootScope.$broadcast("ON_EXTENSION_VERSION_UPDATED",msg.version),$log.info("[extensionService] Chrome extension - Detected version "+msg.version)):($rootScope.$broadcast("ON_EXTENSION_VERSION_UPDATED",null),$log.error("[extensionService] Chrome extension - No version received"));break;case"startsharingResponse":0===msg.code&&msg.streamID?($log.info("[extensionService] Chrome extension - stream ID received "+msg.streamID),$rootScope.$broadcast("ON_EXTENSION_SHARING_STREAM_FOUND",msg.streamID)):($log.info("[extensionService] Chrome extension - No stream ID received"),$rootScope.$broadcast("ON_EXTENSION_SHARING_STREAM_FOUND",null));break;case"endsharingResponse":$log.info("[extensionService] Chrome extension - end sharing session received")}})),that.port.postMessage({type:"login",data:null})):($log.info("[extensionService] Chrome extension - can't create port to contact the extension!!!"),$log.info("[extensionService] === STARTED ==="),defered.resolve())):($log.info("[extensionService] Chrome extension - not found"),chrome.runtime.lastError&&$log.info("[extensionService] Chrome extension - error "+chrome.runtime.lastError),defered.resolve())}))):($log.info("[extensionService] Not in chrome"),$log.info("[extensionService] === STARTED ==="),defered.resolve()),defered.promise},this.stop=function(){return $log.info("[extensionService] === STOPPING ==="),$log.info("[extensionService] === STOPPED ==="),$q.when()},this.getExtensionId=function(domain){return $log.info("Detected domain : "+domain),-1!==domain.indexOf("openrainbow.net")?"koefhabbjedbiecnldkolbijjfjinogj":-1!==domain.indexOf("openrainbow.org")?"ehamhlkmecdnidihfedapmplddlbidee":-1!==domain.indexOf("openrainbow.com")?"mgneongoclkopahpapenfhbbeckhdmnj":($log.error("Unkown domain, extension may not be available"),"mgneongoclkopahpapenfhbbeckhdmnj")},this.setExtensionId=function(extensionId){$log.info("set extensionId to : "+extensionId),this.extensionId=extensionId},this.getStreamToShareFromExtension=function(constraints){var defered=$q.defer(),callback=$rootScope.$on("ON_EXTENSION_SHARING_STREAM_FOUND",(function(__event,streamid){that.currentStreamId=streamid,callback(),streamid?(constraints.video.mandatory.chromeMediaSourceId=streamid,defered.resolve()):defered.reject()}));return this.port.postMessage({type:"startsharing",data:null}),defered.promise},this.getStreamId=function(){return this.currentStreamId},this.isExtensionInstalled=function(){var defered=$q.defer();return this.extensionFound?defered.resolve(!0):this.start().then((function(){defered.resolve(that.extensionFound)})),defered.promise},this.getExtensionVersion=function(){var defered=$q.defer(),callback=$rootScope.$on("ON_EXTENSION_VERSION_UPDATED",(function(__event,version){callback(),version?defered.resolve(version):defered.reject()}));return this.port.postMessage({type:"getVersion",data:null}),defered.promise},this.checkExtensionStatus=function(){var defered=$q.defer();return"chrome"!==adapter.default.browserDetails.browser?defered.resolve("notNeeded"):this.isExtensionInstalled().then((function(isInstalled){isInstalled?that.checkVersion().then((function(isUpToDate){isUpToDate?defered.resolve("good"):defered.resolve("needUpdate")})):defered.resolve("notInstalled")})),defered.promise},this.checkVersion=function(){var defered=$q.defer();return this.getExtensionVersion().then((function(version){defered.resolve(that.cmpVersions(version,that.minVersion)>=0)})),defered.promise},this.cmpVersions=function(curVersion,minVersion){var i,diff,regExStrip0=/(\.0+)+$/,segmentsA=curVersion.replace(regExStrip0,"").split("."),segmentsB=minVersion.replace(regExStrip0,"").split("."),length=Math.min(segmentsA.length,segmentsB.length);for(i=0;i<length;i++)if(diff=parseInt(segmentsA[i],10)-parseInt(segmentsB[i],10))return diff;return segmentsA.length-segmentsB.length}}])},function(module,exports,__webpack_require__){var __awaiter=this&&this.__awaiter||function(thisArg,_arguments,P,generator){return new(P||(P=Promise))((function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){var value;result.done?resolve(result.value):(value=result.value,value instanceof P?value:new P((function(resolve){resolve(value)}))).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())}))};class PstnConferenceService{constructor($q,$rootScope,$log,$http,authService,errorHelperService,ConferenceSession,profileService,xmppService,countryService,Conference,contactService,$translate){this.$q=$q,this.$rootScope=$rootScope,this.$log=$log,this.$http=$http,this.authService=authService,this.errorHelperService=errorHelperService,this.ConferenceSession=ConferenceSession,this.profileService=profileService,this.xmppService=xmppService,this.countryService=countryService,this.Conference=Conference,this.contactService=contactService,this.$translate=$translate,this.MEDIATYPE={PSTNAUDIO:"pstnAudio",WEBRTC:"webrtc",WEBRTCSHARINGONLY:"webrtcSharingOnly"},this.started=!1,this.conferenceProvisionRef=null,this.isPstnConferenceAvailable=!1,this.conferenceSessions={},this.pstnConferenceEndpoints={},this.pstnInstantConferenceEndpoint=null,this.pstnConferencePhoneNumbers=null}start(stats){return this.$q(resolve=>{let startDate=performance.now();this.$log.info("[PstnConferenceService] === STARTING ==="),this.isPstnConferenceAvailable=!1,this.conferenceSessions={},this.pstnConferenceEndpoints={},this.pstnInstantConferenceEndpoint=null,this.pstnConferencePhoneNumbers=null,this.confProvPortalURL=config.restServerUrl+"/api/rainbow/confprovisioning/v1.0/",this.confPortalURL=config.restServerUrl+"/api/rainbow/conference/v1.0/conferences/",this.started=!0;let startDuration=Math.round(performance.now()-startDate);stats.push({service:"pstnConferenceService",startDuration:startDuration}),this.$log.info("[PstnConferenceService] === STARTED ("+startDuration+" ms) ==="),resolve()})}stop(){return this.$q(resolve=>{this.$log.info(""),this.$log.info("[PstnConferenceService] === STOPPING ==="),this.started=!1,this.$log.info("[PstnConferenceService] === STOPPED ==="),resolve()})}updateConference(confEndpointId,confData){return this.$log.info("[PstnConferenceService] updateConference"),this.$q((resolve,reject)=>{if(confEndpointId)this.$http({method:"PUT",url:this.confProvPortalURL+"conferences/"+confEndpointId,headers:this.authService.getRequestHeader(),data:confData}).then(response=>{let conferenceData=response.data.data,conference=this.Conference.createFromData(conferenceData);conferenceData.hasOwnProperty("id")&&(this.pstnConferenceEndpoints[conferenceData.id]&&delete this.pstnConferenceEndpoints[conferenceData.id],this.pstnConferenceEndpoints[conferenceData.id]=conference,conferenceData.scheduled||(delete this.pstnInstantConferenceEndpoint,this.pstnInstantConferenceEndpoint=conference)),this.$log.info("[PstnConferenceService] updateConference successfully"),resolve(conference)},response=>{let errorMessage="updateConference failure: "+(response.data?response.data.errorDetails:response.data);this.$log.error("[PstnConferenceService] "+errorMessage),reject(new Error(errorMessage))});else{let errorMessage="updateConference failure: No confEndpoint";this.$log.error("[PstnConferenceService] updateConference failure : No confEndpoint"),reject(new Error(errorMessage))}})}retrievePstnConferences(scheduled,provisioning){return this.$log.info("[PstnConferenceService] retrievePstnConferences with scheduled="+scheduled),this.$q((resolve,reject)=>{if(!this.isPstnConferenceAvailable)return this.$log.warn("[PstnConferenceService] retrieveConference - user is not allowed"),void reject(new Error("notAllowed"));let urlQueryParameters="?format=full&userId="+this.contactService.userContact.dbId+"&mediaType="+this.MEDIATYPE.PSTNAUDIO;angular.isDefined(scheduled)&&(urlQueryParameters+="&scheduled="+scheduled),provisioning&&(urlQueryParameters+="&provisioning=true"),this.$http({method:"GET",url:this.confProvPortalURL+"conferences"+urlQueryParameters,headers:this.authService.getRequestHeader()}).then(response=>{let conferencesProvisionData=response.data.data;for(let conferenceData of conferencesProvisionData)this.updateOrCreatePstnConferenceEndpoint(conferenceData);this.$log.info("[PstnConferenceService] retrievePstnConferences successfully"),resolve(conferencesProvisionData)},response=>{let errorMessage="retrievePstnConferences failure: "+(response.data?response.data.errorDetails:response.data);this.$log.error("[PstnConferenceService] "+errorMessage),reject(new Error(errorMessage))})})}updateOrCreateConferenceSession(confId,snapshotData){if(this.$log.debug("[PstnConferenceService] updateOrCreateConferenceSession for "+confId),!confId||!snapshotData||!snapshotData.data)return this.$log.error("[PstnConferenceService] updateOrCreateConferenceSession - Not enough data"),null;let conferenceSession=this.conferenceSessions[confId];return conferenceSession?snapshotData.data.active!==conferenceSession.active&&(this.$log.debug("active"),conferenceSession.updateActiveState(snapshotData.data.active),this.$rootScope.$broadcast("ON_CONFERENCE_STATE_EVENT",conferenceSession)):(this.$log.debug("[PstnConferenceService] updateOrCreateConferenceSession - create new conferencesession with id "+confId+"and data: \n"+JSON.stringify(snapshotData.data)),conferenceSession=this.ConferenceSession.createFromData(confId,[],snapshotData.data.active,this.MEDIATYPE.PSTNAUDIO),this.conferenceSessions[confId]=conferenceSession,this.$rootScope.$broadcast("ON_CONFERENCE_STATE_EVENT",conferenceSession)),snapshotData.data.participants&&(this.$log.debug("[PstnConferenceService] updateOrCreateConferenceSession - update participants for "+confId+" with:\n"+JSON.stringify(snapshotData.data.participants)),conferenceSession.updateParticipants(snapshotData.data.participants).then(()=>{this.$rootScope.$broadcast("ON_CONFERENCE_PARTICIPANT_EVENT",conferenceSession)})),conferenceSession}updateOrCreatePstnConferenceEndpoint(conferenceData){if(this.$log.info("[PstnConferenceService] updateOrCreatePstnConferenceEndpoint for "+conferenceData.id),!conferenceData)return this.$log.error("[PstnConferenceService] updateOrCreatePstnConferenceEndpoint - no conference data !"),null;if(conferenceData.mediaType!==this.MEDIATYPE.PSTNAUDIO)return this.$log.error("[PstnConferenceService] updateOrCreatePstnConferenceEndpoint - wrong mediaType:"+conferenceData.mediaType),null;let conference=this.Conference.createFromData(conferenceData);return this.pstnConferenceEndpoints[conferenceData.id]=conference,conference.scheduled||(this.pstnInstantConferenceEndpoint=conference,this.pstnInstantConferenceEndpoint.name||this.updateConference(this.pstnInstantConferenceEndpoint.id,{name:this.$translate.instant("namePersonalConference",{name:this.contactService.userContact.displayName})})),this.pstnConferenceEndpoints[conferenceData.id]}formatPstnPhoneNumbers(phoneNumbers){this.$log.info("[PstnConferenceService] formatPstnPhoneNumbers");let pstnConferencePhoneNumbers={};return phoneNumbers.forEach(phoneNumber=>{if(phoneNumber.locationcode){let propertyName=this.countryService.getAlpha2Code(phoneNumber.locationcode.substr(0,3));propertyName&&(pstnConferencePhoneNumbers[propertyName]||(pstnConferencePhoneNumbers[propertyName]={numbersList:[]})),pstnConferencePhoneNumbers[propertyName].numbersList.push({number:phoneNumber.number,locationName:phoneNumber.location,city:phoneNumber.location.split(", ")[1],numberType:phoneNumber.numberType,needLanguageSelection:phoneNumber.needLanguageSelection})}}),pstnConferencePhoneNumbers}retrievePstnPhoneNumbers(shouldFormatResults){return this.$log.info("[ConferenceService] retrievePstnPhoneNumbers"),this.pstnConferencePhoneNumbers?shouldFormatResults?this.$q.resolve(this.formatPstnPhoneNumbers(this.pstnConferencePhoneNumbers)):this.$q.resolve(this.pstnConferencePhoneNumbers):this.$q((resolve,reject)=>{this.$http({method:"GET",url:this.confProvPortalURL+"conferences/audio/phonenumbers?shortList=false",headers:this.authService.getRequestHeader()}).then(response=>{this.$log.info("[PstnConferenceService] retrievePstnPhoneNumbers successfully"),this.pstnConferencePhoneNumbers=response.data.data.phoneNumberList,resolve(shouldFormatResults?this.formatPstnPhoneNumbers(this.pstnConferencePhoneNumbers):this.pstnConferencePhoneNumbers)},response=>{let errorMessage="retrievePstnPhoneNumbers failure: "+(response.data?response.data.errorDetails:response.data);this.$log.error("[PstnConferenceService] "+errorMessage),reject(new Error(errorMessage))})})}retrievePstnInstantConference(){return this.isPstnConferenceAvailable?this.retrievePstnConferences(!1).then(conferenceData=>(conferenceData.forEach(data=>{if(data.hasOwnProperty("id")){let conference=this.Conference.createFromData(data);conference.mediaType!==this.MEDIATYPE.PSTNAUDIO||conference.userId!==this.contactService.userContact.dbId||conference.scheduled||(this.pstnConferenceEndpoints[conferenceData.id]=conference,this.pstnInstantConferenceEndpoint=conference,this.pstnInstantConferenceEndpoint.name||this.updateConference(this.pstnInstantConferenceEndpoint.id,{name:this.$translate.instant("namePersonalConference",{name:this.contactService.userContact.displayName})}))}}),this.$q.resolve()),()=>(this.$log.warn("[PstnConferenceService] retrievePstnInstantConference - issue retrieving instant conference"),this.$q.resolve())):(this.$log.info("[PstnConferenceService] retrievePstnInstantConference -- No conference rights"),this.$q.resolve())}getConferenceSessionById(confId){return this.conferenceSessions[confId]}getConferenceSessionForRoom(roomConfEndpoints){let pstnSession=null;if(roomConfEndpoints&&roomConfEndpoints.length)for(let i=0;i<roomConfEndpoints.length;i++)roomConfEndpoints[i].mediaType===this.MEDIATYPE.PSTNAUDIO&&(pstnSession=this.conferenceSessions[roomConfEndpoints[i].confEndpointId]);return pstnSession}removeConferenceSession(confId){confId&&delete this.conferenceSessions[confId]}initiatesCallParticipant(confId,participantPhoneNumber,participant,country){return this.$log.info("[PstnConferenceService] initiatesCallParticipant( confId="+confId+", PhoneNumber="+participantPhoneNumber+", role="+participant.role+" country = "+country+" )"),confId&&participantPhoneNumber?this.$q((resolve,reject)=>{this.$http({method:"POST",url:this.confPortalURL+confId+"/join",headers:this.authService.getPostHeader(),data:{participantPhoneNumber:participantPhoneNumber,participant:participant,country:country}}).then(response=>{let joinStatus=response.data.status;this.$log.info("[PstnConferenceService] initiatesCallParticipant( confId="+confId+") success : "+joinStatus),resolve()},errorResponse=>{let msg=errorResponse.data?errorResponse.data.errorDetails:errorResponse.data,errorMessage="initiatesCallParticipant( confId="+confId+") failure: "+msg;this.$log.error("[PstnConferenceService] "+errorMessage);let error=this.errorHelperService.handleError(errorResponse);reject(error)})}):(this.$log.error("[PstnConferenceService] initiatesCallParticipant - missing parameter"),this.$q.reject())}initiatesAudio(confId){return this.$log.info("[PstnConferenceService] initiatesAudio( confId="+confId+")"),confId?this.conferenceSessions[confId]&&this.conferenceSessions[confId].isActive()?(this.$log.info("[PstnConferenceService] initiatesAudio : conference already started"),this.$q.resolve()):this.$q((resolve,reject)=>{this.$http({method:"PUT",url:this.confPortalURL+confId+"/start",headers:this.authService.getRequestHeader()}).then(()=>{this.$log.info("[PstnConferenceService] initiatesAudio( confId="+confId+") successfully"),resolve()},response=>{let error=this.errorHelperService.handleError(response);reject(error)})}):(this.$log.error("[PstnConferenceService] initiatesAudio - missing parameter"),this.$q.reject())}initiatesAudioRecording(confId,participantId,fileName,fileExtension){return this.$log.info("[PstnConferenceService] initiatesAudioRecording( confId="+confId+"participantId="+participantId+"fileName="+fileName+"fileExtension="+fileExtension+")"),confId&&participantId?this.$q((resolve,reject)=>{this.$http({method:"POST",url:this.confPortalURL+confId+"/participants/"+participantId+"/start-recording",headers:this.authService.getPostHeader(),data:{fileName:fileName,fileExtension:fileExtension}}).then(()=>{this.$log.info("[PstnConferenceService] initiatesAudioRecording( confId="+confId+"participantId="+participantId+") successfully"),resolve()},response=>{let msg=response.data?response.data.errorDetails:response.data,errorMessage="initiatesAudioRecording( confId="+confId+"participantId="+participantId+") failure: "+msg;this.$log.error("[PstnConferenceService] "+errorMessage),reject(new Error(errorMessage))})}):(this.$log.error("[PstnConferenceService] initiatesAudioRecording - missing parameter"),this.$q.reject())}stopsAudioRecording(confId,participantId){return this.$q((resolve,reject)=>{if(this.$log.info("[PstnConferenceService] stopsAudioRecording( confId="+confId+"participantId="+participantId+")"),!confId||!participantId)return this.$log.error("[PstnConferenceService] initiatesAudioRecording - missing parameter"),this.$q.reject();this.$http({method:"POST",url:this.confPortalURL+confId+"/participants/"+participantId+"/stop-recording",headers:this.authService.getPostHeader()}).then(()=>{this.$log.info("[PstnConferenceService] stopsAudioRecording( confId="+confId+"participantId="+participantId+") successfully"),resolve()},response=>{let msg=response.data?response.data.errorDetails:response.data,errorMessage="stopsAudioRecording( confId="+confId+"participantId="+participantId+") failure: "+msg;this.$log.error("[PstnConferenceService] "+errorMessage),reject(new Error(errorMessage))})})}pausesAudioRecording(confId,participantId){return this.$q((resolve,reject)=>{if(this.$log.info("[PstnConferenceService] pausesAudioRecording( confId="+confId+"participantId="+participantId+")"),!confId||!participantId)return this.$log.error("[PstnConferenceService] pausesAudioRecording - missing parameter"),this.$q.reject();this.$http({method:"POST",url:this.confPortalURL+confId+"/participants/"+participantId+"/pause-recording",headers:this.authService.getPostHeader()}).then(()=>{this.$log.info("[PstnConferenceService] pausesAudioRecording( confId="+confId+"participantId="+participantId+") successfully"),resolve()},response=>{let msg=response.data?response.data.errorDetails:response.data,errorMessage="pausesAudioRecording( confId="+confId+"participantId="+participantId+") failure: "+msg;this.$log.error("[PstnConferenceService] "+errorMessage),reject(new Error(errorMessage))})})}resumesAudioRecording(confId,participantId){return this.$q((resolve,reject)=>{if(this.$log.info("[PstnConferenceService] resumesAudioRecording( confId="+confId+"participantId="+participantId+")"),!confId||!participantId)return this.$log.error("[PstnConferenceService] resumesAudioRecording - missing parameter"),this.$q.reject();this.$http({method:"POST",url:this.confPortalURL+confId+"/participants/"+participantId+"/resume-recording",headers:this.authService.getPostHeader()}).then(()=>{this.$log.info("[PstnConferenceService] resumesAudioRecording( confId="+confId+"participantId="+participantId+") successfully"),resolve()},response=>{let msg=response.data?response.data.errorDetails:response.data,errorMessage="resumesAudioRecording( confId="+confId+"participantId="+participantId+") failure: "+msg;this.$log.error("[PstnConferenceService] "+errorMessage),reject(new Error(errorMessage))})})}makeSnapshotForConfId(confId=null){if(!confId){let errorMsg="[PstnConferenceService] makeSnapshotForConfId - No confId !!";return this.$log.error(errorMsg),this.$q.reject(errorMsg)}let confSession=this.conferenceSessions[confId];return confSession&&confSession.active&&confSession.haveJoined?(this.$log.debug("[WebConferenceService] makeSnapshotForConfId skipped, already joined"),this.$q.resolve(confSession)):this.$q((resolve,reject)=>{this.$http({method:"GET",url:this.confPortalURL+confId+"/snapshot?mediaType=pstnAudio",headers:this.authService.getRequestHeader()}).then(response=>{this.$log.info("[PstnConferenceService] makeSnapshotForConfId success for confId "+confId);let snapshotData=response.data;this.updateOrCreateConferenceSession(confId,snapshotData),resolve(snapshotData.data)}).catch(errorResponse=>{this.$log.info("[PstnConferenceService] makeSnapshotForConfId failure for confID "+confId),404===errorResponse.status?this.$log.error("[PstnConferenceService] makeSnapshotForConfId - confId "+confId+" not found on server"):this.$log.error("[PstnConferenceService] makeSnapshotForConfId - inconsistent object on server"),this.conferenceSessions[confId]&&this.removeConferenceSession(confId),reject()})})}refreshConferenceSessions(){return this.$log.info("[PstnConferenceService] refreshConferenceSessions"),this.$q((resolve,reject)=>{let promiseArray=[];for(let key in this.conferenceSessions)if(this.conferenceSessions.hasOwnProperty(key)){let conferenceSession=this.conferenceSessions[key];promiseArray.push(this.makeSnapshotForConfId(conferenceSession.id))}this.$q.all(promiseArray).then(()=>{this.$log.info("[PstnConferenceService] refreshConferenceSessions -- success"),resolve()}).catch(()=>{this.$log.error("[PstnConferenceService] refreshConferenceSessions -- error -- cleaning up all sessions"),this.removeAllConferenceSessions(),reject()})})}getConferenceSessionWithConnId(connId){this.$log.info("[PstnConferenceService] getConferenceSessionWithConnId with connId : "+connId);for(let key in this.conferenceSessions)if(this.conferenceSessions.hasOwnProperty(key)){let conferenceSession=this.conferenceSessions[key];if(conferenceSession&&conferenceSession.callId===connId)return conferenceSession}return null}subscribeToPstnSession(confId){return __awaiter(this,void 0,void 0,(function*(){if(this.$log.info("[PstnConferenceService] subscribeToPstnSession( confId="+confId+" )"),!confId){const error=new Error("[PstnConferenceService] subscribeToPstnSession - missing parameter");throw this.$log.error(error.message),error}try{const joinStatus=(yield this.$http({method:"POST",url:this.confPortalURL+confId+"/join",headers:this.authService.getPostHeader(),data:{participantPhoneNumber:"joinWithoutAudio",participant:{role:"member",type:"unmuted"},mediaType:this.MEDIATYPE.PSTNAUDIO}})).data.status;return this.$log.info("[PstnConferenceService] subscribeToPstnSession( confId="+confId+") success : "+joinStatus),confId}catch(error){let e=error;throw error&&error.data&&(e=this.errorHelperService.handleError(error),this.$log.error("[PstnConferenceService] subscribeToPstnSession - "+e.message)),e}}))}unSubscribeParticipantFromPstnSession(confId,participantId){return __awaiter(this,void 0,void 0,(function*(){if(this.$log.info("[PstnConferenceService] unSubscribeParticipantFromPstnSession( confId="+confId+" - participantId="+participantId+")"),!confId||!participantId){const error=new Error("[PstnConferenceService] unSubscribeParticipantFromPstnSession - missing parameter");throw this.$log.error(error.message),error}try{yield this.$http({method:"DELETE",url:this.confPortalURL+confId+"/participants/"+participantId+"?mediaType="+this.MEDIATYPE.PSTNAUDIO,headers:this.authService.getPostHeader()}),this.$log.info("[PstnConferenceService] unSubscribeParticipantFromPstnSession( confId="+confId+") success")}catch(error){let e=error;throw error&&error.data&&(e=this.errorHelperService.handleError(error),this.$log.error("[PstnConferenceService] unSubscribeParticipantFromPstnSession - "+e.message)),e}}))}resetPersonalMeetingRoom(){return __awaiter(this,void 0,void 0,(function*(){this.$log.debug("[PstnConferenceService] resetPersonalMeetingRoom");try{yield this.$http({method:"PUT",url:this.confProvPortalURL+"meetings/reset",headers:this.authService.getRequestHeader()}),this.$log.info("[PstnConferenceService] resetPersonalMeetingRoom success")}catch(error){let e=error;throw error&&error.data&&(e=this.errorHelperService.handleError(error),this.$log.error("[PstnConferenceService] resetPersonalMeetingRoom - "+e.message)),e}}))}removeAllConferenceSessions(){this.$log.info("[PstnConferenceService] removeAllConferenceSessions");for(let key in this.conferenceSessions)this.conferenceSessions.hasOwnProperty(key)&&this.removeConferenceSession(key)}}PstnConferenceService.$inject=["$q","$rootScope","$log","$http","authService","errorHelperService","ConferenceSession","profileService","xmppService","countryService","Conference","contactService","$translate"],angular.module("rainbow").service("pstnConferenceService",PstnConferenceService)},function(module,exports,__webpack_require__){var __awaiter=this&&this.__awaiter||function(thisArg,_arguments,P,generator){return new(P||(P=Promise))((function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){var value;result.done?resolve(result.value):(value=result.value,value instanceof P?value:new P((function(resolve){resolve(value)}))).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())}))};class WebConferenceService{constructor($q,$rootScope,$log,$http,uuid4,$interval,authService,xmppService,videoService,roomService,errorHelperService,ConferenceSession,contactService,platformService,Conference,profileService){this.$q=$q,this.$rootScope=$rootScope,this.$log=$log,this.$http=$http,this.uuid4=uuid4,this.$interval=$interval,this.authService=authService,this.xmppService=xmppService,this.videoService=videoService,this.roomService=roomService,this.errorHelperService=errorHelperService,this.ConferenceSession=ConferenceSession,this.contactService=contactService,this.platformService=platformService,this.Conference=Conference,this.profileService=profileService,this.MEDIATYPE={WEBRTC:"webrtc",WEBRTCSHARINGONLY:"webrtcSharingOnly"},this.started=!1,this.webConferenceRoom=null,this.webrtcConferenceId=null,this.webrtcSharingOnlyRoom=null,this.webrtcSharingOnlyConferenceId=null,this.jingleJid=null,this.makingCall=!1,this.connected=!1,this.disconnecting=!1,this.reconnecting=!1,this.audioProfileChanging=!1,this.conferenceEndpoints={},this.attachLocalMediaStream=(attach,conferenceSession)=>{if(attach){if(conferenceSession.hasLocalVideo){let session=conferenceSession.sessions[conferenceSession.localVideoSessionId];if(session){let stream=conferenceSession.localStreams[session.localStreamId];this.videoService.RTC.attachMediaStreamIfNeeded(angular.element("#conferenceVideoPip"),stream,session.sid),this.videoService.RTC.attachMediaStreamIfNeeded(angular.element("#conferenceVideoPipSmall"),stream,session.sid)}}if(conferenceSession.hasLocalSharing){let session=conferenceSession.sessions[conferenceSession.localSharingSessionId];if(session){let stream=conferenceSession.localStreams[session.localStreamId];this.videoService.RTC.attachMediaStreamIfNeeded(angular.element("#conferenceSharingPip"),stream,session.sid)}}}else this.videoService.RTC.clearMediaStream(angular.element("#minivideo"),null)}}start(stats){return this.$q(resolve=>{let startDate=performance.now();this.$log.info("[WebConferenceService] === STARTING ==="),this.confProvPortalURL=config.restServerUrl+"/api/rainbow/confprovisioning/v1.0/",this.confPortalURL=config.restServerUrl+"/api/rainbow/conference/v1.0/conferences/",this.conferenceEndpoints={},this.conferenceSessions={},this.listeners=[],this.statsIntervals=[],this.connected=!0,this.disconnecting=!1,this.webConferenceRoom=null,this.webrtcConferenceId=null,this.webrtcSharingOnlyRoom=null,this.webrtcSharingOnlyConferenceId=null,this.jingleJid=null,this.makingCall=!1,this.videoGalleryElements=[],this.attachHandlers(),this.videoGalleryElementsNumber=4,this.started=!0;let startDuration=Math.round(performance.now()-startDate);stats.push({service:"WebConferenceService",startDuration:startDuration}),this.$log.info("[WebConferenceService] === STARTED ("+startDuration+" ms) ==="),resolve()})}stop(){return this.$log.info("[WebConferenceService] === STOPPING ==="),this.started=!1,this.makingCall=!1,this.listeners&&this.listeners.forEach(listenerDestroy=>{listenerDestroy()}),this.$log.info("[WebConferenceService] === STOPPED ==="),this.$q.when()}attachHandlers(){this.listeners.push(this.$rootScope.$on("ON_INPUT_DEVICE_CHANGED_EVENT",()=>{this.onAudioProfileChangeEvent()})),this.listeners.push(this.$rootScope.$on("ON_CONNECTION_STATE_CHANGE_EVENT",(event,status)=>{this.$log.info("[WebConferenceService] onConnectionStateChangeEvent : "+status);try{if("disconnected"===status)this.$log.info("[WebConferenceService] onConnectionStateChangeEvent : disconnected"),this.connected=!1;else if("connected"===status){this.$log.info("[WebConferenceService] onConnectionStateChangeEvent : connected"),this.connected=!0;for(let key in this.conferenceSessions)if(this.conferenceSessions.hasOwnProperty(key)){let conferenceSession=this.conferenceSessions[key];if("reconnecting"===conferenceSession.status)for(let sessId in conferenceSession.sessions)if(conferenceSession.sessions.hasOwnProperty(sessId)){let session=conferenceSession.sessions[sessId];"audio"===session.localType&&this.sendTransportReplaceForSession(session,1e4)}}}}catch(error){this.$log.info("[WebConferenceService] onConnectionStateChangeEvent error : "+error)}}))}retrieveWebConferences(mediaType=this.MEDIATYPE.WEBRTC){return this.$log.info("[WebConferenceService] retrieveWebConferences with mediaType="+mediaType),this.$q((resolve,reject)=>{if(!this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.WEBRTC_CONFERENCE_ALLOWED)&&mediaType!==this.MEDIATYPE.WEBRTCSHARINGONLY)return this.$log.warn("[WebConferenceService] retrieveWebConferences - user is not allowed"),void reject(new Error("notAllowed"));let urlQueryParameters="?format=full&userId="+this.contactService.userContact.dbId;angular.isDefined(mediaType)&&(urlQueryParameters+="&mediaType="+mediaType),this.$http({method:"GET",url:this.confProvPortalURL+"conferences"+urlQueryParameters,headers:this.authService.getRequestHeader()}).then(response=>{let conferencesProvisionData=response.data.data;this.$log.info("[WebConferenceService] retrieveWebConferences successfully"),resolve(conferencesProvisionData)},response=>{let errorMessage="retrieveWebConferences failure: "+(response.data?response.data.errorDetails:response.data);this.$log.error("[WebConferenceService] "+errorMessage),reject(new Error(errorMessage))})})}updateConference(confEndpointId,confData){return this.$log.info("[WebConferenceService] updateConference"),this.$q((resolve,reject)=>{if(confEndpointId)this.$http({method:"PUT",url:this.confProvPortalURL+"conferences/"+confEndpointId,headers:this.authService.getRequestHeader(),data:confData}).then(response=>{let conferenceData=response.data.data,conference=this.Conference.createFromData(conferenceData);conferenceData.hasOwnProperty("id")&&(this.conferenceEndpoints[conferenceData.id]&&delete this.conferenceEndpoints[conferenceData.id],this.conferenceEndpoints[conferenceData.id]=conference),this.$log.info("[WebConferenceService] updateConference successfully"),resolve(conference)},response=>{let errorMessage="updateConference failure: "+(response.data?response.data.errorDetails:response.data);this.$log.error("[WebConferenceService] "+errorMessage),reject(new Error(errorMessage))});else{let errorMessage="updateConference failure: No confEndpoint";this.$log.error("[WebConferenceService] updateConference failure : No confEndpoint"),reject(new Error(errorMessage))}})}createVideoGalleryElements(){this.videoGalleryElements=[];for(let i=1;i<=this.videoGalleryElementsNumber;i++){let obj={state:"free",sessionId:"",id:"videoGallery_"+i,publisherId:"",publisherJid:"",subStreamLevel:null};this.videoGalleryElements.push(obj)}}setVideoGalleryElementsNumber(number){this.videoGalleryElementsNumber=number}getConferenceSessions(){return this.conferenceSessions}getConferenceEndpoints(){return this.conferenceEndpoints}addConferenceEndpoint(conferenceEndpointId,conferenceEndpoint){conferenceEndpointId?this.conferenceEndpoints[conferenceEndpointId]=conferenceEndpoint:this.$log.warn("[WebConferenceService] addConferenceEndpoint - missing conferenceEndpointId")}getConferenceIdToUse(room,mediaType=this.MEDIATYPE.WEBRTC){let webPontConferenceId=this.getPontConfIdForRoom(room,mediaType);if(webPontConferenceId)return webPontConferenceId;switch(mediaType){case this.MEDIATYPE.WEBRTC:if(room.isUserModerator(this.contactService.userContact)&&this.webrtcConferenceId)return this.webrtcConferenceId;break;case this.MEDIATYPE.WEBRTCSHARINGONLY:if(room.owner&&this.webrtcSharingOnlyConferenceId)return this.webrtcSharingOnlyConferenceId}return""}isMyConference(conferenceId){return conferenceId&&(this.webrtcConferenceId&&conferenceId===this.webrtcConferenceId||this.webrtcSharingOnlyConferenceId&&conferenceId===this.webrtcSharingOnlyConferenceId)}startOrJoinWebConference(room){return this.$q((resolve,reject)=>{if(!room){let error=new Error("[webConferenceService] startOrJoinWebConference error - missing parameters for room");return this.$log.error(error.message),void reject(error)}let webPontConferenceId=this.getConferenceIdToUse(room,this.MEDIATYPE.WEBRTC);if(!webPontConferenceId){let error=new Error("[webConferenceService] startOrJoinWebConference error - no available pont conference");return this.$log.error(error.message),void reject(error)}if(this.$log.info("[WebConferenceService] startOrJoinWebConference -- "+webPontConferenceId),this.makingCall)return this.$log.warn("[webConferenceService] already starting a conference"),this.$q.resolve();this.makingCall=!0,this.makeSnapshotForConfId(webPontConferenceId,this.MEDIATYPE.WEBRTC).then(()=>{let conferenceSession=this.conferenceSessions[webPontConferenceId];if(!(this.isMyConference(webPontConferenceId)||conferenceSession&&conferenceSession.active)){let error=new Error("[webConferenceService] startOrJoinWebConference error - no active conference to join");return this.$log.error(error.message),reject(error),void(this.makingCall=!1)}let role=this.isMyConference(webPontConferenceId)?"moderator":"member";conferenceSession&&conferenceSession.active?(this.$rootScope.$broadcast("ON_CONFERENCE_ENDED_INVITATION",room),resolve(this.joinWebConference(webPontConferenceId,role))):resolve(this.startWebConference(room,webPontConferenceId))},()=>{this.makingCall=!1;let error=new Error("[webConferenceService] startOrJoinWebConference error on snapshot");this.$log.error(error.message),reject(error)})})}startOrJoinSharingOnlyConference(room){return this.$q((resolve,reject)=>{if(!room){let error=new Error("[webConferenceService] startOrJoinSharingOnlyConference error - missing parameters for room");return this.$log.error(error.message),void reject(error)}let webPontConferenceId=this.getConferenceIdToUse(room,this.MEDIATYPE.WEBRTCSHARINGONLY);if(!webPontConferenceId){let error=new Error("[webConferenceService] startOrJoinSharingOnlyConference error - no available pont conference");return this.$log.error(error.message),void reject(error)}this.makeSnapshotForConfId(webPontConferenceId,this.MEDIATYPE.WEBRTCSHARINGONLY).then(()=>{let conferenceSession=this.conferenceSessions[webPontConferenceId];if(!(this.isMyConference(webPontConferenceId)||conferenceSession&&conferenceSession.active)){let error=new Error("[webConferenceService] startOrJoinSharingOnlyConference error - no active conference to join");return this.$log.error(error.message),void reject(error)}let role=this.isMyConference(webPontConferenceId)?"moderator":"member";conferenceSession&&conferenceSession.active?(this.$rootScope.$broadcast("ON_CONFERENCE_ENDED_INVITATION",room),resolve(this.joinSharingOnlyConference(webPontConferenceId,role,!1))):resolve(this.startSharingOnlyConference(room,webPontConferenceId))},()=>{let error=new Error("[webConferenceService] startOrJoinSharingOnlyConference error on snapshot");this.$log.error(error.message),reject(error)})})}startWebConference(room,webPontConferenceId,shouldSnapshotBeforeStart=!1){return webPontConferenceId&&room?(this.makingCall=!0,this.$log.info("[webConferenceService] startWebConference wtih ID "+webPontConferenceId),this.$q(resolve=>{shouldSnapshotBeforeStart?(this.$log.debug("[webConferenceService] startWebConference - trigger snapshot for "+webPontConferenceId),resolve(this.makeSnapshotForConfId(webPontConferenceId,this.MEDIATYPE.WEBRTC))):resolve()}).then(()=>this.conferenceSessions[webPontConferenceId].active?(this.$log.info("[webConferenceService] startWebConference - No need to start an already active conference"),this.joinWebConference(webPontConferenceId,"moderator",!1)):(this.conferenceSessions[webPontConferenceId].status="ringing",this.$rootScope.$broadcast("ON_CONFERENCE_UPDATED_EVENT",this.conferenceSessions[webPontConferenceId]),this.$http({method:"PUT",url:this.confPortalURL+webPontConferenceId+"/start",headers:this.authService.getRequestHeader(),data:{mediaType:this.MEDIATYPE.WEBRTC,roomId:room.dbId}}).then(()=>(this.$log.info("[webConferenceService] startWebConference - success -- now joining the conference"),this.joinWebConference(webPontConferenceId,"moderator",!1)),errorResponse=>{throw this.makingCall=!1,this.$log.error("[webConferenceService] startWebConference wtih ID "+webPontConferenceId+" failure ... -- "+this.errorHelperService.getErrorFullMessage(errorResponse)),this.leaveWebConference(webPontConferenceId),this.removeConferenceSession(webPontConferenceId),this.$rootScope.$broadcast("ON_CONFERENCE_UPDATED_EVENT"),this.errorHelperService.handleError(errorResponse)}))).catch(err=>{this.makingCall=!1;let errorMsg="[webConferenceService] startWebConference - error on server, can't start conference -- ",msg="startMeetingFailure";return err&&(403620===err.errorDetailsCode&&(msg="startMeetingConflict"),err.errorDetailsLabel&&(errorMsg+=err.errorDetailsLabel)),this.$log.error(errorMsg),this.$rootScope.$broadcast("ON_OPEN_GLOBAL_POPUP",{popupTitle:"startConference",popupBody:msg,okLabel:"ok"}),this.$q.reject(err)})):(this.$log.error("[startWebConference] No webPontConferenceId or Room!"),this.$rootScope.$broadcast("ON_OPEN_GLOBAL_POPUP",{popupTitle:"startConference",popupBody:"startMeetingFailure",okLabel:"ok"}),this.$q.reject())}startSharingOnlyConference(room,webPontConferenceId,shouldJoin=!0){return this.makingCall?(this.$log.warn("[webConferenceService] already starting a conference"),this.$q.resolve()):webPontConferenceId&&room?(this.makingCall=!0,this.$log.info("[webConferenceService] startSharingOnlyConference wtih ID "+webPontConferenceId),this.makeSnapshotForConfId(webPontConferenceId,this.MEDIATYPE.WEBRTCSHARINGONLY).then(()=>{if(this.conferenceSessions[webPontConferenceId].active)return this.$log.info("[webConferenceService] startSharingOnlyConference - No need to start an already active conference"),shouldJoin?this.$q.resolve(this.joinSharingOnlyConference(webPontConferenceId,"moderator",!1)):this.$q.resolve();this.conferenceSessions[webPontConferenceId].status="ringing",this.$rootScope.$broadcast("ON_CONFERENCE_UPDATED_EVENT",this.conferenceSessions[webPontConferenceId]);let url=this.confPortalURL+webPontConferenceId+"/start";return this.$q((resolve,reject)=>{this.$http({method:"PUT",url:url,headers:this.authService.getRequestHeader(),data:{mediaType:this.MEDIATYPE.WEBRTCSHARINGONLY,roomId:room.dbId}}).then(()=>{if(shouldJoin)return this.joinSharingOnlyConference(webPontConferenceId,"moderator",!1).then(()=>{resolve()});resolve()},errorResponse=>{this.makingCall=!1,this.$log.error("[webConferenceService] startSharingOnlyConference wtih ID "+webPontConferenceId+" failure ... -- "+this.errorHelperService.getErrorFullMessage(errorResponse)),this.leaveWebConference(webPontConferenceId),this.removeConferenceSession(webPontConferenceId),this.$rootScope.$broadcast("ON_CONFERENCE_UPDATED_EVENT"),reject(this.errorHelperService.handleError(errorResponse))})})}).catch(error=>(this.makingCall=!1,this.$log.error("[webConferenceService] startSharingOnlyConference - error on server, can't start conference"),this.$q.reject(error)))):(this.$log.error("[startSharingOnlyConference] No webPontConferenceId or Room!"),this.$q.reject())}joinWebConference(webPontConferenceId,role,shouldSnapshotBeforeJoin=!1){return this.$log.info("[webConferenceService] joinWebConference with ID "+webPontConferenceId+" and role "+role),webPontConferenceId?this.$q(resolve=>{shouldSnapshotBeforeJoin?(this.$log.debug("[webConferenceService] joinWebConference - trigger snapshot for "+webPontConferenceId),resolve(this.makeSnapshotForConfId(webPontConferenceId,this.MEDIATYPE.WEBRTC))):resolve()}).then(()=>this.$q((resolve,reject)=>{this.makingCall=!0,this.createVideoGalleryElements(),this.conferenceSessions[webPontConferenceId].videoGallery=this.videoGalleryElements,"ringing"!==this.conferenceSessions[webPontConferenceId].status&&(this.conferenceSessions[webPontConferenceId].status="ringing",this.$rootScope.$broadcast("ON_CONFERENCE_UPDATED_EVENT",this.conferenceSessions[webPontConferenceId]));let id="web_"+this.uuid4.generate(),url=this.confPortalURL+webPontConferenceId+"/join",params={participant:{role:role,type:"unmuted"},mediaType:this.MEDIATYPE.WEBRTC};this.getUserMediaForSession(webPontConferenceId).then(sessId=>{this.$http({method:"POST",url:url,headers:this.authService.getRequestHeader(),data:params}).then(response=>{let data=response.data.data;this.jingleJid=data.jingleJid,this.initCall(this.jingleJid,webPontConferenceId,id,this.MEDIATYPE.WEBRTC),this.conferenceSessions[webPontConferenceId].haveJoined=!0,this.makingCall=!1,resolve()},errorResponse=>{if(errorResponse){let msg=errorResponse.data?errorResponse.data.errorDetails:errorResponse.data,errorMessage="joinWebConference( confId="+webPontConferenceId+") failure: "+msg;this.$log.error("[conferenceService] "+errorMessage)}this.makingCall=!1;let data={popupTitle:"warning",popupBody:"joinMeetingFailure",okLabel:"ok"};errorResponse&&errorResponse.data&&403615===errorResponse.data.errorDetailsCode&&(data.popupBody="maximumNumberConferenceParticipantsReach"),this.leaveWebConference(webPontConferenceId),delete this.conferenceSessions[webPontConferenceId],this.$rootScope.$broadcast("ON_CONFERENCE_UPDATED_EVENT"),this.$rootScope.$broadcast("ON_OPEN_GLOBAL_POPUP",data),reject(this.errorHelperService.handleError(errorResponse))})}).catch(reason=>{this.$log.error("[webConferenceService] joinWebConference - getUserMediaForSession reject -- "+reason),this.makingCall=!1,"ignore"!==reason&&this.leaveWebConference(webPontConferenceId),reject()})})).catch(()=>(this.makingCall=!1,this.$log.error("[webConferenceService] joinWebConference - error on server, can't join conference"),this.$q.reject())):(this.$log.error("[webConferenceService] joinWebConference - No webPontConferenceId !"),this.$q.reject())}joinSharingOnlyConference(webPontConferenceId,role,shouldSnapshotBeforeJoin=!0){return this.$log.info("[webConferenceService] joinSharingOnlyConference with ID "+webPontConferenceId+" and role "+role),webPontConferenceId?this.$q(resolve=>{shouldSnapshotBeforeJoin?(this.$log.debug("[webConferenceService] joinSharingOnlyConference - trigger snapshot for "+webPontConferenceId),resolve(this.makeSnapshotForConfId(webPontConferenceId,this.MEDIATYPE.WEBRTCSHARINGONLY))):resolve()}).then(()=>this.$q((resolve,reject)=>{this.makingCall=!0,this.createVideoGalleryElements(),this.conferenceSessions[webPontConferenceId].videoGallery=this.videoGalleryElements,"ringing"!==this.conferenceSessions[webPontConferenceId].status&&(this.conferenceSessions[webPontConferenceId].status="ringing",this.$rootScope.$broadcast("ON_CONFERENCE_UPDATED_EVENT",this.conferenceSessions[webPontConferenceId]));this.uuid4.generate();let url=this.confPortalURL+webPontConferenceId+"/join",params={participant:{role:role,type:"muted"},mediaType:this.MEDIATYPE.WEBRTCSHARINGONLY};this.$http({method:"POST",url:url,headers:this.authService.getRequestHeader(),data:params}).then(response=>{let data=response.data.data;this.jingleJid=data.jingleJid,this.$log.info("[webConferenceService] joinSharingOnlyConference with ID success - jingleJid: "+this.jingleJid),this.conferenceSessions[webPontConferenceId].jingleJid=this.jingleJid,this.conferenceSessions[webPontConferenceId].haveJoined=!0,this.makingCall=!1,resolve()},errorResponse=>{if(errorResponse){let msg=errorResponse.data?errorResponse.data.errorDetails:errorResponse.data,errorMessage="joinSharingOnlyConference( confId="+webPontConferenceId+") failure: "+msg;this.$log.error("[conferenceService] "+errorMessage)}this.makingCall=!1;let data={popupTitle:"warning",popupBody:"joinMeetingFailure",okLabel:"ok"};errorResponse&&errorResponse.data&&403615===errorResponse.data.errorDetailsCode&&(data.popupBody="maximumNumberConferenceParticipantsReach"),this.leaveWebConference(webPontConferenceId),delete this.conferenceSessions[webPontConferenceId],this.$rootScope.$broadcast("ON_CONFERENCE_UPDATED_EVENT"),reject(this.errorHelperService.handleError(errorResponse))})})).catch(()=>(this.makingCall=!1,this.$log.error("[webConferenceService] joinSharingOnlyConference - error on server, can't join conference"),this.$q.reject())):(this.$log.error("[webConferenceService] joinSharingOnlyConference - No webPontConferenceId !"),this.$q.reject())}stopWebConference(room){return this.$q((resolve,reject)=>{if(room){let confId=room.getSFUConfEndpointId()?room.getSFUConfEndpointId():room.getSFUSharingConfEndpointId(),url=this.confPortalURL+confId+"/stop";this.$http({method:"PUT",url:url,headers:this.authService.getRequestHeader(),data:{mediaType:this.MEDIATYPE.WEBRTC,roomId:room.dbId}}).then(()=>{resolve()},errorResponse=>{reject(this.errorHelperService.handleError(errorResponse))})}else reject()})}getFreeVideoGalleryElement(confId){this.$log.info("[webConferenceService] getFreeVideoGalleryElement "+confId);let confSession=this.conferenceSessions[confId],result=null;if(confSession){confSession.videoGallery||(this.createVideoGalleryElements(),confSession.videoGallery=this.videoGalleryElements);for(let i=0;i<confSession.videoGallery.length;i++)if("free"===confSession.videoGallery[i].state){result=confSession.videoGallery[i];break}}return result}askToAddSharingToConferenceSession(conversation,conferenceSession){!this.videoService.askToAddSharing(conversation.id,"sharing")&&this.addMediaToConferenceSession(conferenceSession,"sharing")}addMediaToConferenceSession(conferenceSession,mediaType){if(!conferenceSession)return;let mediaToGet=[mediaType],frameRate=20;"video"!==mediaType&&(frameRate=3),"sharing"===mediaType&&this.contactService.setBusyState("dnd","sharing"),this.$log.info("[webConferenceService] addMediaToConferenceSession to session "+conferenceSession.id+" with media "+mediaType),this.videoService.getBrowserMedia(mediaToGet,640,480,frameRate).then(stream=>{let streams=[stream],unifiedPlan=this.videoService.config.unifiedPlan,session=this.xmppService.connection.jingle.initiate(conferenceSession.jingleJid,this.xmppService.connection.jid,mediaType,streams,null,conferenceSession.id,null,unifiedPlan);conferenceSession.sessions[session.sid]=session,conferenceSession.localStreams.push(stream),session.localStreamId=conferenceSession.localStreams.length-1,"video"===mediaType?(conferenceSession.hasLocalVideo=!0,conferenceSession.localVideoSessionId=session.sid):(conferenceSession.hasLocalSharing=!0,conferenceSession.localSharingSessionId=session.sid),this.$rootScope.$broadcast("ON_CONFERENCE_UPDATED_EVENT",conferenceSession),this.videoService.callsStats[session.sid]={},this.updateStatisticsForSession(conferenceSession.id,session.sid),this.statsIntervals.push(session.getStats(5e3))})}removeMediaFromConferenceSession(conferenceSession,mediaType){if(!conferenceSession)return;"sharing"===mediaType&&this.contactService.setBusyState("dnd","audio"),"webrtcSharingOnly"===conferenceSession.type&&this.contactService.resetBusyState(),this.$log.info("[webConferenceService] removeMediaFromConferenceSession from session "+conferenceSession.id);let sessionId="video"===mediaType?conferenceSession.localVideoSessionId:conferenceSession.localSharingSessionId;if(conferenceSession.sessions[sessionId]){let session=conferenceSession.sessions[sessionId];this.updateStatisticsForSession(conferenceSession.id,sessionId),this.videoService.disableAudioVideoMedia(session),this.xmppService.connection.jingle.terminate(session.sid),delete conferenceSession.sessions[sessionId],delete conferenceSession.localStreams[session.localStreamId],delete this.videoService.callsStats[sessionId],"video"===mediaType?(conferenceSession.hasLocalVideo=!1,conferenceSession.localVideoSessionId=null):(conferenceSession.hasLocalSharing=!1,conferenceSession.localSharingSessionId=null)}this.$rootScope.$broadcast("ON_CONFERENCE_UPDATED_EVENT",conferenceSession)}dropRemoteVideoSession(conferenceSession,sessionId){if(conferenceSession){if(this.$log.info("[webConferenceService] dropRemoteVideoSession fom conference "+conferenceSession.id+" and session "+sessionId),conferenceSession.sessions[sessionId]){let session=conferenceSession.sessions[sessionId];this.updateStatisticsForSession(conferenceSession.id,sessionId),this.xmppService.connection.jingle.terminate(session.sid),delete conferenceSession.sessions[sessionId],delete this.videoService.callsStats[sessionId]}this.removeSessionFromVideoGallery(conferenceSession,sessionId),this.$rootScope.$broadcast("ON_CONFERENCE_UPDATED_EVENT",conferenceSession)}}getUserMediaForSession(webPontConferenceId){return this.$q((resolve,reject)=>{let conference=this.conferenceSessions[webPontConferenceId];if(!conference)return void reject();conference.status="ringing",conference.haveJoined=!0,this.$rootScope.$broadcast("ON_CONFERENCE_UPDATED_EVENT",conference);this.videoService.getBrowserMedia(["audio"]).then(stream=>{this.$log.info("[webConferenceService] getUserMediaForSession -- sucess");let conf=this.conferenceSessions[webPontConferenceId];if(!conf||"ended"===conf.status)return this.$log.info("[webConferenceService] getUserMediaForSession -- missing conference"),this.disableMediaStream(stream),void reject("conference does not exist anymore");if(!this.makingCall)return this.$log.info("[webConferenceService] getUserMediaForSession -- already in the conference -- ignore"),this.disableMediaStream(stream),void reject("ignore");let streams=[stream];conf.localStreams=streams,resolve()}).catch(()=>{this.$log.error("[webConferenceService] getUserMediaForSession error -- getUserMedia failed");this.$rootScope.$broadcast("ON_OPEN_GLOBAL_POPUP",{popupTitle:"warning",popupBody:"devicePermission",okLabel:"ok"}),reject("failed to get user media")})})}disableMediaStream(stream){stream&&(stream.getTracks().forEach(track=>{track.enabled=!1,track.stop(),track=null}),stream.stop&&stream.stop(),stream=null)}initCall(jid,webPontConferenceId,callId,type){let conference=this.conferenceSessions[webPontConferenceId];return this.$q(resolve=>{conference||(this.$log.warn("[webConferenceService] initCall - no conferenceSession as though we are trying to init call"),resolve(this.makeSnapshotForConfId(webPontConferenceId,type))),resolve()}).then(()=>__awaiter(this,void 0,void 0,(function*(){yield this.videoService.setWebrtcConfiguration().catch(()=>{this.$log.error("[webConferenceService] initCall - setWebrtcConfiguration failed")});let unifiedPlan=!!this.videoService.config&&this.videoService.config.unifiedPlan,session=this.xmppService.connection.jingle.initiate(jid,this.xmppService.connection.jid,"audio",conference.localStreams,callId,webPontConferenceId,null,unifiedPlan);conference.jingleJid=jid,conference.sessions[session.sid]=session,conference.status="ringing",this.createStatisticsForSession(webPontConferenceId,session.sid),this.statsIntervals.push(session.getStats(5e3)),this.$rootScope.$broadcast("ON_CONFERENCE_UPDATED_EVENT",conference)})))}muteAudio(conversation,state){if(conversation.webConferenceSession){for(let property in conversation.webConferenceSession.sessions)if(conversation.webConferenceSession.sessions.hasOwnProperty(property)){conversation.webConferenceSession.sessions[property].muteAudio(state)}conversation.isMutedAudio=state,this.$rootScope.$broadcast("ON_CONVERSATION_CALL_MUTED_UPDATED_EVENT",{conversation:conversation})}else this.$log.info("[webConferenceService] muteAudio trying to mute a non existing session ")}createStatisticsForSession(webConfId,sessionId){if(this.$log.info("[webConferenceService] createStatisticsForSession for conf "+webConfId+" and session "+sessionId),!webConfId||!sessionId)return void this.$log.warn("[webConferenceService] createStatisticsForSession -- missing parameters");this.videoService.callsStats[sessionId]={};let metrics=[];metrics.push({connectionId:sessionId,stats:this.videoService.callsStats[sessionId]}),this.videoService.createStatisticsForSession(webConfId,webConfId,"pending",metrics).then(id=>{this.$log.info("[webConferenceService] createStatisticsForSession success "+id),this.videoService.callsStats[sessionId].id=id,this.conferenceSessions[webConfId].metricsId=id,this.conferenceSessions[webConfId].metricsState="pending"}).catch(error=>{this.$log.error("[webConferenceService] createStatisticsForSession error for conf "+webConfId)})}updateStatisticsForSession(webConfId,sessionId){if(this.$log.info("[webConferenceService] updateStatisticsForSession for conf "+webConfId+" and session "+sessionId),!webConfId||!sessionId)return void this.$log.warn("[webConferenceService] updateStatisticsForSession -- missing parameters");let webConference=this.conferenceSessions[webConfId];if(!webConference||!webConference.metricsId)return void this.$log.warn("[webConferenceService] updateStatisticsForSession -- missing webConference or no metricsId");webConference.metricsState||(webConference.metricsState="pending");let metrics=[];this.videoService.callsStats[sessionId]&&Object.keys(this.videoService.callsStats[sessionId]).length&&(this.videoService.callsStats[sessionId].RainMetrics&&this.videoService.callsStats[sessionId].push(this.videoService.callsStats[sessionId].RainMetrics),metrics.push({connectionId:sessionId,stats:this.videoService.callsStats[sessionId]}),this.videoService.updateStatisticsForCall(webConference.metricsId,webConfId,webConfId,webConference.metricsState,metrics))}leaveWebConference(confId){if(this.$log.info(`[WebConferenceService] leaveWebConference - ${confId}`),this.contactService.resetBusyState(),!confId)return;let statsInterval,webConference=this.conferenceSessions[confId];if(webConference){webConference.metricsState="ended";for(let property in webConference.sessions)if(webConference.sessions.hasOwnProperty(property)){let session=webConference.sessions[property];this.updateStatisticsForSession(webConference.id,session.sid),this.videoService.disableAudioVideoMedia(session),this.xmppService.connection.jingle.terminate(session.sid),delete this.videoService.callsStats[session.sid]}for(webConference.cleanupSessionData(),this.createVideoGalleryElements(),webConference.videoGallery=this.videoGalleryElements,webConference.sessions={};this.statsIntervals.length;)(statsInterval=this.statsIntervals.pop())&&(window.clearInterval(statsInterval),statsInterval=null);this.makingCall=!1,this.$rootScope.$broadcast("ON_CONFERENCE_STATE_EVENT",webConference),this.videoService.clearSrcObjectsFromElements()}else this.$log.warn("[WebConferenceService] leaveWebConference - webConference does not exist")}attachDistantMediaStream(attach,conferenceSession){if(attach){let sessions=this.getRemoteVideoSessions(conferenceSession.id);this.updateMainSessionIfNeeded(sessions),this.$log.info("[WebConferenceService] attachDistantMediaStream for session "+conferenceSession.id);let remoteSharingSession=this.getRemoteSharingSession(conferenceSession.id);if(remoteSharingSession&&(remoteSharingSession.remoteStreams.forEach(track=>{track.getVideoTracks().length>0&&this.videoService.RTC.attachMediaStreamIfNeeded(angular.element("#largevideo"),track,remoteSharingSession.sid)}),remoteSharingSession.remoteStreamsObject[0]&&this.videoService.RTC.attachMediaStreamIfNeeded(angular.element("#largevideo"),remoteSharingSession.remoteStreamsObject[0],remoteSharingSession.sid)),sessions.length)for(let sessionId in sessions)if(sessions.hasOwnProperty(sessionId)&&(sessions[sessionId].remoteStreams&&sessions[sessionId].remoteStreams.forEach(track=>{if(track.getVideoTracks().length>0){!remoteSharingSession&&sessions[sessionId].mainSession&&this.videoService.RTC.attachMediaStreamIfNeeded(angular.element("#largevideo"),track,sessions[sessionId].sid);for(let i=0;i<conferenceSession.videoGallery.length;i++)if(conferenceSession.videoGallery[i].sessionId===sessions[sessionId].sid){this.videoService.RTC.attachMediaStreamIfNeeded(angular.element("#"+conferenceSession.videoGallery[i].id),track,conferenceSession.videoGallery[i].sessionId);break}}}),sessions[sessionId].remoteStreamsObject[0])){!remoteSharingSession&&sessions[sessionId].mainSession&&this.videoService.RTC.attachMediaStreamIfNeeded(angular.element("#largevideo"),sessions[sessionId].remoteStreamsObject[0],sessions[sessionId].sid);for(let i=0;i<conferenceSession.videoGallery.length;i++)if(conferenceSession.videoGallery[i].sessionId===sessions[sessionId].sid){this.videoService.RTC.attachMediaStreamIfNeeded(angular.element("#"+conferenceSession.videoGallery[i].id),sessions[sessionId].remoteStreamsObject[0],conferenceSession.videoGallery[i].sessionId);break}}let audioSession=this.getRemoteAudioSession(conferenceSession.id);audioSession&&audioSession.remoteStreams&&audioSession.remoteStreams.forEach(track=>{track.getAudioTracks().length>0&&this.videoService.RTC.attachMediaStream(angular.element("#globalAudioTag"),track)}),audioSession&&audioSession.remoteStreamsObject[0]&&this.videoService.RTC.attachMediaStream(angular.element("#globalAudioTag"),audioSession.remoteStreamsObject[0])}}attachMainMediaStream(session){session&&(this.$log.info("[webConferenceService] attachMainMediaStream"),session.remoteStreams.forEach(track=>{track.getVideoTracks().length>0&&this.videoService.RTC.attachMediaStreamIfNeeded(angular.element("#largevideo"),track,session.sid)}))}updateMainSessionIfNeeded(sessions){if(this.$log.info("[webConferenceService] updateMainSessionIfNeeded"),sessions&&sessions.length){let firstSession=null,shouldUpdateMainScreen=!0;for(let property in sessions)sessions.hasOwnProperty(property)&&(firstSession||(firstSession=sessions[property]),sessions[property].mainSession&&(shouldUpdateMainScreen=!1));shouldUpdateMainScreen&&(firstSession.mainSession=!0)}}getRelatedRoomToActiveConferenceSession(){return this.webConferenceRoom}getRelatedRoomToActiveSharingOnlyConferenceSession(){return this.webrtcSharingOnlyRoom}getConferenceBySessionId(sessionId){let result=null;for(let webConference in this.conferenceSessions)if(this.conferenceSessions.hasOwnProperty(webConference)&&this.conferenceSessions[webConference].sessions)for(let session in this.conferenceSessions[webConference].sessions)if(this.conferenceSessions[webConference].sessions.hasOwnProperty(session)&&this.conferenceSessions[webConference].sessions[session].sid===sessionId)return result=this.conferenceSessions[webConference];return result}getPontConfIdForRoom(room,mediaType=this.MEDIATYPE.WEBRTC){if(room.confEndpoints&&room.confEndpoints.length)for(let i=0;i<room.confEndpoints.length;i++)if(room.confEndpoints[i].mediaType===mediaType)return room.confEndpoints[i].confEndpointId;return""}getConferenceSessionById(confId){return this.conferenceSessions[confId]}getSfuConferenceSessionForRoom(room){var confSession=null;return room&&(confSession=this.conferenceSessions[room.getSFUConfEndpointId()]),confSession}updateWebConferenceInfos(endpoints){this.$log.info("[WebConferenceService] updateWebConferenceInfos"),Object.assign(this.conferenceEndpoints,endpoints),this.webrtcConferenceId=this.getWebRtcConfEndpointId(),this.webrtcConferenceId&&this.roomService.getRoomByConferenceEndpointId(this.webrtcConferenceId).then(conferenceRoom=>{let name="nothing";conferenceRoom&&(name=conferenceRoom.name),this.webConferenceRoom=conferenceRoom,this.$log.info("[WebConferenceService] === updateWebConferenceInfos : webrtcConferenceId is currently attached to "+name)},()=>{this.$log.info("[WebConferenceService] === updateWebConferenceInfos FAILURE ===")})}updateWebSharingOnlyConferenceInfos(endpoints){this.$log.info("[WebConferenceService] updateWebSharingOnlyConferenceInfos"),Object.assign(this.conferenceEndpoints,endpoints),this.webrtcSharingOnlyConferenceId=this.getWebRtcSharingOnlyConfEndpointId(),this.webrtcSharingOnlyConferenceId&&this.roomService.getRoomByConferenceEndpointId(this.webrtcSharingOnlyConferenceId).then(conferenceRoom=>{let name=conferenceRoom&&conferenceRoom.name?conferenceRoom.name:"nothing";this.webrtcSharingOnlyRoom=conferenceRoom,this.$log.info("[WebConferenceService] === updateWebSharingOnlyConferenceInfos : webrtcSharingOnlyConferenceId is currently attached to "+name)},()=>{this.$log.info("[WebConferenceService] === updateWebSharingOnlyConferenceInfos FAILURE ===")})}updateWebConferenceRoom(){return this.webrtcConferenceId=this.getWebRtcConfEndpointId(),this.$q((resolve,reject)=>{this.roomService.getRoomByConferenceEndpointId(this.webrtcConferenceId).then(conferenceRoom=>{let name="nothing";conferenceRoom&&(name=conferenceRoom.name),this.webConferenceRoom=conferenceRoom,this.$log.info("[WebConferenceService] === updateWebConferenceRoom : room is currently attached to "+name),resolve()},()=>{this.$log.info("[WebConferenceService] === updateWebConferenceRoom FAILURE==="),reject()})})}getWebRtcConfEndpointId(){for(let property in this.conferenceEndpoints)if(this.conferenceEndpoints.hasOwnProperty(property)&&this.conferenceEndpoints[property].mediaType===this.MEDIATYPE.WEBRTC)return this.conferenceEndpoints[property].id;return null}getWebRtcSharingOnlyConfEndpointId(){for(let property in this.conferenceEndpoints)if(this.conferenceEndpoints.hasOwnProperty(property)&&this.conferenceEndpoints[property].mediaType===this.MEDIATYPE.WEBRTCSHARINGONLY)return this.conferenceEndpoints[property].id;return null}isJoinWebConferenceAllowed(){return!0}getWebConference(confId){if(confId)return this.conferenceSessions[confId]}removeConferenceSession(confId){if(!confId)return;let statsInterval;for(this.removeAllJingleSessionsForConferenceSession(confId),delete this.conferenceSessions[confId];this.statsIntervals.length;)(statsInterval=this.statsIntervals.pop())&&(this.$interval.cancel(statsInterval),statsInterval=null);this.makingCall=!1}removeAllJingleSessionsForConferenceSession(confId){if(!confId)return;let conferenceSession=this.conferenceSessions[confId];if(conferenceSession){conferenceSession.metricsState="ended";for(let property in conferenceSession.sessions)if(conferenceSession.sessions.hasOwnProperty(property)){let session=conferenceSession.sessions[property];this.updateStatisticsForSession(conferenceSession.id,session.sid),delete this.videoService.callsStats[session.sid],this.videoService.disableAudioVideoMedia(session),this.xmppService.connection.jingle.terminate(session.sid)}conferenceSession.sessions=[]}}hasActiveConferenceSession(){for(let property in this.conferenceSessions)if(this.conferenceSessions.hasOwnProperty(property)&&this.conferenceSessions[property].type===this.MEDIATYPE.WEBRTC&&this.conferenceSessions[property].isActive()&&this.conferenceSessions[property].haveJoined)return!0;return!1}getActiveConferenceSession(){let result=null;for(let property in this.conferenceSessions)this.conferenceSessions.hasOwnProperty(property)&&this.conferenceSessions[property].type===this.MEDIATYPE.WEBRTC&&this.conferenceSessions[property].isActive()&&this.conferenceSessions[property].haveJoined&&(result=this.conferenceSessions[property]);return result}hasActiveSharingOnlyConferenceSession(){for(let property in this.conferenceSessions)if(this.conferenceSessions.hasOwnProperty(property)&&this.conferenceSessions[property].type===this.MEDIATYPE.WEBRTCSHARINGONLY&&this.conferenceSessions[property].isActive())return!0;return!1}getActiveSharingOnlyConferenceSession(){let result=null;for(let property in this.conferenceSessions)this.conferenceSessions.hasOwnProperty(property)&&this.conferenceSessions[property].type===this.MEDIATYPE.WEBRTCSHARINGONLY&&this.conferenceSessions[property].isActive()&&(result=this.conferenceSessions[property]);return result}hasIncomingVideoStream(confId){if(!confId)return;let conferenceSession=this.conferenceSessions[confId];if(conferenceSession)for(let property in conferenceSession.sessions)if(conferenceSession.sessions.hasOwnProperty(property)){let session=conferenceSession.sessions[property];if(!session.isInitiator&&("video"===session.remoteType||"sharing"===session.remoteType))return!0}return!1}getRemoteSessionsWithVideoOrSharingStreams(confId){let result=[];if(!confId)return result;let conferenceSession=this.conferenceSessions[confId];if(conferenceSession)for(let property in conferenceSession.sessions)if(conferenceSession.sessions.hasOwnProperty(property)){let session=conferenceSession.sessions[property];session.isInitiator||"video"!==session.remoteType&&"sharing"!==session.remoteType||result.push(session)}return result}getRemoteSharingSession(confId){let result=null;if(!confId)return result;let conferenceSession=this.conferenceSessions[confId];if(conferenceSession)for(let property in conferenceSession.sessions)if(conferenceSession.sessions.hasOwnProperty(property)){let session=conferenceSession.sessions[property];if(!session.isInitiator&&"sharing"===session.remoteType){result=session;break}}return result}getRemoteVideoSessions(confId){let result=[];if(!confId)return result;let conferenceSession=this.conferenceSessions[confId];if(conferenceSession)for(let property in conferenceSession.sessions)if(conferenceSession.sessions.hasOwnProperty(property)){let session=conferenceSession.sessions[property];session.isInitiator||"video"!==session.remoteType||result.push(session)}return result}getRemoteAudioSession(confId){let result;if(!confId)return result;let conferenceSession=this.conferenceSessions[confId];if(conferenceSession)for(let property in conferenceSession.sessions)if(conferenceSession.sessions.hasOwnProperty(property)){let session=conferenceSession.sessions[property];if("audio"===session.localType){result=session;break}}return result}getRemoteMainVideoSession(confId){let sess;if(!confId)return sess;let conferenceSession=this.conferenceSessions[confId];if(conferenceSession)for(let property in conferenceSession.sessions)if(conferenceSession.sessions.hasOwnProperty(property)){let session=conferenceSession.sessions[property];if(!session.isInitiator&&"video"===session.remoteType&&session.mainSession){sess=session;break}}return sess}isAlreadySubscribedToPublisher(confId,publisherId){if(!confId||!publisherId)return!1;let result=!1,conferenceSession=this.conferenceSessions[confId];if(conferenceSession&&conferenceSession.videoGallery)for(let i=0;i<conferenceSession.videoGallery.length;i++)if(conferenceSession.videoGallery[i].publisherId===publisherId){result=!0;break}return result}relatePublisherToElement(confId,publisher,elementId){if(!confId||!publisher||!elementId)return!1;this.$log.info("[WebConferenceService] relatePublisherToElement");let conferenceSession=this.conferenceSessions[confId];if(conferenceSession)for(let i=0;i<conferenceSession.videoGallery.length;i++)if(conferenceSession.videoGallery[i].id===elementId){conferenceSession.videoGallery[i].state="busy",conferenceSession.videoGallery[i].publisherId=publisher.participantId,conferenceSession.videoGallery[i].publisherJidIm=publisher.jid_im,conferenceSession.videoGallery[i].displayName=publisher.participantId;let contact=this.contactService.getContactByJid(publisher.jid_im);contact&&(conferenceSession.videoGallery[i].displayName=contact.displayName);break}}getRelatedPublisherToElement(confId,elementId){if(!confId||!elementId)return null;this.$log.info("[WebConferenceService] getRelatedPublisherToElement");let result=null,conferenceSession=this.conferenceSessions[confId];if(conferenceSession&&conferenceSession.videoGallery)for(let i=0;i<conferenceSession.videoGallery.length;i++)if(elementId===conferenceSession.videoGallery[i].id&&conferenceSession.videoGallery[i].publisherId){result=conferenceSession.videoGallery[i];break}return result}getRelatedElementToPublisher(confId,publisherId){if(!confId||!publisherId)return null;this.$log.info("[WebConferenceService] getRelatedPublisherToElement");let element=null,conferenceSession=this.conferenceSessions[confId];if(conferenceSession&&conferenceSession.videoGallery)for(let i=0;i<conferenceSession.videoGallery.length;i++)if(conferenceSession.videoGallery[i].publisherId===publisherId){element=conferenceSession.videoGallery[i];break}return element}relateSessionToPublisher(confId,publisherId,sessionId){if(!confId||!publisherId||!sessionId)return;this.$log.info("[WebConferenceService] relateSessionToPublisher pubId "+publisherId+" sessionId "+sessionId);let conferenceSession=this.conferenceSessions[confId];if(conferenceSession){for(let i=0;i<conferenceSession.videoGallery.length;i++)if(publisherId===conferenceSession.videoGallery[i].publisherId&&!conferenceSession.videoGallery[i].sessionId){conferenceSession.videoGallery[i].sessionId=sessionId;break}this.$log.info(conferenceSession.videoGallery)}}removeSessionFromVideoGallery(conferenceSession,sessionId){if(conferenceSession&&sessionId){conferenceSession.videoGallery||(this.createVideoGalleryElements(),conferenceSession.videoGallery=this.videoGalleryElements),this.$log.info("[WebConferenceService] removeSessionFromVideoGallery for conference "+conferenceSession.id+" sessionId "+sessionId);for(let i=0;i<conferenceSession.videoGallery.length;i++)conferenceSession.videoGallery[i].sessionId===sessionId&&(conferenceSession.videoGallery[i].sessionId="",conferenceSession.videoGallery[i].state="free",conferenceSession.videoGallery[i].publisherId="",conferenceSession.videoGallery[i].publisherJidIm="",conferenceSession.videoGallery[i].displayName="")}}reInitialiseVideoGalleryElementById(conferenceSession,elementId){if(conferenceSession&&elementId){conferenceSession.videoGallery||(this.createVideoGalleryElements(),conferenceSession.videoGallery=this.videoGalleryElements),this.$log.info("[WebConferenceService] reInitialiseVideoGalleryElementById for conference "+conferenceSession.id+" elementId "+elementId);for(let i=0;i<conferenceSession.videoGallery.length;i++)conferenceSession.videoGallery[i].id===elementId&&(conferenceSession.videoGallery[i].sessionId&&this.dropRemoteVideoSession(conferenceSession,conferenceSession.videoGallery[i].sessionId),conferenceSession.videoGallery[i].sessionId="",conferenceSession.videoGallery[i].state="free",conferenceSession.videoGallery[i].publisherId="",conferenceSession.videoGallery[i].publisherJidIm="",conferenceSession.videoGallery[i].displayName="",conferenceSession.videoGallery[i].subStreamLevel=null)}}updateMainScreenSession(confId,sessionId){if(!confId||!sessionId)return;this.$log.info("[WebConferenceService] updateMainScreenSession");let conferenceSession=this.conferenceSessions[confId],session=null;if(conferenceSession)for(let property in conferenceSession.sessions)if(conferenceSession.sessions.hasOwnProperty(property)){let sess=conferenceSession.sessions[property];sessionId===sess.sid?(sess.mainSession=!0,session=sess):sess.mainSession=!1}session&&this.attachMainMediaStream(session)}getListOfAvailableRemoteVideoPublishers(confId){if(!confId)return;this.$log.info("[WebConferenceService] getListOfAvailableRemoteVideoPublishers");let conferenceSession=this.conferenceSessions[confId],publishers=[];return conferenceSession&&(conferenceSession.videoGallery||(this.createVideoGalleryElements(),conferenceSession.videoGallery=this.videoGalleryElements),publishers=(publishers=conferenceSession.getListOfRemoteVideoPublishers()).filter(publisher=>{for(let i=0;i<conferenceSession.videoGallery.length;i++)if(conferenceSession.videoGallery[i].publisherId===publisher.participantId)return!1;let contact=this.contactService.getContactByJid(publisher.jid_im);return publisher.displayName=contact?contact.displayName:publisher.participantId,!0})),publishers}sendTransportReplaceForSession(sess,timeout){if(!sess)return void this.$log.warn("[WebConferenceService] sendTransportReplaceForSession missing session !");if(this.reconnecting)return void this.$log.warn("[WebConferenceService] sendTransportReplaceForSession already reconnecting !");let that=this;this.reconnecting=!0,timeout||(timeout=1e3),this.$interval(session=>{if(that.reconnecting=!1,that.connected&&session&&session.peerconnection&&"stable"===session.peerconnection.signalingState&&("failed"===session.peerconnection.iceConnectionState||"disconnected"===session.peerconnection.iceConnectionState)&&(that.$log.info("[WebConferenceService] sendTransportReplaceForSession for session "+session.sid),session.connection=that.xmppService.connection,session.reconnectSession(),session.type!==that.MEDIATYPE.WEBRTCSHARINGONLY)){var state=session.hasLocalSharing?"sharing":"audio";that.contactService.setBusyState("dnd",state)}},timeout,1,!0,sess)}onAudioProfileChangeEvent(){if(this.$log.info("[WebConferenceService] onAudioProfileChangeEvent"),this.audioProfileChanging)this.$log.info("[WebConferenceService] onAudioProfileChangeEvent -- already changing");else for(let key in this.conferenceSessions)if(this.conferenceSessions.hasOwnProperty(key)){let conferenceSession=this.conferenceSessions[key];for(let sessId in conferenceSession.sessions)if(conferenceSession.sessions.hasOwnProperty(sessId)){let session=conferenceSession.sessions[sessId];"audio"===session.localType&&(this.audioProfileChanging=!0,this.$interval(sess=>{this.audioProfileChanging=!1;this.videoService.getBrowserMedia(["audio"]).then(stream=>{sess.removeStream(sess.localStreams[0]),this.videoService.stopActiveAudioVideoStreams(sess),sess.localStreams.push(stream),sess.addStream(sess.localStreams[0]),sess.sendTransportReplace()})},500,1,!0,session))}}}onJingleError(sessionId){this.$log.info("[WebConferenceService] onJingleError -- "+sessionId);let webConference=this.getConferenceBySessionId(sessionId);if(webConference&&webConference.sessions){"audio"===webConference.sessions[sessionId].localType?this.leaveWebConference(webConference.id):(this.updateStatisticsForSession(webConference.id,sessionId),webConference.localVideoSessionId===sessionId?this.removeMediaFromConferenceSession(webConference,"video"):webConference.localSharingSessionId===sessionId?this.removeMediaFromConferenceSession(webConference,"sharing"):(this.removeSessionFromVideoGallery(webConference,sessionId),this.$rootScope.$broadcast("ON_CONFERENCE_UPDATED_EVENT",webConference)))}}onIceConnectionDisconnectedForSession(conferenceSession,sessionId){if(this.$log.info("[WebConferenceService] onIceConnectionDisconnectedForSession -- "+sessionId),conferenceSession&&conferenceSession.sessions){let session=conferenceSession.sessions[sessionId];"audio"===session.localType?(conferenceSession.status="reconnecting",this.$rootScope.$broadcast("ON_CONFERENCE_UPDATED_EVENT",conferenceSession),this.connected&&this.sendTransportReplaceForSession(session,1e3)):conferenceSession.localVideoSessionId!==sessionId&&conferenceSession.localSharingSessionId!==sessionId||this.connected&&this.sendTransportReplaceForSession(session,1e3)}}onIceConnectionFailedForSession(conferenceSession,sessionId){if(this.$log.info("[WebConferenceService] onIceConnectionFailedForSession -- "+sessionId),conferenceSession&&conferenceSession.sessions){let session=conferenceSession.sessions[sessionId];"audio"===session.localType?(conferenceSession.status="reconnecting",this.$rootScope.$broadcast("ON_CONFERENCE_UPDATED_EVENT",conferenceSession),this.connected&&this.sendTransportReplaceForSession(session,500)):conferenceSession.localVideoSessionId===sessionId||conferenceSession.localSharingSessionId===sessionId?this.connected&&this.sendTransportReplaceForSession(session,500):(this.xmppService.connection.jingle.terminate(sessionId,"icefailed"),this.updateStatisticsForSession(conferenceSession.id,sessionId),delete this.videoService.callsStats[sessionId],this.removeSessionFromVideoGallery(conferenceSession,sessionId),delete conferenceSession.sessions[sessionId],this.$rootScope.$broadcast("ON_CONFERENCE_UPDATED_EVENT",conferenceSession))}}onIncomingCall(sessionId){this.$log.info("[WebConferenceService] onIncomingCall -- "+sessionId);let session=this.xmppService.connection.jingle.sessions[sessionId],pontConfId=session.confId,conferenceSession=this.conferenceSessions[pontConfId];conferenceSession?(conferenceSession.sessions[sessionId]=session,session.localType=session.remoteType,session.sendAnswer(),session.accept(),session.publisherId&&"sharing"!==session.remoteType&&this.relateSessionToPublisher(pontConfId,session.publisherId,session.sid),this.$rootScope.$broadcast("ON_CONFERENCE_UPDATED_EVENT",conferenceSession),this.videoService.callsStats[session.sid]={},this.updateStatisticsForSession(conferenceSession.id,session.sid),this.statsIntervals.push(session.getStats(5e3))):this.$log.error("[WebConferenceService] onIncomingCall no such conferenceSession "+pontConfId)}onTerminatedCall(sessionId){this.$log.info("[WebConferenceService] onTerminatedCall -- "+sessionId);let session=this.xmppService.connection.jingle.sessions[sessionId];if(!session){let conferenceSession=this.getActiveConferenceSession()?this.getActiveConferenceSession():this.getActiveSharingOnlyConferenceSession();if(conferenceSession&&conferenceSession.sessions){let sess=conferenceSession.sessions[sessionId];sess&&(conferenceSession.metricsState="ended"),sess&&"audio"===sess.localType?this.leaveWebConference(conferenceSession.id):conferenceSession.localVideoSessionId===sessionId?this.removeMediaFromConferenceSession(conferenceSession,"video"):conferenceSession.localSharingSessionId===sessionId?this.removeMediaFromConferenceSession(conferenceSession,"sharing"):(this.removeSessionFromVideoGallery(conferenceSession,sessionId),this.videoService.disableAudioVideoMedia(conferenceSession.sessions[sessionId]),delete conferenceSession.sessions[sessionId],delete this.videoService.callsStats[sessionId],this.$rootScope.$broadcast("ON_CONFERENCE_UPDATED_EVENT",conferenceSession))}return}let pontConfId=session.confId,conferenceSession=this.conferenceSessions[pontConfId];conferenceSession?(this.updateStatisticsForSession(conferenceSession.id,sessionId),conferenceSession.localVideoSessionId===sessionId?this.removeMediaFromConferenceSession(conferenceSession,"video"):conferenceSession.localSharingSessionId===sessionId?this.removeMediaFromConferenceSession(conferenceSession,"sharing"):(this.removeSessionFromVideoGallery(conferenceSession,sessionId),this.videoService.disableAudioVideoMedia(session),this.xmppService.connection.jingle.terminate(session.sid),delete conferenceSession.sessions[session.sid],delete this.videoService.callsStats[sessionId],this.$rootScope.$broadcast("ON_CONFERENCE_UPDATED_EVENT",conferenceSession))):this.$log.error("[WebConferenceService] onTerminatedCall no such conferenceSession "+pontConfId)}onConferenceCallSwitched(sessionId){this.$log.info("[WebConferenceService] onConferenceCallSwitched -- "+sessionId);let conferenceSession=this.getActiveConferenceSession();conferenceSession&&this.leaveWebConference(conferenceSession.id)}onIceConnectionStateChange(sessionId,session){this.$log.info("[WebConferenceService] onIceConnectionStateChange for session "+sessionId);let webConference=this.getConferenceBySessionId(sessionId);try{webConference&&session.peerconnection&&("stable"===session.peerconnection.signalingState&&"connected"===session.peerconnection.iceConnectionState&&(this.$log.info("[WebConferenceService] ICE Connection established successfully"),webConference.status="connected",session.remoteStreams&&session.remoteStreams.forEach(track=>{track.getAudioTracks().length>0&&(this.videoService.RTC.attachMediaStream(angular.element("#globalAudioTag"),track),this.videoService.resetAudioOutputElement(!0))}),this.$rootScope.$broadcast("ON_CONFERENCE_UPDATED_EVENT",webConference),this.$rootScope.$broadcast("ON_CONFERENCE_STATE_EVENT",webConference)),"stable"===session.peerconnection.signalingState&&"completed"===session.peerconnection.iceConnectionState&&(this.$log.info("[WebConferenceService] ICE Connection completed successfully"),"connected"!==webConference.status&&(webConference.status="connected",session.remoteStreams&&session.remoteStreams.forEach(track=>{track.getAudioTracks().length>0&&(this.videoService.RTC.attachMediaStream(angular.element("#globalAudioTag"),track),this.videoService.resetAudioOutputElement(!0))}),this.$rootScope.$broadcast("ON_CONFERENCE_UPDATED_EVENT",webConference),this.$rootScope.$broadcast("ON_CONFERENCE_STATE_EVENT",webConference))),"stable"===session.peerconnection.signalingState&&"disconnected"===session.peerconnection.iceConnectionState&&(this.$log.info("[WebConferenceService] ICE Connection State disconnected"),this.onIceConnectionDisconnectedForSession(webConference,sessionId)),"stable"===session.peerconnection.signalingState&&"failed"===session.peerconnection.iceConnectionState&&(this.$log.info("[WebConferenceService] ICE Connection State failed"),this.onIceConnectionFailedForSession(webConference,sessionId)))}catch(error){this.$log.error("[WebConferenceService] onIceConnectionStateChange error "+error)}}updateOrCreateConferenceSession(confId,snapshotData,type="webrtc"){if(this.$log.debug("[webConferenceService] updateOrCreateConferenceSession for "+confId),!confId||!snapshotData||!snapshotData.data)return this.$log.error("[webConferenceService] updateOrCreateConferenceSession - Not enough data"),null;let conferenceSession=this.conferenceSessions[confId];return conferenceSession?snapshotData.data.active!==conferenceSession.active&&(this.$log.debug("active"),conferenceSession.updateActiveState(snapshotData.data.active),this.$rootScope.$broadcast("ON_CONFERENCE_STATE_EVENT",conferenceSession)):(this.$log.debug("[webConferenceService] updateOrCreateConferenceSession - create new conferencesession with id "+confId+"and data: \n"+JSON.stringify(snapshotData.data)),conferenceSession=this.ConferenceSession.createFromData(confId,[],snapshotData.data.active,type),this.conferenceSessions[confId]=conferenceSession,this.$rootScope.$broadcast("ON_CONFERENCE_STATE_EVENT",conferenceSession)),snapshotData.data.participants&&(this.$log.debug("[webConferenceService] updateOrCreateConferenceSession - (is active : "+conferenceSession.active+") update participants for "+confId+" with:\n"+JSON.stringify(snapshotData.data.participants)),conferenceSession.updateParticipants(snapshotData.data.participants).then(()=>{this.$rootScope.$broadcast("ON_CONFERENCE_PARTICIPANT_EVENT",conferenceSession)})),conferenceSession}updateOrCreateWebConferenceEndpoint(conferenceData){if(this.$log.info("[WebConferenceService] updateOrCreateWebConferenceEndpoint for "+conferenceData.id),!conferenceData)return this.$log.error("[WebConferenceService] updateOrCreateWebConferenceEndpoint - no conference data !"),null;if(conferenceData.mediaType!==this.MEDIATYPE.WEBRTC&&conferenceData.mediaType!==this.MEDIATYPE.WEBRTCSHARINGONLY)return this.$log.error("[WebConferenceService] updateOrCreateWebConferenceEndpoint - wrong mediaType:"+conferenceData.mediaType),null;let conference=this.Conference.createFromData(conferenceData);return this.conferenceEndpoints[conferenceData.id]=conference,conference.mediaType===this.MEDIATYPE.WEBRTC?this.updateWebConferenceInfos([conference]):this.updateWebSharingOnlyConferenceInfos([conference]),this.conferenceEndpoints[conferenceData.id]}makeSnapshotForConfId(confId=null,mediaType){if(!confId){let errorMsg="[webConferenceService] makeSnapshotForConfId - No confId !!";return this.$log.error(errorMsg),this.$q.reject(errorMsg)}let confSession=this.conferenceSessions[confId];return confSession&&confSession.active&&confSession.haveJoined?(this.$log.debug("[WebConferenceService] makeSnapshotForConfId skipped, already joined"),this.$q.resolve(confSession)):this.$q((resolve,reject)=>{this.$http({method:"GET",url:this.confPortalURL+confId+"/snapshot?mediaType=webrtc",headers:this.authService.getRequestHeader()}).then(response=>{this.$log.info("[webConferenceService] makeSnapshotForConfId success for confId "+confId);let snapshotData=response.data;this.updateOrCreateConferenceSession(confId,snapshotData,mediaType),resolve(snapshotData.data)}).catch(errorResponse=>{this.$log.info("[webConferenceService] makeSnapshotForConfId failure for confID "+confId),404===errorResponse.status?this.$log.error("[webConferenceService] makeSnapshotForConfId - confId "+confId+" not found on server"):this.$log.error("[webConferenceService] makeSnapshotForConfId - inconsistent object on server"),this.conferenceSessions[confId]&&this.removeConferenceSession(confId),reject()})})}refreshConferenceSessions(){return this.$log.info("[webConferenceService] refreshConferenceSessions"),this.$q((resolve,reject)=>{let promiseArray=[];for(let key in this.conferenceSessions)if(this.conferenceSessions.hasOwnProperty(key)){let conferenceSession=this.conferenceSessions[key];promiseArray.push(this.makeSnapshotForConfId(conferenceSession.id,conferenceSession.type))}this.$q.all(promiseArray).then(()=>{this.$log.info("[webConferenceService] refreshConferenceSessions -- success"),resolve()}).catch(()=>{this.$log.error("[webConferenceService] refreshConferenceSessions -- error -- cleaning up all sessions"),this.removeAllConferenceSessions(),reject()})})}removeAllConferenceSessions(){this.$log.info("[webConferenceService] removeAllConferenceSessions");for(let key in this.conferenceSessions)this.conferenceSessions.hasOwnProperty(key)&&this.removeConferenceSession(key)}getConferenceSessionForRoom(roomConfEndpoints){let sfuSession=null;if(roomConfEndpoints&&roomConfEndpoints.length)for(let i=0;i<roomConfEndpoints.length;i++)roomConfEndpoints[i].mediaType!==this.MEDIATYPE.WEBRTC&&roomConfEndpoints[i].mediaType!==this.MEDIATYPE.WEBRTCSHARINGONLY||(sfuSession=this.conferenceSessions[roomConfEndpoints[i].confEndpointId]);return sfuSession}}WebConferenceService.$inject=["$q","$rootScope","$log","$http","uuid4","$interval","authService","xmppService","videoService","roomService","errorHelperService","ConferenceSession","contactService","platformService","Conference","profileService"],angular.module("rainbow").service("webConferenceService",WebConferenceService)},function(module,exports){class ConferenceService{constructor($q,$log,$rootScope,$interval,$translate,$http,xmppService,authService,Conference,profileService,contactService,webConferenceService,pstnConferenceService,roomService,errorHelperService){this.$q=$q,this.$log=$log,this.$rootScope=$rootScope,this.$interval=$interval,this.$translate=$translate,this.$http=$http,this.xmppService=xmppService,this.authService=authService,this.Conference=Conference,this.profileService=profileService,this.contactService=contactService,this.webConferenceService=webConferenceService,this.pstnConferenceService=pstnConferenceService,this.roomService=roomService,this.errorHelperService=errorHelperService,this.MEDIATYPE={PSTNAUDIO:"pstnAudio",WEBRTC:"webrtc",WEBRTCSHARINGONLY:"webrtcSharingOnly"},this.started=!1,this.listeners=[],this.conferenceRef=null,this.conferenceMngtRef=null,this.pgiConferenceProvisionRef=null}start(stats){return this.$q(resolve=>{let startDate=performance.now();return this.$log.info("[ConferenceService] === STARTING ==="),this.confProvPortalURL=config.restServerUrl+"/api/rainbow/confprovisioning/v1.0/",this.confPortalURL=config.restServerUrl+"/api/rainbow/conference/v1.0/conferences/",this.computePstnConferencePremission(),this.attachHandlers(),this.pstnConferenceService.retrievePstnPhoneNumbers(),this.retrieveConferences(null,!1).then(()=>this.makeSnapshots()).then(()=>{this.started=!0;let startDuration=Math.round(performance.now()-startDate);stats.push({service:"conferenceService",startDuration:startDuration}),this.$log.info("[ConferenceService] === STARTED ("+startDuration+" ms) ==="),resolve()}).catch(error=>{this.$log.info("[ConferenceService] === STARTING FAILURE === "+error.message),resolve()})})}stop(){return this.$q(resolve=>{this.$log.info(""),this.$log.info("[ConferenceService] === STOPPING ==="),this.listeners&&this.listeners.forEach(listener=>{listener()}),this.started=!1,this.$log.info("[ConferenceService] === STOPPED ==="),resolve()})}attachHandlers(){this.$log.info("[ConferenceService] attachHandlers"),this.conferenceRef&&(this.xmppService.connection.deleteHandler(this.conferenceRef),this.conferenceRef=null),this.conferenceRef=this.xmppService.connection.addHandler(stanza=>this.onConferenceUpdate(stanza),"jabber:iq:conference","message",null),this.conferenceMngtRef&&(this.xmppService.connection.deleteHandler(this.conferenceMngtRef),this.conferenceMngtRef=null),this.conferenceMngtRef=this.xmppService.connection.addHandler(stanza=>this.onConferenceManagement(stanza),null,"message","management"),this.listeners.push(this.$rootScope.$on("ON_PROFILE_FEATURES_UPDATED",()=>{this.onMyProfileFeaturesChanged()}))}reconnectService(){this.$log.info("[ConferenceService] reconnectService"),this.attachHandlers(),this.refreshConferenceSessions()}onMyProfileFeaturesChanged(){let wasPstnConferenceAvailable=this.pstnConferenceService.isPstnConferenceAvailable;if(this.computePstnConferencePremission(),wasPstnConferenceAvailable)this.pstnConferenceService.isPstnConferenceAvailable||this.$rootScope.$broadcast("ON_OPEN_GLOBAL_POPUP",{popupTitle:"information",popupBody:"pgiRightsRemovedWarning",okLabel:"ok"});else if(this.pstnConferenceService.isPstnConferenceAvailable)return this.retrieveConferences(null,!1).then(()=>{if(!this.pstnConferenceService.pstnInstantConferenceEndpoint)return this.$q.when()}).then(()=>this.makeSnapshots())}computePstnConferencePremission(){let isConferenceAllowed=this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.CONFERENCE_ALLOWED),isConferenceProvisioningOnGoing=!0,profiles=this.profileService.getMyProfiles();profiles&&profiles.length>0&&profiles.forEach(profile=>{-1!==profile.profileName.toLowerCase().indexOf("conference")&&-1!==profile.status.toLowerCase().indexOf("active")&&profile.provisioningNeeded&&profile.provisioningNeeded.length>0&&profile.provisioningNeeded.forEach(provisioning=>{-1!==provisioning.providerType.toLowerCase().indexOf("pgi")&&(isConferenceProvisioningOnGoing=provisioning.provisioningOngoing)&&(this.$log.info("[ConferenceService] computePstnConferencePremission - pgi provisioning on going"),this.pgiConferenceProvisionRef&&(this.xmppService.connection.deleteHandler(this.pgiConferenceProvisionRef),this.pgiConferenceProvisionRef=null),this.pgiConferenceProvisionRef=this.xmppService.connection.addHandler(stanza=>this.onConferenceProvisionUpdate(stanza),null,"message","management"))})}),this.pstnConferenceService.isPstnConferenceAvailable=isConferenceAllowed&&!isConferenceProvisioningOnGoing,this.$rootScope.$broadcast("ON_CONFERENCE_FEATURES_UPDATED")}onConferenceProvisionUpdate(stanza){return $(stanza).find("confuseractivated ").length>0&&(this.pgiConferenceProvisionRef&&(this.xmppService.connection.deleteHandler(this.pgiConferenceProvisionRef),this.pgiConferenceProvisionRef=null),this.pstnConferenceService.isPstnConferenceAvailable=this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.CONFERENCE_ALLOWED),this.pstnConferenceService.isPstnConferenceAvailable&&this.retrieveConferences(null,!1).then(()=>this.makeSnapshots()),this.$rootScope.$broadcast("ON_CONFERENCE_FEATURES_UPDATED")),!0}getPstnInstantConferenceEndpoint(){return this.pstnConferenceService.pstnInstantConferenceEndpoint}getPstnInstantConferenceEndpointId(){return this.pstnConferenceService.pstnInstantConferenceEndpoint?this.pstnConferenceService.pstnInstantConferenceEndpoint.id:-1}getWebConferenceEndpoints(){return this.webConferenceService.conferenceEndpoints}makeSnapshotsForList(confEndpointsList){return this.$q(resolve=>{if(this.$log.info("[ConferenceService] makeSnapshotsForList"),!confEndpointsList||!confEndpointsList.length)return void resolve();let promiseArray=[];for(let i=0;i<confEndpointsList.length;i++)promiseArray.push(this.makeSnapshotForConfId(confEndpointsList[i].confEndpointId,confEndpointsList[i].mediaType));this.$q.all(promiseArray).finally(()=>{resolve(this.getConferenceSessionForRoom(confEndpointsList))})})}getConferenceSessionForRoom(roomConfEndpoints){let pstnSession=null,sfuSession=null;if(roomConfEndpoints&&roomConfEndpoints.length)for(let i=0;i<roomConfEndpoints.length;i++)roomConfEndpoints[i].mediaType===this.MEDIATYPE.PSTNAUDIO?pstnSession=this.pstnConferenceService.conferenceSessions[roomConfEndpoints[i].confEndpointId]:sfuSession=this.webConferenceService.conferenceSessions[roomConfEndpoints[i].confEndpointId];return pstnSession||sfuSession}getMatchingConferenceSession(roomConfEndpoints,id){let confSession=null;if(roomConfEndpoints&&roomConfEndpoints.length)for(let i=0;i<roomConfEndpoints.length;i++)roomConfEndpoints[i].confEndpointId===id&&(confSession=roomConfEndpoints[i].mediaType===this.MEDIATYPE.PSTNAUDIO?this.pstnConferenceService.conferenceSessions[id]:this.webConferenceService.conferenceSessions[id]);return confSession}makeSnapshots(){return this.$log.info("[ConferenceService] makeSnapshots"),this.$q(resolve=>{let snapshotPromiseList=[];this.pstnConferenceService.pstnInstantConferenceEndpoint&&snapshotPromiseList.push(this.makeSnapshotForConfId(this.pstnConferenceService.pstnInstantConferenceEndpoint.id,this.pstnConferenceService.pstnInstantConferenceEndpoint.mediaType));for(let property in this.webConferenceService.conferenceEndpoints)if(this.webConferenceService.conferenceEndpoints.hasOwnProperty(property)){let pontConf=this.webConferenceService.conferenceEndpoints[property];snapshotPromiseList.push(this.makeSnapshotForConfId(pontConf.id,pontConf.mediaType))}this.$q.all(snapshotPromiseList).finally(()=>{this.$log.info("[ConferenceService] makeSnapshots done"),resolve()})})}onConferenceUpdate(stanza){this.$log.info("[ConferenceService] onConferenceUpdate message: "+stanza.innerHTML);let conferenceId=$(stanza).find("conference-id").text(),mediaTypeElem=$(stanza).find("media-type"),mediaType=this.MEDIATYPE.PSTNAUDIO;if(mediaTypeElem&&mediaTypeElem.length&&mediaTypeElem.text&&(mediaType=$(mediaTypeElem[0]).text()),conferenceId){let conferenceSession=null;if(conferenceSession=mediaType===this.MEDIATYPE.PSTNAUDIO?this.pstnConferenceService.conferenceSessions[conferenceId]:this.webConferenceService.conferenceSessions[conferenceId])(conferenceSession.type!==this.MEDIATYPE.WEBRTC||conferenceSession.haveJoined)&&this.updateConferenceSession(stanza,conferenceSession);else switch(this.$log.info("[ConferenceService] no such session for ID "+conferenceId),mediaType){case"webrtc":break;case"webrtcsharing":let publisherElem=$(stanza).find("publisher"),jid_im=publisherElem.find("jid-im").text(),publisher={participantId:publisherElem.find("publisher-id").text(),mediaType:mediaType,jid_im:jid_im};this.subscribeToPublisher(conferenceId,publisher)}}return!0}onConferenceManagement(stanza){try{let confendpointElem=$(stanza).find("confendpoint");if(confendpointElem.length&&"update"===confendpointElem.attr("action")){this.$log.info("[ConferenceService] onConferenceManagement - update of conference");let conferenceId=$(stanza).find("confendpointid").text();return this.retrieveConference(conferenceId,!0).then(()=>{this.$rootScope.$broadcast("ON_CONFERENCE_DATA_UPDATED_EVENT",conferenceId)}),!0}return!0}catch(error){return!0}}makeSnapshotForConfId(confId,type=this.MEDIATYPE.PSTNAUDIO){return this.$log.info("[ConferenceService] makeSnapshotForConfId "+confId),this.$q((resolve,reject)=>{if(!confId){let error=new Error("[ConferenceService] makeSnapshotForConfId missing conf ID !");return this.$log.error(error.message),void reject(error)}let confSession=null;switch(type){case this.MEDIATYPE.PSTNAUDIO:confSession=this.pstnConferenceService.conferenceSessions[confId];break;case this.MEDIATYPE.WEBRTC:case this.MEDIATYPE.WEBRTCSHARINGONLY:confSession=this.webConferenceService.conferenceSessions[confId];break;default:this.$log.info("[ConferenceService] makeSnapshotForConfId : unknown type "+type)}if(confSession&&confSession.active&&confSession.haveJoined)return this.$log.debug("[ConferenceService] makeSnapshotForConfId skipped, already joined"),void resolve(confSession);let mediaType=type===this.MEDIATYPE.WEBRTC||type===this.MEDIATYPE.WEBRTCSHARINGONLY?this.MEDIATYPE.WEBRTC:this.MEDIATYPE.PSTNAUDIO;this.$http({method:"GET",url:this.confPortalURL+confId+"/snapshot?mediaType="+mediaType,headers:this.authService.getRequestHeader()}).then(response=>{this.$log.info("[ConferenceService] makeSnapshotForConfId success for confId "+confId);let conferenceData=response.data;mediaType===this.MEDIATYPE.PSTNAUDIO?this.pstnConferenceService.updateOrCreateConferenceSession(confId,conferenceData):this.webConferenceService.updateOrCreateConferenceSession(confId,conferenceData,type),resolve(conferenceData.data)}).catch(errorResponse=>{this.$log.info("[ConferenceService] makeSnapshotForConfId failure for confID "+confId),404===errorResponse.status?this.$log.error("[ConferenceService] makeSnapshotForConfId - confId "+confId+" not found on server"):this.$log.error("[ConferenceService] makeSnapshotForConfId - inconsistent object on server"),mediaType===this.MEDIATYPE.PSTNAUDIO?delete this.pstnConferenceService.conferenceSessions[confId]:delete this.webConferenceService.conferenceSessions[confId];let error=this.errorHelperService.handleError(errorResponse);reject(error)})})}retrieveConferences(mediaType,scheduled,provisioning){switch(this.$log.info("[ConferenceService] retrieveConferences with mediaType="+mediaType+" and scheduled="+scheduled),mediaType){case this.MEDIATYPE.PSTNAUDIO:return this.pstnConferenceService.retrievePstnConferences(scheduled,provisioning);case this.MEDIATYPE.WEBRTC:case this.MEDIATYPE.WEBRTCSHARINGONLY:return this.webConferenceService.retrieveWebConferences(mediaType)}return this.$q((resolve,reject)=>{if(!this.pstnConferenceService.isPstnConferenceAvailable&&!this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.WEBRTC_CONFERENCE_ALLOWED))return this.$log.warn("[ConferenceService] retrieveConferences - user is not allowed"),void reject(new Error("notAllowed"));let urlParameters="conferences?format=full&userId="+this.contactService.userContact.dbId;angular.isDefined(scheduled)&&(urlParameters+="&scheduled="+scheduled),this.$http({method:"GET",url:this.confProvPortalURL+urlParameters,headers:this.authService.getRequestHeader()}).then(response=>{let conferencesProvisionData=response.data.data;for(let conferenceData of conferencesProvisionData)switch(conferenceData.mediaType){case this.MEDIATYPE.PSTNAUDIO:this.pstnConferenceService.updateOrCreatePstnConferenceEndpoint(conferenceData);break;case this.MEDIATYPE.WEBRTC:case this.MEDIATYPE.WEBRTCSHARINGONLY:this.webConferenceService.updateOrCreateWebConferenceEndpoint(conferenceData)}this.$log.info("[ConferenceService] retrieveConferences successfully"),resolve(conferencesProvisionData)},response=>{let errorMessage="retrieveConferences failure: "+(response.data?response.data.errorDetails:response.data);this.$log.error("[ConferenceService] "+errorMessage),reject(new Error(errorMessage))})})}retrieveConference(confId,force=!1){return this.$log.info("[ConferenceService] retrieveConference"),confId?this.$q((resolve,reject)=>{!this.pstnConferenceService.pstnConferenceEndpoints[confId]||force?this.webConferenceService.conferenceEndpoints[confId]?resolve(this.webConferenceService.conferenceEndpoints[confId]):this.$http({method:"GET",url:this.confProvPortalURL+"conferences/"+confId,headers:this.authService.getRequestHeader()}).then(response=>{let conferenceData=response.data.data;if(conferenceData&&conferenceData.hasOwnProperty("id")){let conference=this.Conference.createFromData(conferenceData);conferenceData.mediaType===this.MEDIATYPE.PSTNAUDIO?this.pstnConferenceService.pstnConferenceEndpoints[conferenceData.id]=conference:this.webConferenceService.conferenceEndpoints[conferenceData.id]=conference}this.$log.info("[ConferenceService] retrieveConference successfully"),resolve(conferenceData)},response=>{let errorMessage="retrieveConference failure: "+(response.data?response.data.errorDetails:response.data);this.$log.error("[ConferenceService] "+errorMessage),reject(new Error(errorMessage))}):resolve(this.pstnConferenceService.pstnConferenceEndpoints[confId])}):(this.$log.warn("[ConferenceService] retrieveConference - missing confID"),this.$q.reject(new Error("retrieveConference - missing confID")))}updateConferenceSession(stanza,conferenceSession){this.$log.info("[ConferenceService] updateConferenceSession");let conferenceStateElem=$(stanza).find("conference-state");if(conferenceStateElem.length){let isConferenceActive="true"===conferenceStateElem.find("active").text(),isTalkerActive="true"===conferenceStateElem.find("talker-active").text(),isRecordingStarted="true"===conferenceStateElem.find("recording-started").text(),isLock="true"===conferenceStateElem.find("lock").text();this.updateState(conferenceSession,isConferenceActive,isTalkerActive,isRecordingStarted,isLock)}let talkersElem=$(stanza).find("talkers");if(talkersElem.length){let talkers=[];talkersElem.find("participant-id").each((__index,talker)=>{let talkerParticipantId=$(talker).text();talkers.push(talkerParticipantId)}),this.updateTalkers(conferenceSession,talkers)}let participantsElem=$(stanza).find("participants");if(0===participantsElem.length&&(participantsElem=$(stanza).find("updated-participants")),participantsElem.length||(participantsElem=$(stanza).find("added-participants")),participantsElem.length){let participants=[];participantsElem.find("participant").each((__index,participant)=>{let participantElem=$(participant),participantId=participantElem.find("participant-id").text(),jid_im=participantElem.find("jid-im").text(),phoneNumber=participantElem.find("phone-number").text(),role=participantElem.find("role").text(),mute=participantElem.find("mute").text(),hold=participantElem.find("hold").text(),cnxState=participantElem.find("cnx-state").text();participants.push({participantId:participantId,jid_im:jid_im,phoneNumber:phoneNumber,participantRole:role,mute:"on"===mute,held:"on"===hold,participantState:cnxState})}),participants.length>0&&this.createOrUpdateParticipants(conferenceSession,participants)}let removedParticipantsElem=$(stanza).find("removed-participants");if(removedParticipantsElem.length){let removedParticipants=[];removedParticipantsElem.find("participant-id").each((__index,removedParticipant)=>{let removedParticipantId=$(removedParticipant).text();removedParticipants.push(removedParticipantId)}),this.removeParticipants(conferenceSession,removedParticipants)}let updatedPublishers=$(stanza).find("added-publishers");updatedPublishers.length&&(updatedPublishers.find("publisher").each((__index,publisher)=>{let publisherElem=$(publisher),publisherId=publisherElem.find("publisher-id").text(),mediaType=publisherElem.find("media-type").text(),jid_im=publisherElem.find("jid-im").text();this.addPublisher(conferenceSession,publisherId,mediaType,jid_im)}),this.$rootScope.$broadcast("ON_CONFERENCE_PUBLISHER_UPDATED",conferenceSession));let removedPublishers=$(stanza).find("removed-publishers");removedPublishers.length&&(removedPublishers.find("publisher").each((__index,publisher)=>{let publisherElem=$(publisher),publisherId=publisherElem.find("participant-id").text(),mediaType=publisherElem.find("media-type").text();for(let i=0;i<conferenceSession.publishers.length;i++){let pub=conferenceSession.publishers[i];if(pub.participantId===publisherId&&pub.mediaType===mediaType){conferenceSession.publishers.splice(i,1);break}}if("video"===mediaType&&this.webConferenceService.isAlreadySubscribedToPublisher(conferenceSession.id,publisherId)){this.$log.info("[ConferenceService] removed-publishers : subscribed to this publisher, so re-init the element");let element=this.webConferenceService.getRelatedElementToPublisher(conferenceSession.id,publisherId);element&&this.webConferenceService.reInitialiseVideoGalleryElementById(conferenceSession,element.id)}}),this.$rootScope.$broadcast("ON_CONFERENCE_PUBLISHER_UPDATED",conferenceSession));let publishers=$(stanza).find("publishers");return publishers.length&&(publishers.find("publisher").each((__index,publisher)=>{let publisherElem=$(publisher),publisherId=publisherElem.find("publisher-id").text(),mediaType=publisherElem.find("media-type").text(),jid_im=publisherElem.find("jid-im").text();this.addPublisher(conferenceSession,publisherId,mediaType,jid_im)}),this.$rootScope.$broadcast("ON_CONFERENCE_PUBLISHER_UPDATED",conferenceSession)),!0}updateState(conferenceSession,isConferenceActive,isTalkerActive,isRecordingStarted,lock=!1){if(isConferenceActive||this.contactService.resetBusyState(),conferenceSession.active&&!isConferenceActive){if(this.contactService.userContact.guestMode&&conferenceSession.type!==this.MEDIATYPE.WEBRTCSHARINGONLY)this.$rootScope.$broadcast("ON_OPEN_POPUP","concludeInvitationEndMeeting");else{let rooms=this.roomService.findRoomsWithConfId(conferenceSession.id);if(rooms&&rooms.length)if(rooms[0].owner)conferenceSession.id===this.getPstnInstantConferenceEndpointId()&&rooms[0].isMyPersonalMeetingRoom()&&this.$rootScope.$broadcast("ON_OPEN_RENAME_MEETING_POPUP",{meetingRoomId:rooms[0].dbId,confEndpointId:this.getPstnInstantConferenceEndpointId()});else switch(conferenceSession.type){case this.MEDIATYPE.WEBRTCSHARINGONLY:break;case this.MEDIATYPE.PSTNAUDIO:case this.MEDIATYPE.WEBRTC:default:if(conferenceSession.isParticipantConnectedByJid(this.contactService.userContact.dbId)){let displayName=_escape(rooms[0].ownerContact.displayName),roomName=_escape(rooms[0].name),message=this.$translate.instant("meetingEndBy",{owner:displayName,meeting:roomName});this.$rootScope.$broadcast("GLOBAL_NOTIFY_MESSAGE_EVENT",message)}}}conferenceSession.participants=[],conferenceSession.status="ended"}conferenceSession.updateStateFromData(isConferenceActive,isTalkerActive,isRecordingStarted,lock),this.$rootScope.$broadcast("ON_CONFERENCE_STATE_EVENT",conferenceSession)}updateTalkers(conferenceSession,talkers){conferenceSession.updateTalkers(talkers),this.$rootScope.$broadcast("ON_CONFERENCE_TALKER_EVENT",conferenceSession)}createOrUpdateParticipants(conferenceSession,participants){conferenceSession.updateParticipants(participants).then(result=>{if(conferenceSession.participants.find(participant=>participant.jid_im===this.contactService.userContact.id&&"disconnected"!==participant.state)&&conferenceSession.type===this.MEDIATYPE.WEBRTC){var state=conferenceSession.hasLocalSharing?"sharing":"audio";this.contactService.setBusyState("dnd",state)}this.$rootScope.$broadcast("ON_CONFERENCE_PARTICIPANT_EVENT",conferenceSession),"webrtc"===conferenceSession.type&&result&&this.$rootScope.$broadcast("ON_WEB_CONFENRECE_PARTICIPANT_JOINED_EVENT",conferenceSession)})}removeParticipants(conferenceSession,removedParticipants){if(conferenceSession.removeParticipants(removedParticipants),!conferenceSession.participants.find(participant=>participant.jid_im===this.contactService.userContact.id))switch(this.contactService.resetBusyState(),conferenceSession.type){case this.MEDIATYPE.WEBRTC:if(this.webConferenceService.removeAllJingleSessionsForConferenceSession(conferenceSession.id),conferenceSession.active){let room=this.roomService.findRoomsWithConfId(conferenceSession.id);if(room.length&&!this.webConferenceService.isMyConference(conferenceSession.id)){let name=_escape(room[0].name),message=this.$translate.instant("meetingDisconnect",{meeting:name});this.$rootScope.$broadcast("GLOBAL_NOTIFY_MESSAGE_EVENT",message)}}conferenceSession.cleanupSessionData();break;case this.MEDIATYPE.WEBRTCSHARINGONLY:this.webConferenceService.removeAllJingleSessionsForConferenceSession(conferenceSession.id),conferenceSession.cleanupSessionData();break;case this.MEDIATYPE.PSTNAUDIO:}this.$rootScope.$broadcast("ON_CONFERENCE_PARTICIPANT_EVENT",conferenceSession)}addPublisher(conferenceSession,publisherId,mediaType,jid){let toAdd=!0;for(let i=0;i<conferenceSession.publishers.length;i++){let pub=conferenceSession.publishers[i];if(pub.participantId===publisherId&&pub.mediaType===mediaType){toAdd=!1;break}}let publisher={participantId:publisherId,mediaType:mediaType,jid_im:jid};if(toAdd&&conferenceSession.publishers.push(publisher),toAdd&&"video"===mediaType){let element=this.webConferenceService.getFreeVideoGalleryElement(conferenceSession.id);element&&!this.webConferenceService.isAlreadySubscribedToPublisher(conferenceSession.id,publisher.participantId)&&(this.$log.info("[ConferenceService] will subscribe to publisher "+conferenceSession.id+" for id "+publisherId+"and element id "+element.id+" in few moments"),element.state="busy",element.publisherId=publisher.participantId,this.$interval((confSession,newPublisher,elemToSubscribe)=>{"busy"===elemToSubscribe.state&&elemToSubscribe.publisherId===newPublisher.participantId&&(this.$log.info("[ConferenceService] subscribe to publisher "+confSession.id+" for id "+newPublisher.participantId+"and element id "+elemToSubscribe.id),this.subscribeToPublisher(confSession.id,newPublisher,elemToSubscribe.id).catch(()=>{this.$log.error("[ConferenceService] subscribe to publisher failed, reset the video gallery element with id "+elemToSubscribe.id),this.webConferenceService.reInitialiseVideoGalleryElementById(confSession,elemToSubscribe.id)}))},2500,1,!0,conferenceSession,publisher,element))}}stopConference(confId="",type=this.MEDIATYPE.PSTNAUDIO,roomId=""){if(this.$log.info("[ConferenceService] stopConference( confId="+confId+", type="+type+")"),!confId||!roomId&&type!==this.MEDIATYPE.PSTNAUDIO)return this.$log.warn("[ConferenceService] stopConference missing conf ID or roomID"),this.$q.reject();let conferenceSession=this.pstnConferenceService.conferenceSessions[confId]?this.pstnConferenceService.conferenceSessions[confId]:this.webConferenceService.conferenceSessions[confId];return conferenceSession&&conferenceSession.isActive()?this.$q((resolve,reject)=>{this.$http({method:"PUT",url:this.confPortalURL+confId+"/stop",headers:this.authService.getPostHeader(),data:{mediaType:type,roomId:roomId}}).then(()=>{this.contactService.resetBusyState();let session=null;(session=type===this.MEDIATYPE.PSTNAUDIO?this.pstnConferenceService.conferenceSessions[confId]:this.webConferenceService.conferenceSessions[confId])&&(this.updateState(session,!1,!1,!1),session.cleanupSessionData(),this.$rootScope.$broadcast("ON_CONFERENCE_STATE_EVENT",session)),this.$log.info("[ConferenceService] stopConference( confId="+confId+") successfully"),resolve()},response=>{let msg=response.data?response.data.errorDetails:response.data,errorMessage="stopConference( confId="+confId+") failure: "+msg;if(this.$log.error("[ConferenceService] "+errorMessage),404e3!==response.data.errorDetailsCode)this.$rootScope.$broadcast("ON_OPEN_GLOBAL_POPUP",{popupTitle:"warning",popupBody:"stopMeetingFailure",okLabel:"ok"});else{let session=null;(session=type===this.MEDIATYPE.PSTNAUDIO?this.pstnConferenceService.conferenceSessions[confId]:this.webConferenceService.conferenceSessions[confId])&&(session.active=!1,session.participants=[],this.removeConferenceSession(session),this.$rootScope.$broadcast("ON_CONFERENCE_STATE_EVENT",session))}reject(new Error(errorMessage))})}):(this.$log.warn("[ConferenceService] stopConference - no active conference session to stop"),this.$q.reject())}removeConferenceSession(conferenceSession=null){conferenceSession&&(conferenceSession.type===this.MEDIATYPE.WEBRTC||conferenceSession.type===this.MEDIATYPE.WEBRTCSHARINGONLY?this.webConferenceService.removeConferenceSession(conferenceSession.id):delete this.pstnConferenceService.conferenceSessions[conferenceSession.id])}disconnectsParticipant(confId,participantId,mediaType=this.MEDIATYPE.PSTNAUDIO){return confId&&participantId?this.$q((resolve,reject)=>{this.$log.info("[ConferenceService] disconnectsParticipant( confId="+confId+"participantId="+participantId+")"),this.$http({method:"DELETE",url:this.confPortalURL+confId+"/participants/"+participantId+"?mediaType="+mediaType,headers:this.authService.getRequestHeader()}).then(()=>{this.$log.info("[ConferenceService] disconnectsParticipant( confId="+confId+"participantId="+participantId+") successfully"),resolve()},response=>{let msg=response.data?response.data.errorDetails:response.data,errorMessage="disconnectsParticipant( confId="+confId+"participantId="+participantId+") failure: "+msg;this.$log.error("[ConferenceService] "+errorMessage),reject(new Error(errorMessage))})}):(this.$log.warn("[ConferenceService] disconnectsParticipant missing conf ID or participantId"),this.$q.reject())}updateConference(confEndpointId,confData,mediaType=this.MEDIATYPE.PSTNAUDIO){if(mediaType===this.MEDIATYPE.PSTNAUDIO)return this.pstnConferenceService.updateConference(confEndpointId,confData);this.webConferenceService.updateConference(confEndpointId,confData)}updateConferenceState(confId,option,mediaType=this.MEDIATYPE.PSTNAUDIO){return this.$log.info("[ConferenceService] updateConferenceState( confId="+confId+", option="+option+" mediaType="+mediaType+")"),confId&&option?this.$q((resolve,reject)=>{let conferenceSession=null;if(!(conferenceSession=mediaType===this.MEDIATYPE.PSTNAUDIO?this.pstnConferenceService.conferenceSessions[confId]:this.webConferenceService.conferenceSessions[confId]))return this.$log.error("[ConferenceService] updateConferenceState - no corresponding conference session to update"),void reject();this.$http({method:"PUT",url:this.confPortalURL+confId+"/update",headers:this.authService.getRequestHeader(),data:{option:option,mediaType:conferenceSession.type}}).then(response=>{let conferenceData=response.data.data;this.$log.info("[ConferenceService] updateConferenceState( confId="+confId+") successfully"),resolve(conferenceData)},response=>{let msg=response.data?response.data.errorDetails:response.data,errorMessage="updatsConferenceState( confId="+confId+") failure: "+msg;this.$log.error("[ConferenceService] "+errorMessage),reject(new Error(errorMessage))})}):(this.$log.error("[ConferenceService] updateConferenceState - missing a parameter"),this.$q.reject())}updateParticipantState(confId,participantId,option,mediaType=this.MEDIATYPE.PSTNAUDIO,media=null,bitRate=null,subStreamLevel=null,publisherId=null){return this.$log.info("[ConferenceService] updateParticipantState( confId="+confId+"participantId="+participantId+" option="+option+" mediaType="+mediaType+")"),confId&&participantId&&option?this.$q((resolve,reject)=>{let conferenceSession=null;if(!(conferenceSession=mediaType===this.MEDIATYPE.PSTNAUDIO?this.pstnConferenceService.conferenceSessions[confId]:this.webConferenceService.conferenceSessions[confId]))return this.$log.error("[ConferenceService] updateParticipantState - no corresponding conference session to update"),void reject();let data={option:option,mediaType:conferenceSession.type};media&&(data.media=media),bitRate&&(data.bitRate=bitRate),publisherId&&(data.publisherId=publisherId),subStreamLevel&&(data.subStreamLevel=subStreamLevel),this.$http({method:"PUT",url:this.confPortalURL+confId+"/participants/"+participantId,headers:this.authService.getRequestHeader(),data:data}).then(response=>{let status=response.data;this.$log.info("[ConferenceService] updateParticipantState( confId="+confId+"participantId="+participantId+") successfully"),resolve(status)},response=>{let msg=response.data?response.data.errorDetails:response.data,errorMessage="updateParticipantState( confId="+confId+"participantId="+participantId+") failure: "+msg;this.$log.error("[ConferenceService] "+errorMessage),reject(new Error(errorMessage))})}):(this.$log.error("[ConferenceService] updateParticipantState - missing a parameter"),this.$q.reject())}retrievePstnPhoneNumbers(shouldFormatResults=!1){return this.pstnConferenceService.retrievePstnPhoneNumbers(shouldFormatResults)}joinPstnConference(confId,participantPhoneNumber,participant,country,room){return this.$q((resolve,reject)=>{if(this.$log.info("[ConferenceService] joinPstnConference with ( confId = "+confId+" participantPhoneNumber = "+participantPhoneNumber+" country = "+country+" )"),!confId||!room)return this.$log.error("[ConferenceService] joinPstnConference - missing parameter"),void reject(new Error("[ConferenceService] joinPstnConference - missing parameter"));resolve(this.pstnConferenceService.initiatesCallParticipant(confId,participantPhoneNumber,participant,country))})}subscribeToPublisher(confId="",publisher=null,elementId=""){return this.$q((resolve,reject)=>{if(!confId||!publisher)return this.$log.warn("[ConferenceService] subscribeToPublisher missing parameters !! Ignore !"),void resolve();this.$log.info("[ConferenceService] subscribeToPublisher for confId "+confId+" and publisher "+publisher.participantId),elementId&&this.webConferenceService.relatePublisherToElement(confId,publisher,elementId),this.$http({method:"POST",url:this.confPortalURL+confId+"/participants/"+publisher.participantId+"/subscribe",headers:this.authService.getRequestHeader()}).then(response=>{this.$log.info("[ConferenceService] subscribeToPublisher successfully"),resolve(response.data)},response=>{let errorMessage="subscribeToPublisher failure: "+(response.data?response.data.errorDetails:response.data);this.$log.error("[ConferenceService] "+errorMessage),reject(new Error(errorMessage))})})}isUserContactInCall(){for(let property in this.webConferenceService.conferenceSessions)if(this.webConferenceService.conferenceSessions.hasOwnProperty(property)){if(this.webConferenceService.conferenceSessions[property].isParticipantConnectedByJid(this.contactService.userContact.jid))return!0}return!1}stopAllConferencesFromRoom(room){var stopConferenceArray=[],pstnConfId=room.getPstnConfEndpointId(),webSharingConfId=room.getSFUSharingConfEndpointId(),sfuConfId=room.getSFUConfEndpointId();return pstnConfId&&stopConferenceArray.push(this.stopConference(pstnConfId)),webSharingConfId&&stopConferenceArray.push(this.stopConference(webSharingConfId,"webrtc")),sfuConfId&&stopConferenceArray.push(this.stopConference(sfuConfId,"webrtc")),this.$q.all(stopConferenceArray)}refreshConferenceSessions(){let promoseArray=[];return promoseArray.push(this.webConferenceService.refreshConferenceSessions()),promoseArray.push(this.pstnConferenceService.refreshConferenceSessions()),this.$q.all(promoseArray)}}ConferenceService.$inject=["$q","$log","$rootScope","$interval","$translate","$http","xmppService","authService","Conference","profileService","contactService","webConferenceService","pstnConferenceService","roomService","errorHelperService"],angular.module("rainbow").service("conferenceService",ConferenceService)},function(module,exports){angular.module("rainbow").service("profileService",["$q","$rootScope","$log","$http","$interval","Offer","authService","contactService","xmppService",function($q,$rootScope,$log,$http,$interval,Offer,authService,contactService,xmppService){"use strict";var service=this;service.FeaturesEnum={COMPANY_ADMIN_COUNT:"COMPANY_ADMIN_COUNT",COMPANY_LOGO_MODIFICATION:"COMPANY_LOGO_MODIFICATION",COMPANY_DOMAIN_NAME_MODIFICATION:"COMPANY_DOMAIN_NAME_MODIFICATION",COMPANY_DETAILS_MODIFICATION:"COMPANY_DETAILS_MODIFICATION",COMPANY_SINGLE_SIGN_ON_SAML:"COMPANY_SINGLE_SIGN_ON_SAML",COMPANY_SINGLE_SIGN_ON_OIDC:"COMPANY_SINGLE_SIGN_ON_OIDC",WEBRTC_FOR_MOBILE:"WEBRTC_FOR_MOBILE",BUBBLE_PARTICIPANT_COUNT:"BUBBLE_PARTICIPANT_COUNT",TELEPHONY_BASIC_CALL:"TELEPHONY_BASIC_CALL",TELEPHONY_SECOND_CALL:"TELEPHONY_SECOND_CALL",TELEPHONY_TRANSFER_CALL:"TELEPHONY_TRANSFER_CALL",TELEPHONY_CONFERENCE_CALL:"TELEPHONY_CONFERENCE_CALL",TELEPHONY_DEFLECT_CALL:"TELEPHONY_DEFLECT_CALL",TELEPHONY_PHONE_BOOK:"TELEPHONY_PHONE_BOOK",TELEPHONY_VOICE_MAIL:"TELEPHONY_VOICE_MAIL",TELEPHONY_CALL_FORWARD:"TELEPHONY_CALL_FORWARD",TELEPHONY_NOMADIC:"TELEPHONY_NOMADIC",CONFERENCE_PARTICIPANT_COUNT:"CONFERENCE_PARTICIPANT_COUNT",CONFERENCE_PARTICIPANT_ALLOWED:"CONFERENCE_PARTICIPANT_ALLOWED",WEBRTC_CONFERENCE_ALLOWED:"WEBRTC_CONFERENCE_ALLOWED",WEBRTC_CONFERENCE_PARTICIPANT_COUNT:"WEBRTC_CONFERENCE_PARTICIPANT_COUNT",WEBRTC_PARTICIPANT_ALLOWED:"WEBRTC_PARTICIPANT_ALLOWED",CONFERENCE_ALLOWED:"CONFERENCE_ALLOWED",CONFERENCE_DIAL_OUT:"CONFERENCE_DIAL_OUT",CONFERENCE_RECORDING:"CONFERENCE_RECORDING",MSO365_CALENDAR_PRESENCE:"MSO365_CALENDAR_PRESENCE",MSO365_DIRECTORY_PROVISIONING:"MSO365_DIRECTORY_PROVISIONING",MSO365_DIRECTORY_SEARCH:"MSO365_DIRECTORY_SEARCH",MSO365_CONTACT_SEARCH:"MSO365_CONTACT_SEARCH",MS_OUTLOOK_PLUGIN:"MS_OUTLOOK_PLUGIN",MS_SKYPE_PLUGIN:"MS_SKYPE_PLUGIN",FILE_SHARING_QUOTA_GB:"FILE_SHARING_QUOTA_GB",GOOGLE_CALENDAR_PRESENCE:"GOOGLE_CALENDAR_PRESENCE",WEBRTC_P2P_RECORDING:"WEBRTC_P2P_RECORDING",BUBBLE_PROMOTE_MEMBER:"BUBBLE_PROMOTE_MEMBER",BUBBLE_GUESTS_ALLOWED:"BUBBLE_GUESTS_ALLOWED",TELEPHONY_WEBRTC_GATEWAY:"TELEPHONY_WEBRTC_GATEWAY",TELEPHONY_WEBRTC_PSTN_CALLING:"TELEPHONY_WEBRTC_PSTN_CALLING",ANALYTICS_DASHBOARD_EC:"ANALYTICS_DASHBOARD_EC",ANALYTICS_DASHBOARD_BP:"ANALYTICS_DASHBOARD_BP",TELEPHONY_CALL_SUBJECT:"CALL_SUBJECT",CHANNEL_CREATE:"CHANNEL_CREATE",CHANNEL_CREATE_ADMIN_ROLE_BYPASS:"CHANNEL_CREATE_ADMIN_ROLE_BYPASS",CHANNEL_ACTIVATED:"CHANNEL_ACTIVATED",MANAGE_ANDROID_TV:"MANAGE_ANDROID_TV",USE_ANDROID_TV:"USE_ANDROID_TV",MASSPRO_USER_PROVISIONING_CSV:"MASSPRO_USER_PROVISIONING_CSV",SEARCH_BY_TAGS:"SEARCH_BY_TAGS",TELEPHONY_3DPARTY_ASSOC:"TELEPHONY_3DPARTY_ASSOC",WEBCLIENT_UI_2_0:"WEBCLIENT_UI_2_0",WEBRTC_UNIFIED_PLAN:"WEBRTC_UNIFIED_PLAN"},service.started=!1,service.start=function(stats){$log.info(""),$log.info("[profileService] === STARTING ==="),service.features={},service.profiles=[],service.mainOffers=[],service.thirdPartyApps=null;var startDate=performance.now();return service.attachHandlers(),$q((function(resolve,reject){service.getServerProfile().then((function(){service.started=!0;var startDuration=Math.round(performance.now()-startDate);stats.push({service:"profileService",startDuration:startDuration}),$log.info("[profileService] === STARTED ("+startDuration+" ms) ==="),$rootScope.$broadcast("ON_PROFILE_FEATURES_UPDATED"),resolve()})).catch((function(error){$log.info("[profileService] === STARTING FAILURE === "+error.message),reject(error)}))}))},service.stop=function(){return $log.info("[profileService] === STOPPING ==="),service.detachHandlers(),service.started=!1,$log.info("[profileService] === STOPPED ==="),$q.when()},service.attachHandlers=function(){service.detachHandlers(),$log.info("[profileService] attachHandlers"),this.profileEventHandler=xmppService.addHandler(service.onManagementMessageReceived,null,"message","management")},service.detachHandlers=function(){$log.info("[profileService] detachHandlers"),this.profileEventHandler&&(xmppService.deleteHandler(this.profileEventHandler),this.profileEventHandler=null)},service.restart=function(){$log.info("[profileService] === RESTART ==="),service.attachHandlers(),service.onUserUpdateNeeded()},service.onManagementMessageReceived=function(stanza){try{var userprofileElem=$(stanza).find("userprofile");if($log.info("[profileService] onManagementMessageReceived  -- on userprofile management message received"),userprofileElem.length)switch(userprofileElem.attr("action")){case"create":case"update":case"delete":service.onUserUpdateNeeded();break;default:$log.info("[profileService] onManagementMessageReceived  -- unknown action")}return!0}catch(error){return $log.error("[profileService] onManagementMessageReceived ERROR "+error),!0}},service.onUserUpdateNeeded=function(){service.timer||(service.timer=$interval((function(){service.getServerProfile().then((function(){$rootScope.$broadcast("ON_PROFILE_FEATURES_UPDATED"),service.timer=null})).catch((function(error){service.timer=null,$log.info("[profileService] === onUserUpdateNeeded FAILURE === "+error.message)}))}),3e3,1))},service.getServerProfile=function(){return $q.all([service.getServerProfiles(),service.getServerProfilesFeatures()])},service.getServerProfiles=function(){return $q((function(resolve,reject){$http({method:"GET",url:config.restServerUrl+"/api/rainbow/enduser/v1.0/users/"+contactService.userContact.dbId+"/profiles",headers:authService.getRequestHeader()}).then((function(response){service.profiles=[],service.mainOffers=[],response.data.data.forEach((function(profileData){$log.debug("[profileService] getServerProfiles === response ==="+profileData),service.profiles.push(profileData);var offer=Offer.createFromProfileData(profileData);(offer.isExclusive||offer.isDefault)&&service.mainOffers.push(offer)})),service.mainOffers.sort(Offer.offerComparator),resolve()}),(function(response){var errorMessage="getServerProfiles failure: no server response";response&&(errorMessage="getServerProfiles failure: "+JSON.stringify(response)),$log.error("[profileService] "+errorMessage),reject(new Error(errorMessage))}))}))},service.getServerProfilesFeatures=function(){return $q((function(resolve,reject){$http({method:"GET",url:config.restServerUrl+"/api/rainbow/enduser/v1.0/users/"+contactService.userContact.dbId+"/profiles/features",headers:authService.getRequestHeader()}).then((function(response){service.features={},response.data.data.forEach((function(featureData){$log.debug("[profileService] getServerProfilesFeatures === response ==="+JSON.stringify(featureData)),featureData.hasOwnProperty("featureUniqueRef")&&(service.features[featureData.featureUniqueRef]=featureData)})),resolve()}),(function(response){var errorMessage="getServerProfilesFeatures failure: no server response";response&&(errorMessage="getServerProfilesFeatures failure: "+JSON.stringify(response)),$log.error("[profileService] "+errorMessage),reject(new Error(errorMessage))}))}))},service.getUserData=function(){return authService.getUserData()},service.setUserData=function(params){return $q((function(resolve,reject){var url=config.restServerUrl+"/api/rainbow/enduser/v1.0/users/"+contactService.userContact.dbId;$http({method:"PUT",url:url,headers:authService.getRequestHeader(),data:params}).then((function(result){$log.info("[profileService] setUserData "+JSON.stringify(params)+" -- success"),resolve(result.data)}),(function(response){var errorMessage="setUserData failure: no server response";response&&(errorMessage="setUserData failure: "+JSON.stringify(response)),$log.error("[profileService] "+errorMessage),reject(new Error(errorMessage))}))}))},service.isFeatureEnabled=function(featureUniqueRef,features){if(features||(features=service.features),service.started&&features.hasOwnProperty(featureUniqueRef)&&features[featureUniqueRef].hasOwnProperty("featureType")&&"boolean"===features[featureUniqueRef].featureType&&features[featureUniqueRef].hasOwnProperty("isEnabled")){var enabled=features[featureUniqueRef].isEnabled;return $log.debug("[profileService] isFeatureEnabled("+featureUniqueRef+"): "+enabled),enabled}return $log.info("[profileService] isFeatureEnabled("+featureUniqueRef+"): service not started or feature not enabled"),!1},service.getFeatureLimitMax=function(featureUniqueRef){if(service.started&&service.features.hasOwnProperty(featureUniqueRef)&&service.features[featureUniqueRef].hasOwnProperty("featureType")&&"number"===service.features[featureUniqueRef].featureType&&service.features[featureUniqueRef].hasOwnProperty("limitMax")){var limitMax=service.features[featureUniqueRef].limitMax;return $log.debug("[profileService] getFeatureLimitMax("+featureUniqueRef+"): "+limitMax),limitMax}return $log.info("[profileService] getFeatureLimitMax("+featureUniqueRef+"): service not started or feature not enabled"),0},service.getFeatureLimitMin=function(featureUniqueRef){if(service.started&&service.features.hasOwnProperty(featureUniqueRef)&&service.features[featureUniqueRef].hasOwnProperty("featureType")&&"number"===service.features[featureUniqueRef].featureType&&service.features[featureUniqueRef].hasOwnProperty("limitMin")){var limitMin=service.features[featureUniqueRef].limitMin;return $log.debug("[profileService] getFeatureLimitMin("+featureUniqueRef+"): "+limitMin),limitMin}return $log.info("[profileService] getFeatureLimitMin("+featureUniqueRef+"): service not started or feature not enabled"),0},service.getMyProfileOffer=function(){return service.mainOffers.length>0?service.mainOffers.slice(-1)[0]:null},service.getMyProfileName=function(){var profile=this.getMyProfileOffer();return profile?profile.name:null},service.getMyProfiles=function(){var profiles=[];return service.started?profiles=service.profiles:$log.warn("[profileService] getMyProfiles(): service not started"),profiles},service.getMyProfileFeatures=function(){var profileFeatures={};return service.started?Object.keys(service.features).forEach((function(featureUniqueRef){var originalFeature=service.features[featureUniqueRef],feature={};Object.keys(originalFeature).filter((function(featureProperty){return"featureUniqueRef"===featureProperty||"featureType"===featureProperty||"limitMin"===featureProperty||"limitMax"===featureProperty||"isEnabled"===featureProperty})).forEach((function(featureProperty){feature[featureProperty]=originalFeature[featureProperty]})),profileFeatures[featureUniqueRef]=feature})):$log.warn("[profileService] getMyProfileFeatures(): service not started"),profileFeatures},service.getThirdPartyApps=function(force){return $q((function(resolve,reject){if(null!==service.thirdPartyApps&&!force)return $log.info("[profileService] getThirdPartyApps -- from cache"),resolve(service.thirdPartyApps);$http({method:"GET",url:config.restServerUrl+"/api/rainbow/authentication/v1.0/oauth/tokens?format=medium",headers:authService.getRequestHeader()}).then((function(response){$log.info("[profileService] getThirdPartyApps from server -- success"),response.data&&response.data.data?service.thirdPartyApps=response.data.data:service.thirdPartyApps=[],resolve(service.thirdPartyApps)})).catch((function(error){var errorMessage="getThirdPartyApps from server failed -- no answer from server";error&&(errorMessage="getThirdPartyApps from server failed -- "+JSON.stringify(error)),$log.error("[profileService] "+errorMessage),reject(new Error(errorMessage))}))}))},service.revokeThirdPartyAccess=function(tokenId){return $q((function(resolve,reject){if(!tokenId)return $log.warn("[profileService] revokeThirdPartyAccess missing token"),reject();$log.info("[profileService] revokeThirdPartyAccess with token -- "+tokenId),$http({method:"DELETE",url:config.restServerUrl+"/api/rainbow/authentication/v1.0/oauth/tokens/"+tokenId,headers:authService.getRequestHeader()}).then((function(){$log.info("[profileService] revokeThirdPartyAccess -- success"),service.thirdPartyApps.forEach((function(app,index){app.id===tokenId&&service.thirdPartyApps.splice(index,1)})),resolve(service.thirdPartyApps)})).catch((function(error){var errorMessage="revokeThirdPartyAccess from server failed -- no answer from server";error&&(errorMessage="revokeThirdPartyAccess from server failed -- "+JSON.stringify(error)),$log.error("[profileService] "+errorMessage),reject(new Error(errorMessage))}))}))}}])},function(module,exports){angular.module("rainbow").service("updatingService",["$http","$log","$rootScope","$interval","helpersService","centralizedService","videoService","telephonyService","webConferenceService",function($http,$log,$rootScope,$interval,helpersService,centralizedService,videoService,telephonyService,webConferenceService){"use strict";var service=this;service.url=window.location.origin+"/app/"+version+"/js/version.js",service.started=!1,service.start=function(){$log.info("[updatingService] === STARTING ==="),service.started=!0,$log.info("[updatingService] === STARTED ==="),-1===service.url.indexOf("localhost")?(service.interval&&$interval.cancel(service.interval),service.interval=$interval(service.checkUpdate,6e5),centralizedService.isDesktopApp()&&(service.intervalDesktop&&$interval.cancel(service.intervalDesktop),service.intervalDesktop=$interval(service.checkUpdateForDesktop,6e5))):$log.info("[updatingService] Do not start on localhost")},service.checkUpdate=function(){$log.info("[updatingService] - Checking if a new version is online..."),$http({method:"GET",url:service.url+"?rand="+helpersService.randomString()}).then((function(){$log.info("[updatingService] - The web client is up to date")}),(function(response){var isInVideoCall=videoService.isUserContactInCall(),isInTelephonyCall=telephonyService.getActiveCall(),isInConferenceCall=webConferenceService.hasActiveConferenceSession();404===response.status?isInVideoCall||isInTelephonyCall||isInConferenceCall?$log.warn("[updatingService] - Update available but user is in call !"):($log.info("[updatingService] - Update available !"),$rootScope.$broadcast("ON_AVAILABLE_UPDATE")):$log.info("[updatingService] - An unknow error has been encountered.")}))},service.checkUpdateForDesktop=function(){var version=centralizedService.containerVersion();if($log.info("[updatingService] - Checking if a new desktop version is available... "+version),!version){var userAgent=navigator.userAgent.substring(navigator.userAgent.indexOf("Rainbow"));userAgent&&(version=userAgent.split("/")[1])}if(version){var temp=version.split(".");if(parseInt(temp[1],10)<35||35===parseInt(temp[1],10)&&parseInt(temp[2],10)<=4){$log.info("[updatingService] - should update from version "+version);var data={popupTitle:"updatingDesktopTitle",popupBody:"updatingDesktopMessage",okLabel:"download",okLink:config.autorizationMicrosoftLink,blockingPopup:!0};navigator.platform.toUpperCase().indexOf("MAC")>=0?data.okLink=config.clientsURL.mac:data.okLink=config.clientsURL.windows,$rootScope.$broadcast("ON_OPEN_GLOBAL_POPUP",data)}}else $log.error("[updatingService] - no desktop version found !! ")},service.stop=function(){$log.info("[updatingService] === STOPPING ==="),service.started=!1,service.interval&&$interval.cancel(service.interval),service.intervalDesktop&&$interval.cancel(service.intervalDesktop),$log.info("[updatingService] === STOPPED ===")}}])},function(module,exports){function asyncGeneratorStep(gen,resolve,reject,_next,_throw,key,arg){try{var info=gen[key](arg),value=info.value}catch(error){return void reject(error)}info.done?resolve(value):Promise.resolve(value).then(_next,_throw)}function _asyncToGenerator(fn){return function(){var self=this,args=arguments;return new Promise((function(resolve,reject){var gen=fn.apply(self,args);function _next(value){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"next",value)}function _throw(err){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"throw",err)}_next(void 0)}))}}angular.module("rainbow").service("calendarService",["$q","$rootScope","$log","$http","$interval","authService","contactService","xmppService","errorHelperService","profileService","conversationService","settingsService","$localStorage",function($q,$rootScope,$log,$http,$interval,authService,contactService,xmppService,errorHelperService,profileService,conversationService,settingsService,$localStorage){"use strict";var that=this;this.intervalID=null,this.start=function(stats){$log.info(""),$log.info("[calendarService] === STARTING ===");var startDate=performance.now();that.serviceActivated=!1,that.serviceState=null,that.calendarState=null,that.autorizationLink="",that.calendaRejectIfBusyActivated=!1,$log.info("[calendarService] listen 'out of office' status for roster contacts"),$interval(that.getAutoReplyForEachContact,5e3,1),that.intervalID=$interval(that.updateAutoReplyForEachContact,9e5),that.officeCalendarPresenceEnabled=profileService.isFeatureEnabled(profileService.FeaturesEnum.MSO365_CALENDAR_PRESENCE),that.googleCalendarPresenceEnabled=profileService.isFeatureEnabled(profileService.FeaturesEnum.GOOGLE_CALENDAR_PRESENCE),that.calendarPresenceEnabled=that.officeCalendarPresenceEnabled||that.googleCalendarPresenceEnabled,$log.info("[calendarService] calendar presence status from profileService : "+that.calendarPresenceEnabled),that.disableCalendarPresencePrompt="true"===settingsService.getSetting("disableCalendarPresence"),$log.info("[calendarService] calendar presence prompt status from userSettings : "+!that.disableCalendarPresencePrompt);var startDuration=Math.round(performance.now()-startDate);return stats.push({service:"calendarService",startDuration:startDuration}),$log.info("[calendarService] === STARTED ("+startDuration+" ms) ==="),that.calendarPresenceEnabled&&!contactService.userContact.guestMode&&(that.attachHandlers(),that.calendarPresenceChangeListener=$rootScope.$on("ON_ROSTER_PRESENCE_CHANGED_EVENT",that.onCalendarPresenceChange),that.connectionStateChangeListener=$rootScope.$on("ON_CONNECTION_STATE_CHANGE_EVENT",that.onConnectionStateChange),that.getCalendarState().then((function(){"enabled"===that.serviceState&&that.handleEnableState()})).catch((function(error){that.serviceActivated=!1,that.serviceState,$log.error("[calendarService] === STARTING FAILURE === "+error.message)}))),$q.when()},this.attachHandlers=function(){$log.info("[calendarService] attachHandlers"),that.messageHandlerRef&&(xmppService.deleteHandler(that.messageHandlerRef),that.messageHandlerRef=null),that.messageHandlerRef=xmppService.addHandler((function(stanza){return that.onUpdateMessageReceived(stanza),!0}),"jabber:iq:configuration","message",null)},this.stop=function(){return $log.info("[calendarService] === STOPPING ==="),that.serviceActivated=!1,that.calendarPresenceChangeListener&&that.calendarPresenceChangeListener(),that.connectionStateChangeListener&&that.connectionStateChangeListener(),that.messageHandlerRef&&(xmppService.deleteHandler(that.messageHandlerRef),that.messageHandlerRef=null),that.intervalID&&$interval.cancel(that.intervalID),$log.info("[calendarService] === STOPPED ==="),$q.when()},this.onConnectionStateChange=function(__event,state){"connected"===state&&($log.info("[calendarService] onConnectionStateChange state:"+state),that.getCalendarState().then((function(){"enabled"===that.serviceState&&that.handleEnableState(),"consent_required"===that.serviceState&&that.handleConsentRequiredState()})).catch((function(error){that.serviceActivated=!1,that.serviceState,$log.error("[calendarService] === FAILURE === "+error.message)})))},this.handleEnableState=function(){var date=this.calendarState.until?new Date(this.calendarState.until):null,status=this.calendarState.busy?"dnd":"online",message=this.calendarState.busy?"busy":"";that.updateCalendarPresenceForUser(contactService.userContact.jid,status,date,message)},this.handleConsentRequiredState=_asyncToGenerator(regeneratorRuntime.mark((function _callee(){var registrationParams;return regeneratorRuntime.wrap((function(_context){for(;;)switch(_context.prev=_context.next){case 0:return _context.next=2,that.getRegistrationParams(!1);case 2:registrationParams=_context.sent,$rootScope.$broadcast("ON_OPEN_CALENDARSELECTION_POPUP",registrationParams);case 4:case"end":return _context.stop()}}),_callee)}))),this.onUpdateMessageReceived=function(stanza){var info=$(stanza).find("calendar");return info.length&&(that.serviceState=info.attr("status"),that.serviceActivated="enabled"===that.serviceState,$rootScope.$broadcast("ON_CALENDAR_STATUS_CHANGE",that.serviceActivated),$log.info("[calendarService] onUpdateMessageReceived with state : "+that.serviceState),"consent_required"===that.serviceState&&that.handleConsentRequiredState()),!0},this.onCalendarPresenceChange=function(__event,attr){if(contactService.isTelJid(attr.jid)&&"calendar"===contactService.getRessourceFromJid(attr.jid)){var jid_im=contactService.getImJid(attr.jid);jid_im&&($log.info("[calendarService] onCalendarPresenceChange -- status: "+attr.status+" -- until: "+attr.until+" -- message: "+attr.message),that.updateCalendarPresenceForUser(jid_im,attr.status,attr.until,attr.message))}},this.updateAutoReplyForEachContact=function(){that.getAutoReplyInfoForContact(contactService.userContact),that.getAutoReplyForEachContact()},this.getAutoReplyForEachContact=function(){$log.info("[calendarService] getAutoReplyForEachContact"),conversationService.getConversations().forEach((function(conversation){null!==conversation.contact&&that.getAutoReplyInfoForContact(conversation.contact)}))},this.getAutoReplyInfoForContact=function(contact){return $q((function(resolve,reject){if(!contact.calendarState.status)return $log.info("[calendarService] getAutoReplyInfoForContact user has no calendar state"),void resolve();if(contact.calendarState.lastUpdate){var duration=moment.duration(contact.calendarState.lastUpdate.diff(moment()));if(Math.abs(Math.floor(duration.asMinutes()))<15)return $log.info("[calendarService] getAutoReplyInfoForContact state has been updated in the last 15min"),void resolve()}contact.calendarState.lastUpdate=moment(),$http({method:"GET",url:config.restServerUrl+"/api/rainbow/calendar/v1.0/automatic_reply?userid="+contact.dbId,headers:authService.getRequestHeader()}).then((function(response){that.treatOutOfOfficeState(response.data,contact),$log.info("[calendarService] getAutoReplyInfoForContact success for contact "+contact.dbId),resolve()}),(function(response){var err=errorHelperService.handleError(response);$log.error("[calendarService] "+errorHelperService.getErrorFullMessage(response,"getAutoReplyInfoForContact")),reject(err)}))}))},this.getCalendarState=function(){return $q((function(resolve,reject){$http({method:"GET",url:config.restServerUrl+"/api/rainbow/calendar/v1.0",headers:authService.getRequestHeader()}).then((function(response){var successMessage="[calendarService] getCalendarState success -- ",calendarInfo=response.data;"busy"===calendarInfo.status||"free"===calendarInfo.status||"out_of_office"===calendarInfo.status?(that.serviceState="enabled",that.calendarState=calendarInfo,successMessage+=that.serviceState+" "+that.calendarState.status):(that.serviceState=calendarInfo.status,that.calendarState=null,successMessage+=that.serviceState),$log.info(successMessage),resolve(response.data)}),(function(){$log.error("[calendarService] getCalendarState failure -- CalendarService portal not responding"),reject()}))}))},this.getRegistrationParams=function(fromSettings){return $q((function(resolve){$log.info("[calendarService] getRegistrationParams");var promiseArray=[];that.officeCalendarPresenceEnabled&&promiseArray.push(that.getCalendarRegistrationInfo("office365")),that.googleCalendarPresenceEnabled&&promiseArray.push(that.getCalendarRegistrationInfo("googleCalendar")),$q.all(promiseArray).finally((function(){that.autorizationGoogleLink||that.autorizationMicrosoftLink?($log.info("[calendarService] getRegistrationParams -- show registration popup or tooltip"),resolve({authentMicrosoftUrl:that.autorizationMicrosoftLink,authentGoogleUrl:that.autorizationGoogleLink,fromSettings:fromSettings})):($log.error("[calendarService] getRegistrationParams -- no calendar provider response"),resolve())}))}))},this.getCalendarRegistrationInfo=function(type){var calendarRedirect="o365",calendarType="office365";return"googleCalendar"===type&&(calendarRedirect="gcal",calendarType="google"),$q((function(resolve,reject){var lang=settingsService.getAppliLanguage().code;$http({method:"POST",url:config.restServerUrl+"/api/rainbow/calendar/v1.0/register",headers:authService.getRequestHeader(),data:{type:calendarType,callback:window.location.origin+"/redirectO365.html?provider="+calendarRedirect+"&lang="+lang}}).then((function(response){$log.info("[calendarService] getCalendarRegistrationInfo for "+type+" -- success"),that.autorizationLink=response.data.url,"googleCalendar"===type?that.autorizationGoogleLink=that.autorizationLink:that.autorizationMicrosoftLink=that.autorizationLink,resolve(that.autorizationLink)}),(function(response){$log.error("[calendarService] getCalendarRegistrationInfo failure"),$log.error(response),reject()}))}))},this.deactivateCalendar=function(){return $log.info("[calendarService] deactivateCalendar"),$q((function(resolve,reject){$http({method:"DELETE",url:config.restServerUrl+"/api/rainbow/calendar/v1.0",headers:authService.getRequestHeader()}).then((function(){$log.info("[calendarService] deactivateCalendar success"),that.serviceActivated=!1,resolve()}),(function(response){$log.error("[calendarService] deactivateCalendar failure"),$log.error(response),reject()}))}))},this.updateCalendarPresenceForUser=function(jid,status,date,message){contactService.getOrCreateContact(jid).then((function(contact){contact.calendarState.status=status,contact.calendarState.message=message;var mdate=null;"online"===status||date||(date=new Date),date&&(mdate=moment(date)),contact.calendarState.mdate=mdate,mdate?mdate.isSame(moment(),"d")?(contact.calendarState.until=mdate.format("LT"),contact.calendarState.untilDate=!1):(contact.calendarState.until=mdate.format("ll"),contact.calendarState.untilDate=!0):(date||(date=new Date),contact.calendarState.until=date,contact.calendarState.untilDate=!1),contactService.isUserContact(contact)?($log.info("[calendarService] updateCalendarPresenceForUser for my user : "+status+" until "+date),that.serviceActivated||"offline"===status||(that.serviceActivated=!0,$rootScope.$broadcast("ON_CALENDAR_STATUS_CHANGE",that.serviceActivated)),that.getAutoReplyInfoForContact(contactService.userContact)):$log.info("[calendarService] updateCalendarPresenceForUser for user : "+jid+" with : "+status+" until "+date),$rootScope.$broadcast("ON_CONTACT_CALENDAR_STATUS_CHANGE",contact)})).catch((function(error){$log.error("[calendarService] updateCalendarPresenceForUser failure for user "+jid+" with error : "+error)}))},this.treatOutOfOfficeState=function(data,contact){if($log.info("[calendarService] treatOutOfOfficeState for user : "+contact.jid+" with data enabled "+data.enabled+" and date end "+data.end),data.enabled){if(contact.calendarState.autoReplyOn=!0,contact.calendarState.autoReplyInfos={},data.message_text&&(contact.calendarState.autoReplyInfos.message=data.message_text),data.end){var mdate=moment(data.end);contact.calendarState.autoReplyInfos.mdate=mdate,mdate?mdate.isSame(moment(),"d")?(contact.calendarState.autoReplyInfos.until=mdate.format("LT"),contact.calendarState.autoReplyInfos.untilDate=!1):(contact.calendarState.autoReplyInfos.until=mdate.format("ll"),contact.calendarState.autoReplyInfos.untilDate=!0):(contact.calendarState.autoReplyInfos.until=data.end,contact.calendarState.autoReplyInfos.untilDate=!0)}$rootScope.$broadcast("ON_CALENDAR_STATUS_CHANGE",that.serviceActivated)}else contact.calendarState.autoReplyOn=!1,contact.calendarState.autoReplyInfos={};$rootScope.$broadcast("ON_CONTACT_CALENDAR_STATUS_CHANGE",contact)},this.calendarCancelCallback=function(){that.serviceActivated=!1,settingsService.setSetting("disableCalendarPresence",!0),contactService.setUserSettings({promptForCalendarPresence:!1}),$rootScope.$broadcast("ON_CALENDAR_STATUS_CHANGE",!1)},this.calendarLaterCallback=function(){that.serviceActivated=!1,$rootScope.$broadcast("ON_CALENDAR_STATUS_CHANGE",!1)},this.setCalendarRejectIfBusy=function(state){that.calendaRejectIfBusyActivated=!1},this.getCalendarRejectIfBusy=function(){return that.calendaRejectIfBusyActivated}}])},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});class MeetingService{constructor($q,$log,roomService,contactService,pstnConferenceService,conferenceService,orderByFilter,webConferenceService){this.$q=$q,this.$log=$log,this.roomService=roomService,this.contactService=contactService,this.pstnConferenceService=pstnConferenceService,this.conferenceService=conferenceService,this.orderByFilter=orderByFilter,this.webConferenceService=webConferenceService,this.started=!1,this.meetings=[],this.listeners=[]}start(stats){return this.$q(resolve=>{let startDate=performance.now();this.$log.info("[MeetingService] === STARTING ==="),this.updateMeetingLists(),this.started=!0;var startDuration=Math.round(performance.now()-startDate);stats.push({service:"MeetingService",startDuration:startDuration}),this.$log.info("[MeetingService] === STARTED ("+startDuration+" ms) ==="),resolve()})}stop(){return this.$log.info("[MeetingService] === STOPPING ==="),this.meetings=[],this.started&&(this.started=!1),this.listeners&&this.listeners.forEach(listenerDestroy=>{listenerDestroy()}),this.$log.info("[MeetingService] === STOPPED ==="),this.$q.when()}getLastActivityDateDate(meeting){return moment(meeting.lastActivityDate)}sortByDate(dateA,dateB){var res=1;return dateA&&dateB&&(res=dateB.value-dateA.value),res}updateMeetingLists(){this.meetings=[],this.meetings=this.orderByFilter(this.roomService.getRooms().filter(room=>room.isMeetingRoom()&&room.status!==this.roomService.RoomUserStatus.REJECTED&&room.status!==this.roomService.RoomUserStatus.DELETED),this.getLastActivityDateDate,!1,this.sortByDate)}getMeetings(){return this.meetings.filter(meeting=>"invited"!==meeting.status&&meeting.conference&&!meeting.conference.scheduled)}getMeetingInvitations(){return this.meetings.filter(meeting=>"invited"===meeting.status)}getActiveMeetings(){return this.updateMeetingLists(),this.meetings.filter(meeting=>{let confId=meeting.getPstnConfEndpointId();if(!meeting.conference.scheduled&&confId){let confSession=this.pstnConferenceService.getConferenceSessionById(confId);if(confSession&&confSession.isActive())return!0}return!1})}endMeeting(meeting){let sharingConfId=meeting.getSFUSharingConfEndpointId(),sharingConfSession=this.webConferenceService.getConferenceSessionById(sharingConfId);return sharingConfSession&&sharingConfSession.isActive()&&this.webConferenceService.stopWebConference(meeting),this.conferenceService.stopConference(this.conferenceService.getPstnInstantConferenceEndpointId())}attendeeExitsMeeting(meeting){if(meeting.owner)return this.$q.reject();let promiseArray=[],confId=meeting.getPstnConfEndpointId();if(confId){let conferenceSession=this.pstnConferenceService.getConferenceSessionById(confId);if(conferenceSession){let confParticipant=conferenceSession.getConnectedParticipantByJid(this.contactService.userContact.jid);confParticipant&&promiseArray.push(this.conferenceService.disconnectsParticipant(confId,confParticipant.participantId,"pstnAudio"))}}return promiseArray.push(this.roomService.participantCloseRoom(meeting)),this.$q.all(promiseArray)}acceptMeetingInvitation(meeting){return this.roomService.acceptRoomInvitation(meeting).then(()=>(this.conferenceService.makeSnapshotForConfId(meeting.getPstnConfEndpointId(),"pstnAudio"),this.roomService.getServerRoom(meeting.dbId)))}declineMeetingInvitation(meeting){return this.roomService.declineRoomInvitation(meeting)}startMeeting(meeting){let confId=meeting.getPstnConfEndpointId();if(confId)return this.pstnConferenceService.initiatesAudio(confId);{let error=new Error("[MeetingService] No confEndpoint associated to meeting");return this.$log.error(error.message),this.$q.reject()}}updateMeetingName(meeting,newName){let conferenceId=meeting.getPstnConfEndpointId();return this.conferenceService.updateConference(conferenceId,{name:newName}).finally(()=>(meeting.name=newName,this.roomService.ownerUpdateRoomNameAndDescription(meeting)))}}exports.MeetingService=MeetingService,MeetingService.$inject=["$q","$log","roomService","contactService","pstnConferenceService","conferenceService","orderByFilter","webConferenceService"],angular.module("rainbow").service("meetingService",MeetingService)},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const ts_ebml_1=__webpack_require__(133);class RecordsService{constructor($q,$rootScope,$log,fileServerService,fileStorageService,xmppService,$interval,$window){this.$q=$q,this.$rootScope=$rootScope,this.$log=$log,this.fileServerService=fileServerService,this.fileStorageService=fileStorageService,this.xmppService=xmppService,this.$interval=$interval,this.$window=$window,this.started=!1,this.recording=!1,this.upload=!1,this.filename="",this.recordStopOrigin="LOCAL"}start(){return this.started=!1,this.recording=!1,this.recorder=null,this.chunk=null,this.data=new Blob([],{type:"video/webm"}),this.audioContext=null,this.recordFile=null,this.decoder=new ts_ebml_1.Decoder,this.initConversationRecordContext(),this.$log.info("[RecordsService] start"),this.$q.when()}stop(){return this.$log.info("[RecordsService stop"),this.started&&(this.started=!1),this.$q.when()}onDataAvailable(event){this.$log.info("[RecordService] >onDataAvailable: size = "+event.data.size),event.data.size>0&&(this.chunk=event.data,this.data=new Blob([this.data,this.chunk],{type:this.chunk.type}))}canRecord(){try{return!!MediaRecorder}catch(e){return!1}}onStop(){this.$log.info("[RecordService] On stop recording"),navigator.mediaDevices.getUserMedia&&this.$window.mozRTCPeerConnection?(this.onStopCreateFileFromBlob(this.data),this.updatedBlob=this.data):navigator.mediaDevices.getUserMedia&&this.$window.webkitRTCPeerConnection&&this.chunk&&this.injectMetadata(this.chunk).then(result=>{this.updatedBlob=result,this.onStopCreateFileFromBlob(this.updatedBlob)})}onCreateFileFromBlobForSafari(blob){this.updatedBlob=blob,this.$log.info("[RecordService] Size of updatedBlob : "+blob.size),this.filename=this.filename.replace("mp4","wav"),this.recordFile={name:this.filename,extension:"wav",size:blob.size},this.recording=!1,this.recorder=null,this.chunk=null,this.$rootScope.$broadcast("ON_OPEN_RECORDINGFILESTORAGE_POPUP",this.recordFile,this.recordStopOrigin),this.$rootScope.$broadcast("ON_WEBRTC_RECORD_SAVED",this.recordFile,blob,this.recordStopOrigin),this.recordStopOrigin="LOCAL"}onStopCreateFileFromBlob(blob){this.$log.info("[RecordService] Size of updatedBlob : "+blob.size),this.recordFile={name:this.filename,extension:"mp4",size:blob.size},this.recording=!1,this.recorder=null,this.chunk=null,this.$rootScope.$broadcast("ON_OPEN_RECORDINGFILESTORAGE_POPUP",this.recordFile,this.recordStopOrigin),this.$rootScope.$broadcast("ON_WEBRTC_RECORD_SAVED",this.recordFile,blob,this.recordStopOrigin),this.recordStopOrigin="LOCAL"}readAsArrayBuffer(blob){return new Promise((resolve,reject)=>{const reader=new FileReader;reader.readAsArrayBuffer(blob),reader.onloadend=()=>{resolve(reader.result)},reader.onerror=ev=>{reject()}})}injectMetadata(blob){var defered=this.$q.defer();const decoder=new ts_ebml_1.Decoder,reader=new ts_ebml_1.Reader;return reader.logging=!1,reader.drop_default_duration=!1,this.readAsArrayBuffer(blob).then(buffer=>{decoder.decode(buffer).forEach(elm=>{reader.read(elm)}),reader.stop();var refinedMetadataBuf=ts_ebml_1.tools.makeMetadataSeekable(reader.metadatas,reader.duration,reader.cues),body=buffer.slice(reader.metadataSize);const result=new Blob([refinedMetadataBuf,body],{type:blob.type});defered.resolve(result)}),defered.promise}closeAudioContext(){this.audioContext&&(this.audioContext.destination&&this.audioContext.destination.disconnect(),"closed"!==this.audioContext.state&&(this.audioContext.close(),this.audioContext=null))}cleanRecord(){!1!==this.recording?this.$log.error("[RecordsService] Unexpected record cleaning while recording not stopped"):(this.updatedBlob=null,this.recordFile=null,this.data=null)}onError(event){this.$log.error("[RecordService] error : "+event.message||!1),this.recording=!1,this.stopConvTimer(),this.$rootScope.$broadcast("ON_WEBRTC_RECORD_ERROR")}createRecord(callID,sourceStream="REMOTE",upload=!1,filename="",onlyAudio=!1,mimeType){let options=null,localStreams=null,remoteStreams=null,stream=null,videoStream=null,audioStream=null,tracks=[];this.recorder=null,this.upload=upload,this.filename=filename;let streamsAvailable=!1,localIndexSharing=null,localIndexAudioVideo=null,remoteIndexSharing=null,remoteIndexAudioVideo=null,isSafari="safari"===adapter.default.browserDetails.browser;if(this.decoder=new ts_ebml_1.Decoder,this.data=new Blob([],{type:"video/webm"}),isSafari&&(mimeType="audio/wave"),mimeType&&MediaRecorder.isTypeSupported(mimeType)?options={mimeType:mimeType}:onlyAudio?MediaRecorder.isTypeSupported("audio/webm")&&(options={mimeType:"audio/webm"}):MediaRecorder.isTypeSupported("video/webm;codecs=vp8")?options={mimeType:"video/webm; codecs=vp8"}:MediaRecorder.isTypeSupported("video/webm;codecs=vp9")?options={mimeType:"video/webm; codecs=vp9"}:MediaRecorder.isTypeSupported("video/webm;codecs=h264")?options={mimeType:"video/webm; codecs=h264"}:MediaRecorder.isTypeSupported("video/mpeg")&&(options={mimeType:"video/mpeg"}),null===options)return this.$log.error("[RecordsService] Codecs : "+mimeType+" are not available for the navigator"),!1;this.$log.info("[RecordsService] createRecord -- mimeType used "+options.mimeType);var sess=this.xmppService.connection.jingle.sessions[callID];if(localStreams=this.xmppService.connection.jingle.sessions[callID].localStreams,(remoteStreams=sess.remoteStreams)&&remoteStreams.length||!sess.remoteStreamsObject||(remoteStreams=Object.values(sess.remoteStreamsObject)),streamsAvailable=localStreams&&localStreams.length&&null!==localStreams[0]||remoteStreams&&remoteStreams.length&&null!==remoteStreams[0],null!==this.recorder||!streamsAvailable)return this.$log.error("[RecordsService] Cannot get Stream"),!1;{let i,tmpIndexSharing=null;for(i=0;i<remoteStreams.length;i++)remoteStreams[i]&&null!=remoteStreams[i]&&(tmpIndexSharing=i,remoteStreams[i].getAudioTracks().forEach(element=>{tracks.push(element),remoteIndexAudioVideo=i,tmpIndexSharing=null}),null!==tmpIndexSharing&&(remoteIndexSharing=tmpIndexSharing));for(tmpIndexSharing=null,i=0;i<localStreams.length;i++)localStreams[i]&&null!=localStreams[i]&&(tmpIndexSharing=i,localStreams[i].getAudioTracks().forEach(element=>{tracks.push(element),localIndexAudioVideo=i,tmpIndexSharing=null}),null!==tmpIndexSharing&&(localIndexSharing=tmpIndexSharing));if(this.audioContext&&(this.$log.error("[RecordsService] anomaly audio Context not previously released"),this.closeAudioContext()),tracks.length)if(isSafari)audioStream=new MediaStream,tracks.forEach(track=>{audioStream.addTrack(track)});else{this.audioContext=new AudioContext;let sources=tracks.map(t=>this.audioContext.createMediaStreamSource(new MediaStream([t]))),dest=this.audioContext.createMediaStreamDestination();sources.forEach(source=>source.connect(dest)),audioStream=dest.stream}if(!onlyAudio&&!isSafari)if(videoStream=new MediaStream,"LOCAL"===sourceStream&&null!==localIndexSharing)localStreams[localIndexSharing].getVideoTracks().forEach(element=>{videoStream.addTrack(element)});else null!==remoteIndexSharing?remoteStreams[remoteIndexSharing].getVideoTracks().forEach(element=>{videoStream.addTrack(element)}):remoteStreams[remoteIndexAudioVideo].getVideoTracks().forEach(element=>{videoStream.addTrack(element)});stream=audioStream&&videoStream?new MediaStream([...audioStream.getTracks(),...videoStream.getTracks()]):audioStream&&!videoStream?audioStream:videoStream,isSafari?(this.recorder=new MediaRecorder(stream),this.recorder.addEventListener("dataavailable",function(e){console.info(e),this.onCreateFileFromBlobForSafari(e.data)}.bind(this)),this.recorder.onstop=this.onStop.bind(this),this.recorder.onerror=this.onError.bind(this)):(this.recorder=new MediaRecorder(stream,options),this.recorder.ondataavailable=this.onDataAvailable.bind(this),this.recorder.onstop=this.onStop.bind(this),this.recorder.onerror=this.onError.bind(this))}return!0}uploadFile(){return this.$q((resolve,reject)=>{let buffer=this.updatedBlob,file=this.recordFile,UploadError="";!1!==this.recording&&(this.$log.error("[RecordsService] Unexpected uploading file when recording not stopped"),reject(UploadError="recording not stopped pb")),0===file.size&&(this.$log.error("[RecordsService] error uploading empty file"),reject(UploadError="empty file pb")),this.fileStorageService.createFileDescriptor(file.name,file.extension,file.size).then(fileDescriptor=>{this.fileServerService.uploadAFileByChunk(fileDescriptor,buffer,void 0,()=>{}).then(success=>{this.$log.info("[RecordsService] uploadFile success"),this.cleanRecord(),resolve()}).catch(errorUpload=>{this.$log.error("[RecordsService] Unexpected error while uploading file",errorUpload),reject(UploadError="server pb")})}).catch(error=>{this.$log.error("[RecordsService] Unexpected error while creating file descriptor!",error),reject(UploadError="file descriptor pb")})})}setRecordStopOrigin(recordStopSource){recordStopSource&&""!==recordStopSource&&(this.recordStopOrigin=recordStopSource)}localSaveFile(){let buffer=this.updatedBlob,file=this.recordFile;!1===this.recording?(this.downloadFile(buffer,null,null,file.name,!0),this.cleanRecord()):this.$log.error("[RecordsService] Unexpected file local storage when recording not stopped")}downloadFile(blob,conversation_id,message_id,filename,browse){this.$log.info("[RecordsService] downloadFile -- default function")}startRecording(timeslice){null!==this.recorder&&(timeslice?this.recorder.start(timeslice):this.recorder.start(),this.recording=!0,this.startConvTimer())}stopRecording(){null!==this.recorder&&(this.recorder.stop(),this.recording=!1,this.closeAudioContext()),this.stopConvTimer(),this.initConversationRecordContext()}pauseResumeRecording(){null!==this.recorder&&("recording"===this.recorder.state?(this.recorder.pause(),this.conversationRecordContext.pause=!0,this.stopConvTimer()):(this.recorder.resume(),this.conversationRecordContext.pause=!1,this.startConvTimer()))}setOnDataAvailableCallback(callback){null!==this.recorder&&(this.recorder.ondataavailable=callback)}setOnErrorCallback(callback){null!==this.recorder&&(this.recorder.onerror=callback)}setOnPauseCallback(callback){null!==this.recorder&&(this.recorder.onpause=callback)}setOnResumeCallback(callback){null!==this.recorder&&(this.recorder.onresume=callback)}setOnStartCallback(callback){null!==this.recorder&&(this.recorder.onstart=callback)}setOnStopCallback(callback){null!==this.recorder&&(this.recorder.onstop=callback)}initConversationRecordContext(){this.conversationRecordContext={conversationId:"",recorder:!1,pause:!1,actualRecordTime:0,updateTimer:null,recordStopSource:"LOCAL"}}getConversationRecordContext(conversationId){return conversationId===this.conversationRecordContext.conversationId?this.conversationRecordContext:null}setConversationRecordContext(conversationId,recorder,pause,actualRecordTime,recordStopSource){conversationId&&""!==conversationId&&(this.conversationRecordContext.conversationId=conversationId,this.conversationRecordContext.recorder=recorder&&this.recording,this.conversationRecordContext.pause=pause,this.conversationRecordContext.actualRecordTime=actualRecordTime,this.conversationRecordContext.recordStopSource=recordStopSource)}startConvTimer(){this.conversationRecordContext.updateTimer=this.$interval(()=>{this.conversationRecordContext.actualRecordTime++},1e3)}stopConvTimer(){null!==this.conversationRecordContext.updateTimer&&(this.$interval.cancel(this.conversationRecordContext.updateTimer),this.conversationRecordContext.updateTimer=null)}}RecordsService.$inject=["$q","$rootScope","$log","fileServerService","fileStorageService","xmppService","$interval","$window"],angular.module("rainbow").service("recordsService",RecordsService)},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var EBMLDecoder_1=__webpack_require__(134);exports.Decoder=EBMLDecoder_1.default;var EBMLEncoder_1=__webpack_require__(17);exports.Encoder=EBMLEncoder_1.default;var EBMLReader_1=__webpack_require__(143);exports.Reader=EBMLReader_1.default;var tools=__webpack_require__(7);exports.tools=tools;var version=__webpack_require__(145).version;exports.version=version},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var State,tools_1=__webpack_require__(7),int64_buffer_1=__webpack_require__(16),tools=__webpack_require__(7),byEbmlID=__webpack_require__(18).byEbmlID;!function(State){State[State.STATE_TAG=1]="STATE_TAG",State[State.STATE_SIZE=2]="STATE_SIZE",State[State.STATE_CONTENT=3]="STATE_CONTENT"}(State||(State={}));var EBMLDecoder=function(){function EBMLDecoder(){this._buffer=new tools_1.Buffer(0),this._tag_stack=[],this._state=State.STATE_TAG,this._cursor=0,this._total=0,this._schema=byEbmlID,this._result=[]}return EBMLDecoder.prototype.decode=function(chunk){this.readChunk(chunk);var diff=this._result;return this._result=[],diff},EBMLDecoder.prototype.readChunk=function(chunk){for(this._buffer=tools.concat([this._buffer,new tools_1.Buffer(chunk)]);this._cursor<this._buffer.length&&(this._state!==State.STATE_TAG||this.readTag())&&(this._state!==State.STATE_SIZE||this.readSize())&&(this._state!==State.STATE_CONTENT||this.readContent()););},EBMLDecoder.prototype.getSchemaInfo=function(tagNum){return this._schema[tagNum]||{name:"unknown",level:-1,type:"unknown",description:"unknown"}},EBMLDecoder.prototype.readTag=function(){if(this._cursor>=this._buffer.length)return!1;var tag=tools_1.readVint(this._buffer,this._cursor);if(null==tag)return!1;var tagNum=this._buffer.slice(this._cursor,this._cursor+tag.length).reduce((function(o,v,i,arr){return o+v*Math.pow(16,2*(arr.length-1-i))}),0),schema=this.getSchemaInfo(tagNum),tagObj={EBML_ID:tagNum.toString(16),schema:schema,type:schema.type,name:schema.name,level:schema.level,tagStart:this._total,tagEnd:this._total+tag.length,sizeStart:this._total+tag.length,sizeEnd:null,dataStart:null,dataEnd:null,dataSize:null,data:null};return this._tag_stack.push(tagObj),this._cursor+=tag.length,this._total+=tag.length,this._state=State.STATE_SIZE,!0},EBMLDecoder.prototype.readSize=function(){if(this._cursor>=this._buffer.length)return!1;var size=tools_1.readVint(this._buffer,this._cursor);if(null==size)return!1;var tagObj=this._tag_stack[this._tag_stack.length-1];return tagObj.sizeEnd=tagObj.sizeStart+size.length,tagObj.dataStart=tagObj.sizeEnd,tagObj.dataSize=size.value,-1===size.value?(tagObj.dataEnd=-1,"m"===tagObj.type&&(tagObj.unknownSize=!0)):tagObj.dataEnd=tagObj.sizeEnd+size.value,this._cursor+=size.length,this._total+=size.length,this._state=State.STATE_CONTENT,!0},EBMLDecoder.prototype.readContent=function(){var tagObj=this._tag_stack[this._tag_stack.length-1];if("m"===tagObj.type){if(tagObj.isEnd=!1,this._result.push(tagObj),this._state=State.STATE_TAG,0===tagObj.dataSize){var elm=Object.assign({},tagObj,{isEnd:!0});this._result.push(elm),this._tag_stack.pop()}return!0}if(this._buffer.length<this._cursor+tagObj.dataSize)return!1;var data=this._buffer.slice(this._cursor,this._cursor+tagObj.dataSize);switch(this._buffer=this._buffer.slice(this._cursor+tagObj.dataSize),tagObj.data=data,tagObj.type){case"u":tagObj.value=data.readUIntBE(0,data.length);break;case"i":tagObj.value=data.readIntBE(0,data.length);break;case"f":tagObj.value=4===tagObj.dataSize?data.readFloatBE(0):8===tagObj.dataSize?data.readDoubleBE(0):(console.warn("cannot read "+tagObj.dataSize+" octets float. failback to 0"),0);break;case"s":tagObj.value=data.toString("ascii");break;case"8":tagObj.value=data.toString("utf8");break;case"b":tagObj.value=data;break;case"d":tagObj.value=tools_1.convertEBMLDateToJSDate(new int64_buffer_1.Int64BE(data).toNumber())}if(null===tagObj.value)throw new Error("unknown tag type:"+tagObj.type);for(this._result.push(tagObj),this._total+=tagObj.dataSize,this._state=State.STATE_TAG,this._cursor=0,this._tag_stack.pop();this._tag_stack.length>0;){var topEle=this._tag_stack[this._tag_stack.length-1];if(topEle.dataEnd<0)return this._tag_stack.pop(),!0;if(this._total<topEle.dataEnd)break;if("m"!==topEle.type)throw new Error("parent element is not master element");elm=Object.assign({},topEle,{isEnd:!0});this._result.push(elm),this._tag_stack.pop()}return!0},EBMLDecoder}();exports.default=EBMLDecoder},function(module,exports){var g;g=function(){return this}();try{g=g||new Function("return this")()}catch(e){"object"==typeof window&&(g=window)}module.exports=g},function(module,exports,__webpack_require__){"use strict";exports.byteLength=function(b64){var lens=getLens(b64),validLen=lens[0],placeHoldersLen=lens[1];return 3*(validLen+placeHoldersLen)/4-placeHoldersLen},exports.toByteArray=function(b64){for(var tmp,lens=getLens(b64),validLen=lens[0],placeHoldersLen=lens[1],arr=new Arr(function(b64,validLen,placeHoldersLen){return 3*(validLen+placeHoldersLen)/4-placeHoldersLen}(0,validLen,placeHoldersLen)),curByte=0,len=placeHoldersLen>0?validLen-4:validLen,i=0;i<len;i+=4)tmp=revLookup[b64.charCodeAt(i)]<<18|revLookup[b64.charCodeAt(i+1)]<<12|revLookup[b64.charCodeAt(i+2)]<<6|revLookup[b64.charCodeAt(i+3)],arr[curByte++]=tmp>>16&255,arr[curByte++]=tmp>>8&255,arr[curByte++]=255&tmp;2===placeHoldersLen&&(tmp=revLookup[b64.charCodeAt(i)]<<2|revLookup[b64.charCodeAt(i+1)]>>4,arr[curByte++]=255&tmp);1===placeHoldersLen&&(tmp=revLookup[b64.charCodeAt(i)]<<10|revLookup[b64.charCodeAt(i+1)]<<4|revLookup[b64.charCodeAt(i+2)]>>2,arr[curByte++]=tmp>>8&255,arr[curByte++]=255&tmp);return arr},exports.fromByteArray=function(uint8){for(var tmp,len=uint8.length,extraBytes=len%3,parts=[],i=0,len2=len-extraBytes;i<len2;i+=16383)parts.push(encodeChunk(uint8,i,i+16383>len2?len2:i+16383));1===extraBytes?(tmp=uint8[len-1],parts.push(lookup[tmp>>2]+lookup[tmp<<4&63]+"==")):2===extraBytes&&(tmp=(uint8[len-2]<<8)+uint8[len-1],parts.push(lookup[tmp>>10]+lookup[tmp>>4&63]+lookup[tmp<<2&63]+"="));return parts.join("")};for(var lookup=[],revLookup=[],Arr="undefined"!=typeof Uint8Array?Uint8Array:Array,code="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",i=0,len=code.length;i<len;++i)lookup[i]=code[i],revLookup[code.charCodeAt(i)]=i;function getLens(b64){var len=b64.length;if(len%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var validLen=b64.indexOf("=");return-1===validLen&&(validLen=len),[validLen,validLen===len?0:4-validLen%4]}function encodeChunk(uint8,start,end){for(var tmp,num,output=[],i=start;i<end;i+=3)tmp=(uint8[i]<<16&16711680)+(uint8[i+1]<<8&65280)+(255&uint8[i+2]),output.push(lookup[(num=tmp)>>18&63]+lookup[num>>12&63]+lookup[num>>6&63]+lookup[63&num]);return output.join("")}revLookup["-".charCodeAt(0)]=62,revLookup["_".charCodeAt(0)]=63},function(module,exports){exports.read=function(buffer,offset,isLE,mLen,nBytes){var e,m,eLen=8*nBytes-mLen-1,eMax=(1<<eLen)-1,eBias=eMax>>1,nBits=-7,i=isLE?nBytes-1:0,d=isLE?-1:1,s=buffer[offset+i];for(i+=d,e=s&(1<<-nBits)-1,s>>=-nBits,nBits+=eLen;nBits>0;e=256*e+buffer[offset+i],i+=d,nBits-=8);for(m=e&(1<<-nBits)-1,e>>=-nBits,nBits+=mLen;nBits>0;m=256*m+buffer[offset+i],i+=d,nBits-=8);if(0===e)e=1-eBias;else{if(e===eMax)return m?NaN:1/0*(s?-1:1);m+=Math.pow(2,mLen),e-=eBias}return(s?-1:1)*m*Math.pow(2,e-mLen)},exports.write=function(buffer,value,offset,isLE,mLen,nBytes){var e,m,c,eLen=8*nBytes-mLen-1,eMax=(1<<eLen)-1,eBias=eMax>>1,rt=23===mLen?Math.pow(2,-24)-Math.pow(2,-77):0,i=isLE?0:nBytes-1,d=isLE?1:-1,s=value<0||0===value&&1/value<0?1:0;for(value=Math.abs(value),isNaN(value)||value===1/0?(m=isNaN(value)?1:0,e=eMax):(e=Math.floor(Math.log(value)/Math.LN2),value*(c=Math.pow(2,-e))<1&&(e--,c*=2),(value+=e+eBias>=1?rt/c:rt*Math.pow(2,1-eBias))*c>=2&&(e++,c/=2),e+eBias>=eMax?(m=0,e=eMax):e+eBias>=1?(m=(value*c-1)*Math.pow(2,mLen),e+=eBias):(m=value*Math.pow(2,eBias-1)*Math.pow(2,mLen),e=0));mLen>=8;buffer[offset+i]=255&m,i+=d,m/=256,mLen-=8);for(e=e<<mLen|m,eLen+=mLen;eLen>0;buffer[offset+i]=255&e,i+=d,e/=256,eLen-=8);buffer[offset+i-d]|=128*s}},function(module,exports){var toString={}.toString;module.exports=Array.isArray||function(arr){return"[object Array]"==toString.call(arr)}},function(module,exports,__webpack_require__){(function(Buffer){var tools={readVint:function(buffer,start){start=start||0;for(var length=1;length<=8&&!(buffer[start]>=Math.pow(2,8-length));length++);if(length>8)throw new Error("Unrepresentable length: "+length+" "+buffer.toString("hex",start,start+length));if(start+length>buffer.length)return null;for(var value=buffer[start]&(1<<8-length)-1,i=1;i<length;i++){if(7===i&&value>=Math.pow(2,45)&&buffer[start+7]>0)return{length:length,value:-1};value*=Math.pow(2,8),value+=buffer[start+i]}return{length:length,value:value}},writeVint:function(value){if(value<0||value>Math.pow(2,53))throw new Error("Unrepresentable value: "+value);for(var length=1;length<=8&&!(value<Math.pow(2,7*length)-1);length++);for(var buffer=new Buffer(length),i=1;i<=length;i++){var b=255&value;buffer[length-i]=b,value-=b,value/=Math.pow(2,8)}return buffer[0]=buffer[0]|1<<8-length,buffer}};module.exports=tools}).call(this,__webpack_require__(12).Buffer)},function(module,exports,__webpack_require__){var BufferReader=__webpack_require__(141),XIPH_LACING=1,EBML_LACING=3,FIXED_SIZE_LACING=2;module.exports=function(buffer){var block={},reader=new BufferReader(buffer);block.trackNumber=reader.nextUIntV(),block.timecode=reader.nextInt16BE();var flags=reader.nextUInt8();block.invisible=!!(8&flags),block.keyframe=!!(128&flags),block.discardable=!!(1&flags);var lacing=(6&flags)>>1;return block.frames=function(reader,lacing){if(!lacing)return[reader.nextBuffer()];var i,frameSize,frames=[],framesNum=reader.nextUInt8()+1;if(lacing===FIXED_SIZE_LACING){if(reader.length%framesNum!=0)throw new Error("Fixed-Size Lacing Error");for(frameSize=reader.length/framesNum,i=0;i<framesNum;i++)frames.push(reader.nextBuffer(frameSize));return frames}var frameSizes=[];if(lacing===XIPH_LACING)for(i=0;i<framesNum-1;i++){var val;frameSize=0;do{val=reader.nextUInt8(),frameSize+=val}while(255===val);frameSizes.push(frameSize)}else if(lacing===EBML_LACING)for(frameSize=reader.nextUIntV(),frameSizes.push(frameSize),i=1;i<framesNum-1;i++)frameSize+=reader.nextIntV(),frameSizes.push(frameSize);for(i=0;i<framesNum-1;i++)frames.push(reader.nextBuffer(frameSizes[i]));return frames.push(reader.nextBuffer()),frames}(reader,lacing),block}},function(module,exports,__webpack_require__){var vint=__webpack_require__(142);function BufferReader(buffer){this.buffer=buffer,this.offset=0}BufferReader.prototype.nextInt16BE=function(){var value=this.buffer.readInt16BE(this.offset);return this.offset+=2,value},BufferReader.prototype.nextUInt8=function(){var value=this.buffer.readUInt8(this.offset);return this.offset+=1,value},BufferReader.prototype.nextUIntV=function(){var v=vint(this.buffer,this.offset);return this.offset+=v.length,v.value},BufferReader.prototype.nextIntV=function(){var v=vint(this.buffer,this.offset,!0);return this.offset+=v.length,v.value},BufferReader.prototype.nextBuffer=function(length){var buffer=length?this.buffer.slice(this.offset,this.offset+length):this.buffer.slice(this.offset);return this.offset+=length||this.length,buffer},Object.defineProperty(BufferReader.prototype,"length",{get:function(){return this.buffer.length-this.offset}}),module.exports=BufferReader},function(module,exports){module.exports=function(buffer,start,signed){start=start||0;for(var length=1;length<=8&&!(buffer[start]>=Math.pow(2,8-length));length++);if(length>8)throw new Error("Unrepresentable length: "+length+" "+buffer.toString("hex",start,start+length));if(start+length>buffer.length)return null;var i,value=buffer[start]&(1<<8-length)-1;for(i=1;i<length;i++){if(7===i&&value>=Math.pow(2,45)&&buffer[start+7]>0)return{length:length,value:-1};value*=Math.pow(2,8),value+=buffer[start+i]}return signed&&(value-=Math.pow(2,7*length-1)-1),{length:length,value:value}}},function(module,exports,__webpack_require__){"use strict";var extendStatics,__extends=this&&this.__extends||(extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])},function(d,b){function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)});Object.defineProperty(exports,"__esModule",{value:!0});var events_1=__webpack_require__(144),tools=__webpack_require__(7),EBMLReader=function(_super){function EBMLReader(){var _this=_super.call(this)||this;return _this.logGroup="",_this.hasLoggingStarted=!1,_this.metadataloaded=!1,_this.chunks=[],_this.stack=[],_this.segmentOffset=0,_this.last2SimpleBlockVideoTrackTimecode=[0,0],_this.last2SimpleBlockAudioTrackTimecode=[0,0],_this.lastClusterTimecode=0,_this.lastClusterPosition=0,_this.timecodeScale=1e6,_this.metadataSize=0,_this.metadatas=[],_this.cues=[],_this.firstVideoBlockRead=!1,_this.firstAudioBlockRead=!1,_this.currentTrack={TrackNumber:-1,TrackType:-1,DefaultDuration:null,CodecDelay:null},_this.trackTypes=[],_this.trackDefaultDuration=[],_this.trackCodecDelay=[],_this.trackInfo={type:"nothing"},_this.ended=!1,_this.logging=!1,_this.use_duration_every_simpleblock=!1,_this.use_webp=!1,_this.use_segment_info=!0,_this.drop_default_duration=!0,_this}return __extends(EBMLReader,_super),EBMLReader.prototype.stop=function(){for(this.ended=!0,this.emit_segment_info();this.stack.length;)this.stack.pop(),this.logging&&console.groupEnd();this.logging&&this.hasLoggingStarted&&this.logGroup&&console.groupEnd()},EBMLReader.prototype.emit_segment_info=function(){var data=this.chunks;if(this.chunks=[],this.metadataloaded){if(!this.use_segment_info)return;var timecode=this.lastClusterTimecode,duration=this.duration,timecodeScale=this.timecodeScale;this.emit("cluster",{timecode:timecode,data:data}),this.emit("duration",{timecodeScale:timecodeScale,duration:duration})}else{this.metadataloaded=!0,this.metadatas=data;var videoTrackNum=this.trackTypes.indexOf(1),audioTrackNum=this.trackTypes.indexOf(2);if(this.trackInfo=videoTrackNum>=0&&audioTrackNum>=0?{type:"both",trackNumber:videoTrackNum}:videoTrackNum>=0?{type:"video",trackNumber:videoTrackNum}:audioTrackNum>=0?{type:"audio",trackNumber:audioTrackNum}:{type:"nothing"},!this.use_segment_info)return;this.emit("metadata",{data:data,metadataSize:this.metadataSize})}},EBMLReader.prototype.read=function(elm){var _this=this,drop=!1;if(!this.ended){if("m"===elm.type)if(elm.isEnd)this.stack.pop();else{var parent_1=this.stack[this.stack.length-1];if(null!=parent_1&&parent_1.level>=elm.level){this.stack.pop(),this.logging&&console.groupEnd(),parent_1.dataEnd=elm.dataEnd,parent_1.dataSize=elm.dataEnd-parent_1.dataStart,parent_1.unknownSize=!1;var o=Object.assign({},parent_1,{name:parent_1.name,type:parent_1.type,isEnd:!0});this.chunks.push(o)}this.stack.push(elm)}if("m"===elm.type&&"Segment"==elm.name)0!=this.segmentOffset&&console.warn("Multiple segments detected!"),this.segmentOffset=elm.dataStart,this.emit("segment_offset",this.segmentOffset);else if("b"===elm.type&&"SimpleBlock"===elm.name){var _a=tools.ebmlBlock(elm.data),timecode=_a.timecode,trackNumber=_a.trackNumber,frames_1=_a.frames;if(1===this.trackTypes[trackNumber]){if(!this.firstVideoBlockRead&&(this.firstVideoBlockRead=!0,"both"===this.trackInfo.type||"video"===this.trackInfo.type)){var CueTime=this.lastClusterTimecode+timecode;this.cues.push({CueTrack:trackNumber,CueClusterPosition:this.lastClusterPosition,CueTime:CueTime}),this.emit("cue_info",{CueTrack:trackNumber,CueClusterPosition:this.lastClusterPosition,CueTime:this.lastClusterTimecode}),this.emit("cue",{CueTrack:trackNumber,CueClusterPosition:this.lastClusterPosition,CueTime:CueTime})}this.last2SimpleBlockVideoTrackTimecode=[this.last2SimpleBlockVideoTrackTimecode[1],timecode]}else if(2===this.trackTypes[trackNumber]){if(!this.firstAudioBlockRead&&(this.firstAudioBlockRead=!0,"audio"===this.trackInfo.type)){CueTime=this.lastClusterTimecode+timecode;this.cues.push({CueTrack:trackNumber,CueClusterPosition:this.lastClusterPosition,CueTime:CueTime}),this.emit("cue_info",{CueTrack:trackNumber,CueClusterPosition:this.lastClusterPosition,CueTime:this.lastClusterTimecode}),this.emit("cue",{CueTrack:trackNumber,CueClusterPosition:this.lastClusterPosition,CueTime:CueTime})}this.last2SimpleBlockAudioTrackTimecode=[this.last2SimpleBlockAudioTrackTimecode[1],timecode]}this.use_duration_every_simpleblock&&this.emit("duration",{timecodeScale:this.timecodeScale,duration:this.duration}),this.use_webp&&frames_1.forEach((function(frame){if("9d012a"===frame.slice(3,6).toString("hex")){var webpBuf=tools.VP8BitStreamToRiffWebPBuffer(frame),webp=new Blob([webpBuf],{type:"image/webp"}),currentTime=_this.duration;_this.emit("webp",{currentTime:currentTime,webp:webp})}}))}else"m"===elm.type&&"Cluster"===elm.name&&!1===elm.isEnd?(this.firstVideoBlockRead=!1,this.firstAudioBlockRead=!1,this.emit_segment_info(),this.emit("cluster_ptr",elm.tagStart),this.lastClusterPosition=elm.tagStart):"u"===elm.type&&"Timecode"===elm.name?this.lastClusterTimecode=elm.value:"u"===elm.type&&"TimecodeScale"===elm.name?this.timecodeScale=elm.value:"m"===elm.type&&"TrackEntry"===elm.name?elm.isEnd?(this.trackTypes[this.currentTrack.TrackNumber]=this.currentTrack.TrackType,this.trackDefaultDuration[this.currentTrack.TrackNumber]=this.currentTrack.DefaultDuration,this.trackCodecDelay[this.currentTrack.TrackNumber]=this.currentTrack.CodecDelay):this.currentTrack={TrackNumber:-1,TrackType:-1,DefaultDuration:null,CodecDelay:null}:"u"===elm.type&&"TrackType"===elm.name?this.currentTrack.TrackType=elm.value:"u"===elm.type&&"TrackNumber"===elm.name?this.currentTrack.TrackNumber=elm.value:"u"===elm.type&&"CodecDelay"===elm.name?this.currentTrack.CodecDelay=elm.value:"u"===elm.type&&"DefaultDuration"===elm.name?this.drop_default_duration?(console.warn("DefaultDuration detected!, remove it"),drop=!0):this.currentTrack.DefaultDuration=elm.value:"unknown"===elm.name&&console.warn(elm);!this.metadataloaded&&elm.dataEnd>0&&(this.metadataSize=elm.dataEnd),drop||this.chunks.push(elm),this.logging&&this.put(elm)}},Object.defineProperty(EBMLReader.prototype,"duration",{get:function(){if("nothing"===this.trackInfo.type)return console.warn("no video, no audio track"),0;var defaultDuration=0,codecDelay=0,lastTimecode=0,_defaultDuration=this.trackDefaultDuration[this.trackInfo.trackNumber];if("number"==typeof _defaultDuration)defaultDuration=_defaultDuration;else if("both"===this.trackInfo.type)this.last2SimpleBlockAudioTrackTimecode[1]>this.last2SimpleBlockVideoTrackTimecode[1]?(defaultDuration=(this.last2SimpleBlockAudioTrackTimecode[1]-this.last2SimpleBlockAudioTrackTimecode[0])*this.timecodeScale,"number"==typeof(delay=this.trackCodecDelay[this.trackTypes.indexOf(2)])&&(codecDelay=delay),lastTimecode=this.last2SimpleBlockAudioTrackTimecode[1]):(defaultDuration=(this.last2SimpleBlockVideoTrackTimecode[1]-this.last2SimpleBlockVideoTrackTimecode[0])*this.timecodeScale,"number"==typeof(delay=this.trackCodecDelay[this.trackTypes.indexOf(1)])&&(codecDelay=delay),lastTimecode=this.last2SimpleBlockVideoTrackTimecode[1]);else if("video"===this.trackInfo.type){defaultDuration=(this.last2SimpleBlockVideoTrackTimecode[1]-this.last2SimpleBlockVideoTrackTimecode[0])*this.timecodeScale,"number"==typeof(delay=this.trackCodecDelay[this.trackInfo.trackNumber])&&(codecDelay=delay),lastTimecode=this.last2SimpleBlockVideoTrackTimecode[1]}else if("audio"===this.trackInfo.type){var delay;defaultDuration=(this.last2SimpleBlockAudioTrackTimecode[1]-this.last2SimpleBlockAudioTrackTimecode[0])*this.timecodeScale,"number"==typeof(delay=this.trackCodecDelay[this.trackInfo.trackNumber])&&(codecDelay=delay),lastTimecode=this.last2SimpleBlockAudioTrackTimecode[1]}var duration=((this.lastClusterTimecode+lastTimecode)*this.timecodeScale+defaultDuration-codecDelay)/this.timecodeScale;return Math.floor(duration)},enumerable:!0,configurable:!0}),EBMLReader.prototype.addListener=function(event,listener){return _super.prototype.addListener.call(this,event,listener)},EBMLReader.prototype.put=function(elm){this.hasLoggingStarted||(this.hasLoggingStarted=!0,this.logging&&this.logGroup&&console.groupCollapsed(this.logGroup)),"m"===elm.type?elm.isEnd?console.groupEnd():console.group(elm.name+":"+elm.tagStart):"b"===elm.type?console.log(elm.name,elm.type):console.log(elm.name,elm.tagStart,elm.type,elm.value)},EBMLReader}(events_1.EventEmitter);exports.default=EBMLReader},function(module,exports,__webpack_require__){"use strict";var ReflectOwnKeys,R="object"==typeof Reflect?Reflect:null,ReflectApply=R&&"function"==typeof R.apply?R.apply:function(target,receiver,args){return Function.prototype.apply.call(target,receiver,args)};ReflectOwnKeys=R&&"function"==typeof R.ownKeys?R.ownKeys:Object.getOwnPropertySymbols?function(target){return Object.getOwnPropertyNames(target).concat(Object.getOwnPropertySymbols(target))}:function(target){return Object.getOwnPropertyNames(target)};var NumberIsNaN=Number.isNaN||function(value){return value!=value};function EventEmitter(){EventEmitter.init.call(this)}module.exports=EventEmitter,EventEmitter.EventEmitter=EventEmitter,EventEmitter.prototype._events=void 0,EventEmitter.prototype._eventsCount=0,EventEmitter.prototype._maxListeners=void 0;var defaultMaxListeners=10;function $getMaxListeners(that){return void 0===that._maxListeners?EventEmitter.defaultMaxListeners:that._maxListeners}function _addListener(target,type,listener,prepend){var m,events,existing,warning;if("function"!=typeof listener)throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof listener);if(void 0===(events=target._events)?(events=target._events=Object.create(null),target._eventsCount=0):(void 0!==events.newListener&&(target.emit("newListener",type,listener.listener?listener.listener:listener),events=target._events),existing=events[type]),void 0===existing)existing=events[type]=listener,++target._eventsCount;else if("function"==typeof existing?existing=events[type]=prepend?[listener,existing]:[existing,listener]:prepend?existing.unshift(listener):existing.push(listener),(m=$getMaxListeners(target))>0&&existing.length>m&&!existing.warned){existing.warned=!0;var w=new Error("Possible EventEmitter memory leak detected. "+existing.length+" "+String(type)+" listeners added. Use emitter.setMaxListeners() to increase limit");w.name="MaxListenersExceededWarning",w.emitter=target,w.type=type,w.count=existing.length,warning=w,console&&console.warn&&console.warn(warning)}return target}function onceWrapper(){for(var args=[],i=0;i<arguments.length;i++)args.push(arguments[i]);this.fired||(this.target.removeListener(this.type,this.wrapFn),this.fired=!0,ReflectApply(this.listener,this.target,args))}function _onceWrap(target,type,listener){var state={fired:!1,wrapFn:void 0,target:target,type:type,listener:listener},wrapped=onceWrapper.bind(state);return wrapped.listener=listener,state.wrapFn=wrapped,wrapped}function _listeners(target,type,unwrap){var events=target._events;if(void 0===events)return[];var evlistener=events[type];return void 0===evlistener?[]:"function"==typeof evlistener?unwrap?[evlistener.listener||evlistener]:[evlistener]:unwrap?function(arr){for(var ret=new Array(arr.length),i=0;i<ret.length;++i)ret[i]=arr[i].listener||arr[i];return ret}(evlistener):arrayClone(evlistener,evlistener.length)}function listenerCount(type){var events=this._events;if(void 0!==events){var evlistener=events[type];if("function"==typeof evlistener)return 1;if(void 0!==evlistener)return evlistener.length}return 0}function arrayClone(arr,n){for(var copy=new Array(n),i=0;i<n;++i)copy[i]=arr[i];return copy}Object.defineProperty(EventEmitter,"defaultMaxListeners",{enumerable:!0,get:function(){return defaultMaxListeners},set:function(arg){if("number"!=typeof arg||arg<0||NumberIsNaN(arg))throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received '+arg+".");defaultMaxListeners=arg}}),EventEmitter.init=function(){void 0!==this._events&&this._events!==Object.getPrototypeOf(this)._events||(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0},EventEmitter.prototype.setMaxListeners=function(n){if("number"!=typeof n||n<0||NumberIsNaN(n))throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received '+n+".");return this._maxListeners=n,this},EventEmitter.prototype.getMaxListeners=function(){return $getMaxListeners(this)},EventEmitter.prototype.emit=function(type){for(var args=[],i=1;i<arguments.length;i++)args.push(arguments[i]);var doError="error"===type,events=this._events;if(void 0!==events)doError=doError&&void 0===events.error;else if(!doError)return!1;if(doError){var er;if(args.length>0&&(er=args[0]),er instanceof Error)throw er;var err=new Error("Unhandled error."+(er?" ("+er.message+")":""));throw err.context=er,err}var handler=events[type];if(void 0===handler)return!1;if("function"==typeof handler)ReflectApply(handler,this,args);else{var len=handler.length,listeners=arrayClone(handler,len);for(i=0;i<len;++i)ReflectApply(listeners[i],this,args)}return!0},EventEmitter.prototype.addListener=function(type,listener){return _addListener(this,type,listener,!1)},EventEmitter.prototype.on=EventEmitter.prototype.addListener,EventEmitter.prototype.prependListener=function(type,listener){return _addListener(this,type,listener,!0)},EventEmitter.prototype.once=function(type,listener){if("function"!=typeof listener)throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof listener);return this.on(type,_onceWrap(this,type,listener)),this},EventEmitter.prototype.prependOnceListener=function(type,listener){if("function"!=typeof listener)throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof listener);return this.prependListener(type,_onceWrap(this,type,listener)),this},EventEmitter.prototype.removeListener=function(type,listener){var list,events,position,i,originalListener;if("function"!=typeof listener)throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof listener);if(void 0===(events=this._events))return this;if(void 0===(list=events[type]))return this;if(list===listener||list.listener===listener)0==--this._eventsCount?this._events=Object.create(null):(delete events[type],events.removeListener&&this.emit("removeListener",type,list.listener||listener));else if("function"!=typeof list){for(position=-1,i=list.length-1;i>=0;i--)if(list[i]===listener||list[i].listener===listener){originalListener=list[i].listener,position=i;break}if(position<0)return this;0===position?list.shift():function(list,index){for(;index+1<list.length;index++)list[index]=list[index+1];list.pop()}(list,position),1===list.length&&(events[type]=list[0]),void 0!==events.removeListener&&this.emit("removeListener",type,originalListener||listener)}return this},EventEmitter.prototype.off=EventEmitter.prototype.removeListener,EventEmitter.prototype.removeAllListeners=function(type){var listeners,events,i;if(void 0===(events=this._events))return this;if(void 0===events.removeListener)return 0===arguments.length?(this._events=Object.create(null),this._eventsCount=0):void 0!==events[type]&&(0==--this._eventsCount?this._events=Object.create(null):delete events[type]),this;if(0===arguments.length){var key,keys=Object.keys(events);for(i=0;i<keys.length;++i)"removeListener"!==(key=keys[i])&&this.removeAllListeners(key);return this.removeAllListeners("removeListener"),this._events=Object.create(null),this._eventsCount=0,this}if("function"==typeof(listeners=events[type]))this.removeListener(type,listeners);else if(void 0!==listeners)for(i=listeners.length-1;i>=0;i--)this.removeListener(type,listeners[i]);return this},EventEmitter.prototype.listeners=function(type){return _listeners(this,type,!0)},EventEmitter.prototype.rawListeners=function(type){return _listeners(this,type,!1)},EventEmitter.listenerCount=function(emitter,type){return"function"==typeof emitter.listenerCount?emitter.listenerCount(type):listenerCount.call(emitter,type)},EventEmitter.prototype.listenerCount=listenerCount,EventEmitter.prototype.eventNames=function(){return this._eventsCount>0?ReflectOwnKeys(this._events):[]}},function(module){module.exports=JSON.parse('{"_args":[["ts-ebml@^2.0.2","/home/konrad/web/sdk/dependencies_otliteclient"]],"_from":"ts-ebml@>=2.0.2 <3.0.0","_id":"ts-ebml@2.0.2","_inCache":true,"_installable":true,"_location":"/ts-ebml","_nodeVersion":"6.11.0","_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ts-ebml-2.0.2.tgz_1503116615810_0.8402522935066372"},"_npmUser":{"email":"legokichi@gmail.com","name":"legokichi"},"_npmVersion":"5.3.0","_phantomChildren":{},"_requested":{"name":"ts-ebml","raw":"ts-ebml@^2.0.2","rawSpec":"^2.0.2","scope":null,"spec":">=2.0.2 <3.0.0","type":"range"},"_requiredBy":["/"],"_resolved":"https://registry.npmjs.org/ts-ebml/-/ts-ebml-2.0.2.tgz","_shasum":"5e2c65b35ee6f1c030f51668666f3c018f4d9578","_shrinkwrap":null,"_spec":"ts-ebml@^2.0.2","_where":"/home/konrad/web/sdk/dependencies_otliteclient","author":{"name":"legokichi duckscallion"},"bin":{"ts-ebml":"./lib/cli.js"},"bugs":{"url":"https://github.com/legokichi/ts-ebml/issues"},"dependencies":{"buffer":"^5.0.7","commander":"^2.11.0","ebml":"^2.2.1","ebml-block":"^1.1.0","events":"^1.1.1","int64-buffer":"^0.1.9","matroska":"^2.2.3"},"description":"ebml decoder and encoder","devDependencies":{"@types/commander":"^2.9.1","@types/qunit":"^2.0.31","browserify":"^13.1.0","empower":"^1.2.3","espower-cli":"^1.1.0","power-assert":"^1.4.4","power-assert-formatter":"^1.4.1","qunit-tap":"^1.5.1","qunitjs":"^2.4.0","tslint":"^3.15.1","typedoc":"^0.5.3","typescript":"^2.4.2","watchify":"^3.7.0"},"directories":{},"dist":{"integrity":"sha512-V/HdlCn3FITQrFHQlVE02XtfMiRLab2QB/YOCfkbJWqiFYG/j5v7gHKV+wem6g0PD6/uxXs5oxMQfDXILmts/Q==","shasum":"5e2c65b35ee6f1c030f51668666f3c018f4d9578","tarball":"https://registry.npmjs.org/ts-ebml/-/ts-ebml-2.0.2.tgz"},"gitHead":"079f1cc2c766e1833f498b5cddd511fcee1bc9b1","homepage":"https://github.com/legokichi/ts-ebml#readme","keywords":["ebml","matrosika","mkv","webm","webp"],"license":"MIT","main":"./lib/index.js","maintainers":[{"name":"legokichi","email":"legokichi@gmail.com"}],"name":"ts-ebml","optionalDependencies":{},"readme":"ERROR: No README data found!","repository":{"type":"git","url":"git+https://github.com/legokichi/ts-ebml.git"},"scripts":{"browserify":"browserify lib/index.js --standalone EBML -o dist/EBML.js","build":"npm run clean   && tsc    -p .; npm run browserify","check":"tsc -w --noEmit -p ./","clean":"rm -rf lib/* dist/* test/*.js; mkdir -p dist","doc":"typedoc --mode modules --out doc --disableOutputCheck","example":"tsc; browserify lib/example_seekable.js -o test/example_seekable.js","examples":"tsc; for file in `find lib -name \'example_*.js\' -type f -printf \'%f\\\\n\'`; do browserify lib/$file -o test/$file; done","examples_bsd":"tsc; for file in `find lib -name \'example_*.js\' -type f -print`; do browserify lib/$(basename $file) -o test/$(basename $file); done","init":"npm run update; npm run mkdir; npm run build","lint":"tslint -c ./tslint.json --project ./tsconfig.json --type-check","mkdir":"mkdir lib dist 2>/dev/null","reset":"rm -rf node_modules","setup":"npm install -g http-server;","start":"http-server . -s & tsc -w -p .& watchify lib/example_seekable.js -o test/example_seekable.js","stop":"killall -- node */tsc -w -p","test":"tsc; espower lib/test.js > lib/test.tmp; mv -f lib/test.tmp lib/test.js; browserify lib/test.js -o test/test.js","update":"npm run reset; npm update","watchify":"watchify lib/index.js --standalone EBML -o dist/EBMl.js -v"},"typings":"./lib/index.d.ts","version":"2.0.2"}')},function(module,exports){!function(){"use strict";angular.module("rainbow").service("phonebookService",["$q","$rootScope","$log","$http","contactService","authService","orderByFilter","profileService","conversationService","utilService",function($q,$rootScope,$log,$http,contactService,authService,orderByFilter,profileService,conversationService,utilService){this.search=function(searchText,limit){return $q((function(resolve,reject){if(!profileService.isFeatureEnabled(profileService.FeaturesEnum.TELEPHONY_PHONE_BOOK))return $log.info("[phonebookService] search from phonebook not allowed for the user profile"),void resolve([]);if(!searchText||""===searchText)return $log.info("[phonebookService] search from phonebook not allowed for empty string"),void resolve([]);limit||(limit=20),$log.info("[phonebookService] search PBXContact from phonebook with text "+utilService.anonymizeString(searchText)+" and limit "+limit);var serverUrl=config.restServerUrl+"/api/rainbow/search/v1.0/phonebooks?limit="+limit+"&name="+encodeURIComponent(searchText);$http({method:"GET",url:serverUrl,headers:authService.getRequestHeader()}).then((function(response){var contactsData=response.data.phoneBooks;$log.info("[phonebookService] search find "+contactsData.length+" phonebooks contact(s)");var contacts=[];contactsData.forEach((function(contactData){var contact=contactService.createBasicContact(null,contactData.number);contact.updateName(contactData.firstName,contactData.lastName),contact.getAvatar(),contacts.push(contact)})),contacts=orderByFilter(contacts,"_displayName",!1),resolve(contacts)}),(function(err){err.data&&(401===err.data.errorCode&&$rootScope.$broadcast("ON_SESSION_EXPIRED_NOTIFICATION_EVENT"),$log.warn("[phonebookService] search failure "+err.data.errorMsg)),reject(new Error("phonebook service failure"))}))}))}}])}()},function(module,exports){angular.module("rainbow").service("adminCompanyService",["$q","$log","$http","$rootScope","authService","errorHelperService","Company","contactService","settingsService","Site","CompanyInvitation","pushImageHelperService","CompanyRequest","companyService","Bot",function($q,$log,$http,$rootScope,authService,errorHelperService,Company,contactService,settingsService,Site,CompanyInvitation,pushImageHelperService,CompanyRequest,companyService,Bot){"use strict";var service=this;service.start=function(){return $log.info("[adminCompanyService] === STARTING ==="),service.portalURL=config.restServerUrl+"/api/rainbow/admin/v1.0/",$log.info("[adminCompanyService] === STARTED ==="),$q.when()},service.stop=function(){return $log.info("[adminCompanyService] === STOPPING ==="),$log.info("[adminCompanyService] === STOPPED ==="),$q.when()},service.getCompanies=function(organisationId,page,pageSize,searchName,format,bpId,status,isBP,bpType,offerCanBeSold,searchReference,noLogo){var defered=$q.defer(),adminContact=contactService.userContact;if(!(adminContact.isSuperadmin()||adminContact.isBusinessAdmin()||adminContact.isBPAdmin()||adminContact.isOrganizationAdmin()))return service.getCompany(adminContact.company.id).then((function(company){return{companies:[company]}}));var url=service.portalURL+"companies?format="+(format||"full");return organisationId&&(url+="&organisationId="+organisationId),page&&pageSize&&(url+="&offset="+pageSize*(page-1)),pageSize&&(url+="&limit="+pageSize),searchName&&(url+="&name="+searchName),bpId&&(url+="&bpId="+bpId),status&&(Array.isArray(status)?status.forEach((function(value){url+="&status="+value})):url+="&status="+status),null!=isBP&&(url+="&isBP="+isBP),bpType&&(url+="&bpType="+bpType),offerCanBeSold&&(url+="&offerCanBeSold="+offerCanBeSold),searchReference&&(url+="&externalReference="+searchReference),$http({method:"GET",url:url,headers:authService.getRequestHeader()}).then((function(response){var data=response.data.data;$log.info("[adminCompanyService] getCompanies success");var companies=[];data.forEach((function(orgData){var company=Company.createFromData(orgData);!angular.isUndefined(noLogo)&&noLogo||companyService.getCompanyLogo(company),companies.push(company)})),defered.resolve({companies:companies,limit:response.data.limit,offset:response.data.offset,total:response.data.total})}),(function(response){var error=errorHelperService.handleError(response);defered.reject(error),$log.error("[adminCompanyService] "+errorHelperService.getErrorFullMessage(response,"getCompanies"))})),defered.promise},service.getAllCompaniesSmall=function(organisationId,bpId,status,isBP,bpType){return service.getAllCompanies(organisationId,bpId,status,isBP,bpType,"small")},service.getAllCompanies=function(organisationId,bpId,status,isBP,bpType,format){return $q((function(resolve,reject){var result;service.getCompanies(organisationId,1,1e3,null,format,bpId,status,isBP,bpType).then((function(response){if(result=response,response.total>response.limit){var totalPages=Math.ceil(response.total/1e3),pages=Array.apply(null,Array(totalPages-1));pages=pages.map((function(__unused,index){return index+2}));for(var chunks=[];pages.length>0;)chunks.push(pages.splice(0,5));return chunks.reduce((function(promiseChain,requests){return promiseChain.then((function(){var promisesArray=requests.map((function(page){return service.getCompanies(organisationId,page,1e3,null,format,bpId,status,isBP,bpType).then((function(next){response.companies=response.companies.concat(next.companies),response.limit+=next.limit}))}));return $q.all(promisesArray)}))}),$q.resolve())}})).then((function(){resolve(result)})).catch((function(error){reject(error)}))}))},service.getCompany=function(companyId,format){return $q((function(resolve,reject){$http({method:"GET",url:service.portalURL+"companies/"+companyId+"?format="+(format||"full"),headers:authService.getRequestHeader()}).then((function(response){$log.info("[adminCompanyService] getCompany success");var data=response.data.data,company=Company.createFromData(data);companyService.getCompanyLogo(company),companyService.getCompanyBanner(company),resolve(company)}),(function(response){var error=errorHelperService.handleError(response);reject(error),$log.error("[adminCompanyService] "+errorHelperService.getErrorFullMessage(response,"getCompany"))}))}))},service.getDefaultCompany=function(){return $q((function(resolve,reject){$http({method:"GET",url:service.portalURL+"companies/default",headers:authService.getRequestHeader()}).then((function(response){$log.info("[adminCompanyService] getDefaultCompany success");var data=response.data.data,company=Company.createFromData(data);resolve(company)}),(function(response){var error=errorHelperService.handleError(response);reject(error),$log.error("[adminCompanyService] "+errorHelperService.getErrorFullMessage(response,"getDefaultCompany"))}))}))},service.searchCompanies=function(searchValue){var defered=$q.defer(),searchValueLC=searchValue.toLowerCase();return service.getCompanies().then((function(result){var filteredCompanies=result.companies.filter((function(company){return company.name.toLowerCase().indexOf(searchValueLC)>-1}));defered.resolve(filteredCompanies)})),defered.promise},service.createCompany=function(company){var companyData=Company.prune(company,contactService.userContact),defered=$q.defer();return $http({method:"POST",url:service.portalURL+"companies",headers:authService.getRequestHeader(),data:companyData}).then((function(response){$log.info("[adminCompanyService] createCompany success");var newcompany=Company.createFromData(response.data.data);$rootScope.$broadcast("ADMIN_COMPANIES_CHANGE"),defered.resolve(newcompany)}),(function(response){var error=errorHelperService.handleError(response);defered.reject(error),$log.error("[adminCompanyService] "+errorHelperService.getErrorFullMessage(response,"createCompany"))})),defered.promise},service.createCompanyEndUser=function(company){var companyData=Company.prune(company,contactService.userContact),defered=$q.defer();return $http({method:"POST",url:config.restServerUrl+"/api/rainbow/enduser/v1.0/companies",headers:authService.getRequestHeader(),data:companyData}).then((function(response){$log.info("[adminCompanyService] createCompany success");var data=response.data.data,newcompany=Company.createFromData(data);defered.resolve(newcompany)}),(function(response){var error=errorHelperService.handleError(response);defered.reject(error),$log.error("[adminCompanyService] "+errorHelperService.getErrorFullMessage(response,"createCompanyEndUser"))})),defered.promise},service.updateCompany=function(company){var companyData=Company.prune(company,contactService.userContact),defered=$q.defer();return $http({method:"PUT",url:service.portalURL+"companies/"+company.id,headers:authService.getRequestHeader(),data:companyData}).then((function(response){$log.info("[adminCompanyService] updateCompany success");var data=response.data.data,updatedCompany=Company.createFromData(data);defered.resolve(updatedCompany),$rootScope.$broadcast("ON_COMPANY_CHANGE_EVENT",company.id)}),(function(response){var error=errorHelperService.handleError(response);defered.reject(error),$log.error("[adminCompanyService] "+errorHelperService.getErrorFullMessage(response,"updateCompany"))})),defered.promise},service.addVisibility=function(companyId,visibleByCompany){var defered=$q.defer();return $http({method:"POST",url:service.portalURL+"companies/"+companyId+"/visible-by/"+visibleByCompany,headers:authService.getRequestHeader()}).then((function(){$log.info("[adminCompanyService] addVisibility success"),defered.resolve()}),(function(response){var error=errorHelperService.handleError(response);defered.reject(error),$log.error("[adminCompanyService] "+errorHelperService.getErrorFullMessage(response,"addVisibility"))})),defered.promise},service.removeVisibility=function(companyId,visibleByCompany){var defered=$q.defer();return $http({method:"DELETE",url:service.portalURL+"companies/"+companyId+"/visible-by/"+visibleByCompany,headers:authService.getRequestHeader()}).then((function(){$log.info("[adminCompanyService] removeVisibility success"),defered.resolve()}),(function(response){var error=errorHelperService.handleError(response);defered.reject(error),$log.error("[adminCompanyService] "+errorHelperService.getErrorFullMessage(response,"removeVisibility"))})),defered.promise},service.getAllSiteCompany=function(companyId){var defered=$q.defer();return $http({method:"GET",url:service.portalURL+"companies/"+companyId+"/sites",headers:authService.getRequestHeader()}).then((function(response){$log.info("[adminCompanyService] getAllSiteCompany success");var data=response.data.data,sites=[];data.forEach((function(element){var site=Site.createFromData(element);sites.push(site)})),defered.resolve(sites)}),(function(response){var error=errorHelperService.handleError(response);defered.reject(error),$log.error("[adminCompanyService] "+errorHelperService.getErrorFullMessage(response,"getAllSiteCompany"))})),defered.promise},service.getCompanyAdministrators=function(companyId){return $q((function(resolve,reject){$http({method:"GET",url:service.portalURL+"companies/"+companyId+"/administrators",headers:authService.getRequestHeader()}).then((function(response){$log.info("[adminCompanyService] getCompanyAdministrators success");var data=response.data.data,adminUsers=[];data.forEach((function(adminUserData){var adminUser={id:adminUserData.id};adminUsers.push(adminUser)})),resolve(adminUsers)}),(function(response){var error=errorHelperService.handleError(response);reject(error),$log.error("[adminCompanyService] "+errorHelperService.getErrorFullMessage(response,"getCompanyAdministrators"))}))}))},service.deleteCompany=function(companyId){var defered=$q.defer();return $http({method:"DELETE",url:service.portalURL+"companies/"+companyId,headers:authService.getRequestHeader()}).then((function(){$log.info("[adminCompanyService] deleteCompany success"),defered.resolve()}),(function(response){var error=errorHelperService.handleError(response);defered.reject(error),$log.error("[adminCompanyService] "+errorHelperService.getErrorFullMessage(response,"deleteCompany"))})),defered.promise},service.pushLogo=function(companyId,logoImg,shape){return $q((function(resolve,reject){var pushServiceURL=service.portalURL+"companies/"+companyId+"/avatar";(angular.isDefined(logoImg)&&null!==logoImg?pushImageHelperService.pushImage(pushServiceURL,logoImg):$q.resolve()).then((function(){return service.getCompany(companyId)})).then((function(company){return company.avatarShape=shape,service.updateCompany(company)})).then((function(){$rootScope.$broadcast("ON_COMPANY_CHANGE_EVENT",companyId),$log.info("[adminCompanyService] pushLogo success"),resolve()})).catch((function(error){reject(error)}))}))},service.deleteLogo=function(companyId){return $q((function(resolve,reject){$http({method:"DELETE",url:service.portalURL+"companies/"+companyId+"/avatar",headers:authService.getRequestHeader()}).then((function(){$rootScope.$broadcast("ON_COMPANY_CHANGE_EVENT",companyId),service.getCompany(companyId).then((function(company){return company.avatarShape="circle",service.updateCompany(company)})).then((function(){$log.info("[adminCompanyService] deleteLogo success"),resolve()})).catch((function(error){reject(error)}))}),(function(response){var error=errorHelperService.handleError(response);reject(error),$log.error("[adminCompanyService] "+errorHelperService.getErrorFullMessage(response,"deleteLogo"))}))}))},service.pushBanner=function(companyId,bannerImg,params){return $q((function(resolve,reject){var pushServiceURL=service.portalURL+"companies/"+companyId+"/banner";return pushImageHelperService.pushImage(pushServiceURL,bannerImg,params).then((function(){$rootScope.$broadcast("ON_COMPANY_CHANGE_EVENT",companyId),resolve()})).catch((function(error){reject(error)}))}))},service.deleteBanner=function(companyId){return $q((function(resolve,reject){$http({method:"DELETE",url:service.portalURL+"companies/"+companyId+"/banner",headers:authService.getRequestHeader()}).then((function(){$rootScope.$broadcast("ON_COMPANY_CHANGE_EVENT",companyId),$log.info("[adminCompanyService] deleteBanner success"),resolve()}),(function(response){var error=errorHelperService.handleError(response);reject(error),$log.error("[adminCompanyService] "+errorHelperService.getErrorFullMessage(response,"deleteBanner"))}))}))},service.getCompanySupportBot=function(companyId){return $q((function(resolve,reject){var url=service.portalURL+"bots/rainbow-support";companyId&&(url+="?companyId="+companyId),$http({method:"GET",url:url,headers:authService.getRequestHeader()}).then((function(response){$log.info("[companyService] getCompanySupportBot success");var supportBot=Bot.create(response.data.data);resolve(supportBot)})).catch((function(response){var errorMessage="getCompanySupportBot failure "+response.data.errorDetails+" with status "+response.status;$log.error("[companyService] "+errorMessage),reject(new Error(errorMessage))}))}))},service.pushCompanyBotAvatar=function(botId,companyId,avatarImg){return $q((function(resolve,reject){var pushServiceURL=service.portalURL+"bots/"+botId+"/companies/"+companyId+"/avatar";(angular.isDefined(avatarImg)&&null!==avatarImg?pushImageHelperService.pushImage(pushServiceURL,avatarImg):$q.resolve()).then((function(){$log.info("[adminCompanyService] pushCompanyBotAvatar success"),resolve()})).catch((function(error){reject(error)}))}))},service.deleteCompanyBotAvatar=function(botId,companyId){return $q((function(resolve,reject){$http({method:"DELETE",url:service.portalURL+"bots/"+botId+"/companies/"+companyId+"/avatar",headers:authService.getRequestHeader()}).then((function(){$log.info("[adminCompanyService] deleteCompanyBotAvatar success"),resolve()}),(function(response){var error=errorHelperService.handleError(response);reject(error),$log.error("[botService] "+errorHelperService.getErrorFullMessage(response,"deleteCompanyBotAvatar"))}))}))},service.getCompanyInvitations=function(companyId,page,pageSize){return $q((function(resolve,reject){var url=service.portalURL+"companies/"+companyId+"/join-companies/invitations?format=medium&status=pending declined&limit="+pageSize;page&&(url+="&offset="+pageSize*(page-1)),$http({method:"GET",url:url,headers:authService.getRequestHeader()}).then((function(response){var invitations=[];response.data.data.forEach((function(invitationData){var invitation=CompanyInvitation.createFromData(invitationData);invitations.push(invitation)})),$log.info("[adminCompanyService] getCompanyInvitations success (found "+invitations.length+" invitation(s))"),resolve({invitations:invitations,total:response.data.total})}),(function(response){var error=errorHelperService.handleError(response);reject(error),$log.error("[adminCompanyService] "+errorHelperService.getErrorFullMessage(response,"getCompanyInvitations"))}))}))},service.joinCompanyInvitation=function(companyId,email,invitedUserId,customMessage,invitedToBeCompanyAdmin,invitedToBeBpAdmin){var defered=$q.defer(),data={lang:settingsService.getAppliLanguageCodeForServer()};return customMessage&&(data.customMessage=customMessage),invitedUserId?data.invitedUserId=invitedUserId:email&&(data.email=email),invitedToBeCompanyAdmin&&(data.invitedToBeCompanyAdmin=invitedToBeCompanyAdmin),invitedToBeBpAdmin&&(data.invitedToBeBpAdmin=invitedToBeBpAdmin),$http({method:"POST",url:service.portalURL+"companies/"+companyId+"/join-companies/invitations",headers:authService.getRequestHeader(),data:data}).then((function(){$log.info("[adminCompanyService] joinCompanyInvitation success"),defered.resolve()}),(function(response){var error=errorHelperService.handleError(response);defered.reject(error),$log.error("[adminCompanyService] "+errorHelperService.getErrorFullMessage(response,"joinCompanyInvitation"))})),defered.promise},service.cancelJoinCompanyInvitation=function(companyId,invitationId){var defered=$q.defer();return $http({method:"POST",url:service.portalURL+"companies/"+companyId+"/join-companies/invitations/"+invitationId+"/cancel",headers:authService.getRequestHeader()}).then((function(response){var invitation=CompanyInvitation.createFromData(response.data.data);$log.info("[adminCompanyService] cancelJoinCompanyInvitation success"),defered.resolve(invitation)}),(function(response){var error=errorHelperService.handleError(response);defered.reject(error),$log.error("[adminCompanyService] "+errorHelperService.getErrorFullMessage(response,"cancelJoinCompanyInvitation"))})),defered.promise},service.resendJoinCompanyInvitation=function(companyId,invitationId){var defered=$q.defer();return $http({method:"POST",url:service.portalURL+"companies/"+companyId+"/join-companies/invitations/"+invitationId+"/re-send",headers:authService.getRequestHeader()}).then((function(response){var invitation=CompanyInvitation.createFromData(response.data.data);$log.info("[adminCompanyService] resendJoinCompanyInvitation success"),defered.resolve(invitation)}),(function(response){var error=errorHelperService.handleError(response);defered.reject(error),$log.error("[adminCompanyService] "+errorHelperService.getErrorFullMessage(response,"resendJoinCompanyInvitation"))})),defered.promise},service.getCompanyJoinRequests=function(companyId){return $q((function(resolve,reject){$http({method:"GET",url:service.portalURL+"companies/"+companyId+"/join-companies/requests?format=medium&status=pending",headers:authService.getRequestHeader()}).then((function(response){var companyRequests=[];response.data.data.forEach((function(companyRequestData){var companyRequest=CompanyRequest.createFromData(companyRequestData);companyRequests.push(companyRequest)})),$log.info("[adminCompanyService] getCompanyJoinRequests success (found "+response.data.total+" invitation(s))"),resolve({companyRequests:companyRequests,total:response.data.total})}),(function(response){var error=errorHelperService.handleError(response);reject(error),$log.error("[adminCompanyService] "+errorHelperService.getErrorFullMessage(response,"getCompanyJoinRequests"))}))}))},service.getJoinCompanyRequest=function(companyId,joinCompanyRequestId){return $q((function(resolve,reject){$http({method:"GET",url:service.portalURL+"companies/"+companyId+"/join-companies/requests/"+joinCompanyRequestId+"?status=pending",headers:authService.getRequestHeader()}).then((function(response){var joinCompanyRequest=CompanyRequest.createFromData(response.data.data);$log.info("[adminCompanyService] getJoinCompanyRequest success"),resolve(joinCompanyRequest)}),(function(response){var error=errorHelperService.handleError(response);reject(error),$log.error("[adminCompanyService] "+errorHelperService.getErrorFullMessage(response,"getJoinCompanyRequest"))}))}))},service.acceptCompanyJoinRequests=function(companyId,joinCompanyRequestId){return $q((function(resolve,reject){$http({method:"POST",url:service.portalURL+"companies/"+companyId+"/join-companies/requests/"+joinCompanyRequestId+"/accept",headers:authService.getRequestHeader()}).then((function(response){var joinCompanyRequest=CompanyRequest.createFromData(response.data.data);$log.info("[adminCompanyService] acceptCompanyJoinRequests success"),resolve(joinCompanyRequest)}),(function(response){var error=errorHelperService.handleError(response);$log.error("[adminCompanyService] "+errorHelperService.getErrorFullMessage(response,"acceptCompanyJoinRequests")),reject(error)}))}))},service.declineCompanyJoinRequests=function(companyId,joinCompanyRequestId){return $q((function(resolve,reject){$http({method:"POST",url:service.portalURL+"companies/"+companyId+"/join-companies/requests/"+joinCompanyRequestId+"/decline",headers:authService.getRequestHeader()}).then((function(response){var joinCompanyRequest=CompanyRequest.createFromData(response.data.data);$log.info("[adminCompanyService] declineCompanyJoinRequests success"),resolve(joinCompanyRequest)}),(function(response){var error=errorHelperService.handleError(response);$log.error("[adminCompanyService] "+errorHelperService.getErrorFullMessage(response,"declineCompanyJoinRequests")),reject(error)}))}))},service.getOAuthConsentUrl=function(){var lang=settingsService.getAppliLanguage().code;return $q((function(resolve,reject){$http({method:"GET",url:config.restServerUrl+"/api/rainbow/office365/v1.0/consent?callback="+window.location.origin+"/redirectO365.html?provider=o365&lang="+lang,headers:authService.getRequestHeader()}).then((function(response){var consentUrl=response.data.url;$log.info("[adminCompanyService] getOAuthConsentUrl success: "+consentUrl),resolve(consentUrl)}),(function(response){var error=errorHelperService.handleError(response);$log.error("[adminCompanyService] "+errorHelperService.getErrorFullMessage(response,"getOAuthConsentUrl")),reject(error)}))}))},service.getCompanyConferenceSettings=function(companyId){return $q((function(resolve,reject){$http({method:"GET",url:service.portalURL+"companies/"+companyId+"/settings/conferences",headers:authService.getRequestHeader()}).then((function(response){$log.info("[adminCompanyService] getCompanyConferenceSettings success");var data=response.data.data;resolve(data)}),(function(response){var error=errorHelperService.handleError(response);reject(error),$log.error("[adminCompanyService] "+errorHelperService.getErrorFullMessage(response,"getCompanyConferenceSettings"))}))}))},service.setCompanyConferenceSettings=function(companyId,confDialOutEnabled){return $q((function(resolve,reject){var conferenceSettingData={confDialOutDisabled:!confDialOutEnabled};$http({method:"PUT",url:service.portalURL+"companies/"+companyId+"/settings/conferences",headers:authService.getRequestHeader(),data:conferenceSettingData}).then((function(response){$log.info("[adminCompanyService] setCompanyConferenceSettings success");var data=response.data.data;resolve(data)}),(function(response){var error=errorHelperService.handleError(response);reject(error),$log.error("[adminCompanyService] "+errorHelperService.getErrorFullMessage(response,"setCompanyConferenceSettings"))}))}))},service.getCompanySAMLConfigurationFile=function(companyId){return $q((function(resolve,reject){authService.getCompanySAMLConfiguration(companyId).then((function(data){var blob=new Blob([data],{type:"application/xml"});resolve(blob)})).catch((function(response){var error=errorHelperService.handleError(response);reject(error),$log.error("[adminCompanyService] "+errorHelperService.getErrorFullMessage(response,"getCompanySAMLConfigurationFile"))}))}))},service.createCompanySingleSignOnServerConfig=function(companyId,singleSignOnType,config){return $q((function(resolve,reject){config.type=singleSignOnType,$http({method:"POST",url:service.portalURL+"companies/"+companyId+"/settings/sso",headers:authService.getRequestHeader(),data:config}).then((function(response){$log.info("[adminCompanyService] createCompanySingleSignOnServerConfig success");var config=response.data.data;resolve(config)}),(function(response){var error=errorHelperService.handleError(response);reject(error),$log.error("[adminCompanyService] "+errorHelperService.getErrorFullMessage(response,"createCompanySingleSignOnServerConfig"))}))}))},service.deleteCompanySingleSignOnServerConfig=function(companyId,singleSignOnType){return $q((function(resolve,reject){$http({method:"DELETE",url:service.portalURL+"companies/"+companyId+"/settings/sso/"+singleSignOnType,headers:authService.getRequestHeader()}).then((function(){$log.info("[adminCompanyService] deleteCompanySingleSignOnServerConfig success"),resolve()}),(function(response){var error=errorHelperService.handleError(response);reject(error),$log.error("[adminCompanyService] "+errorHelperService.getErrorFullMessage(response,"deleteCompanySingleSignOnServerConfig"))}))}))},service.getCompanySingleSignOnServerConfig=function(companyId){return $q((function(resolve,reject){$http({method:"GET",url:service.portalURL+"companies/"+companyId+"/settings/sso",headers:authService.getRequestHeader()}).then((function(response){$log.info("[adminCompanyService] getCompanySingleSignOnServerConfig success");var configArray=response.data.data?response.data.data:response.data;resolve(configArray)}),(function(response){var error=errorHelperService.handleError(response);reject(error),$log.error("[adminCompanyService] "+errorHelperService.getErrorFullMessage(response,"getCompanySingleSignOnServerConfig"))}))}))},service.updateCompanySingleSignOnServerConfig=function(companyId,singleSignOnType,config){return $q((function(resolve,reject){$http({method:"PUT",url:service.portalURL+"companies/"+companyId+"/settings/sso/"+singleSignOnType,headers:authService.getRequestHeader(),data:config}).then((function(response){$log.info("[adminCompanyService] updateCompanySingleSignOnConfig success");var config=response.data.data;resolve(config)}),(function(response){var error=errorHelperService.handleError(response);reject(error),$log.error("[adminCompanyService] "+errorHelperService.getErrorFullMessage(response,"updateCompanySingleSignOnConfig"))}))}))},service.getCompanyBpBusinessTypes=function(){return $q((function(resolve,reject){$http({method:"GET",url:service.portalURL+"companies/bpbusinesstypes",headers:authService.getRequestHeader()}).then((function(response){$log.info("[adminCompanyService] getCompanyBpBusinessTypes success");var config=response.data.data;resolve(config)}),(function(response){var error=errorHelperService.handleError(response);reject(error),$log.error("[adminCompanyService] "+errorHelperService.getErrorFullMessage(response,"getCompanyBpBusinessTypes"))}))}))},service.getVoIPSettingsForCompany=function(companyId){return $q((function(resolve,reject){$http({method:"GET",url:service.portalURL+"companies/"+companyId+"/settings/webrtcs",headers:authService.getRequestHeader()}).then((function(response){$log.info("[adminCompanyService] getVoIPSettingsForCompany success");var settings=response.data.data;resolve(settings)}),(function(response){var error=errorHelperService.handleError(response);reject(error),$log.error("[adminCompanyService] "+errorHelperService.getErrorFullMessage(response,"getVoIPSettingsForCompany"))}))}))},service.createVoIPSettingsForCompany=function(companyId,settings){return $q((function(resolve,reject){$http({method:"POST",url:service.portalURL+"companies/"+companyId+"/settings/webrtcs",headers:authService.getRequestHeader(),data:settings}).then((function(__response){resolve()}),(function(response){var error=errorHelperService.handleError(response);$log.error("[adminCompanyService] "+errorHelperService.getErrorFullMessage(response,"createVoIPSettingsForCompany")),reject(error)}))}))},service.updateVoIPSettingsForCompany=function(companyId,settingsId,settings){return $q((function(resolve,reject){$http({method:"PUT",url:service.portalURL+"companies/"+companyId+"/settings/webrtcs/"+settingsId,headers:authService.getRequestHeader(),data:settings}).then((function(__response){resolve()}),(function(response){var error=errorHelperService.handleError(response);$log.error("[adminCompanyService] "+errorHelperService.getErrorFullMessage(response,"createVoIPSettingsForCompany")),reject(error)}))}))}}])},function(module,exports){angular.module("rainbow").service("adminUserService",["$q","$log","$http","authService","errorHelperService","Company","User","Site","Organisation","userInfoService","contactService","PhoneNumber",function($q,$log,$http,authService,errorHelperService,Company,User,Site,Organisation,userInfoService,contactService,PhoneNumber){"use strict";var service=this;service.start=function(){return $log.info("[adminUserService] === STARTING ==="),service.portalURL=config.restServerUrl+"/api/rainbow/admin/v1.0/",$log.info("[adminUserService] === STARTED ==="),$q.when()},service.stop=function(){return $log.info("[adminUserService] === STOPPING ==="),$log.info("[adminUserService] === STOPPED ==="),$q.when()},service.getUsersByEmail=function(source,email){return $q((function(resolve,reject){var url=service.portalURL+"users?format=full";source&&source instanceof Organisation&&(url+="&organisationId="+source.id),source&&source instanceof Company&&(url+="&companyId="+source.id),source&&source instanceof Site&&(url+="&siteId="+source.id),email&&(url+="&email="+encodeURIComponent(email)),$http({method:"GET",url:url,headers:authService.getRequestHeader()}).then((function(response){var data=response.data.data;$log.info("[adminUserService] getUsersByEmail success (find "+response.data.total+" user(s))");var users=[];data.forEach((function(userData){var user=User.createFromData(userData);users.push(user)})),resolve({users:users,total:response.data.total})}),(function(response){var error=errorHelperService.handleError(response);reject(error),$log.error("[adminUserService] "+errorHelperService.getErrorFullMessage(response,"getUsersByEmail"))}))}))},service.getUsers=function(source,page,pageSize,searchPattern,isTerminated,isAdministrator,noDefaultValues,searchByTag){return $q((function(resolve,reject){var url=service.portalURL+"users?format=full&limit="+pageSize;source&&source instanceof Organisation&&(url+="&organisationId="+source.id),source&&source instanceof Company&&(url+="&companyId="+source.id),source&&source instanceof Site&&(url+="&siteId="+source.id),page&&(url+="&offset="+pageSize*(page-1)),searchPattern&&!searchByTag&&(url+="&displayName="+encodeURIComponent(searchPattern)+"&useEmails=true"),searchPattern&&searchByTag&&(url+="&tags="+encodeURIComponent(searchPattern)),null!=isTerminated&&(url+="&isTerminated="+isTerminated),isAdministrator&&(url+="&roles=admin&roles=bp_admin&roles=bp_finance&roles=superadmin&roles=business_admin"),$http({method:"GET",url:url+="&sortField=reverseDisplayName",headers:authService.getRequestHeader()}).then((function(response){var data=response.data.data;$log.info("[adminUserService] getUsers success (find "+response.data.total+" user(s))");var users=[];data.forEach((function(userData){var user=User.createFromData(userData,noDefaultValues);users.push(user)})),resolve({users:users,limit:response.data.limit,offset:response.data.offset,total:response.data.total})}),(function(response){var error=errorHelperService.handleError(response);reject(error),$log.error("[adminUserService] "+errorHelperService.getErrorFullMessage(response,"getUsers"))}))}))},service.searchUsers=function(source,page,pageSize,searchPattern){return $q((function(resolve,reject){var url=config.restServerUrl+"/api/rainbow/search/v1.0/users?limit="+pageSize;source&&(url+="&companyId="+source.id),page&&(url+="&offset="+pageSize*(page-1)),searchPattern&&(url+="&displayName="+encodeURIComponent(searchPattern)),$http({method:"GET",url:url,headers:authService.getRequestHeader()}).then((function(response){var data=response.data.data;$log.info("[adminUserService] searchUsers success (find "+response.data.total+" user(s))");var users=[];data.forEach((function(userData){var user=User.createFromData(userData);users.push(user)})),resolve({users:users,total:response.data.total})}),(function(response){var error=errorHelperService.handleError(response);reject(error),$log.error("[adminUserService] "+errorHelperService.getErrorFullMessage(response,"searchUsers"))}))}))},service.getUser=function(userId){var defered=$q.defer();return $http({method:"GET",url:service.portalURL+"users/"+userId,headers:authService.getRequestHeader()}).then((function(response){$log.info("[adminUserService] getUser success");var data=response.data.data,user=User.createFromData(data);defered.resolve(user)}),(function(response){var error=errorHelperService.handleError(response);defered.reject(error),$log.error("[adminUserService] "+errorHelperService.getErrorFullMessage(response,"getUser"))})),defered.promise},service.createUser=function(user){var userData=User.prune(user,contactService.userContact),defered=$q.defer();return $http({method:"POST",url:service.portalURL+"users",headers:authService.getRequestHeader(),data:userData}).then((function(response){var newuser=User.createFromData(response.data.data);$log.info("[adminUserService] createUser success"),defered.resolve(newuser)}),(function(response){var error=errorHelperService.handleError(response);defered.reject(error),$log.error("[adminUserService] "+errorHelperService.getErrorFullMessage(response,"createUser"))})),defered.promise},service.deleteUser=function(user){var defered=$q.defer();return $http({method:"DELETE",url:service.portalURL+"users/"+user.id,headers:authService.getRequestHeader()}).then((function(){$log.info("[adminUserService] deleteUser success"),defered.resolve()}),(function(response){var error=errorHelperService.handleError(response);defered.reject(error),$log.error("[adminUserService] "+errorHelperService.getErrorFullMessage(response,"deleteUser"))})),defered.promise},service.updateUser=function(user){var userData=User.prune(user,contactService.userContact),defered=$q.defer();return $http({method:"PUT",url:service.portalURL+"users/"+user.id,headers:authService.getRequestHeader(),data:userData}).then((function(){$log.info("[adminUserService] updateUser success"),defered.resolve()}),(function(response){var error=errorHelperService.handleError(response);defered.reject(error),$log.error("[adminUserService] "+errorHelperService.getErrorFullMessage(response,"updateUser"))})),defered.promise},service.getUserAvatar=function(user){var color=userInfoService.computeUserColor(user.firstName+" "+user.lastName).color;userInfoService.getAvatarImage(user.id,user.initials,color,50,user.lastAvatarUpdateDate).then((function(image){user.image=image}))},service.expandTelephonyInfo=function(user){var result={};return user.phoneNumbers&&user.phoneNumbers.forEach((function(phoneNumber){var number=phoneNumber.number,numberCan=phoneNumber.numberE164,deviceType=phoneNumber.deviceType;switch(phoneNumber.type){case"work":"landline"===deviceType&&(phoneNumber.isCloudPbxDDI?(result.phonePro=phoneNumber.number,result.phoneProCan=phoneNumber.numberE164,result.phoneProDdiNumber=PhoneNumber.createFromData(phoneNumber)):result.phoneProNumber&&result.phoneProNumber.systemId||(result.phoneProDdiNumber||(result.phonePro=number,result.phoneProCan=numberCan),result.phoneProExt=phoneNumber.shortNumber,result.phoneProIsMonitored=phoneNumber.isMonitored,result.phoneProNumber=PhoneNumber.createFromData(phoneNumber))),"mobile"===deviceType&&(result.mobilePro=number,result.mobileProCan=numberCan);break;case"home":"landline"===deviceType&&(result.phonePerso=number,result.phonePersoCan=numberCan),"mobile"===deviceType&&(result.mobilePerso=number,result.mobilePersoCan=numberCan);break;case"rainbow":result.rainbowPhoneNumber=number}})),result},service.getAllUsers=function(source,noDefaultValues){return $q((function(resolve,reject){var result;service.getUsers(source,1,1e3,void 0,void 0,void 0,noDefaultValues).then((function(response){if(result=response,response.total>response.limit){var totalPages=Math.ceil(response.total/1e3),pages=Array.apply(null,Array(totalPages-1));pages=pages.map((function(__unused,index){return index+2}));for(var chunks=[];pages.length>0;)chunks.push(pages.splice(0,5));return chunks.reduce((function(promiseChain,requests){return promiseChain.then((function(){var promisesArray=requests.map((function(page){return service.getUsers(source,page,1e3,void 0,void 0,void 0,noDefaultValues).then((function(data){result.users=result.users.concat(data.users),result.limit+=data.limit}))}));return $q.all(promisesArray)}))}),$q.resolve())}})).then((function(){resolve(result)})).catch((function(error){reject(error)}))}))},service.getUserTags=function(companyId){return $q((function(resolve,reject){var url=service.portalURL+"users/tags";companyId&&(url+="?companyId="+companyId),$http({method:"GET",url:url,headers:authService.getRequestHeader()}).then((function(response){var tags=response.data.data.tags||[];$log.info("[adminUserService] getUserTags success (find "+tags.length+"tags(s))"),resolve(tags)}),(function(response){var error=errorHelperService.handleError(response);reject(error),$log.error("[adminUserService] "+errorHelperService.getErrorFullMessage(response,"getUserTags"))}))}))},service.getUserTagsStats=function(companyId){return $q((function(resolve,reject){var url=service.portalURL+"users/tags/stats";companyId&&(url+="?companyId="+companyId),$http({method:"GET",url:url,headers:authService.getRequestHeader()}).then((function(response){var tagsStats=response.data.data.stats||[];$log.info("[adminUserService] getUserTagsStats success (find "+tagsStats.length+"tags(s))"),resolve(tagsStats)}),(function(response){var error=errorHelperService.handleError(response);reject(error),$log.error("[adminUserService] "+errorHelperService.getErrorFullMessage(response,"getUserTagsStats"))}))}))},service.renameUserTag=function(tag,newTagName,companyId){return $q((function(resolve,reject){var url=service.portalURL+"users/tags?tag="+encodeURIComponent(tag);companyId&&(url+="&companyId="+companyId),$http({method:"PUT",url:url,headers:authService.getRequestHeader(),data:{newTagName:newTagName}}).then((function(response){$log.info("[adminUserService] renameUserTag success => old tag: "+tag+" => new tag: "+newTagName+": found "+response.data.data.found+" occurence(s)"),resolve()}),(function(response){var error=errorHelperService.handleError(response);reject(error),$log.error("[adminUserService] "+errorHelperService.getErrorFullMessage(response,"renameUserTag"))}))}))},service.deleteUserTag=function(tag,companyId){return $q((function(resolve,reject){var url=service.portalURL+"users/tags?tag="+encodeURIComponent(tag);companyId&&(url+="&companyId="+companyId),$http({method:"DELETE",url:url,headers:authService.getRequestHeader()}).then((function(response){$log.info("[adminUserService] deleteUserTag success (tag "+tag+": found "+response.data.data.found+" occurence(s)"),resolve()}),(function(response){var error=errorHelperService.handleError(response);reject(error),$log.error("[adminUserService] "+errorHelperService.getErrorFullMessage(response,"deleteUserTag"))}))}))},service.getUserProfilesFeatures=function(userId){return $q((function(resolve,reject){$http({method:"GET",url:config.restServerUrl+"/api/rainbow/admin/v1.0/users/"+userId+"/profiles/features",headers:authService.getRequestHeader()}).then((function(response){var features={};response.data.data.forEach((function(featureData){$log.debug("[adminUserService] getUserProfilesFeatures === response ==="+JSON.stringify(featureData)),featureData.hasOwnProperty("featureUniqueRef")&&(features[featureData.featureUniqueRef]=featureData)})),resolve(features)}),(function(response){if(404===response.status)$log.debug("[adminUserService] getUserProfilesFeatures : features found for user: "+userId),resolve();else{var error=errorHelperService.handleError(response);reject(error),$log.error("[adminUserService] "+errorHelperService.getErrorFullMessage(response,"getUserProfilesFeatures"))}}))}))}}])},function(module,exports){angular.module("rainbow").filter("emojione",["$sce","$sanitize",function($sce,$sanitize){"use strict";return function(input){if(!angular.isString(input))return input;var temp=input.split(" ");return temp.forEach((function(item,index){""!==this[index]&&-1===this[index].indexOf("http://")&&-1===this[index].indexOf("https://")&&(this[index]=emojione.shortnameToImage(this[index]))}),temp),input=temp.join(" "),$sanitize($sce.trustAsHtml(input))}}]),angular.module("rainbow").filter("emojiUnicodeToShort",(function(){"use strict";return function(input){if(!angular.isString(input))return input;var temp=input.split(" ");return temp.forEach((function(__item,index){""!==this[index]&&-1===this[index].indexOf("http://")&&-1===this[index].indexOf("https://")&&(this[index]=emojione.toShort(this[index]))}),temp),input=temp.join(" ")}})),angular.module("rainbow").filter("emojiShortToUnicode",(function(){"use strict";return function(input){if(!angular.isString(input))return input;var temp=input.split(" ");return temp.forEach((function(__item,index){""!==this[index]&&-1===this[index].indexOf("http://")&&-1===this[index].indexOf("https://")&&(this[index]=emojione.shortnameToUnicode(this[index]))}),temp),input=temp.join(" ")}}))},function(module,exports){angular.module("rainbow").factory("PromiseQueue",["$log",function($log){"use strict";function PromiseQueue(){var that=this;this.queue=[],this.started=!1,this.add=function(promise){this.queue.push(promise),this.started||(this.started=!0,this.execute())},this.execute=function(){var promise=this.queue.shift();if(promise)try{that.timeoutPromise(2e4,promise).then((function(){that.execute()})).catch((function(error){var errorMessage=error&&error.message?error.message:"Unknown error";$log.error("[PromiseQueue] execute failure -- "+errorMessage),that.execute()}))}catch(error){var errorMessage=error&&error.message?error.message:"Unknown error",errorStack=error&&error.stack?error.stack:"Unknown stack";$log.error("[PromiseQueue] execution exception  -- "+errorMessage+" : "+errorStack),that.execute()}else this.started=!1},that.timeoutPromise=function(ms,promise){var timeoutId,timeout=new Promise((function(resolve,reject){timeoutId=setTimeout((function(){reject(new Error("Timed out in "+ms+"ms."))}),ms)}));return Promise.race([promise(),timeout]).then((function(value){return clearTimeout(timeoutId),value}))}}return PromiseQueue.create=function(){return new PromiseQueue},PromiseQueue}])},function(module,exports){angular.module("rainbow").factory("TransfertPromiseQueue",["$log","$q",function($log,$q){"use strict";function TransfertPromiseQueue(){var that=this;that.fileQueue=[],that.clearContext=function(){that.currentId=null,that.currentQueue=[],that.promiseCompletion=void 0,that.promiseReject=void 0,that.initialQueueSize=0,that.promisesDone=0,that.chunkErrorCounter=0,that.currentPromise=void 0},that.clearContext(),that.addPromiseArray=function(id,promiseArray,promiseCompletion,promiseReject){$log.debug("[TransfertPromiseQueue] adding promiseArray");var promiseInfos={};return promiseInfos.id=id,promiseInfos.promiseArray=promiseArray,promiseInfos.promiseCompletion=promiseCompletion,promiseInfos.promiseReject=promiseReject,0!==that.fileQueue.length||that.currentPromise?(that.fileQueue.push(promiseInfos),$log.debug("[TransfertPromiseQueue] adding PromiseArray in FileQueue: "+that.fileQueue.length)):($log.debug("[TransfertPromiseQueue] configuring file to transfert: "+promiseInfos.promiseArray.length),that.fileQueue.push(promiseInfos),that.popFileQueue()),$log.debug("[TransfertPromiseQueue] adding promise on FileQueue: "+that.fileQueue.length),$q},that.popFileQueue=function(){if(that.fileQueue.length>0){$log.debug("[TransfertPromiseQueue] go to next file");var promiseInfos=that.fileQueue.shift();that.currentId=promiseInfos.id,that.currentQueue=promiseInfos.promiseArray,that.promiseCompletion=promiseInfos.promiseCompletion,that.promiseReject=promiseInfos.promiseReject,that.initialQueueSize=that.currentQueue.length,that.promisesDone=0,that.chunkErrorCounter=0,that.currentPromise=that.currentQueue.shift(),that.execute()}else $log.debug("[TransfertPromiseQueue] no more file to transfert"),that.clearContext()},that.execute=function(){$log.debug("[TransfertPromiseQueue] execute"),that.currentPromise?($log.debug("[TransfertPromiseQueue] performing promise: "+that.promisesDone),that.currentPromise().then((function(){$log.debug("[TransfertPromiseQueue] promise success go to next one"),that.promisesDone++,that.chunkErrorCounter=0,that.promisesDone>=that.initialQueueSize?(that.promiseCompletion&&that.promiseCompletion(),that.popFileQueue()):(that.currentPromise=that.currentQueue.shift(),that.execute())})).catch((function(error){var errorMessage=error&&error.message?error.message:"Unknown error";$log.error("[TransfertPromiseQueue] failure executing promise -- "+errorMessage),that.chunkErrorCounter++,error&&error.errorDetailsCode>=500&&that.chunkErrorCounter<=3?that.execute():($log.error("[TransfertPromiseQueue] 3 chunk failed - ABORT File Upload"),that.promiseReject(error),that.popFileQueue())}))):($log.debug("[TransfertPromiseQueue] no promise to perform"),that.currentPromise=void 0)},that.isTransferInProgress=function(){return $log.debug("[TransfertPromiseQueue] >isTransferInProgress: "+that.fileQueue.length+"/"+that.currentQueue.length),that.fileQueue.length>0||that.currentQueue.length>0||that.currentPromise},that.cancelAllTransfers=function(){$log.debug("[TransfertPromiseQueue] cancelAllTransfers"),that.fileQueue=[],that.currentQueue=[]},that.cancelCurrentFiletransfer=function(id){if($log.debug("[TransfertPromiseQueue] cancelCurrentFiletransfer"),that.currentId===id)$log.debug("[TransfertPromiseQueue] cancelling current promise"),that.popFileQueue();else{var promiseFound=that.fileQueue.find((function(currentPromiseInfos){return currentPromiseInfos.id===id}));if(promiseFound){var promisePos=that.fileQueue.indexOf(promiseFound);$log.debug("[TransfertPromiseQueue] promise to remove at position="+promisePos),that.fileQueue.splice(promisePos,1)}}}}return TransfertPromiseQueue.create=function(){return $log.debug("[TransfertPromiseQueue] >create"),new TransfertPromiseQueue},TransfertPromiseQueue}])},function(module,exports){window.sdk=angular.module("sdk",["pascalprecht.translate","ngSanitize","ngFileSaver","angular-jwt","uuid4","rainbow","rainbowAdmin"],(function(){}))},function(module,exports){sdk.constant("SDK",{OK:1,ERROR:-1,ERRORUNAUTHORIZED:-2,ERRORXMPP:-4,ERRORXMPPJID:-8,ERRORBADREQUEST:-16,ERRORUNSUPPORTED:-32,ERRORNOTFOUND:-64})},function(module,exports){sdk.remoteConsole={debug:!1,log:!1,info:!1,warn:!1,error:!1},sdk.hasVerboseLog=!1,sdk.hasBeenLaunchedFromConfig=!1,sdk.key={appID:"",appSecret:"",host:"openrainbow.com"},sdk.config(["consoleLogsProvider","$provide","$httpProvider","$translateProvider",function(consoleLogsProvider,$provide,$httpProvider,$translateProvider){var utc=function(now){return now.toDateString()+" "+("0"+now.getHours()).slice(-2)+":"+("0"+now.getMinutes()).slice(-2)+":"+("0"+now.getSeconds()).slice(-2)};$provide.decorator("$log",["$delegate",function($delegate){var origDebug=$delegate.debug;$delegate.debug=function(){var args=[].slice.call(arguments);sdk.remoteConsole.debug&&console.re.debug(args[0]),sdk.hasVerboseLog&&origDebug.apply(null,args),consoleLogsProvider.setLogs(["["+utc(new Date)+"]"]+"debug : "+args+"\n")};var origLog=$delegate.log;$delegate.log=function(){var args=[].slice.call(arguments);sdk.remoteConsole.log&&console.re.log(args[0]),sdk.hasVerboseLog&&origLog.apply(null,args),consoleLogsProvider.setLogs(["["+utc(new Date)+"]"]+"log : "+args+"\n")};var origInfo=$delegate.info;$delegate.info=function(){var args=[].slice.call(arguments);sdk.remoteConsole.info&&console.re.info(args[0]),sdk.hasVerboseLog&&origInfo.apply(null,args),consoleLogsProvider.setLogs(["["+utc(new Date)+"]"]+"info : "+args+"\n")};var origWarn=$delegate.warn;$delegate.warn=function(){var args=[].slice.call(arguments);sdk.remoteConsole.warn&&console.re.warn(args[0]),origWarn.apply(null,args),consoleLogsProvider.setLogs(["["+utc(new Date)+"]"]+"warn : "+args+"\n")};var origError=$delegate.error;return $delegate.error=function(){var args=[].slice.call(arguments);sdk.remoteConsole.error&&console.re.error(args[0]),origError.apply(null,args),consoleLogsProvider.setLogs(["["+utc(new Date)+"]"]+"error : "+args+"\n")},$delegate.webrtc=function(){var args=[].slice.call(arguments),logs="rtcweb : "+args[0];args[0]="%c "+utc(new Date)+" | RTCWEB | "+args[0],args[args.length]="color:green",sdk.remoteConsole.log&&console.re.log(args[0]),origDebug.apply(null,args),consoleLogsProvider.setLogs(["["+utc(new Date)+"]"]+logs+"\n")},$delegate.sdk=function(){var args=[].slice.call(arguments),logs="RBW-SDK : "+args[0];args[0]="%c "+utc(new Date)+" | RBW-SDK | "+args[0],args[args.length]="color:green",sdk.remoteConsole.log&&console.re.log(args[0]),origDebug.apply(null,args),consoleLogsProvider.setLogs(["["+utc(new Date)+"]"]+logs+"\n")},$delegate}]),$httpProvider.defaults.useXDomain=!0,$translateProvider.useSanitizeValueStrategy(null)}]),sdk.run([function(){}]),sdk.provider("consoleLogs",[function(){this.logsBuffer=[],this.logsMaxLength=2e6,this.$get=function(){var logsBuffer=this.logsBuffer;return{getLogs:function(){return logsBuffer}}},this.cleanBuffer=function(){this.logsBuffer.length>this.logsMaxLength&&(this.logsBuffer=this.logsBuffer.slice(-this.logsMaxLength))},this.setLogs=function(logs){1e3===this.logsBuffer&&this.logsBuffer.shift(),this.logsBuffer.push(logs)}}])},function(module,exports){window.config={xmpp:{protocol:"wss",server:"sandbox.openrainbow.com",port:"443",pingInterval:"60000"},webservices:{protocol:"https",server:"sandbox.openrainbow.com",port:"443"},cpaas:{protocol:"https",server:"",port:"8887"}}},function(module,exports){angular.module("sdk").service("rainbowSDK",["$log","$q","$rootScope","connectionService","presenceService","contactsService","conversationsService","imService","pbxService","webRTCService","bubblesService","groupsService","callsLogService","userProfileService","settingsService","favoritesService","filesStorageService","capabilitiesService","channelsService","adminService","SDK",function($log,$q,$rootScope,connectionService,presenceService,contactsService,conversationsService,imService,pbxService,webRTCService,bubblesService,groupsService,callsLogService,userProfileService,settingsService,favoritesService,filesStorageService,capabilitiesService,channelsService,adminService,__SDK){var that=this;this.isReady=!1,this.RAINBOW_ONREADY="ready",this.RAINBOW_ONLOADED="loaded",this.connection=connectionService,this.presence=presenceService,this.contacts=contactsService,this.conversations=conversationsService,this.im=imService,this.telephony=pbxService,this.webRTC=webRTCService,this.bubbles=bubblesService,this.groups=groupsService,this.callsLog=callsLogService,this.userProfile=userProfileService,this.favorites=favoritesService,this.fileStorage=filesStorageService,this.caps=capabilitiesService,this.channels=channelsService,this.admin=adminService,this.version=function(){return window.sdkversion},this.mode=function(){return settingsService.getSetting("apiMode")},this.setVerboseLog=function(boolHasVerboseLog){return sdk.hasVerboseLog=boolHasVerboseLog,sdk.hasVerboseLog},this.setKeyFromConfig=function(strApplicationID,strApplicationSecret){return $log.sdk("SDKSrv     | [initialize ] :: Linked to application ID "+strApplicationID+" from configuration file"),sdk.key.appID=strApplicationID,sdk.key.appSecret=strApplicationSecret,!0},this.hasBeenLaunchedFromConfig=function(boolFromConfig){var fromConfig=boolFromConfig?"YES":"NO";return $log.sdk("SDKSrv     | [initialize ] :: SDK lauched from a configuration file "+fromConfig),sdk.hasBeenLaunchedFromConfig=boolFromConfig,sdk.hasBeenLaunchedFromConfig},this.initialize=function(strApplicationID,strApplicationSecret){var defered=$q.defer();return strApplicationID&&strApplicationID.length>0?(sdk.key.appID=strApplicationID,$log.sdk("SDKSrv     | [initialize ] :: Initialize the SDK for the application "+sdk.key.appID+"...")):$log.sdk("SDKSrv     | [initialize ] :: Initialize the SDK without an application key..."),strApplicationSecret&&strApplicationSecret.length>0&&(sdk.key.appSecret=strApplicationSecret),initializeFirstStep().then((function(){$log.sdk("SDKSrv     | [initialize ] :: Initialize step 1/2 ok"),intializeSecondStep().then((function(){$log.sdk("SDKSrv     | [initialize ] :: Initialize step 2/2 ok"),$log.sdk("SDKSrv     | [initialize ] :: SDK Initialized successfully!"),defered.resolve()}))})),defered.promise};var initializeFirstStep=function(){var defered=$q.defer();if(that.isReady)defered.resolve();else var handler=$rootScope.$on("RAINBOW_INTERNAL_READY",(function(){handler(),defered.resolve()}));return defered.promise},intializeSecondStep=function(){var defered=$q.defer();return DetectRTC.load((function(){initialize_auto(),defered.resolve()})),defered.promise};this.load=function(){$log.sdk("SDKSrv     | [initialize ] :: Rainbow SDK loaded!");var sdkEvent=new CustomEvent(that.RAINBOW_ONLOADED);document.dispatchEvent(sdkEvent)},this.ready=function(){$log.sdk("SDKSrv     | [initialize ] :: Rainbow SDK ready!");var sdkEvent=new CustomEvent(that.RAINBOW_ONREADY);document.dispatchEvent(sdkEvent)};var initialize_auto=function(){$log.sdk("SDKSrv     | [initialize ] :: Initializing the Rainbow SDK..."),$log.sdk("SDKSrv     | [initialize ] :: -----------------------------"),$log.sdk("SDKSrv     | [initialize ] :: Platform    | "+DetectRTC.osName+" "+DetectRTC.osVersion),$log.sdk("SDKSrv     | [initialize ] :: Screen      | "+window.screen.width+"x"+window.screen.height),$log.sdk("SDKSrv     | [initialize ] :: Cookie      | "+navigator.cookieEnabled),$log.sdk("SDKSrv     | [initialize ] :: Java        | "+navigator.javaEnabled()),$log.sdk("SDKSrv     | [initialize ] :: Server      | "+config.webservices.server),$log.sdk("SDKSrv     | [initialize ] :: Version WEB | "+window.version),$log.sdk("SDKSrv     | [initialize ] :: Version SDK | "+window.sdkversion),$log.sdk("SDKSrv     | [initialize ] :: Browser     | "+DetectRTC.browser.name+" "+DetectRTC.browser.fullVersion),$log.sdk("SDKSrv     | [initialize ] :: Microphone  | "+DetectRTC.hasMicrophone),$log.sdk("SDKSrv     | [initialize ] :: Camera      | "+DetectRTC.hasWebcam),$log.sdk("SDKSrv     | [initialize ] :: Speakers    | "+DetectRTC.hasSpeakers),$log.sdk("SDKSrv     | [initialize ] :: WebRTC      | "+DetectRTC.isWebRTCSupported),$log.sdk("SDKSrv     | [initialize ] :: Mode        | "+that.mode()),$log.sdk("SDKSrv     | [initialize ] :: verboseLog  | "+sdk.hasVerboseLog),$log.sdk("SDKSrv     | [initialize ] :: launcher    | "+sdk.hasBeenLaunchedFromConfig),$log.sdk("SDKSrv     | [initialize ] :: appID       | "+sdk.key.appID),$log.sdk("SDKSrv     | [initialize ] :: -----------------------------"),$log.sdk("SDKSrv     | [initialize ] :: Initialized!"),that.ready()};$log.sdk("SDKSrv     | [           ] :: Welcome to the Rainbow SDK for Web!"),window.rainbowSDK=that,settingsService.setSetting("apiMode","sdk"),config.webservices.currentServer=config.webservices.server,that.isReady=!0,$rootScope.$broadcast("RAINBOW_INTERNAL_READY"),$rootScope.$on("$destroy",(function(){null}))}])},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var chrome_shim_namespaceObject={};__webpack_require__.r(chrome_shim_namespaceObject),__webpack_require__.d(chrome_shim_namespaceObject,"shimGetUserMedia",(function(){return shimGetUserMedia})),__webpack_require__.d(chrome_shim_namespaceObject,"shimGetDisplayMedia",(function(){return shimGetDisplayMedia})),__webpack_require__.d(chrome_shim_namespaceObject,"shimMediaStream",(function(){return shimMediaStream})),__webpack_require__.d(chrome_shim_namespaceObject,"shimOnTrack",(function(){return shimOnTrack})),__webpack_require__.d(chrome_shim_namespaceObject,"shimGetSendersWithDtmf",(function(){return shimGetSendersWithDtmf})),__webpack_require__.d(chrome_shim_namespaceObject,"shimSenderReceiverGetStats",(function(){return shimSenderReceiverGetStats})),__webpack_require__.d(chrome_shim_namespaceObject,"shimAddTrackRemoveTrackWithNative",(function(){return shimAddTrackRemoveTrackWithNative})),__webpack_require__.d(chrome_shim_namespaceObject,"shimAddTrackRemoveTrack",(function(){return shimAddTrackRemoveTrack})),__webpack_require__.d(chrome_shim_namespaceObject,"shimPeerConnection",(function(){return shimPeerConnection})),__webpack_require__.d(chrome_shim_namespaceObject,"fixNegotiationNeeded",(function(){return fixNegotiationNeeded}));var edge_shim_namespaceObject={};__webpack_require__.r(edge_shim_namespaceObject),__webpack_require__.d(edge_shim_namespaceObject,"shimGetUserMedia",(function(){return getusermedia_shimGetUserMedia})),__webpack_require__.d(edge_shim_namespaceObject,"shimGetDisplayMedia",(function(){return getdisplaymedia_shimGetDisplayMedia})),__webpack_require__.d(edge_shim_namespaceObject,"shimPeerConnection",(function(){return edge_shim_shimPeerConnection})),__webpack_require__.d(edge_shim_namespaceObject,"shimReplaceTrack",(function(){return shimReplaceTrack}));var firefox_shim_namespaceObject={};__webpack_require__.r(firefox_shim_namespaceObject),__webpack_require__.d(firefox_shim_namespaceObject,"shimGetUserMedia",(function(){return firefox_getusermedia_shimGetUserMedia})),__webpack_require__.d(firefox_shim_namespaceObject,"shimGetDisplayMedia",(function(){return firefox_getdisplaymedia_shimGetDisplayMedia})),__webpack_require__.d(firefox_shim_namespaceObject,"shimOnTrack",(function(){return firefox_shim_shimOnTrack})),__webpack_require__.d(firefox_shim_namespaceObject,"shimPeerConnection",(function(){return firefox_shim_shimPeerConnection})),__webpack_require__.d(firefox_shim_namespaceObject,"shimSenderGetStats",(function(){return shimSenderGetStats})),__webpack_require__.d(firefox_shim_namespaceObject,"shimReceiverGetStats",(function(){return shimReceiverGetStats})),__webpack_require__.d(firefox_shim_namespaceObject,"shimRemoveStream",(function(){return shimRemoveStream})),__webpack_require__.d(firefox_shim_namespaceObject,"shimRTCDataChannel",(function(){return shimRTCDataChannel}));var safari_shim_namespaceObject={};__webpack_require__.r(safari_shim_namespaceObject),__webpack_require__.d(safari_shim_namespaceObject,"shimLocalStreamsAPI",(function(){return shimLocalStreamsAPI})),__webpack_require__.d(safari_shim_namespaceObject,"shimRemoteStreamsAPI",(function(){return shimRemoteStreamsAPI})),__webpack_require__.d(safari_shim_namespaceObject,"shimCallbacksAPI",(function(){return shimCallbacksAPI})),__webpack_require__.d(safari_shim_namespaceObject,"shimGetUserMedia",(function(){return safari_shim_shimGetUserMedia})),__webpack_require__.d(safari_shim_namespaceObject,"shimConstraints",(function(){return shimConstraints})),__webpack_require__.d(safari_shim_namespaceObject,"shimRTCIceServerUrls",(function(){return shimRTCIceServerUrls})),__webpack_require__.d(safari_shim_namespaceObject,"shimTrackEventTransceiver",(function(){return shimTrackEventTransceiver})),__webpack_require__.d(safari_shim_namespaceObject,"shimCreateOfferLegacy",(function(){return shimCreateOfferLegacy}));var common_shim_namespaceObject={};__webpack_require__.r(common_shim_namespaceObject),__webpack_require__.d(common_shim_namespaceObject,"shimRTCIceCandidate",(function(){return shimRTCIceCandidate})),__webpack_require__.d(common_shim_namespaceObject,"shimMaxMessageSize",(function(){return shimMaxMessageSize})),__webpack_require__.d(common_shim_namespaceObject,"shimSendThrowTypeError",(function(){return shimSendThrowTypeError})),__webpack_require__.d(common_shim_namespaceObject,"shimConnectionState",(function(){return shimConnectionState})),__webpack_require__.d(common_shim_namespaceObject,"removeAllowExtmapMixed",(function(){return removeAllowExtmapMixed}));var adapter_core_namespaceObject={};__webpack_require__.r(adapter_core_namespaceObject),__webpack_require__.d(adapter_core_namespaceObject,"default",(function(){return adapter_core}));let logDisabled_=!0,deprecationWarnings_=!0;function extractVersion(uastring,expr,pos){const match=uastring.match(expr);return match&&match.length>=pos&&parseInt(match[pos],10)}function wrapPeerConnectionEvent(window,eventNameToWrap,wrapper){if(!window.RTCPeerConnection)return;const proto=window.RTCPeerConnection.prototype,nativeAddEventListener=proto.addEventListener;proto.addEventListener=function(nativeEventName,cb){if(nativeEventName!==eventNameToWrap)return nativeAddEventListener.apply(this,arguments);const wrappedCallback=e=>{const modifiedEvent=wrapper(e);modifiedEvent&&cb(modifiedEvent)};return this._eventMap=this._eventMap||{},this._eventMap[cb]=wrappedCallback,nativeAddEventListener.apply(this,[nativeEventName,wrappedCallback])};const nativeRemoveEventListener=proto.removeEventListener;proto.removeEventListener=function(nativeEventName,cb){if(nativeEventName!==eventNameToWrap||!this._eventMap||!this._eventMap[cb])return nativeRemoveEventListener.apply(this,arguments);const unwrappedCb=this._eventMap[cb];return delete this._eventMap[cb],nativeRemoveEventListener.apply(this,[nativeEventName,unwrappedCb])},Object.defineProperty(proto,"on"+eventNameToWrap,{get(){return this["_on"+eventNameToWrap]},set(cb){this["_on"+eventNameToWrap]&&(this.removeEventListener(eventNameToWrap,this["_on"+eventNameToWrap]),delete this["_on"+eventNameToWrap]),cb&&this.addEventListener(eventNameToWrap,this["_on"+eventNameToWrap]=cb)},enumerable:!0,configurable:!0})}function disableLog(bool){return"boolean"!=typeof bool?new Error("Argument type: "+typeof bool+". Please use a boolean."):(logDisabled_=bool,bool?"adapter.js logging disabled":"adapter.js logging enabled")}function disableWarnings(bool){return"boolean"!=typeof bool?new Error("Argument type: "+typeof bool+". Please use a boolean."):(deprecationWarnings_=!bool,"adapter.js deprecation warnings "+(bool?"disabled":"enabled"))}function log(){if("object"==typeof window){if(logDisabled_)return;"undefined"!=typeof console&&"function"==typeof console.log&&console.log.apply(console,arguments)}}function deprecated(oldMethod,newMethod){deprecationWarnings_&&console.warn(oldMethod+" is deprecated, please use "+newMethod+" instead.")}function detectBrowser(window){const{navigator:navigator}=window,result={browser:null,version:null};if(void 0===window||!window.navigator)return result.browser="Not a browser.",result;if(navigator.mozGetUserMedia)result.browser="firefox",result.version=extractVersion(navigator.userAgent,/Firefox\/(\d+)\./,1);else if(navigator.webkitGetUserMedia)result.browser="chrome",result.version=extractVersion(navigator.userAgent,/Chrom(e|ium)\/(\d+)\./,2);else if(navigator.mediaDevices&&navigator.userAgent.match(/Edge\/(\d+).(\d+)$/))result.browser="edge",result.version=extractVersion(navigator.userAgent,/Edge\/(\d+).(\d+)$/,2);else{if(!window.RTCPeerConnection||!navigator.userAgent.match(/AppleWebKit\/(\d+)\./))return result.browser="Not a supported browser.",result;result.browser="safari",result.version=extractVersion(navigator.userAgent,/AppleWebKit\/(\d+)\./,1)}return result}function compactObject(data){return"object"!=typeof data?data:Object.keys(data).reduce((function(accumulator,key){const isObject="object"==typeof data[key],value=isObject?compactObject(data[key]):data[key],isEmptyObject=isObject&&!Object.keys(value).length;return void 0===value||isEmptyObject?accumulator:Object.assign(accumulator,{[key]:value})}),{})}const getusermedia_logging=log;function shimGetUserMedia(window){const navigator=window&&window.navigator;if(!navigator.mediaDevices)return;const browserDetails=detectBrowser(window),constraintsToChrome_=function(c){if("object"!=typeof c||c.mandatory||c.optional)return c;const cc={};return Object.keys(c).forEach(key=>{if("require"===key||"advanced"===key||"mediaSource"===key)return;const r="object"==typeof c[key]?c[key]:{ideal:c[key]};void 0!==r.exact&&"number"==typeof r.exact&&(r.min=r.max=r.exact);const oldname_=function(prefix,name){return prefix?prefix+name.charAt(0).toUpperCase()+name.slice(1):"deviceId"===name?"sourceId":name};if(void 0!==r.ideal){cc.optional=cc.optional||[];let oc={};"number"==typeof r.ideal?(oc[oldname_("min",key)]=r.ideal,cc.optional.push(oc),(oc={})[oldname_("max",key)]=r.ideal,cc.optional.push(oc)):(oc[oldname_("",key)]=r.ideal,cc.optional.push(oc))}void 0!==r.exact&&"number"!=typeof r.exact?(cc.mandatory=cc.mandatory||{},cc.mandatory[oldname_("",key)]=r.exact):["min","max"].forEach(mix=>{void 0!==r[mix]&&(cc.mandatory=cc.mandatory||{},cc.mandatory[oldname_(mix,key)]=r[mix])})}),c.advanced&&(cc.optional=(cc.optional||[]).concat(c.advanced)),cc},shimConstraints_=function(constraints,func){if(browserDetails.version>=61)return func(constraints);if((constraints=JSON.parse(JSON.stringify(constraints)))&&"object"==typeof constraints.audio){const remap=function(obj,a,b){a in obj&&!(b in obj)&&(obj[b]=obj[a],delete obj[a])};remap((constraints=JSON.parse(JSON.stringify(constraints))).audio,"autoGainControl","googAutoGainControl"),remap(constraints.audio,"noiseSuppression","googNoiseSuppression"),constraints.audio=constraintsToChrome_(constraints.audio)}if(constraints&&"object"==typeof constraints.video){let face=constraints.video.facingMode;face=face&&("object"==typeof face?face:{ideal:face});const getSupportedFacingModeLies=browserDetails.version<66;if(face&&("user"===face.exact||"environment"===face.exact||"user"===face.ideal||"environment"===face.ideal)&&(!navigator.mediaDevices.getSupportedConstraints||!navigator.mediaDevices.getSupportedConstraints().facingMode||getSupportedFacingModeLies)){let matches;if(delete constraints.video.facingMode,"environment"===face.exact||"environment"===face.ideal?matches=["back","rear"]:"user"!==face.exact&&"user"!==face.ideal||(matches=["front"]),matches)return navigator.mediaDevices.enumerateDevices().then(devices=>{let dev=(devices=devices.filter(d=>"videoinput"===d.kind)).find(d=>matches.some(match=>d.label.toLowerCase().includes(match)));return!dev&&devices.length&&matches.includes("back")&&(dev=devices[devices.length-1]),dev&&(constraints.video.deviceId=face.exact?{exact:dev.deviceId}:{ideal:dev.deviceId}),constraints.video=constraintsToChrome_(constraints.video),getusermedia_logging("chrome: "+JSON.stringify(constraints)),func(constraints)})}constraints.video=constraintsToChrome_(constraints.video)}return getusermedia_logging("chrome: "+JSON.stringify(constraints)),func(constraints)},shimError_=function(e){return browserDetails.version>=64?e:{name:{PermissionDeniedError:"NotAllowedError",PermissionDismissedError:"NotAllowedError",InvalidStateError:"NotAllowedError",DevicesNotFoundError:"NotFoundError",ConstraintNotSatisfiedError:"OverconstrainedError",TrackStartError:"NotReadableError",MediaDeviceFailedDueToShutdown:"NotAllowedError",MediaDeviceKillSwitchOn:"NotAllowedError",TabCaptureError:"AbortError",ScreenCaptureError:"AbortError",DeviceCaptureError:"AbortError"}[e.name]||e.name,message:e.message,constraint:e.constraint||e.constraintName,toString(){return this.name+(this.message&&": ")+this.message}}};navigator.getUserMedia=function(constraints,onSuccess,onError){shimConstraints_(constraints,c=>{navigator.webkitGetUserMedia(c,onSuccess,e=>{onError&&onError(shimError_(e))})})}.bind(navigator);const origGetUserMedia=navigator.mediaDevices.getUserMedia.bind(navigator.mediaDevices);navigator.mediaDevices.getUserMedia=function(cs){return shimConstraints_(cs,c=>origGetUserMedia(c).then(stream=>{if(c.audio&&!stream.getAudioTracks().length||c.video&&!stream.getVideoTracks().length)throw stream.getTracks().forEach(track=>{track.stop()}),new DOMException("","NotFoundError");return stream},e=>Promise.reject(shimError_(e))))}}function shimGetDisplayMedia(window,getSourceId){window.navigator.mediaDevices&&"getDisplayMedia"in window.navigator.mediaDevices||window.navigator.mediaDevices&&("function"==typeof getSourceId?window.navigator.mediaDevices.getDisplayMedia=function(constraints){return getSourceId(constraints).then(sourceId=>{const widthSpecified=constraints.video&&constraints.video.width,heightSpecified=constraints.video&&constraints.video.height,frameRateSpecified=constraints.video&&constraints.video.frameRate;return constraints.video={mandatory:{chromeMediaSource:"desktop",chromeMediaSourceId:sourceId,maxFrameRate:frameRateSpecified||3}},widthSpecified&&(constraints.video.mandatory.maxWidth=widthSpecified),heightSpecified&&(constraints.video.mandatory.maxHeight=heightSpecified),window.navigator.mediaDevices.getUserMedia(constraints)})}:console.error("shimGetDisplayMedia: getSourceId argument is not a function"))}function filterStats(result,track,outbound){const streamStatsType=outbound?"outbound-rtp":"inbound-rtp",filteredResult=new Map;if(null===track)return filteredResult;const trackStats=[];return result.forEach(value=>{"track"===value.type&&value.trackIdentifier===track.id&&trackStats.push(value)}),trackStats.forEach(trackStat=>{result.forEach(stats=>{stats.type===streamStatsType&&stats.trackId===trackStat.id&&function walkStats(stats,base,resultSet){base&&!resultSet.has(base.id)&&(resultSet.set(base.id,base),Object.keys(base).forEach(name=>{name.endsWith("Id")?walkStats(stats,stats.get(base[name]),resultSet):name.endsWith("Ids")&&base[name].forEach(id=>{walkStats(stats,stats.get(id),resultSet)})}))}(result,stats,filteredResult)})}),filteredResult}function shimMediaStream(window){window.MediaStream=window.MediaStream||window.webkitMediaStream}function shimOnTrack(window){if("object"!=typeof window||!window.RTCPeerConnection||"ontrack"in window.RTCPeerConnection.prototype)wrapPeerConnectionEvent(window,"track",e=>(e.transceiver||Object.defineProperty(e,"transceiver",{value:{receiver:e.receiver}}),e));else{Object.defineProperty(window.RTCPeerConnection.prototype,"ontrack",{get(){return this._ontrack},set(f){this._ontrack&&this.removeEventListener("track",this._ontrack),this.addEventListener("track",this._ontrack=f)},enumerable:!0,configurable:!0});const origSetRemoteDescription=window.RTCPeerConnection.prototype.setRemoteDescription;window.RTCPeerConnection.prototype.setRemoteDescription=function(){return this._ontrackpoly||(this._ontrackpoly=e=>{e.stream.addEventListener("addtrack",te=>{let receiver;receiver=window.RTCPeerConnection.prototype.getReceivers?this.getReceivers().find(r=>r.track&&r.track.id===te.track.id):{track:te.track};const event=new Event("track");event.track=te.track,event.receiver=receiver,event.transceiver={receiver:receiver},event.streams=[e.stream],this.dispatchEvent(event)}),e.stream.getTracks().forEach(track=>{let receiver;receiver=window.RTCPeerConnection.prototype.getReceivers?this.getReceivers().find(r=>r.track&&r.track.id===track.id):{track:track};const event=new Event("track");event.track=track,event.receiver=receiver,event.transceiver={receiver:receiver},event.streams=[e.stream],this.dispatchEvent(event)})},this.addEventListener("addstream",this._ontrackpoly)),origSetRemoteDescription.apply(this,arguments)}}}function shimGetSendersWithDtmf(window){if("object"==typeof window&&window.RTCPeerConnection&&!("getSenders"in window.RTCPeerConnection.prototype)&&"createDTMFSender"in window.RTCPeerConnection.prototype){const shimSenderWithDtmf=function(pc,track){return{track:track,get dtmf(){return void 0===this._dtmf&&("audio"===track.kind?this._dtmf=pc.createDTMFSender(track):this._dtmf=null),this._dtmf},_pc:pc}};if(!window.RTCPeerConnection.prototype.getSenders){window.RTCPeerConnection.prototype.getSenders=function(){return this._senders=this._senders||[],this._senders.slice()};const origAddTrack=window.RTCPeerConnection.prototype.addTrack;window.RTCPeerConnection.prototype.addTrack=function(track,stream){let sender=origAddTrack.apply(this,arguments);return sender||(sender=shimSenderWithDtmf(this,track),this._senders.push(sender)),sender};const origRemoveTrack=window.RTCPeerConnection.prototype.removeTrack;window.RTCPeerConnection.prototype.removeTrack=function(sender){origRemoveTrack.apply(this,arguments);const idx=this._senders.indexOf(sender);-1!==idx&&this._senders.splice(idx,1)}}const origAddStream=window.RTCPeerConnection.prototype.addStream;window.RTCPeerConnection.prototype.addStream=function(stream){this._senders=this._senders||[],origAddStream.apply(this,[stream]),stream.getTracks().forEach(track=>{this._senders.push(shimSenderWithDtmf(this,track))})};const origRemoveStream=window.RTCPeerConnection.prototype.removeStream;window.RTCPeerConnection.prototype.removeStream=function(stream){this._senders=this._senders||[],origRemoveStream.apply(this,[stream]),stream.getTracks().forEach(track=>{const sender=this._senders.find(s=>s.track===track);sender&&this._senders.splice(this._senders.indexOf(sender),1)})}}else if("object"==typeof window&&window.RTCPeerConnection&&"getSenders"in window.RTCPeerConnection.prototype&&"createDTMFSender"in window.RTCPeerConnection.prototype&&window.RTCRtpSender&&!("dtmf"in window.RTCRtpSender.prototype)){const origGetSenders=window.RTCPeerConnection.prototype.getSenders;window.RTCPeerConnection.prototype.getSenders=function(){const senders=origGetSenders.apply(this,[]);return senders.forEach(sender=>sender._pc=this),senders},Object.defineProperty(window.RTCRtpSender.prototype,"dtmf",{get(){return void 0===this._dtmf&&("audio"===this.track.kind?this._dtmf=this._pc.createDTMFSender(this.track):this._dtmf=null),this._dtmf}})}}function shimSenderReceiverGetStats(window){if(!("object"==typeof window&&window.RTCPeerConnection&&window.RTCRtpSender&&window.RTCRtpReceiver))return;if(!("getStats"in window.RTCRtpSender.prototype)){const origGetSenders=window.RTCPeerConnection.prototype.getSenders;origGetSenders&&(window.RTCPeerConnection.prototype.getSenders=function(){const senders=origGetSenders.apply(this,[]);return senders.forEach(sender=>sender._pc=this),senders});const origAddTrack=window.RTCPeerConnection.prototype.addTrack;origAddTrack&&(window.RTCPeerConnection.prototype.addTrack=function(){const sender=origAddTrack.apply(this,arguments);return sender._pc=this,sender}),window.RTCRtpSender.prototype.getStats=function(){const sender=this;return this._pc.getStats().then(result=>filterStats(result,sender.track,!0))}}if(!("getStats"in window.RTCRtpReceiver.prototype)){const origGetReceivers=window.RTCPeerConnection.prototype.getReceivers;origGetReceivers&&(window.RTCPeerConnection.prototype.getReceivers=function(){const receivers=origGetReceivers.apply(this,[]);return receivers.forEach(receiver=>receiver._pc=this),receivers}),wrapPeerConnectionEvent(window,"track",e=>(e.receiver._pc=e.srcElement,e)),window.RTCRtpReceiver.prototype.getStats=function(){const receiver=this;return this._pc.getStats().then(result=>filterStats(result,receiver.track,!1))}}if(!("getStats"in window.RTCRtpSender.prototype&&"getStats"in window.RTCRtpReceiver.prototype))return;const origGetStats=window.RTCPeerConnection.prototype.getStats;window.RTCPeerConnection.prototype.getStats=function(){if(arguments.length>0&&arguments[0]instanceof window.MediaStreamTrack){const track=arguments[0];let sender,receiver,err;return this.getSenders().forEach(s=>{s.track===track&&(sender?err=!0:sender=s)}),this.getReceivers().forEach(r=>(r.track===track&&(receiver?err=!0:receiver=r),r.track===track)),err||sender&&receiver?Promise.reject(new DOMException("There are more than one sender or receiver for the track.","InvalidAccessError")):sender?sender.getStats():receiver?receiver.getStats():Promise.reject(new DOMException("There is no sender or receiver for the track.","InvalidAccessError"))}return origGetStats.apply(this,arguments)}}function shimAddTrackRemoveTrackWithNative(window){window.RTCPeerConnection.prototype.getLocalStreams=function(){return this._shimmedLocalStreams=this._shimmedLocalStreams||{},Object.keys(this._shimmedLocalStreams).map(streamId=>this._shimmedLocalStreams[streamId][0])};const origAddTrack=window.RTCPeerConnection.prototype.addTrack;window.RTCPeerConnection.prototype.addTrack=function(track,stream){if(!stream)return origAddTrack.apply(this,arguments);this._shimmedLocalStreams=this._shimmedLocalStreams||{};const sender=origAddTrack.apply(this,arguments);return this._shimmedLocalStreams[stream.id]?-1===this._shimmedLocalStreams[stream.id].indexOf(sender)&&this._shimmedLocalStreams[stream.id].push(sender):this._shimmedLocalStreams[stream.id]=[stream,sender],sender};const origAddStream=window.RTCPeerConnection.prototype.addStream;window.RTCPeerConnection.prototype.addStream=function(stream){this._shimmedLocalStreams=this._shimmedLocalStreams||{},stream.getTracks().forEach(track=>{if(this.getSenders().find(s=>s.track===track))throw new DOMException("Track already exists.","InvalidAccessError")});const existingSenders=this.getSenders();origAddStream.apply(this,arguments);const newSenders=this.getSenders().filter(newSender=>-1===existingSenders.indexOf(newSender));this._shimmedLocalStreams[stream.id]=[stream].concat(newSenders)};const origRemoveStream=window.RTCPeerConnection.prototype.removeStream;window.RTCPeerConnection.prototype.removeStream=function(stream){return this._shimmedLocalStreams=this._shimmedLocalStreams||{},delete this._shimmedLocalStreams[stream.id],origRemoveStream.apply(this,arguments)};const origRemoveTrack=window.RTCPeerConnection.prototype.removeTrack;window.RTCPeerConnection.prototype.removeTrack=function(sender){return this._shimmedLocalStreams=this._shimmedLocalStreams||{},sender&&Object.keys(this._shimmedLocalStreams).forEach(streamId=>{const idx=this._shimmedLocalStreams[streamId].indexOf(sender);-1!==idx&&this._shimmedLocalStreams[streamId].splice(idx,1),1===this._shimmedLocalStreams[streamId].length&&delete this._shimmedLocalStreams[streamId]}),origRemoveTrack.apply(this,arguments)}}function shimAddTrackRemoveTrack(window){if(!window.RTCPeerConnection)return;const browserDetails=detectBrowser(window);if(window.RTCPeerConnection.prototype.addTrack&&browserDetails.version>=65)return shimAddTrackRemoveTrackWithNative(window);const origGetLocalStreams=window.RTCPeerConnection.prototype.getLocalStreams;window.RTCPeerConnection.prototype.getLocalStreams=function(){const nativeStreams=origGetLocalStreams.apply(this);return this._reverseStreams=this._reverseStreams||{},nativeStreams.map(stream=>this._reverseStreams[stream.id])};const origAddStream=window.RTCPeerConnection.prototype.addStream;window.RTCPeerConnection.prototype.addStream=function(stream){if(this._streams=this._streams||{},this._reverseStreams=this._reverseStreams||{},stream.getTracks().forEach(track=>{if(this.getSenders().find(s=>s.track===track))throw new DOMException("Track already exists.","InvalidAccessError")}),!this._reverseStreams[stream.id]){const newStream=new window.MediaStream(stream.getTracks());this._streams[stream.id]=newStream,this._reverseStreams[newStream.id]=stream,stream=newStream}origAddStream.apply(this,[stream])};const origRemoveStream=window.RTCPeerConnection.prototype.removeStream;function replaceInternalStreamId(pc,description){let sdp=description.sdp;return Object.keys(pc._reverseStreams||[]).forEach(internalId=>{const externalStream=pc._reverseStreams[internalId],internalStream=pc._streams[externalStream.id];sdp=sdp.replace(new RegExp(internalStream.id,"g"),externalStream.id)}),new RTCSessionDescription({type:description.type,sdp:sdp})}function replaceExternalStreamId(pc,description){let sdp=description.sdp;return Object.keys(pc._reverseStreams||[]).forEach(internalId=>{const externalStream=pc._reverseStreams[internalId],internalStream=pc._streams[externalStream.id];sdp=sdp.replace(new RegExp(externalStream.id,"g"),internalStream.id)}),new RTCSessionDescription({type:description.type,sdp:sdp})}window.RTCPeerConnection.prototype.removeStream=function(stream){this._streams=this._streams||{},this._reverseStreams=this._reverseStreams||{},origRemoveStream.apply(this,[this._streams[stream.id]||stream]),delete this._reverseStreams[this._streams[stream.id]?this._streams[stream.id].id:stream.id],delete this._streams[stream.id]},window.RTCPeerConnection.prototype.addTrack=function(track,stream){if("closed"===this.signalingState)throw new DOMException("The RTCPeerConnection's signalingState is 'closed'.","InvalidStateError");const streams=[].slice.call(arguments,1);if(1!==streams.length||!streams[0].getTracks().find(t=>t===track))throw new DOMException("The adapter.js addTrack polyfill only supports a single  stream which is associated with the specified track.","NotSupportedError");const alreadyExists=this.getSenders().find(s=>s.track===track);if(alreadyExists)throw new DOMException("Track already exists.","InvalidAccessError");this._streams=this._streams||{},this._reverseStreams=this._reverseStreams||{};const oldStream=this._streams[stream.id];if(oldStream)oldStream.addTrack(track),Promise.resolve().then(()=>{this.dispatchEvent(new Event("negotiationneeded"))});else{const newStream=new window.MediaStream([track]);this._streams[stream.id]=newStream,this._reverseStreams[newStream.id]=stream,this.addStream(newStream)}return this.getSenders().find(s=>s.track===track)},["createOffer","createAnswer"].forEach((function(method){const nativeMethod=window.RTCPeerConnection.prototype[method];window.RTCPeerConnection.prototype[method]=function(){const args=arguments,isLegacyCall=arguments.length&&"function"==typeof arguments[0];return isLegacyCall?nativeMethod.apply(this,[description=>{const desc=replaceInternalStreamId(this,description);args[0].apply(null,[desc])},err=>{args[1]&&args[1].apply(null,err)},arguments[2]]):nativeMethod.apply(this,arguments).then(description=>replaceInternalStreamId(this,description))}}));const origSetLocalDescription=window.RTCPeerConnection.prototype.setLocalDescription;window.RTCPeerConnection.prototype.setLocalDescription=function(){return arguments.length&&arguments[0].type?(arguments[0]=replaceExternalStreamId(this,arguments[0]),origSetLocalDescription.apply(this,arguments)):origSetLocalDescription.apply(this,arguments)};const origLocalDescription=Object.getOwnPropertyDescriptor(window.RTCPeerConnection.prototype,"localDescription");Object.defineProperty(window.RTCPeerConnection.prototype,"localDescription",{get(){const description=origLocalDescription.get.apply(this);return""===description.type?description:replaceInternalStreamId(this,description)}}),window.RTCPeerConnection.prototype.removeTrack=function(sender){if("closed"===this.signalingState)throw new DOMException("The RTCPeerConnection's signalingState is 'closed'.","InvalidStateError");if(!sender._pc)throw new DOMException("Argument 1 of RTCPeerConnection.removeTrack does not implement interface RTCRtpSender.","TypeError");if(!(sender._pc===this))throw new DOMException("Sender was not created by this connection.","InvalidAccessError");let stream;this._streams=this._streams||{},Object.keys(this._streams).forEach(streamid=>{this._streams[streamid].getTracks().find(track=>sender.track===track)&&(stream=this._streams[streamid])}),stream&&(1===stream.getTracks().length?this.removeStream(this._reverseStreams[stream.id]):stream.removeTrack(sender.track),this.dispatchEvent(new Event("negotiationneeded")))}}function shimPeerConnection(window){if(!window.RTCPeerConnection&&window.webkitRTCPeerConnection&&(window.RTCPeerConnection=window.webkitRTCPeerConnection),!window.RTCPeerConnection)return;const origGetStats=window.RTCPeerConnection.prototype.getStats;window.RTCPeerConnection.prototype.getStats=function(selector,successCallback,errorCallback){const args=arguments;if(arguments.length>0&&"function"==typeof selector)return origGetStats.apply(this,arguments);if(0===origGetStats.length&&(0===arguments.length||"function"!=typeof arguments[0]))return origGetStats.apply(this,[]);const fixChromeStats_=function(response){const standardReport={};return response.result().forEach(report=>{const standardStats={id:report.id,timestamp:report.timestamp,type:{localcandidate:"local-candidate",remotecandidate:"remote-candidate"}[report.type]||report.type};report.names().forEach(name=>{standardStats[name]=report.stat(name)}),standardReport[standardStats.id]=standardStats}),standardReport},makeMapStats=function(stats){return new Map(Object.keys(stats).map(key=>[key,stats[key]]))};if(arguments.length>=2){const successCallbackWrapper_=function(response){args[1](makeMapStats(fixChromeStats_(response)))};return origGetStats.apply(this,[successCallbackWrapper_,arguments[0]])}return new Promise((resolve,reject)=>{origGetStats.apply(this,[function(response){resolve(makeMapStats(fixChromeStats_(response)))},reject])}).then(successCallback,errorCallback)},["setLocalDescription","setRemoteDescription","addIceCandidate"].forEach((function(method){const nativeMethod=window.RTCPeerConnection.prototype[method];window.RTCPeerConnection.prototype[method]=function(){return arguments[0]=new("addIceCandidate"===method?window.RTCIceCandidate:window.RTCSessionDescription)(arguments[0]),nativeMethod.apply(this,arguments)}}));const nativeAddIceCandidate=window.RTCPeerConnection.prototype.addIceCandidate;window.RTCPeerConnection.prototype.addIceCandidate=function(){return arguments[0]?nativeAddIceCandidate.apply(this,arguments):(arguments[1]&&arguments[1].apply(null),Promise.resolve())}}function fixNegotiationNeeded(window){wrapPeerConnectionEvent(window,"negotiationneeded",e=>{if("stable"===e.target.signalingState)return e})}var rtcpeerconnection=__webpack_require__(19),rtcpeerconnection_default=__webpack_require__.n(rtcpeerconnection);function getusermedia_shimGetUserMedia(window){const navigator=window&&window.navigator,origGetUserMedia=navigator.mediaDevices.getUserMedia.bind(navigator.mediaDevices);navigator.mediaDevices.getUserMedia=function(c){return origGetUserMedia(c).catch(e=>Promise.reject(function(e){return{name:{PermissionDeniedError:"NotAllowedError"}[e.name]||e.name,message:e.message,constraint:e.constraint,toString(){return this.name}}}(e)))}}function getdisplaymedia_shimGetDisplayMedia(window){"getDisplayMedia"in window.navigator&&window.navigator.mediaDevices&&(window.navigator.mediaDevices&&"getDisplayMedia"in window.navigator.mediaDevices||(window.navigator.mediaDevices.getDisplayMedia=window.navigator.getDisplayMedia.bind(window.navigator.mediaDevices)))}function edge_shim_shimPeerConnection(window){const browserDetails=detectBrowser(window);if(window.RTCIceGatherer&&(window.RTCIceCandidate||(window.RTCIceCandidate=function(args){return args}),window.RTCSessionDescription||(window.RTCSessionDescription=function(args){return args}),browserDetails.version<15025)){const origMSTEnabled=Object.getOwnPropertyDescriptor(window.MediaStreamTrack.prototype,"enabled");Object.defineProperty(window.MediaStreamTrack.prototype,"enabled",{set(value){origMSTEnabled.set.call(this,value);const ev=new Event("enabled");ev.enabled=value,this.dispatchEvent(ev)}})}!window.RTCRtpSender||"dtmf"in window.RTCRtpSender.prototype||Object.defineProperty(window.RTCRtpSender.prototype,"dtmf",{get(){return void 0===this._dtmf&&("audio"===this.track.kind?this._dtmf=new window.RTCDtmfSender(this):"video"===this.track.kind&&(this._dtmf=null)),this._dtmf}}),window.RTCDtmfSender&&!window.RTCDTMFSender&&(window.RTCDTMFSender=window.RTCDtmfSender);const RTCPeerConnectionShim=rtcpeerconnection_default()(window,browserDetails.version);window.RTCPeerConnection=function(config){return config&&config.iceServers&&(config.iceServers=function(iceServers,edgeVersion){let hasTurn=!1;return(iceServers=JSON.parse(JSON.stringify(iceServers))).filter(server=>{if(server&&(server.urls||server.url)){var urls=server.urls||server.url;server.url&&!server.urls&&deprecated("RTCIceServer.url","RTCIceServer.urls");const isString="string"==typeof urls;return isString&&(urls=[urls]),urls=urls.filter(url=>{if(0===url.indexOf("stun:"))return!1;const validTurn=url.startsWith("turn")&&!url.startsWith("turn:[")&&url.includes("transport=udp");return validTurn&&!hasTurn?(hasTurn=!0,!0):validTurn&&!hasTurn}),delete server.url,server.urls=isString?urls[0]:urls,!!urls.length}})}(config.iceServers,browserDetails.version),log("ICE servers after filtering:",config.iceServers)),new RTCPeerConnectionShim(config)},window.RTCPeerConnection.prototype=RTCPeerConnectionShim.prototype}function shimReplaceTrack(window){!window.RTCRtpSender||"replaceTrack"in window.RTCRtpSender.prototype||(window.RTCRtpSender.prototype.replaceTrack=window.RTCRtpSender.prototype.setTrack)}function firefox_getusermedia_shimGetUserMedia(window){const browserDetails=detectBrowser(window),navigator=window&&window.navigator,MediaStreamTrack=window&&window.MediaStreamTrack;if(navigator.getUserMedia=function(constraints,onSuccess,onError){deprecated("navigator.getUserMedia","navigator.mediaDevices.getUserMedia"),navigator.mediaDevices.getUserMedia(constraints).then(onSuccess,onError)},!(browserDetails.version>55&&"autoGainControl"in navigator.mediaDevices.getSupportedConstraints())){const remap=function(obj,a,b){a in obj&&!(b in obj)&&(obj[b]=obj[a],delete obj[a])},nativeGetUserMedia=navigator.mediaDevices.getUserMedia.bind(navigator.mediaDevices);if(navigator.mediaDevices.getUserMedia=function(c){return"object"==typeof c&&"object"==typeof c.audio&&(c=JSON.parse(JSON.stringify(c)),remap(c.audio,"autoGainControl","mozAutoGainControl"),remap(c.audio,"noiseSuppression","mozNoiseSuppression")),nativeGetUserMedia(c)},MediaStreamTrack&&MediaStreamTrack.prototype.getSettings){const nativeGetSettings=MediaStreamTrack.prototype.getSettings;MediaStreamTrack.prototype.getSettings=function(){const obj=nativeGetSettings.apply(this,arguments);return remap(obj,"mozAutoGainControl","autoGainControl"),remap(obj,"mozNoiseSuppression","noiseSuppression"),obj}}if(MediaStreamTrack&&MediaStreamTrack.prototype.applyConstraints){const nativeApplyConstraints=MediaStreamTrack.prototype.applyConstraints;MediaStreamTrack.prototype.applyConstraints=function(c){return"audio"===this.kind&&"object"==typeof c&&(c=JSON.parse(JSON.stringify(c)),remap(c,"autoGainControl","mozAutoGainControl"),remap(c,"noiseSuppression","mozNoiseSuppression")),nativeApplyConstraints.apply(this,[c])}}}}function firefox_getdisplaymedia_shimGetDisplayMedia(window,preferredMediaSource){window.navigator.mediaDevices&&"getDisplayMedia"in window.navigator.mediaDevices||window.navigator.mediaDevices&&(window.navigator.mediaDevices.getDisplayMedia=function(constraints){if(!constraints||!constraints.video){const err=new DOMException("getDisplayMedia without video constraints is undefined");return err.name="NotFoundError",err.code=8,Promise.reject(err)}return!0===constraints.video?constraints.video={mediaSource:preferredMediaSource}:constraints.video.mediaSource=preferredMediaSource,window.navigator.mediaDevices.getUserMedia(constraints)})}function firefox_shim_shimOnTrack(window){"object"==typeof window&&window.RTCTrackEvent&&"receiver"in window.RTCTrackEvent.prototype&&!("transceiver"in window.RTCTrackEvent.prototype)&&Object.defineProperty(window.RTCTrackEvent.prototype,"transceiver",{get(){return{receiver:this.receiver}}})}function firefox_shim_shimPeerConnection(window){const browserDetails=detectBrowser(window);if("object"!=typeof window||!window.RTCPeerConnection&&!window.mozRTCPeerConnection)return;!window.RTCPeerConnection&&window.mozRTCPeerConnection&&(window.RTCPeerConnection=window.mozRTCPeerConnection),["setLocalDescription","setRemoteDescription","addIceCandidate"].forEach((function(method){const nativeMethod=window.RTCPeerConnection.prototype[method];window.RTCPeerConnection.prototype[method]=function(){return arguments[0]=new("addIceCandidate"===method?window.RTCIceCandidate:window.RTCSessionDescription)(arguments[0]),nativeMethod.apply(this,arguments)}}));const nativeAddIceCandidate=window.RTCPeerConnection.prototype.addIceCandidate;window.RTCPeerConnection.prototype.addIceCandidate=function(){return arguments[0]?nativeAddIceCandidate.apply(this,arguments):(arguments[1]&&arguments[1].apply(null),Promise.resolve())};const modernStatsTypes={inboundrtp:"inbound-rtp",outboundrtp:"outbound-rtp",candidatepair:"candidate-pair",localcandidate:"local-candidate",remotecandidate:"remote-candidate"},nativeGetStats=window.RTCPeerConnection.prototype.getStats;window.RTCPeerConnection.prototype.getStats=function(selector,onSucc,onErr){return nativeGetStats.apply(this,[selector||null]).then(stats=>{if(browserDetails.version<53&&!onSucc)try{stats.forEach(stat=>{stat.type=modernStatsTypes[stat.type]||stat.type})}catch(e){if("TypeError"!==e.name)throw e;stats.forEach((stat,i)=>{stats.set(i,Object.assign({},stat,{type:modernStatsTypes[stat.type]||stat.type}))})}return stats}).then(onSucc,onErr)}}function shimSenderGetStats(window){if("object"!=typeof window||!window.RTCPeerConnection||!window.RTCRtpSender)return;if(window.RTCRtpSender&&"getStats"in window.RTCRtpSender.prototype)return;const origGetSenders=window.RTCPeerConnection.prototype.getSenders;origGetSenders&&(window.RTCPeerConnection.prototype.getSenders=function(){const senders=origGetSenders.apply(this,[]);return senders.forEach(sender=>sender._pc=this),senders});const origAddTrack=window.RTCPeerConnection.prototype.addTrack;origAddTrack&&(window.RTCPeerConnection.prototype.addTrack=function(){const sender=origAddTrack.apply(this,arguments);return sender._pc=this,sender}),window.RTCRtpSender.prototype.getStats=function(){return this.track?this._pc.getStats(this.track):Promise.resolve(new Map)}}function shimReceiverGetStats(window){if("object"!=typeof window||!window.RTCPeerConnection||!window.RTCRtpSender)return;if(window.RTCRtpSender&&"getStats"in window.RTCRtpReceiver.prototype)return;const origGetReceivers=window.RTCPeerConnection.prototype.getReceivers;origGetReceivers&&(window.RTCPeerConnection.prototype.getReceivers=function(){const receivers=origGetReceivers.apply(this,[]);return receivers.forEach(receiver=>receiver._pc=this),receivers}),wrapPeerConnectionEvent(window,"track",e=>(e.receiver._pc=e.srcElement,e)),window.RTCRtpReceiver.prototype.getStats=function(){return this._pc.getStats(this.track)}}function shimRemoveStream(window){!window.RTCPeerConnection||"removeStream"in window.RTCPeerConnection.prototype||(window.RTCPeerConnection.prototype.removeStream=function(stream){deprecated("removeStream","removeTrack"),this.getSenders().forEach(sender=>{sender.track&&stream.getTracks().includes(sender.track)&&this.removeTrack(sender)})})}function shimRTCDataChannel(window){window.DataChannel&&!window.RTCDataChannel&&(window.RTCDataChannel=window.DataChannel)}function shimLocalStreamsAPI(window){if("object"==typeof window&&window.RTCPeerConnection){if("getLocalStreams"in window.RTCPeerConnection.prototype||(window.RTCPeerConnection.prototype.getLocalStreams=function(){return this._localStreams||(this._localStreams=[]),this._localStreams}),!("addStream"in window.RTCPeerConnection.prototype)){const _addTrack=window.RTCPeerConnection.prototype.addTrack;window.RTCPeerConnection.prototype.addStream=function(stream){this._localStreams||(this._localStreams=[]),this._localStreams.includes(stream)||this._localStreams.push(stream),stream.getTracks().forEach(track=>_addTrack.call(this,track,stream))},window.RTCPeerConnection.prototype.addTrack=function(track,stream){return stream&&(this._localStreams?this._localStreams.includes(stream)||this._localStreams.push(stream):this._localStreams=[stream]),_addTrack.call(this,track,stream)}}"removeStream"in window.RTCPeerConnection.prototype||(window.RTCPeerConnection.prototype.removeStream=function(stream){this._localStreams||(this._localStreams=[]);const index=this._localStreams.indexOf(stream);if(-1===index)return;this._localStreams.splice(index,1);const tracks=stream.getTracks();this.getSenders().forEach(sender=>{tracks.includes(sender.track)&&this.removeTrack(sender)})})}}function shimRemoteStreamsAPI(window){if("object"==typeof window&&window.RTCPeerConnection&&("getRemoteStreams"in window.RTCPeerConnection.prototype||(window.RTCPeerConnection.prototype.getRemoteStreams=function(){return this._remoteStreams?this._remoteStreams:[]}),!("onaddstream"in window.RTCPeerConnection.prototype))){Object.defineProperty(window.RTCPeerConnection.prototype,"onaddstream",{get(){return this._onaddstream},set(f){this._onaddstream&&(this.removeEventListener("addstream",this._onaddstream),this.removeEventListener("track",this._onaddstreampoly)),this.addEventListener("addstream",this._onaddstream=f),this.addEventListener("track",this._onaddstreampoly=e=>{e.streams.forEach(stream=>{if(this._remoteStreams||(this._remoteStreams=[]),this._remoteStreams.includes(stream))return;this._remoteStreams.push(stream);const event=new Event("addstream");event.stream=stream,this.dispatchEvent(event)})})}});const origSetRemoteDescription=window.RTCPeerConnection.prototype.setRemoteDescription;window.RTCPeerConnection.prototype.setRemoteDescription=function(){const pc=this;return this._onaddstreampoly||this.addEventListener("track",this._onaddstreampoly=function(e){e.streams.forEach(stream=>{if(pc._remoteStreams||(pc._remoteStreams=[]),pc._remoteStreams.indexOf(stream)>=0)return;pc._remoteStreams.push(stream);const event=new Event("addstream");event.stream=stream,pc.dispatchEvent(event)})}),origSetRemoteDescription.apply(pc,arguments)}}}function shimCallbacksAPI(window){if("object"!=typeof window||!window.RTCPeerConnection)return;const prototype=window.RTCPeerConnection.prototype,createOffer=prototype.createOffer,createAnswer=prototype.createAnswer,setLocalDescription=prototype.setLocalDescription,setRemoteDescription=prototype.setRemoteDescription,addIceCandidate=prototype.addIceCandidate;prototype.createOffer=function(successCallback,failureCallback){const options=arguments.length>=2?arguments[2]:arguments[0],promise=createOffer.apply(this,[options]);return failureCallback?(promise.then(successCallback,failureCallback),Promise.resolve()):promise},prototype.createAnswer=function(successCallback,failureCallback){const options=arguments.length>=2?arguments[2]:arguments[0],promise=createAnswer.apply(this,[options]);return failureCallback?(promise.then(successCallback,failureCallback),Promise.resolve()):promise};let withCallback=function(description,successCallback,failureCallback){const promise=setLocalDescription.apply(this,[description]);return failureCallback?(promise.then(successCallback,failureCallback),Promise.resolve()):promise};prototype.setLocalDescription=withCallback,withCallback=function(description,successCallback,failureCallback){const promise=setRemoteDescription.apply(this,[description]);return failureCallback?(promise.then(successCallback,failureCallback),Promise.resolve()):promise},prototype.setRemoteDescription=withCallback,withCallback=function(candidate,successCallback,failureCallback){const promise=addIceCandidate.apply(this,[candidate]);return failureCallback?(promise.then(successCallback,failureCallback),Promise.resolve()):promise},prototype.addIceCandidate=withCallback}function safari_shim_shimGetUserMedia(window){const navigator=window&&window.navigator;if(navigator.mediaDevices&&navigator.mediaDevices.getUserMedia){const mediaDevices=navigator.mediaDevices,_getUserMedia=mediaDevices.getUserMedia.bind(mediaDevices);navigator.mediaDevices.getUserMedia=constraints=>_getUserMedia(shimConstraints(constraints))}!navigator.getUserMedia&&navigator.mediaDevices&&navigator.mediaDevices.getUserMedia&&(navigator.getUserMedia=function(constraints,cb,errcb){navigator.mediaDevices.getUserMedia(constraints).then(cb,errcb)}.bind(navigator))}function shimConstraints(constraints){return constraints&&void 0!==constraints.video?Object.assign({},constraints,{video:compactObject(constraints.video)}):constraints}function shimRTCIceServerUrls(window){const OrigPeerConnection=window.RTCPeerConnection;window.RTCPeerConnection=function(pcConfig,pcConstraints){if(pcConfig&&pcConfig.iceServers){const newIceServers=[];for(let i=0;i<pcConfig.iceServers.length;i++){let server=pcConfig.iceServers[i];!server.hasOwnProperty("urls")&&server.hasOwnProperty("url")?(deprecated("RTCIceServer.url","RTCIceServer.urls"),(server=JSON.parse(JSON.stringify(server))).urls=server.url,delete server.url,newIceServers.push(server)):newIceServers.push(pcConfig.iceServers[i])}pcConfig.iceServers=newIceServers}return new OrigPeerConnection(pcConfig,pcConstraints)},window.RTCPeerConnection.prototype=OrigPeerConnection.prototype,"generateCertificate"in window.RTCPeerConnection&&Object.defineProperty(window.RTCPeerConnection,"generateCertificate",{get:()=>OrigPeerConnection.generateCertificate})}function shimTrackEventTransceiver(window){"object"==typeof window&&window.RTCPeerConnection&&"receiver"in window.RTCTrackEvent.prototype&&!window.RTCTransceiver&&Object.defineProperty(window.RTCTrackEvent.prototype,"transceiver",{get(){return{receiver:this.receiver}}})}function shimCreateOfferLegacy(window){const origCreateOffer=window.RTCPeerConnection.prototype.createOffer;window.RTCPeerConnection.prototype.createOffer=function(offerOptions){if(offerOptions){void 0!==offerOptions.offerToReceiveAudio&&(offerOptions.offerToReceiveAudio=!!offerOptions.offerToReceiveAudio);const audioTransceiver=this.getTransceivers().find(transceiver=>transceiver.sender.track&&"audio"===transceiver.sender.track.kind);!1===offerOptions.offerToReceiveAudio&&audioTransceiver?"sendrecv"===audioTransceiver.direction?audioTransceiver.setDirection?audioTransceiver.setDirection("sendonly"):audioTransceiver.direction="sendonly":"recvonly"===audioTransceiver.direction&&(audioTransceiver.setDirection?audioTransceiver.setDirection("inactive"):audioTransceiver.direction="inactive"):!0!==offerOptions.offerToReceiveAudio||audioTransceiver||this.addTransceiver("audio"),void 0!==offerOptions.offerToReceiveVideo&&(offerOptions.offerToReceiveVideo=!!offerOptions.offerToReceiveVideo);const videoTransceiver=this.getTransceivers().find(transceiver=>transceiver.sender.track&&"video"===transceiver.sender.track.kind);!1===offerOptions.offerToReceiveVideo&&videoTransceiver?"sendrecv"===videoTransceiver.direction?videoTransceiver.setDirection?videoTransceiver.setDirection("sendonly"):videoTransceiver.direction="sendonly":"recvonly"===videoTransceiver.direction&&(videoTransceiver.setDirection?videoTransceiver.setDirection("inactive"):videoTransceiver.direction="inactive"):!0!==offerOptions.offerToReceiveVideo||videoTransceiver||this.addTransceiver("video")}return origCreateOffer.apply(this,arguments)}}var sdp=__webpack_require__(8),sdp_default=__webpack_require__.n(sdp);function shimRTCIceCandidate(window){if(!window.RTCIceCandidate||window.RTCIceCandidate&&"foundation"in window.RTCIceCandidate.prototype)return;const NativeRTCIceCandidate=window.RTCIceCandidate;window.RTCIceCandidate=function(args){if("object"==typeof args&&args.candidate&&0===args.candidate.indexOf("a=")&&((args=JSON.parse(JSON.stringify(args))).candidate=args.candidate.substr(2)),args.candidate&&args.candidate.length){const nativeCandidate=new NativeRTCIceCandidate(args),parsedCandidate=sdp_default.a.parseCandidate(args.candidate),augmentedCandidate=Object.assign(nativeCandidate,parsedCandidate);return augmentedCandidate.toJSON=function(){return{candidate:augmentedCandidate.candidate,sdpMid:augmentedCandidate.sdpMid,sdpMLineIndex:augmentedCandidate.sdpMLineIndex,usernameFragment:augmentedCandidate.usernameFragment}},augmentedCandidate}return new NativeRTCIceCandidate(args)},window.RTCIceCandidate.prototype=NativeRTCIceCandidate.prototype,wrapPeerConnectionEvent(window,"icecandidate",e=>(e.candidate&&Object.defineProperty(e,"candidate",{value:new window.RTCIceCandidate(e.candidate),writable:"false"}),e))}function shimMaxMessageSize(window){if(window.RTCSctpTransport||!window.RTCPeerConnection)return;const browserDetails=detectBrowser(window);"sctp"in window.RTCPeerConnection.prototype||Object.defineProperty(window.RTCPeerConnection.prototype,"sctp",{get(){return void 0===this._sctp?null:this._sctp}});const sctpInDescription=function(description){const sections=sdp_default.a.splitSections(description.sdp);return sections.shift(),sections.some(mediaSection=>{const mLine=sdp_default.a.parseMLine(mediaSection);return mLine&&"application"===mLine.kind&&-1!==mLine.protocol.indexOf("SCTP")})},getRemoteFirefoxVersion=function(description){const match=description.sdp.match(/mozilla...THIS_IS_SDPARTA-(\d+)/);if(null===match||match.length<2)return-1;const version=parseInt(match[1],10);return version!=version?-1:version},getCanSendMaxMessageSize=function(remoteIsFirefox){let canSendMaxMessageSize=65536;return"firefox"===browserDetails.browser&&(canSendMaxMessageSize=browserDetails.version<57?-1===remoteIsFirefox?16384:2147483637:browserDetails.version<60?57===browserDetails.version?65535:65536:2147483637),canSendMaxMessageSize},getMaxMessageSize=function(description,remoteIsFirefox){let maxMessageSize=65536;"firefox"===browserDetails.browser&&57===browserDetails.version&&(maxMessageSize=65535);const match=sdp_default.a.matchPrefix(description.sdp,"a=max-message-size:");return match.length>0?maxMessageSize=parseInt(match[0].substr(19),10):"firefox"===browserDetails.browser&&-1!==remoteIsFirefox&&(maxMessageSize=2147483637),maxMessageSize},origSetRemoteDescription=window.RTCPeerConnection.prototype.setRemoteDescription;window.RTCPeerConnection.prototype.setRemoteDescription=function(){if(this._sctp=null,sctpInDescription(arguments[0])){const isFirefox=getRemoteFirefoxVersion(arguments[0]),canSendMMS=getCanSendMaxMessageSize(isFirefox),remoteMMS=getMaxMessageSize(arguments[0],isFirefox);let maxMessageSize;maxMessageSize=0===canSendMMS&&0===remoteMMS?Number.POSITIVE_INFINITY:0===canSendMMS||0===remoteMMS?Math.max(canSendMMS,remoteMMS):Math.min(canSendMMS,remoteMMS);const sctp={};Object.defineProperty(sctp,"maxMessageSize",{get:()=>maxMessageSize}),this._sctp=sctp}return origSetRemoteDescription.apply(this,arguments)}}function shimSendThrowTypeError(window){if(!(window.RTCPeerConnection&&"createDataChannel"in window.RTCPeerConnection.prototype))return;function wrapDcSend(dc,pc){const origDataChannelSend=dc.send;dc.send=function(){const data=arguments[0],length=data.length||data.size||data.byteLength;if("open"===dc.readyState&&pc.sctp&&length>pc.sctp.maxMessageSize)throw new TypeError("Message too large (can send a maximum of "+pc.sctp.maxMessageSize+" bytes)");return origDataChannelSend.apply(dc,arguments)}}const origCreateDataChannel=window.RTCPeerConnection.prototype.createDataChannel;window.RTCPeerConnection.prototype.createDataChannel=function(){const dataChannel=origCreateDataChannel.apply(this,arguments);return wrapDcSend(dataChannel,this),dataChannel},wrapPeerConnectionEvent(window,"datachannel",e=>(wrapDcSend(e.channel,e.target),e))}function shimConnectionState(window){if(!window.RTCPeerConnection||"connectionState"in window.RTCPeerConnection.prototype)return;const proto=window.RTCPeerConnection.prototype;Object.defineProperty(proto,"connectionState",{get(){return{completed:"connected",checking:"connecting"}[this.iceConnectionState]||this.iceConnectionState},enumerable:!0,configurable:!0}),Object.defineProperty(proto,"onconnectionstatechange",{get(){return this._onconnectionstatechange||null},set(cb){this._onconnectionstatechange&&(this.removeEventListener("connectionstatechange",this._onconnectionstatechange),delete this._onconnectionstatechange),cb&&this.addEventListener("connectionstatechange",this._onconnectionstatechange=cb)},enumerable:!0,configurable:!0}),["setLocalDescription","setRemoteDescription"].forEach(method=>{const origMethod=proto[method];proto[method]=function(){return this._connectionstatechangepoly||(this._connectionstatechangepoly=e=>{const pc=e.target;if(pc._lastConnectionState!==pc.connectionState){pc._lastConnectionState=pc.connectionState;const newEvent=new Event("connectionstatechange",e);pc.dispatchEvent(newEvent)}return e},this.addEventListener("iceconnectionstatechange",this._connectionstatechangepoly)),origMethod.apply(this,arguments)}})}function removeAllowExtmapMixed(window){if(!window.RTCPeerConnection)return;const browserDetails=detectBrowser(window);if("chrome"===browserDetails.browser&&browserDetails.version>=71)return;const nativeSRD=window.RTCPeerConnection.prototype.setRemoteDescription;window.RTCPeerConnection.prototype.setRemoteDescription=function(desc){return desc&&desc.sdp&&-1!==desc.sdp.indexOf("\na=extmap-allow-mixed")&&(desc.sdp=desc.sdp.split("\n").filter(line=>"a=extmap-allow-mixed"!==line.trim()).join("\n")),nativeSRD.apply(this,arguments)}}var adapter_core=function({window:window}={},options={shimChrome:!0,shimFirefox:!0,shimEdge:!0,shimSafari:!0}){const logging=log,browserDetails=detectBrowser(window),adapter={browserDetails:browserDetails,commonShim:common_shim_namespaceObject,extractVersion:extractVersion,disableLog:disableLog,disableWarnings:disableWarnings};switch(browserDetails.browser){case"chrome":if(!chrome_shim_namespaceObject||!shimPeerConnection||!options.shimChrome)return logging("Chrome shim is not included in this adapter release."),adapter;logging("adapter.js shimming chrome."),adapter.browserShim=chrome_shim_namespaceObject,shimGetUserMedia(window),shimMediaStream(window),shimPeerConnection(window),shimOnTrack(window),shimAddTrackRemoveTrack(window),shimGetSendersWithDtmf(window),shimSenderReceiverGetStats(window),fixNegotiationNeeded(window),shimRTCIceCandidate(window),shimConnectionState(window),shimMaxMessageSize(window),shimSendThrowTypeError(window),removeAllowExtmapMixed(window);break;case"firefox":if(!firefox_shim_namespaceObject||!firefox_shim_shimPeerConnection||!options.shimFirefox)return logging("Firefox shim is not included in this adapter release."),adapter;logging("adapter.js shimming firefox."),adapter.browserShim=firefox_shim_namespaceObject,firefox_getusermedia_shimGetUserMedia(window),firefox_shim_shimPeerConnection(window),firefox_shim_shimOnTrack(window),shimRemoveStream(window),shimSenderGetStats(window),shimReceiverGetStats(window),shimRTCDataChannel(window),shimRTCIceCandidate(window),shimConnectionState(window),shimMaxMessageSize(window),shimSendThrowTypeError(window);break;case"edge":if(!edge_shim_namespaceObject||!edge_shim_shimPeerConnection||!options.shimEdge)return logging("MS edge shim is not included in this adapter release."),adapter;logging("adapter.js shimming edge."),adapter.browserShim=edge_shim_namespaceObject,getusermedia_shimGetUserMedia(window),getdisplaymedia_shimGetDisplayMedia(window),edge_shim_shimPeerConnection(window),shimReplaceTrack(window),shimMaxMessageSize(window),shimSendThrowTypeError(window);break;case"safari":if(!safari_shim_namespaceObject||!options.shimSafari)return logging("Safari shim is not included in this adapter release."),adapter;logging("adapter.js shimming safari."),adapter.browserShim=safari_shim_namespaceObject,shimRTCIceServerUrls(window),shimCreateOfferLegacy(window),shimCallbacksAPI(window),shimLocalStreamsAPI(window),shimRemoteStreamsAPI(window),shimTrackEventTransceiver(window),safari_shim_shimGetUserMedia(window),shimRTCIceCandidate(window),shimMaxMessageSize(window),shimSendThrowTypeError(window),removeAllowExtmapMixed(window);break;default:logging("Unsupported browser!")}return adapter}({window:window});function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}function _createClass(Constructor,protoProps,staticProps){return protoProps&&_defineProperties(Constructor.prototype,protoProps),staticProps&&_defineProperties(Constructor,staticProps),Constructor}var _$log=new WeakMap,_$rootScope=new WeakMap,_authService=new WeakMap,_xmppService=new WeakMap,_companyService=new WeakMap,_contactService=new WeakMap,_botService=new WeakMap,_fileServerService=new WeakMap,_fileStorageService=new WeakMap,_roomService=new WeakMap,_groupService=new WeakMap,_videoService=new WeakMap,_favoriteService=new WeakMap,_voiceMessageService=new WeakMap,_webrtcServiceEventHandler=new WeakMap,_telephonyService=new WeakMap,_conferenceService=new WeakMap,_pstnConferenceService=new WeakMap,_webConferenceService=new WeakMap,_conversationService=new WeakMap,_callLogService=new WeakMap,_platformService=new WeakMap,_invitationService=new WeakMap,_adminCompanyService=new WeakMap,_adminUserService=new WeakMap,_profileService=new WeakMap,_channelService=new WeakMap,_webrtcGatewayService=new WeakMap,_recordsService=new WeakMap,_SDK=new WeakMap,ConnectionService=function(){function ConnectionService($log,$rootScope,authService,xmppService,companyService,contactService,botService,fileServerService,fileStorageService,roomService,groupService,videoService,favoriteService,voiceMessageService,webrtcServiceEventHandler,telephonyService,conferenceService,pstnConferenceService,webConferenceService,conversationService,callLogService,platformService,invitationService,adminCompanyService,adminUserService,profileService,channelService,webrtcGatewayService,recordsService,SDK){var _this=this;!function(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}(this,ConnectionService),this.logService="ConnectionService | ",this.state="disconnected",this.hostUsed="",_$log.set(this,$log),_$rootScope.set(this,$rootScope),_authService.set(this,authService),_xmppService.set(this,xmppService),_companyService.set(this,companyService),_contactService.set(this,contactService),_botService.set(this,botService),_fileServerService.set(this,fileServerService),_fileStorageService.set(this,fileStorageService),_roomService.set(this,roomService),_groupService.set(this,groupService),_videoService.set(this,videoService),_favoriteService.set(this,favoriteService),_voiceMessageService.set(this,voiceMessageService),_webrtcServiceEventHandler.set(this,webrtcServiceEventHandler),_telephonyService.set(this,telephonyService),_conferenceService.set(this,conferenceService),_pstnConferenceService.set(this,pstnConferenceService),_webConferenceService.set(this,webConferenceService),_conversationService.set(this,conversationService),_callLogService.set(this,callLogService),_platformService.set(this,platformService),_invitationService.set(this,invitationService),_adminCompanyService.set(this,adminCompanyService),_adminUserService.set(this,adminUserService),_profileService.set(this,profileService),_channelService.set(this,channelService),_webrtcGatewayService.set(this,webrtcGatewayService),_recordsService.set(this,recordsService),_SDK.set(this,SDK),this.RAINBOW_ONCONNECTIONSTATECHANGED="rainbowconnectionstatechanged",this.RAINBOW_ONSTARTED="started",this.RAINBOW_ONSIGNED="signed",this.RAINBOW_ONSTOPPED="stopped",this.RAINBOW_CONNECTIONINPROGRESS="inProgress",this.RAINBOW_ONUSERTOKENRENEW="userTokenRenew",this.RAINBOW_ONUSERTOKENRENEWFAILED="userTokenRenewFailed",this.RAINBOW_ONAPPTOKENRENEW="applicationTokenRenew",this.RAINBOW_ONAPPTOKENRENEWFAILED="applicationTokenRenewFailed",this.RAINBOW_CONNECTIONCONNECTED="connected",this.RAINBOW_CONNECTIONDISCONNECTED="disconnected",this.RAINBOW_OFFICIAL_HOST="openrainbow.com",this.RAINBOW_BETA_HOST="openrainbow.net",this.RAINBOW_DEV_HOST="openrainbow.org",this.RAINBOW_SANDBOX_HOST="sandbox.openrainbow.com",this.RAINBOW_CPAASPREPROD_HOST="cpaaspreprod.openrainbow.net",this.RAINBOW_CHINA_HOST="myopenrainbow.cn.com",this.RAINBOW_CHINASANDBOX_HOST="sandbox.openrainbow.cn.com",this.signin=this.signin.bind(this),this.signinOnRainbowOfficial=this.signinOnRainbowOfficial.bind(this),this.signinOnRainbowBeta=this.signinOnRainbowBeta.bind(this),this.signinOnRainbowCPaasPreProd=this.signinOnRainbowCPaasPreProd.bind(this),this.signinOnRainbowDev=this.signinOnRainbowDev.bind(this),this.signinOnRainbowSandboxChina=this.signinOnRainbowSandboxChina.bind(this),this.signinOnRainbowSandboxChina=this.signinOnRainbowSandboxChina.bind(this),this.signinOnRainbowHosted=this.signinOnRainbowHosted.bind(this),this.signinSandBoxWithToken=this.signinSandBoxWithToken.bind(this),this.signinOnRainbowOfficialWithToken=this.signinOnRainbowOfficialWithToken.bind(this),this.signinOnRainbowBetaWithToken=this.signinOnRainbowBetaWithToken.bind(this),this.signinOnRainbowDevWithToken=this.signinOnRainbowDevWithToken.bind(this),this.signinOnRainbowHostedWithToken=this.signinOnRainbowHostedWithToken.bind(this),this.signinOnRainbowWithOICD=this.signinOnRainbowWithOICD.bind(this),this.styleSignInWithRainbowButton=this.styleSignInWithRainbowButton.bind(this),this.signout=this.signout.bind(this),this.updateUserPassword=this.updateUserPassword.bind(this),this.getState=this.getState.bind(this),this.getToken=this.getToken.bind(this),this.refreshToken=this.refreshToken.bind(this),this.signinToRainbow=this.signinToRainbow.bind(this),this.disconnectionHandler=this.disconnectionHandler.bind(this),this.onConnectionStateChangeEvent=this.onConnectionStateChangeEvent.bind(this),$rootScope.$on("$destroy",$rootScope.$on("ON_CONNECTION_STATE_CHANGE_EVENT",this.onConnectionStateChangeEvent)),$rootScope.$on("$destroy",$rootScope.$on("ON_AUTH_TOKEN_RENEW",(function(){var sdkEvent=new CustomEvent(_this.RAINBOW_ONUSERTOKENRENEW,{detail:null});document.dispatchEvent(sdkEvent)}))),$rootScope.$on("$destroy",$rootScope.$on("ON_AUTH_TOKEN_EXPIRE",(function(){var sdkEvent=new CustomEvent(_this.RAINBOW_ONUSERTOKENRENEWFAILED,{detail:null});document.dispatchEvent(sdkEvent)}))),$rootScope.$on("$destroy",$rootScope.$on("ON_AUTH_TOKEN_RENEW",(function(){var sdkEvent=new CustomEvent(_this.RAINBOW_ONAPPTOKENRENEW,{detail:null});document.dispatchEvent(sdkEvent)}))),$rootScope.$on("$destroy",$rootScope.$on("ON_AUTH_TOKEN_EXPIRE",(function(){var sdkEvent=new CustomEvent(_this.RAINBOW_ONAPPTOKENRENEWFAILED,{detail:null});document.dispatchEvent(sdkEvent)}))),window.addEventListener("beforeunload",(function(){$rootScope.$broadcast("ON_CONNECTION_STATE_CHANGE_EVENT","disconnected"),videoService.stop(),contactService.stop(),conversationService.stop(),groupService.stop(),telephonyService.stop(),fileServerService.stop(),fileStorageService.stop(),callLogService.stop(),xmppService.stop(),profileService.stop(),recordsService.stop(),channelService.stop(),webrtcGatewayService.stop()}))}return _createClass(ConnectionService,null,[{key:"$inject",get:function(){return["$log","$rootScope","authService","xmppService","companyService","contactService","botService","fileServerService","fileStorageService","roomService","groupService","videoService","favoriteService","voiceMessageService","webrtcServiceEventHandler","telephonyService","conferenceService","pstnConferenceService","webConferenceService","conversationService","callLogService","platformService","invitationService","adminCompanyService","adminUserService","profileService","channelService","webrtcGatewayService","recordsService","SDK"]}}]),_createClass(ConnectionService,[{key:"signin",value:function(strLogin,strPassword){return this.hostUsed=this.RAINBOW_SANDBOX_HOST,this.signinToRainbow(strLogin,strPassword,null)}},{key:"signinOnRainbowOfficial",value:function(strLogin,strPassword){return this.hostUsed=this.RAINBOW_OFFICIAL_HOST,this.signinToRainbow(strLogin,strPassword,null)}},{key:"signinOnRainbowBeta",value:function(strLogin,strPassword){return this.hostUsed=this.RAINBOW_BETA_HOST,this.signinToRainbow(strLogin,strPassword,null)}},{key:"signinOnRainbowCPaasPreProd",value:function(strLogin,strPassword){return this.hostUsed=this.RAINBOW_CPAASPREPROD_HOST,this.signinToRainbow(strLogin,strPassword,null)}},{key:"signinOnRainbowDev",value:function(strLogin,strPassword){return this.hostUsed=this.RAINBOW_DEV_HOST,this.signinToRainbow(strLogin,strPassword,null)}},{key:"signinOnRainbowSandboxChina",value:function(strLogin,strPassword){return this.hostUsed=this.RAINBOW_CHINASANDBOX_HOST,this.signinToRainbow(strLogin,strPassword,null)}},{key:"signinOnRainbowChina",value:function(strLogin,strPassword){return this.hostUsed=this.RAINBOW_CHINA_HOST,this.signinToRainbow(strLogin,strPassword,null)}},{key:"signinOnRainbowHosted",value:function(strLogin,strPassword,strHost){return this.hostUsed=strHost,this.signinToRainbow(strLogin,strPassword,null)}},{key:"signinSandBoxWithToken",value:function(strToken){return this.hostUsed=this.RAINBOW_SANDBOX_HOST,this.signinToRainbow(null,null,strToken)}},{key:"signinOnRainbowOfficialWithToken",value:function(strToken){return this.hostUsed=this.RAINBOW_OFFICIAL_HOST,this.signinToRainbow(null,null,strToken)}},{key:"signinOnRainbowBetaWithToken",value:function(strToken){return this.hostUsed=this.RAINBOW_BETA_HOST,this.signinToRainbow(null,null,strToken)}},{key:"signinOnRainbowDevWithToken",value:function(strToken){return this.hostUsed=this.RAINBOW_DEV_HOST,this.signinToRainbow(null,null,strToken)}},{key:"signinOnRainbowHostedWithToken",value:function(strToken,strHost){return this.hostUsed=strHost,this.signinToRainbow(null,null,strToken)}},{key:"signinOnRainbowWithOICD",value:function(strToken){for(var _this2=this,$log=_$log.get(this),challenge="",characters="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",charactersLength=characters.length,i=0;i<30;i++)challenge+=characters.charAt(Math.floor(Math.random()*charactersLength));var url="https://openrainbow.com/api/rainbow/authentication/v1.0/oidc-client/jwt?id_token=".concat(strToken,"&challenge=").concat(challenge);return new Promise((function(resolve,reject){if(!strToken)return $log.sdk(_this2.logService+"[signinOnRainbowWithOICD] :: Argument strToken is null or undefined"),reject("Argument strToken is null or undefined");var headersXrainbowAppAuth=window.btoa(unescape(encodeURIComponent(sdk.key.appID+":"+window.SHA256(sdk.key.appSecret+challenge))));headersXrainbowAppAuth="Basic "+headersXrainbowAppAuth;var sdkHeaders=new Headers({"Content-Type":"application/x-www-form-urlencoded","X-Rainbow-App-Auth":headersXrainbowAppAuth,Accept:"application/json"});fetch(url,{method:"get",mode:"cors",headers:sdkHeaders}).then((function(response){response.json().then((function(data){_this2.signinOnRainbowBetaWithToken(data.token).then((function(account){return resolve(account)})).catch((function(err){return reject(err)}))}))})).catch((function(err){return reject(err)}))}))}},{key:"styleSignInWithRainbowButton",value:function(color,size){var width,height,backgroundSize,fontSize,backgroundColor,textColor,$log=_$log.get(this),el=document.querySelector(".SignInWithRainbow");return el?(size||(size="medium"),color||(color="blue"),"blue"===color?(backgroundColor="#1b85e0",textColor="#FFFFFF"):"white"===color&&(backgroundColor="#FFFFFF",textColor="#1b85e0"),"small"===size?(width="200px",height="20px",backgroundSize="18px",fontSize="12px"):"medium"===size?(width="250px",height="30px",backgroundSize="26px",fontSize="16px"):"large"===size&&(width="350px",height="40px",backgroundSize="34px",fontSize="22px"),el.style.backgroundColor=backgroundColor,el.style.color=textColor,el.style.width=width,el.style.height=height,el.style.fontSize=fontSize,el.style.border="0px",el.style.borderRadius="5px",el.innerHTML="Sign in with Rainbow",el.style.backgroundImage="url('https://hub.openrainbow.com/android-chrome-48x48.png')",el.style.backgroundPosition="left",el.style.backgroundRepeat="no-repeat",el.style.verticalAlign="middle",el.style.backgroundSize=backgroundSize,el.style.backgroundOrigin="content-box",el.style.paddingLeft="13px",$log.sdk(this.logService+"[styleSignInWithRainbowButton] :: Styled a corresponding HTML element"),!0):($log.sdk(this.logService+"[styleSignInWithRainbowButton] :: Could not find a corresponding HTML element"),!1)}},{key:"signout",value:function(){var _this3=this,$log=_$log.get(this),videoService=_videoService.get(this),webrtcServiceEventHandler=_webrtcServiceEventHandler.get(this),contactService=_contactService.get(this),botService=_botService.get(this),profileService=_profileService.get(this),conversationService=_conversationService.get(this),conferenceService=_conferenceService.get(this),webConferenceService=_webConferenceService.get(this),pstnConferenceService=_pstnConferenceService.get(this),callLogService=_callLogService.get(this),channelService=_channelService.get(this),telephonyService=_telephonyService.get(this),fileServerService=_fileServerService.get(this),fileStorageService=_fileStorageService.get(this),invitationService=_invitationService.get(this),groupService=_groupService.get(this),favoriteService=_favoriteService.get(this),voiceMessageService=_voiceMessageService.get(this),roomService=_roomService.get(this),companyService=_companyService.get(this),adminCompanyService=_adminCompanyService.get(this),adminUserService=_adminUserService.get(this),webrtcGatewayService=_webrtcGatewayService.get(this),xmppService=_xmppService.get(this),recordsService=_recordsService.get(this),result={code:_SDK.get(this).OK,label:"OK"};return $log.sdk(this.logService+"[signout] :: Trying to sign out"),new Promise((function(resolve,reject){videoService.stop().then((function(){return $log.sdk(_this3.logService+"[signout] :: Video service stopped"),webrtcServiceEventHandler.stop()})).then((function(){return $log.sdk(_this3.logService+"[signout] :: WebRTCEventHandler service stopped"),contactService.stop()})).then((function(){return $log.sdk(_this3.logService+"[signout] :: Contact service stopped"),botService.stop()})).then((function(){return $log.sdk(_this3.logService+"[signout] :: Bot service stopped"),profileService.stop()})).then((function(){return $log.sdk(_this3.logService+"[signout] :: Profile service stopped"),conversationService.stop()})).then((function(){return $log.sdk(_this3.logService+"[signout] :: Conversation service stopped"),conferenceService.stop()})).then((function(){return $log.sdk(_this3.logService+"[signout] :: Conference service stopped"),webConferenceService.stop()})).then((function(){return $log.sdk(_this3.logService+"[signout] :: Web Conference service stopped"),pstnConferenceService.stop()})).then((function(){return $log.sdk(_this3.logService+"[signout] :: PTSN Conference service stopped"),callLogService.stop()})).then((function(){return $log.sdk(_this3.logService+"[signout] :: ChannelService service stopped"),channelService.stop()})).then((function(){return $log.sdk(_this3.logService+"[signout] :: CallLog service stopped"),telephonyService.stop()})).then((function(){return $log.sdk(_this3.logService+"[signout] :: Telephony service stopped"),fileServerService.stop()})).then((function(){return $log.sdk(_this3.logService+"[signout] :: FileServer service stopped"),fileStorageService.stop()})).then((function(){return $log.sdk(_this3.logService+"[signout] :: FileStorage service stopped"),invitationService.stop()})).then((function(){return $log.sdk(_this3.logService+"[signout] :: Invitation service stopped"),groupService.stop()})).then((function(){return $log.sdk(_this3.logService+"[signout] :: Group service stopped"),favoriteService.stop()})).then((function(){return $log.sdk(_this3.logService+"[signout] :: Favorite service stopped"),voiceMessageService.stop()})).then((function(){return $log.sdk(_this3.logService+"[signout] :: Voice Message Service service stopped"),roomService.stop()})).then((function(){return $log.sdk(_this3.logService+"[signout] :: Company service stopped"),companyService.stop()})).then((function(){return $log.sdk(_this3.logService+"[signout] :: Admin Company service stopped"),adminCompanyService.stop()})).then((function(){return $log.sdk(_this3.logService+"[signout] :: Admin User service stopped"),adminUserService.stop()})).then((function(){return $log.sdk(_this3.logService+"[signout] :: Invitation service stopped"),webrtcGatewayService.stop()})).then((function(){return $log.sdk(_this3.logService+"[signout] :: webrtcGateway service stopped"),xmppService.stop()})).then((function(){return $log.sdk(_this3.logService+"[signout] :: Records service stopped"),recordsService.stop()})).then((function(){$log.sdk(_this3.logService+"[signout] :: XMPP service stopped"),$log.sdk(_this3.logService+"[signout] :: Services Successfully unloaded!");var sdkEvent=new CustomEvent(_this3.RAINBOW_ONSTOPPED);return document.dispatchEvent(sdkEvent),resolve(result)})).catch((function(error){return $log.sdk(_this3.logService+"[signout] :: An error occured during signout"),reject(error)}))}))}},{key:"updateUserPassword",value:function(oldPassword,newPassword){return _contactService.get(this).updateUserPassword(oldPassword,newPassword,!1)}},{key:"getState",value:function(){return this.state}},{key:"getToken",value:function(){return _authService.get(this).token}},{key:"refreshToken",value:function(){return _authService.get(this).renewAuthToken(!1)}},{key:"signinToRainbow",value:function(login,password,token){var _this4=this,$log=_$log.get(this),$rootScope=_$rootScope.get(this),authService=_authService.get(this),videoService=_videoService.get(this),webrtcServiceEventHandler=_webrtcServiceEventHandler.get(this),contactService=_contactService.get(this),botService=_botService.get(this),profileService=_profileService.get(this),conversationService=_conversationService.get(this),conferenceService=_conferenceService.get(this),webConferenceService=_webConferenceService.get(this),pstnConferenceService=_pstnConferenceService.get(this),callLogService=_callLogService.get(this),channelService=_channelService.get(this),telephonyService=_telephonyService.get(this),fileServerService=_fileServerService.get(this),fileStorageService=_fileStorageService.get(this),invitationService=_invitationService.get(this),groupService=_groupService.get(this),favoriteService=_favoriteService.get(this),voiceMessageService=_voiceMessageService.get(this),roomService=_roomService.get(this),companyService=_companyService.get(this),adminCompanyService=_adminCompanyService.get(this),adminUserService=_adminUserService.get(this),webrtcGatewayService=_webrtcGatewayService.get(this),xmppService=_xmppService.get(this),recordsService=_recordsService.get(this),platformService=_platformService.get(this),SDK=_SDK.get(this),withToken=!1;return new Promise((function(resolve,reject){if(token)withToken=!0,login=null,password=null;else{if(!login)return reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'login' is missing or empty"});if(!password)return reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'password' is missing or empty"})}$log.sdk(_this4.logService+"[signin] :: Rainbow host used "+_this4.hostUsed),withToken?$log.sdk(_this4.logService+"[signin] :: Trying to sign-in with given token"):$log.sdk(_this4.logService+"[signin] :: Tryng to sign-in");var result={code:SDK.OK,label:"",account:null};authService.removeCredentials(),authService.authenticateOnHost(login,password,_this4.hostUsed,{appID:sdk.key.appID,appSecret:sdk.key.appSecret},token).then((function(){result.account={},result.label="ok",result.account.userId=authService.userId,result.account.companyId=authService.companyId,result.account.loginEmail=authService.login,result.account.roles=authService.userData.roles,result.token=authService.token,result.userData=authService.userData;var stats=[];$log.sdk(_this4.logService+"[signin] :: Successfully sign-in with  | "+authService.jidIm);var sdkEvent=new CustomEvent(_this4.RAINBOW_ONSIGNED,{detail:result});document.dispatchEvent(sdkEvent),authService.startTokenSurvey(),$log.sdk(_this4.logService+"[signin] :: Start services..."),xmppService.disconnectionHandler=_this4.disconnectionHandler,xmppService.start(stats).then((function(){return $log.sdk(_this4.logService+"[signin] :: XMPP service ready!"),companyService.start(stats)})).then((function(){return $log.sdk(_this4.logService+"[signin] :: Company service ready!"),adminCompanyService.start(stats)})).then((function(){return $log.sdk(_this4.logService+"[signin] :: Admin company service ready!"),adminUserService.start(stats)})).then((function(){return $log.sdk(_this4.logService+"[signin] :: Admin user service ready!"),contactService.start(stats)})).then((function(){return $log.sdk(_this4.logService+"[signin] :: Contact service ready!"),profileService.start(stats)})).then((function(){return $log.sdk(_this4.logService+"[signin] :: Profile service ready!"),invitationService.start(stats)})).then((function(){return $log.sdk(_this4.logService+"[signin] :: Invitation service ready!"),fileServerService.start(stats)})).then((function(){return $log.sdk(_this4.logService+"[signin] :: FileServer service ready!"),fileStorageService.start(stats)})).then((function(){return $log.sdk(_this4.logService+"[signin] :: FileStorage service ready!"),roomService.start(stats)})).then((function(){return $log.sdk(_this4.logService+"[signin] :: Room service ready!"),groupService.start(stats)})).then((function(){return $log.sdk(_this4.logService+"[signin] :: Group service ready!"),favoriteService.start(stats)})).then((function(){return $log.sdk(_this4.logService+"[signin] :: Favorite service ready!"),voiceMessageService.start(stats)})).then((function(){return $log.sdk(_this4.logService+"[signin] :: Voice Message Service service ready!"),webrtcGatewayService.start(stats)})).then((function(){return $log.sdk(_this4.logService+"[signin] :: WebrtcGateway service ready!"),videoService.start(stats)})).then((function(){return $log.sdk(_this4.logService+"[signin] :: Video service ready!"),webrtcServiceEventHandler.start(stats)})).then((function(){return $log.sdk(_this4.logService+"[signin] :: WebRTCEventHandler service ready!"),telephonyService.start(stats)})).then((function(){return $log.sdk(_this4.logService+"[signin] :: Telephony service ready!"),pstnConferenceService.start(stats)})).then((function(){return $log.sdk(_this4.logService+"[signin] :: PSTN Conference service ready!"),webConferenceService.start(stats)})).then((function(){return $log.sdk(_this4.logService+"[signin] :: Web Conference service ready!"),conversationService.start(stats)})).then((function(){$log.sdk(_this4.logService+"[signin] :: Conversation service ready!"),$log.sdk(_this4.logService+"[signin] :: Send initial presence"),contactService.sendPresenceFromConfiguration()})).then((function(){return $log.sdk(_this4.logService+"[signin] :: Initial presence sent !"),callLogService.start(stats)})).then((function(){return $log.sdk(_this4.logService+"[signin] :: CallLog service ready!"),platformService.start(stats)})).then((function(){return $log.sdk(_this4.logService+"[signin] :: Platform service ready!"),botService.start(stats)})).then((function(){return $log.sdk(_this4.logService+"[signin] :: Bot service ready!"),conferenceService.start(stats)})).then((function(){return $log.sdk(_this4.logService+"[signin] :: Conference service ready!"),recordsService.start(stats)})).then((function(){return $log.sdk(_this4.logService+"[signin] :: Records service ready!"),channelService.start(stats)})).then((function(){$log.sdk(_this4.logService+"[signin] :: Channel service ready!"),$log.sdk(_this4.logService+"[signin] :: Services Successfully loaded!"),$rootScope.$broadcast("ON_CONNECTION_STATE_CHANGE_EVENT","connected");var sdkEvent_RAINBOW_ONSTARTED=new CustomEvent(_this4.RAINBOW_ONSTARTED,{detail:result});return document.dispatchEvent(sdkEvent_RAINBOW_ONSTARTED),resolve(result)})).catch((function(__err){return $log.sdk(_this4.logService+"[signin] :: Error during signin"),$log.sdk(_this4.logService+"[SIGNIN ERROR]",__err),result.code=SDK.ERRORXMPP,result.label="errorXMPP",result.account=null,reject(result)}))})).catch((function(){return $log.sdk(_this4.logService+"[signin] :: Error during signin"),result.code=SDK.ERRORUNAUTHORIZED,result.label="errorUnauthorized",reject(result)}))}))}},{key:"disconnectionHandler",value:function(){_$log.get(this).sdk(this.logService+"[discHandler] :: Disconnected from the XMPP Rainbow Cloud Services")}},{key:"onConnectionStateChangeEvent",value:function(__event,status){_$log.get(this).sdk(this.logService+"[onChange] :: Connection state changed to "+status),this.state=status;var sdkEvent=new CustomEvent(this.RAINBOW_ONCONNECTIONSTATECHANGED,{detail:status});document.dispatchEvent(sdkEvent)}}]),ConnectionService}();function presenceService_defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}function presenceService_createClass(Constructor,protoProps,staticProps){return protoProps&&presenceService_defineProperties(Constructor.prototype,protoProps),staticProps&&presenceService_defineProperties(Constructor,staticProps),Constructor}var presenceService_$log=new WeakMap,presenceService_$rootScope=new WeakMap,presenceService_xmppService=new WeakMap,presenceService_contactService=new WeakMap,presenceService_SDK=new WeakMap,PresenceService=function(){function PresenceService($log,$rootScope,xmppService,contactService,SDK){var _this=this;!function(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}(this,PresenceService),presenceService_$log.set(this,$log),presenceService_$rootScope.set(this,$rootScope),presenceService_xmppService.set(this,xmppService),presenceService_contactService.set(this,contactService),presenceService_SDK.set(this,SDK),this.logService="PresenceService | ",this.RAINBOW_PRESENCE_ONLINE="online",this.RAINBOW_PRESENCE_AWAY="away",this.RAINBOW_PRESENCE_DONOTDISTURB="dnd",this.RAINBOW_PRESENCE_OFFLINE="xa",this.RAINBOW_PRESENCE_BUSY="busy",this.RAINBOW_PRESENCE_UNKNOW="unknow",this.RAINBOW_ONCONTACTPRESENCECHANGED="rainbowcontactpresencechanged",this.RAINBOW_ONPRESENCECHANGED="rainbowpresencechanged",this.RAINBOW_ONCONTACTRICHPRESENCECHANGED="rainbowcontactrichpresencechanged",this.RAINBOW_ONRICHPRESENCECHANGED="rainbowrichpresencechanged",this.setPresenceTo=this.setPresenceTo.bind(this),$rootScope.$on("$destroy",$rootScope.$on("ON_ROSTER_PRESENCE_CHANGED_EVENT",(function(event,json){return _this.onPresenceChangedEvent(event,json)}))),$rootScope.$on("$destroy",$rootScope.$on("ON_UPDATE_CONTACT_RICH_STATUS_EVENT",(function(event,contact){return _this.onRichPresenceChangedEvent(event,contact)})))}return presenceService_createClass(PresenceService,null,[{key:"$inject",get:function(){return["$log","$rootScope","xmppService","contactService","SDK"]}}]),presenceService_createClass(PresenceService,[{key:"setPresenceTo",value:function(strPresenceState){var $log=presenceService_$log.get(this),SDK=presenceService_SDK.get(this),contactService=presenceService_contactService.get(this);return strPresenceState!==this.RAINBOW_PRESENCE_DONOTDISTURB&&strPresenceState!==this.RAINBOW_PRESENCE_AWAY&&strPresenceState!==this.RAINBOW_PRESENCE_OFFLINE&&strPresenceState!==this.RAINBOW_PRESENCE_ONLINE?{code:SDK.ERRORBADREQUEST,label:"Parameter 'strPresenceState' should be 'dnd', 'away', 'xa' (invisible) or 'online'"}:($log.sdk(this.logService+"[setPresenceTo] :: Set presence to "+strPresenceState),contactService.changeMyPresence(strPresenceState),{code:SDK.OK,label:"OK"})}},{key:"onPresenceChangedEvent",value:function(__event,json){var xmppService=presenceService_xmppService.get(this),$log=presenceService_$log.get(this),message=json.message||"''";if(json.jid===xmppService.fullJid){$log.sdk(this.logService+"[onPresenceChangedEvent] :: Presence changed for me ("+json.jid+") to  "+json.status+" | "+message);var sdkEvent=new CustomEvent(this.RAINBOW_ONPRESENCECHANGED,{detail:json});document.dispatchEvent(sdkEvent)}else{$log.sdk(this.logService+"[onPresenceChangedEvent] :: Presence changed for contact ("+json.jid+") to  "+json.status+" | "+message);var _sdkEvent=new CustomEvent(this.RAINBOW_ONCONTACTPRESENCECHANGED,{detail:json});document.dispatchEvent(_sdkEvent)}}},{key:"onRichPresenceChangedEvent",value:function(__event,contact){var xmppService=presenceService_xmppService.get(this),$log=presenceService_$log.get(this),message=contact.message||"''",telStatus=contact.telStatus||"''";if(xmppService.fullJid.includes(contact.jid)){$log.sdk(this.logService+"[onPresenceChangedEvent] :: Rich Presence changed for myself to status "+contact.status+", message "+message+" and telStatus "+telStatus);var sdkEvent=new CustomEvent(this.RAINBOW_ONRICHPRESENCECHANGED,{detail:contact});document.dispatchEvent(sdkEvent)}else{$log.sdk(this.logService+"[onPresenceChangedEvent] :: Rich Presence changed for contact ("+contact.jid+") to status "+contact.status+", message "+message+" and telStatus "+telStatus);var _sdkEvent2=new CustomEvent(this.RAINBOW_ONCONTACTRICHPRESENCECHANGED,{detail:contact});document.dispatchEvent(_sdkEvent2)}}}]),PresenceService}();function userProfileService_defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}function userProfileService_createClass(Constructor,protoProps,staticProps){return protoProps&&userProfileService_defineProperties(Constructor.prototype,protoProps),staticProps&&userProfileService_defineProperties(Constructor,staticProps),Constructor}var userProfileService_$log=new WeakMap,userProfileService_$rootScope=new WeakMap,userProfileService_contactService=new WeakMap,userProfileService_xmppService=new WeakMap,userProfileService_profileService=new WeakMap,userProfileService_adminUserService=new WeakMap,userProfileService_SDK=new WeakMap,UserProfileService=function(){function UserProfileService($log,$rootScope,contactService,xmppService,profileService,adminUserService,SDK){!function(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}(this,UserProfileService),userProfileService_$log.set(this,$log),userProfileService_$rootScope.set(this,$rootScope),userProfileService_contactService.set(this,contactService),userProfileService_xmppService.set(this,xmppService),userProfileService_profileService.set(this,profileService),userProfileService_adminUserService.set(this,adminUserService),userProfileService_SDK.set(this,SDK),this.logService="UserProfileService | ",this.getProfile=this.getProfile.bind(this),this.updateFirstName=this.updateFirstName.bind(this),this.updateLastName=this.updateLastName.bind(this),this.updatePhoneNumber=this.updatePhoneNumber.bind(this),this.updatePhotoFromUrl=this.updatePhotoFromUrl.bind(this)}return userProfileService_createClass(UserProfileService,null,[{key:"$inject",get:function(){return["$log","$rootScope","contactService","xmppService","profileService","adminUserService","SDK"]}}]),userProfileService_createClass(UserProfileService,[{key:"getProfile",value:function(){var _this=this,$log=userProfileService_$log.get(this),profileService=userProfileService_profileService.get(this);return new Promise((function(resolve,reject){profileService.getUserData().then((function(userData){$log.sdk(_this.logService+"[getProfile] :: done");var obj={name:userData.lastName,firstName:userData.firstName,phoneNumbers:userData.phoneNumbers};return resolve(obj)})).catch((function(err){return $log.sdk(_this.logService+"[getProfile] :: Error when trying to get Profile - "+err),reject(err)}))}))}},{key:"updateFirstName",value:function(strFirstname){var _this2=this,SDK=userProfileService_SDK.get(this),profileService=userProfileService_profileService.get(this),$log=userProfileService_$log.get(this);return new Promise((function(resolve,reject){if(!strFirstname||"string"!=typeof strFirstname||strFirstname.length<1)return reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'strFirstname' is missing, empty or null"});var param={firstName:strFirstname};profileService.setUserData(param).then((function(result){$log.sdk(_this2.logService+"[updateFirstName] :: First name updated");var obj={lastName:result.data.lastName,firstName:result.data.firstName,phoneNumbers:result.data.phoneNumbers};return resolve(obj)})).catch((function(err){return $log.sdk(_this2.logService+"[updateFirstName] :: Error when updating first name - "+err),reject(err)}))}))}},{key:"updateLastName",value:function(strLastName){var _this3=this,SDK=userProfileService_SDK.get(this),profileService=userProfileService_profileService.get(this),$log=userProfileService_$log.get(this);return new Promise((function(resolve,reject){if(!strLastName||"string"!=typeof strLastName||strLastName.length<1)return reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'strName' is missing, empty or null"});var param={lastName:strLastName};profileService.setUserData(param).then((function(result){$log.sdk(_this3.logService+"[updateName] :: Name updated");var obj={lastName:result.data.lastName,firstName:result.data.firstName,phoneNumbers:result.data.phoneNumbers};return resolve(obj)})).catch((function(err){return $log.sdk(_this3.logService+"[updateName] :: Error when updating name - "+err),reject(err)}))}))}},{key:"updatePhoneNumber",value:function(type,deviceType,strPhoneNumber,country){var _this4=this,SDK=userProfileService_SDK.get(this),profileService=userProfileService_profileService.get(this),$log=userProfileService_$log.get(this);return new Promise((function(resolve,reject){if(!type||"string"!=typeof type||["home","work","other"].indexOf(type)<0)return reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'type' is missing or not in 'home', 'work', 'other'"});if(!deviceType||"string"!=typeof deviceType||["landline","mobile","fax","other"].indexOf(deviceType)<0)return reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'deviceType' is missing or not in 'landline', 'mobile', 'fax', 'other'"});if(!strPhoneNumber||"string"!=typeof strPhoneNumber)return reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'strPhoneNumber' is missing, empty or null"});var param={phoneNumbers:[{type:type,deviceType:deviceType,number:strPhoneNumber}]};country&&"string"==typeof country&&(param.country=country),profileService.getUserData().then((function(userData){if(userData.phoneNumbers.length){if(!userData.phoneNumbers.some((function(number){return number.type===type&&number.deviceType===deviceType&&(number.number=strPhoneNumber,!0)}))){var newNumber={type:type,deviceType:deviceType,number:strPhoneNumber};userData.phoneNumbers.push(newNumber)}return profileService.setUserData(userData)}return profileService.setUserData(param)})).then((function(result){$log.sdk(_this4.logService+"[updatePhoneNumber] :: Phone number updated");var obj={lastName:result.data.lastName,firstName:result.data.firstName,phoneNumbers:result.data.phoneNumbers};return resolve(obj)})).catch((function(err){return $log.sdk(_this4.logService+"[updatePhoneNumber] :: Error when updating phone number - "+err),reject(err)}))}))}},{key:"updatePhotoFromUrl",value:function(imgUrl){var _this5=this,SDK=userProfileService_SDK.get(this),$log=userProfileService_$log.get(this),contactService=userProfileService_contactService.get(this);return new Promise((function(resolve,reject){if(!imgUrl||"string"!=typeof imgUrl||imgUrl.length<1)return reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'imgUrl' is missing, empty or null"});contactService.pushAvatarImage(imgUrl).then((function(){return $log.sdk(_this5.logService+"[updatePhotoFromUrl] :: Photo updated"),resolve()})).catch((function(err){return $log.sdk(_this5.logService+"[updatePhotoFromUrl] :: Error when updating Photo: "+err),reject(err)}))}))}}]),UserProfileService}();function contactsService_defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}function contactsService_createClass(Constructor,protoProps,staticProps){return protoProps&&contactsService_defineProperties(Constructor.prototype,protoProps),staticProps&&contactsService_defineProperties(Constructor,staticProps),Constructor}var contactsService_$log=new WeakMap,contactsService_$rootScope=new WeakMap,contactsService_contactService=new WeakMap,_directoryService=new WeakMap,contactsService_invitationService=new WeakMap,contactsService_SDK=new WeakMap,ContactsService=function(){function ContactsService($log,$rootScope,contactService,directoryService,invitationService,SDK){var _this=this;!function(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}(this,ContactsService),this.logService="ContactService | ",contactsService_$log.set(this,$log),contactsService_$rootScope.set(this,$rootScope),contactsService_contactService.set(this,contactService),_directoryService.set(this,directoryService),contactsService_invitationService.set(this,invitationService),contactsService_SDK.set(this,SDK),this.RAINBOW_ONCONTACTINFORMATIONCHANGED="rainbowcontactinformationchanged",this.RAINBOW_ONINFORMATIONCHANGED="rainbowinformationchanged",this.RAINBOW_ONCONTACTINVITATIONNUMBERCHANGED="rainbowsubscriptionnumberchanged",this.RAINBOW_ONCONTACTINVITATIONRECEIVED="rainbowinvitationreceived",this.getContactByJID=this.getContactByJID.bind(this),this.getContactById=this.getContactById.bind(this),this.getNetworkContacts=this.getNetworkContacts.bind(this),this.getAll=this.getAll.bind(this),this.getConnectedUser=this.getConnectedUser.bind(this),this.getConnectedUserPhone=this.getConnectedUserPhone.bind(this),this.searchByName=this.searchByName.bind(this),this.searchByLogin=this.searchByLogin.bind(this),this.searchByJid=this.searchByJid.bind(this),this.searchById=this.searchById.bind(this),this.acceptInvitation=this.acceptInvitation.bind(this),this.declineInvitation=this.declineInvitation.bind(this),this.addToNetwork=this.addToNetwork.bind(this),this.sendInvitationByEmail=this.sendInvitationByEmail.bind(this),this.removeFromNetwork=this.removeFromNetwork.bind(this),this.getInvitationById=this.getInvitationById.bind(this),this.getInvitationsReceived=this.getInvitationsReceived.bind(this),this.cancelInvitation=this.cancelInvitation.bind(this),this.getInvitationsSent=this.getInvitationsSent.bind(this),$rootScope.$on("$destroy",$rootScope.$on("ON_CONTACT_UPDATED_EVENT",(function(event,contact){return _this.onContactInformationUpdated(event,contact)}))),$rootScope.$on("$destroy",$rootScope.$on("ON_USER_CONTACT_UPDATED_EVENT",(function(event,contact){return _this.onInformationUpdated(event,contact)}))),$rootScope.$on("$destroy",$rootScope.$on("ON_INVITATIONS_NUMBER_UPDATED",(function(){return _this.onInvitationNumberChanged()}))),$rootScope.$on("$destroy",$rootScope.$on("ON_INVITATION_CHANGED",(function(event,contact){return _this.onInvitationReceived(event,contact)})))}return contactsService_createClass(ContactsService,null,[{key:"$inject",get:function(){return["$log","$rootScope","contactService","directoryService","invitationService","SDK"]}}]),contactsService_createClass(ContactsService,[{key:"onContactInformationUpdated",value:function(__event,contact){var sdkEvent=new CustomEvent(this.RAINBOW_ONCONTACTINFORMATIONCHANGED,{detail:contact});document.dispatchEvent(sdkEvent)}},{key:"onInformationUpdated",value:function(__event,contact){var sdkEvent=new CustomEvent(this.RAINBOW_ONINFORMATIONCHANGED,{detail:contact});document.dispatchEvent(sdkEvent)}},{key:"onInvitationNumberChanged",value:function(){var sdkEvent=new CustomEvent(this.RAINBOW_ONCONTACTINVITATIONNUMBERCHANGED);document.dispatchEvent(sdkEvent)}},{key:"onInvitationReceived",value:function(__event,invitation){var sdkEvent=new CustomEvent(this.RAINBOW_ONCONTACTINVITATIONRECEIVED,{detail:invitation});document.dispatchEvent(sdkEvent)}},{key:"getContactByJID",value:function(strJID){var contactService=contactsService_contactService.get(this),SDK=contactsService_SDK.get(this);return strJID?contactService.getContactByJid(strJID):{code:SDK.ERRORBADREQUEST,label:"Parameter 'strJID' is missing or empty"}}},{key:"getContactById",value:function(strId){var contactService=contactsService_contactService.get(this),SDK=contactsService_SDK.get(this);return strId?contactService.getContactById(strId):{code:SDK.ERRORBADREQUEST,label:"Parameter 'strId' is missing or empty"}}},{key:"getNetworkContacts",value:function(){var contactService=contactsService_contactService.get(this);return contactService.getContacts().filter((function(contact){return contact.id!==contactService.userContact.id&&!contact.isBot&&contact.roster}))}},{key:"getAll",value:function(){var contactService=contactsService_contactService.get(this);return contactService.getContacts().filter((function(contact){return contact.id!==contactService.userContact.id&&!contact.isBot}))}},{key:"getConnectedUser",value:function(){return contactsService_contactService.get(this).userContact||null}},{key:"getConnectedUserPhone",value:function(){var contactService=contactsService_contactService.get(this);return contactService.userContact?0===contactService.userContact.pbxId.length?null:{phoneNumber:contactService.userContact.phonePbx,pbxId:contactService.userContact.pbxId}:null}},{key:"searchByName",value:function(strName,limit){var SDK=contactsService_SDK.get(this),directoryService=_directoryService.get(this);return new Promise((function(resolve,reject){if(!strName)return reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'strName' is missing or empty"});limit||(limit=20),directoryService.search(strName,!0,Math.min(limit,1e3)).then((function(contacts){return resolve(contacts)})).catch((function(err){return reject(err)}))}))}},{key:"searchByLogin",value:function(strLogin){var SDK=contactsService_SDK.get(this),directoryService=_directoryService.get(this);return new Promise((function(resolve,reject){if(!strLogin)return reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'strLogin' is missing or empty"});directoryService.searchUserByLogin(strLogin).then((function(contact){return resolve(contact)})).catch((function(err){return 404===err.status||400===err.status?resolve(null):reject(err)}))}))}},{key:"searchByJid",value:function(strJid){var SDK=contactsService_SDK.get(this),directoryService=_directoryService.get(this);return new Promise((function(resolve,reject){if(!strJid)return reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'strJid' is missing or empty"});directoryService.searchUserByJid(strJid).then((function(contact){return resolve(contact)})).catch((function(err){return 404===err.status||400===err.status?resolve(null):reject(err)}))}))}},{key:"searchById",value:function(strId){var SDK=contactsService_SDK.get(this),contactService=contactsService_contactService.get(this);return new Promise((function(resolve,reject){if(!strId)return reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'strId' is missing or empty"});contactService.getContactByDBId(strId,!0).then((function(contact){return resolve(contact)})).catch((function(err){return 404===err.status||400===err.status?resolve(null):reject(err)}))}))}},{key:"acceptInvitation",value:function(invitation){var SDK=contactsService_SDK.get(this),invitationService=contactsService_invitationService.get(this);return new Promise((function(resolve,reject){if(!invitation)return reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'invitation' is missing or null"});invitationService.acceptInvitation(invitation).then((function(){return resolve({code:SDK.OK,label:"OK"})})).catch((function(err){return reject(err)}))}))}},{key:"declineInvitation",value:function(invitation){var SDK=contactsService_SDK.get(this),invitationService=contactsService_invitationService.get(this);return new Promise((function(resolve,reject){if(!invitation)return reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'invitation' is missing or null"});invitationService.declineInvitation(invitation).then((function(){return resolve({code:SDK.OK,label:"OK"})})).catch((function(err){return reject(err)}))}))}},{key:"addToNetwork",value:function(contact){var SDK=contactsService_SDK.get(this),invitationService=contactsService_invitationService.get(this);return new Promise((function(resolve,reject){if(!contact)return{code:SDK.ERRORBADREQUEST,label:"Parameter 'contact' is missing or null"};invitationService.joinContactInvitation(contact).then((function(){return resolve(contact)})).catch((function(err){return reject(err)}))}))}},{key:"sendInvitationByEmail",value:function(email,customMessage){var SDK=contactsService_SDK.get(this),invitationService=contactsService_invitationService.get(this);return new Promise((function(resolve,reject){if(!email)return reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'email' is missing or null"});invitationService.sendInvitationByEmail(email,customMessage).then((function(contact){return resolve(contact)})).catch((function(err){return reject(err)}))}))}},{key:"removeFromNetwork",value:function(contact){var SDK=contactsService_SDK.get(this),contactService=contactsService_contactService.get(this);return new Promise((function(resolve,reject){if(!contact)return reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'contact' is missing or null"});contactService.removeContact(contact).then((function(){return resolve({code:SDK.OK,label:"OK"})})).catch((function(err){return reject(err)}))}))}},{key:"getInvitationById",value:function(strInvitationId){var invitationService=contactsService_invitationService.get(this),SDK=contactsService_SDK.get(this);return strInvitationId?invitationService.getInvitation(strInvitationId):{code:SDK.ERRORBADREQUEST,label:"Parameter 'strInvitationId' is missing or null"}}},{key:"getInvitationsReceived",value:function(){return contactsService_invitationService.get(this).getReceivedInvitations()}},{key:"cancelInvitation",value:function(invitation){var invitationService=contactsService_invitationService.get(this),SDK=contactsService_SDK.get(this);return new Promise((function(resolve,reject){if(!invitation)return reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'invitation' is missing or null"});invitationService.cancelOneSendInvitation(invitation).then((function(){return resolve({code:SDK.OK,label:"OK"})})).catch((function(err){return reject(err)}))}))}},{key:"getInvitationsSent",value:function(){return contactsService_invitationService.get(this).getSentInvitations()}}]),ContactsService}();function pbxService_defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}function pbxService_createClass(Constructor,protoProps,staticProps){return protoProps&&pbxService_defineProperties(Constructor.prototype,protoProps),staticProps&&pbxService_defineProperties(Constructor,staticProps),Constructor}var pbxService_$log=new WeakMap,pbxService_$rootScope=new WeakMap,pbxService_contactService=new WeakMap,pbxService_videoService=new WeakMap,pbxService_telephonyService=new WeakMap,pbxService_webrtcGatewayService=new WeakMap,pbxService_voiceMessageService=new WeakMap,_Call=new WeakMap,pbxService_SDK=new WeakMap,PbxService=function(){function PbxService($log,$rootScope,contactService,videoService,telephonyService,webrtcGatewayService,voiceMessageService,Call,SDK){var _this=this;!function(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}(this,PbxService),this.logService="TelphonyService | ",pbxService_$log.set(this,$log),pbxService_$rootScope.set(this,$rootScope),pbxService_contactService.set(this,contactService),pbxService_videoService.set(this,videoService),pbxService_telephonyService.set(this,telephonyService),pbxService_webrtcGatewayService.set(this,webrtcGatewayService),pbxService_voiceMessageService.set(this,voiceMessageService),_Call.set(this,Call),pbxService_SDK.set(this,SDK),this.RAINBOW_ONTELEPHONYCALLSTATECHANGED="rainbowontelephonycallstatechanged",this.RAINBOW_ONVOIPCALLSTATECHANGED="rainbowonvoipcallstatechanged",this.RAINBOW_ONTELEPHONYSTARTED="rainbowontelephonystarted",this.RAINBOW_ONTELEPHONYSTOPPED="rainbowontelephonystopped",this.RAINBOW_ONTELEPHONYFORWARDSTATECHANGED="rainbowontelephonyforwardstatechanged",this.RAINBOW_ONCALLNOMADICEVENT="rainbowoncallnomadicevent",this.RAINBOW_ONVOIPSTARTED="rainbowonvoipstarted",this.RAINBOW_ONVOIPSTOPPED="rainbowonvoipstopped",this.RAINBOW_ONVOICEMESSAGEUPDATED="rainbowonvoicemessageupdated",this.RAINBOW_TELEPHONYDIALING="dialing",this.RAINBOW_TELEPHONYRINGINGOUTGOING="ringingOutgoing",this.RAINBOW_TELEPHONYINCOMING="incomingCall",this.RAINBOW_TELEPHONYACTIVE="active",this.RAINBOW_TELEPHONYRELEASING="releasing",this.RAINBOW_TELEPHONYUNKNOW="Unknown",this.isTelephonyAvailable=this.isTelephonyAvailable.bind(this),this.getAgentVersion=this.getAgentVersion.bind(this),this.getXMPPAgentStatus=this.getXMPPAgentStatus.bind(this),this.getPhoneAPIStatus=this.getPhoneAPIStatus.bind(this),this.callByNumber=this.callByNumber.bind(this),this.callWithMessage=this.callWithMessage.bind(this),this.callWithSubject=this.callWithSubject.bind(this),this.calls=this.calls.bind(this),this.release=this.release.bind(this),this.deflectToVM=this.deflectToVM.bind(this),this.forwardToDevice=this.forwardToDevice.bind(this),this.forwardToVoicemail=this.forwardToVoicemail.bind(this),this.cancelForward=this.cancelForward.bind(this),this.getForwardStatusFromServer=this.getForwardStatusFromServer.bind(this),this.getForwardStatus=this.getForwardStatus.bind(this),this.answer=this.answer.bind(this),this.hold=this.hold.bind(this),this.retrieve=this.retrieve.bind(this),this.transfertCall=this.transfertCall.bind(this),this.conferenceCall=this.conferenceCall.bind(this),this.fetchVoiceMailMessagesNumber=this.fetchVoiceMailMessagesNumber.bind(this),this.getNomadicState=this.getNomadicState.bind(this),this.setExternalNomadicNumber=this.setExternalNomadicNumber.bind(this),this.setNomadicOfficePhone=this.setNomadicOfficePhone.bind(this),this.setNomadicWebRtc=this.setNomadicWebRtc.bind(this),this.isDeskPhoneAvailable=this.isDeskPhoneAvailable.bind(this),this.isVoIPAvailable=this.isVoIPAvailable.bind(this),$rootScope.$on("$destroy",$rootScope.$on("ON_TELEPHONY_STATUS_CHANGED_EVENT",(function(event,state){return _this.onTelephonyStateChanged(event,state)}))),$rootScope.$on("$destroy",$rootScope.$on("ON_CALL_NOMADIC_EVENT",(function(event,nomadicObject){return _this.onCallNomadicEvent(event,nomadicObject)}))),$rootScope.$on("$destroy",$rootScope.$on("ON_CALL_UPDATED_EVENT",(function(event,call){return _this.onTelephonyCallChanged(event,call)}))),$rootScope.$on("$destroy",$rootScope.$on("ON_CALL_FORWARDED_EVENT",(function(event,forwardStatus){return _this.onCallForwardChanged(event,forwardStatus)}))),$rootScope.$on("$destroy",$rootScope.$on("ON_WEBRTCGATEWAY_STATE_CHG",(function(event,state){return _this.onVoIPStateChanged(event,state)}))),$rootScope.$on("$destroy",$rootScope.$on("ON_VOICE_MESSAGE_UPDATE_EVENT",(function(event,counters){return _this.onVoiceMessageUpdated(event,counters)})))}return pbxService_createClass(PbxService,null,[{key:"$inject",get:function(){return["$log","$rootScope","contactService","videoService","telephonyService","webrtcGatewayService","voiceMessageService","Call","SDK"]}}]),pbxService_createClass(PbxService,[{key:"onTelephonyStateChanged",value:function(__event,state){if(pbxService_$log.get(this).sdk(this.logService+"[onTelephonyStateChanged] :: PBX state changed to "+state),"started"===state){var sdkEvent=new CustomEvent(this.RAINBOW_ONTELEPHONYSTARTED,{detail:null});document.dispatchEvent(sdkEvent)}else{var _sdkEvent=new CustomEvent(this.RAINBOW_ONTELEPHONYSTOPPED,{detail:null});document.dispatchEvent(_sdkEvent)}}},{key:"onCallNomadicEvent",value:function(__event,nomadicObject){pbxService_$log.get(this).sdk(this.logService+"[onCallNomadicEvent] :: Nomadic event received");var sdkEvent=new CustomEvent(this.RAINBOW_ONCALLNOMADICEVENT,{detail:nomadicObject});document.dispatchEvent(sdkEvent)}},{key:"onTelephonyCallChanged",value:function(__event,call){var webrtcGatewayService=pbxService_webrtcGatewayService.get(this),$log=pbxService_$log.get(this);if("phone"!==call.type.value||webrtcGatewayService.isMediaPillarCallSituation(call)){if("phone"!==call.type.value&&webrtcGatewayService.isMediaPillarCallSituation(call)){$log.sdk(this.logService+"[onTelephonyCallChanged] :: Telephony state changed to "+call);var _sdkEvent2=new CustomEvent(this.RAINBOW_ONVOIPCALLSTATECHANGED,{detail:call});document.dispatchEvent(_sdkEvent2)}}else{$log.sdk(this.logService+"[onTelephonyCallChanged] :: Telephony state changed to "+call);var sdkEvent=new CustomEvent(this.RAINBOW_ONTELEPHONYCALLSTATECHANGED,{detail:call});document.dispatchEvent(sdkEvent)}}},{key:"onCallForwardChanged",value:function(__event,forwardStatus){pbxService_$log.get(this).sdk(this.logService+"[onCallForwardChanged] :: Forward state changed to "+forwardStatus);var sdkEvent=new CustomEvent(this.RAINBOW_ONTELEPHONYFORWARDSTATECHANGED,{detail:forwardStatus});document.dispatchEvent(sdkEvent)}},{key:"onVoIPStateChanged",value:function(__event,state){if(pbxService_$log.get(this).sdk(this.logService+"[onVoIPStateChanged] :: VoIP state changed to "+state?"true":"false"),state){var sdkEvent=new CustomEvent(this.RAINBOW_ONVOIPSTARTED);document.dispatchEvent(sdkEvent)}else{var _sdkEvent3=new CustomEvent(this.RAINBOW_ONVOIPSTOPPED);document.dispatchEvent(_sdkEvent3)}}},{key:"onVoiceMessageUpdated",value:function(__event,counters){pbxService_$log.get(this).sdk(this.logService+"[onVoiceMessageUpdated] :: New Voice Message event received");var sdkEvent=new CustomEvent(this.RAINBOW_ONVOICEMESSAGEUPDATED,{detail:counters});document.dispatchEvent(sdkEvent)}},{key:"isTelephonyAvailable",value:function(){return pbxService_telephonyService.get(this).started}},{key:"getAgentVersion",value:function(){return pbxService_telephonyService.get(this).agentStatus.agentVersion||"unknown"}},{key:"getXMPPAgentStatus",value:function(){return pbxService_telephonyService.get(this).agentStatus.xmppAgent||"unknown"}},{key:"getPhoneAPIStatus",value:function(){return pbxService_telephonyService.get(this).agentStatus.phoneApi||"unknown"}},{key:"callByNumber",value:function(strPhoneNumber){var SDK=pbxService_SDK.get(this),telephonyService=pbxService_telephonyService.get(this);return new Promise((function(resolve,reject){if(!strPhoneNumber)return reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'strPhoneNumber' is missing or empty"});telephonyService.makeCallByPhoneNumber(strPhoneNumber).then((function(){return resolve({code:SDK.OK,label:"OK"})})).catch((function(err){return reject({code:SDK.ERROR,label:err})}))}))}},{key:"callWithMessage",value:function(contact,phoneNumber,callSubject){var SDK=pbxService_SDK.get(this),telephonyService=pbxService_telephonyService.get(this);return new Promise((function(resolve,reject){return contact?phoneNumber?callSubject?void telephonyService.makeCall(contact,phoneNumber,callSubject).then((function(){return resolve({code:SDK.OK,label:"OK"}).catch((function(err){return reject({code:SDK.ERROR,label:err})}))})):reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'callSubject' is missing or empty"}):reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'phoneNumber' is missing or empty"}):reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'contact' is missing or empty"})}))}},{key:"callWithSubject",value:function(contact,phoneNumber,callSubject){var SDK=pbxService_SDK.get(this),telephonyService=pbxService_telephonyService.get(this);return new Promise((function(resolve,reject){return contact?phoneNumber?callSubject?void telephonyService.makeCall(contact,phoneNumber,callSubject).then((function(){return resolve({code:SDK.OK,label:"OK"})})).catch((function(err){return reject({code:SDK.ERROR,label:err})})):reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'callSubject' is missing or empty"}):reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'phoneNumber' is missing or empty"}):reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'contact' is missing or empty"})}))}},{key:"calls",value:function(){return pbxService_telephonyService.get(this).calls}},{key:"release",value:function(call){var SDK=pbxService_SDK.get(this),telephonyService=pbxService_telephonyService.get(this);return new Promise((function(resolve,reject){if(!call)return reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'call' is missing or null"});telephonyService.releaseCall(call).then((function(){return resolve({code:SDK.OK,label:"OK"})})).catch((function(err){return reject({code:SDK.ERROR,label:err})}))}))}},{key:"deflectToVM",value:function(call){var SDK=pbxService_SDK.get(this),telephonyService=pbxService_telephonyService.get(this);return new Promise((function(resolve,reject){if(!call)return reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'call' is missing or null"});telephonyService.deflectCallToVM(call).then((function(){return resolve({code:SDK.OK,label:"OK"})})).catch((function(err){return reject({code:SDK.ERROR,label:err})}))}))}},{key:"forwardToDevice",value:function(strPhoneNumber){var SDK=pbxService_SDK.get(this),telephonyService=pbxService_telephonyService.get(this);return new Promise((function(resolve,reject){if(!strPhoneNumber||"string"!=typeof strPhoneNumber||0===strPhoneNumber.length)return reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'strPhoneNumber' is missing or empty"});telephonyService.forwardToDevice(strPhoneNumber).then((function(){return resolve({code:SDK.OK,label:"OK"})})).catch((function(err){return reject({code:SDK.ERROR,label:err})}))}))}},{key:"forwardToVoicemail",value:function(){var telephonyService=pbxService_telephonyService.get(this),SDK=pbxService_SDK.get(this);return new Promise((function(resolve,reject){telephonyService.forwardToVoicemail().then((function(){return resolve({code:SDK.OK,label:"OK"})})).catch((function(err){return reject({code:SDK.ERROR,label:err})}))}))}},{key:"cancelForward",value:function(){var telephonyService=pbxService_telephonyService.get(this),SDK=pbxService_SDK.get(this);return new Promise((function(resolve,reject){telephonyService.cancelForward().then((function(){return resolve({code:SDK.OK,label:"OK"})})).catch((function(err){return reject({code:SDK.ERROR,label:err})}))}))}},{key:"getForwardStatusFromServer",value:function(){var telephonyService=pbxService_telephonyService.get(this),SDK=pbxService_SDK.get(this);return new Promise((function(resolve,reject){telephonyService.getForwardStatus().then((function(){return resolve({code:SDK.OK,label:"OK"})})).catch((function(err){return reject({code:SDK.ERROR,label:err})}))}))}},{key:"getForwardStatus",value:function(){return pbxService_telephonyService.get(this).getForwardObject()}},{key:"answer",value:function(call){var SDK=pbxService_SDK.get(this),telephonyService=pbxService_telephonyService.get(this),videoService=pbxService_videoService.get(this);return new Promise((function(resolve,reject){return call?call.mediaPillarCall?(videoService.answerCall(call,"audio"),resolve()):void telephonyService.answerCall(call).then((function(){return resolve({code:SDK.OK,label:"OK"})})).catch((function(err){return reject(err)})):reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'call' is missing or null"})}))}},{key:"hold",value:function(call){var SDK=pbxService_SDK.get(this),telephonyService=pbxService_telephonyService.get(this);return new Promise((function(resolve,reject){if(!call)return reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'call' is missing or null"});telephonyService.holdCall(call).then((function(){return resolve({code:SDK.OK,label:"OK"})})).catch((function(err){return reject({code:SDK.ERROR,label:err})}))}))}},{key:"retrieve",value:function(call){var SDK=pbxService_SDK.get(this),telephonyService=pbxService_telephonyService.get(this);return new Promise((function(resolve,reject){if(!call)return reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'call' is missing or null"});telephonyService.retrieveCall(call).then((function(){return resolve({code:SDK.OK,label:"OK"})})).catch((function(err){return reject({code:SDK.ERROR,label:err})}))}))}},{key:"transfertCall",value:function(activeCall,heldCall){var SDK=pbxService_SDK.get(this),telephonyService=pbxService_telephonyService.get(this);return new Promise((function(resolve,reject){return activeCall?heldCall?void telephonyService.transfertCall(activeCall,heldCall).then((function(){return resolve({code:SDK.OK,label:"OK"})})).catch((function(err){return reject({code:SDK.ERROR,label:err})})):reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'heldCall' is missing or null"}):reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'activeCall' is missing or null"})}))}},{key:"conferenceCall",value:function(activeCall,heldCall){var SDK=pbxService_SDK.get(this),telephonyService=pbxService_telephonyService.get(this);return new Promise((function(resolve,reject){return activeCall?heldCall?void telephonyService.conferenceCall(activeCall,heldCall).then((function(){return resolve({code:SDK.OK,label:"OK"})})).catch((function(err){return reject({code:SDK.ERROR,label:err})})):reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'heldCall' is missing or null"}):reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'activeCall' is missing or null"})}))}},{key:"fetchVoiceMailMessagesNumber",value:function(){var voiceMessageService=pbxService_voiceMessageService.get(this);return new Promise((function(resolve,reject){voiceMessageService.getVoiceMessagesCounters().then((function(){return resolve()})).catch((function(err){return reject(err)}))}))}},{key:"getNomadicState",value:function(){var telephonyService=pbxService_telephonyService.get(this);return new Promise((function(resolve,reject){telephonyService.getNomadicStatus().then((function(){return resolve()})).catch((function(err){return reject(err)}))}))}},{key:"setExternalNomadicNumber",value:function(phoneNumber){var SDK=pbxService_SDK.get(this),telephonyService=pbxService_telephonyService.get(this);return new Promise((function(resolve,reject){return phoneNumber?"string"!=typeof phoneNumber?reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'phoneNumber' is not a string"}):void telephonyService.nomadicLogin(phoneNumber).then((function(){return resolve()})).catch((function(err){return reject(err)})):reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'phoneNumber' is missing or null"})}))}},{key:"setNomadicOfficePhone",value:function(){var telephonyService=pbxService_telephonyService.get(this);return new Promise((function(resolve,reject){telephonyService.nomadicLoginOnOfficePhone().then((function(){return resolve()})).catch((function(){return reject()}))}))}},{key:"setNomadicWebRtc",value:function(){var webrtcGatewayService=pbxService_webrtcGatewayService.get(this),telephonyService=pbxService_telephonyService.get(this);return new Promise((function(resolve,reject){var mediapillar=webrtcGatewayService.getMyMediaPillarRemoteExtension();telephonyService.nomadicLogin(mediapillar).then((function(){return resolve()})).catch((function(){return reject()}))}))}},{key:"isDeskPhoneAvailable",value:function(){return!pbxService_contactService.get(this).userContact.isVirtualTerm}},{key:"isVoIPAvailable",value:function(){return pbxService_webrtcGatewayService.get(this).isMediaPillarAvailable()}}]),PbxService}();function conversationsService_defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}function conversationsService_createClass(Constructor,protoProps,staticProps){return protoProps&&conversationsService_defineProperties(Constructor.prototype,protoProps),staticProps&&conversationsService_defineProperties(Constructor,staticProps),Constructor}var conversationsService_$log=new WeakMap,conversationsService_$rootScope=new WeakMap,_Conversation=new WeakMap,conversationsService_conversationService=new WeakMap,conversationsService_SDK=new WeakMap,ConversationsService=function(){function ConversationsService($log,$rootScope,Conversation,conversationService,SDK){var _this=this;!function(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}(this,ConversationsService),this.logService="ConversationsService | ",conversationsService_$log.set(this,$log),conversationsService_$rootScope.set(this,$log),_Conversation.set(this,Conversation),conversationsService_conversationService.set(this,conversationService),conversationsService_SDK.set(this,SDK),this.RAINBOW_ONCONVERSATIONREMOVED="rainbowconversationremoved",this.RAINBOW_ONCONVERSATIONCHANGED="rainbowconversationchanged",this.RAINBOW_ONCONVERSATIONSCHANGED="rainbowconversationschanged",this.RAINBOW_ONCONVERSATIONSMISSEDCOUNTERCHANGED="rainbowconversationsmissedcounterchanged",this.getAllConversations=this.getAllConversations.bind(this),this.getCallById=this.getCallById.bind(this),this.getConversationById=this.getConversationById.bind(this),this.getConversationByBubbleId=this.getConversationByBubbleId.bind(this),this.openConversationForContact=this.openConversationForContact.bind(this),this.openConversationForBubble=this.openConversationForBubble.bind(this),this.closeConversation=this.closeConversation.bind(this),$rootScope.$on("$destroy",$rootScope.$on("ON_CONVERSATIONS_UPDATED_EVENT",(function(event,conversation){return _this.onConversationsChanged(event,conversation)}))),$rootScope.$on("$destroy",$rootScope.$on("ON_CONVERSATION_REMOVE_EVENT",(function(event,conversation){return _this.onConversationsRemoved(event,conversation)}))),$rootScope.$on("$destroy",$rootScope.$on("ON_CONVERSATION_UPDATED_EVENT",(function(event,conversation){return _this.onConversationChanged(event,conversation)}))),$rootScope.$on("$destroy",$rootScope.$on("ON_MISSED_COUNTER_CHANGED_EVENT",(function(event,json){return _this.onConversationsCounterChanged(event,json)})))}return conversationsService_createClass(ConversationsService,null,[{key:"$inject",get:function(){return["$log","$rootScope","Conversation","conversationService","SDK"]}}]),conversationsService_createClass(ConversationsService,[{key:"onConversationsChanged",value:function(event,conversation){if(conversation){var sdkEvent=new CustomEvent(this.RAINBOW_ONCONVERSATIONSCHANGED,{detail:conversation});document.dispatchEvent(sdkEvent)}}},{key:"onConversationsRemoved",value:function(event,conversation){var sdkEvent=new CustomEvent(this.RAINBOW_ONCONVERSATIONREMOVED,{detail:conversation});document.dispatchEvent(sdkEvent)}},{key:"onConversationChanged",value:function(event,conversation){var sdkEvent=new CustomEvent(this.RAINBOW_ONCONVERSATIONCHANGED,{detail:conversation});document.dispatchEvent(sdkEvent)}},{key:"onConversationsCounterChanged",value:function(event,json){var sdkEvent=new CustomEvent(this.RAINBOW_ONCONVERSATIONSMISSEDCOUNTERCHANGED,{detail:json});document.dispatchEvent(sdkEvent)}},{key:"getAllConversations",value:function(){var allConversations=conversationsService_conversationService.get(this).getConversations(),oneToOneConversationsOnly=[];return allConversations.forEach((function(conversation){oneToOneConversationsOnly.push(conversation)})),oneToOneConversationsOnly}},{key:"getCallById",value:function(strCallId){var SDK=conversationsService_SDK.get(this),conversationService=conversationsService_conversationService.get(this);if(!strCallId)return{code:SDK.ERRORBADREQUEST,label:"Parameter 'strCallId' is missing or empty"};var allConversations=conversationService.getConversations(),call=null;return allConversations.forEach((function(conversation){conversation.videoCall&&conversation.videoCall.id===strCallId?call=conversation.videoCall:conversation.audioCall&&conversation.audioCall.id===strCallId&&(call=conversation.audioCall)})),call}},{key:"getConversationById",value:function(strId){var SDK=conversationsService_SDK.get(this),conversationService=conversationsService_conversationService.get(this);return strId?conversationService.getConversationById(strId):{code:SDK.ERRORBADREQUEST,label:"Parameter 'callId' is missing or empty"}}},{key:"getConversationByBubbleId",value:function(strBubbleId){var SDK=conversationsService_SDK.get(this),conversationService=conversationsService_conversationService.get(this);return strBubbleId?conversationService.getConversationByRoomDbId(strBubbleId):{code:SDK.ERRORBADREQUEST,label:"Parameter 'strBubbleId' is missing or empty"}}},{key:"openConversationForContact",value:function(contact){var _this2=this,SDK=conversationsService_SDK.get(this),$log=conversationsService_$log.get(this),conversationService=conversationsService_conversationService.get(this);return new Promise((function(resolve,reject){if(!contact)return reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'contact' is missing or null"});$log.sdk(_this2.logService+"[openConversationForContact] :: Trying to open a conversation for a contact"),conversationService.getOrCreateOneToOneConversation(contact.jid).then((function(conversation){return $log.sdk(_this2.logService+"[openConversationForContact] :: Conversation retrieved or created "+conversation.id),resolve(conversation)})).catch((function(err){return $log.sdk(_this2.logService+"[openConversationForContact] :: Error"),reject(err)}))}))}},{key:"openConversationForBubble",value:function(bubble){var _this3=this,SDK=conversationsService_SDK.get(this),$log=conversationsService_$log.get(this),conversationService=conversationsService_conversationService.get(this);return new Promise((function(resolve,reject){if(!bubble)return reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'bubble' is missing or null"});$log.sdk(_this3.logService+"[openConversationForBubble] :: Try to create or get a conversation for a bubble "),conversationService.getRoomConversation(bubble.jid).then((function(conversation){return $log.sdk(_this3.logService+"[openConversationForBubble] :: Conversation retrieved or created "+conversation.id),resolve(conversation)})).catch((function(err){return $log.sdk(_this3.logService+"[openConversationForBubble] :: Error"),reject(err)}))}))}},{key:"closeConversation",value:function(conversation){var SDK=conversationsService_SDK.get(this),conversationService=conversationsService_conversationService.get(this);return new Promise((function(resolve,reject){if(!conversation)return reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'conversation' is missing or null"});conversationService.closeConversation(conversation).then((function(){return resolve()})).catch((function(err){return reject(err)}))}))}}]),ConversationsService}();function imService_defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}function imService_createClass(Constructor,protoProps,staticProps){return protoProps&&imService_defineProperties(Constructor.prototype,protoProps),staticProps&&imService_defineProperties(Constructor,staticProps),Constructor}var imService_$rootScope=new WeakMap,imService_$log=new WeakMap,imService_roomService=new WeakMap,imService_fileStorageService=new WeakMap,imService_conversationService=new WeakMap,imService_Conversation=new WeakMap,_Message=new WeakMap,imService_SDK=new WeakMap,ImService=function(){function ImService($rootScope,$log,roomService,fileStorageService,conversationService,Conversation,Message,SDK){var _this=this;!function(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}(this,ImService),imService_$rootScope.set(this,$rootScope),imService_$log.set(this,$log),imService_roomService.set(this,roomService),imService_fileStorageService.set(this,fileStorageService),imService_conversationService.set(this,conversationService),imService_Conversation.set(this,Conversation),_Message.set(this,Message),imService_SDK.set(this,SDK),this.logService="IMService | ",this.RAINBOW_ONNEWIMMESSAGERECEIVED="rainbownewimmessagereceived",this.RAINBOW_ONNEWIMRECEIPTRECEIVED="rainbownewimreceiptreceived",this.RAINBOW_ONNEWPARTICIPANTSTATUS="rainbownewparticipantstatus",this.getMessagesFromConversation=this.getMessagesFromConversation.bind(this),this.getMessageFromConversationById=this.getMessageFromConversationById.bind(this),this.getMessageFromBubbleById=this.getMessageFromBubbleById.bind(this),this.sendMessageToConversation=this.sendMessageToConversation.bind(this),this.sendCorrectedChatMessage=this.sendCorrectedChatMessage.bind(this),this.replyToMessage=this.replyToMessage.bind(this),this.deleteMessage=this.deleteMessage.bind(this),this.sendIsTypingStateInConversation=this.sendIsTypingStateInConversation.bind(this),this.sendMessageToBubble=this.sendMessageToBubble.bind(this),this.sendIsTypingStateInBubble=this.sendIsTypingStateInBubble.bind(this),this.removeAllMessagesFromConversation=this.removeAllMessagesFromConversation.bind(this),this.markMessageFromConversationAsRead=this.markMessageFromConversationAsRead.bind(this),$rootScope.$on("$destroy",$rootScope.$on("ON_CONVERSATION_MESSAGE_RECEIVED",(function(event,message,conversation,cc){return _this.onNewImMessageReceived(event,message,conversation,cc)}))),$rootScope.$on("$destroy",$rootScope.$on("ON_CONVERSATION_RECEIPT_RECEIVED",(function(event,message,conversation,evt){return _this.onNewImReceiptReceived(event,message,conversation,evt)}))),$rootScope.$on("$destroy",$rootScope.$on("ON_CONVERSATIONS_STATUS_MESSAGE_EVENT",(function(event,conversation,participant,status){return _this.onNewParticipantStatus(event,conversation,participant,status)})))}return imService_createClass(ImService,null,[{key:"$inject",get:function(){return["$rootScope","$log","roomService","fileStorageService","conversationService","Conversation","Message","SDK"]}}]),imService_createClass(ImService,[{key:"onNewImMessageReceived",value:function(__event,message,conversation,cc){var sdkEvent=new CustomEvent(this.RAINBOW_ONNEWIMMESSAGERECEIVED,{detail:{message:message,conversation:conversation,cc:cc}});document.dispatchEvent(sdkEvent)}},{key:"onNewImReceiptReceived",value:function(__event,message,conversation,evt){var sdkEvent=new CustomEvent(this.RAINBOW_ONNEWIMRECEIPTRECEIVED,{detail:{message:message,conversation:conversation,evt:evt}});document.dispatchEvent(sdkEvent)}},{key:"onNewParticipantStatus",value:function(__event,participant,conversation,status){if(status&&status.value){var sdkEvent=new CustomEvent(this.RAINBOW_ONNEWPARTICIPANTSTATUS,{detail:{participant:participant,conversation:conversation,status:status.value}});document.dispatchEvent(sdkEvent)}}},{key:"getMessagesFromConversation",value:function(conversation,intNbMessage){var conversationService=imService_conversationService.get(this),SDK=imService_SDK.get(this);return new Promise((function(resolve,reject){return conversation?(intNbMessage=intNbMessage?Math.min(intNbMessage,100):30,resolve(conversationService.getHistoryPage(conversation,intNbMessage))):reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'conversation' is missing or null"})}))}},{key:"getMessageFromConversationById",value:function(conversation,strMessageId){var SDK=imService_SDK.get(this),fileStorageService=imService_fileStorageService.get(this);if(!conversation)return{code:SDK.ERRORBADREQUEST,label:"Parameter 'conversation' is missing or null"};if(!strMessageId)return{code:SDK.ERRORBADREQUEST,label:"Parameter 'strMessageId' is missing or empty"};var message=conversation.getMessageById(strMessageId);return message&&message.fileId&&(message.shortFileDescriptor=fileStorageService.getFileDescriptorById(message.fileId)),message}},{key:"getMessageFromBubbleById",value:function(bubble,strMessageId){var SDK=imService_SDK.get(this),conversationService=imService_conversationService.get(this),Conversation=imService_Conversation.get(this),fileStorageService=imService_fileStorageService.get(this);if(!bubble)return{code:SDK.ERRORBADREQUEST,label:"Parameter 'bubble' is missing or null"};if(!strMessageId)return{code:SDK.ERRORBADREQUEST,label:"Parameter 'strMessageId' is missing or empty"};var conversation=conversationService.getConversationByRoomDbId(bubble.dbId);if(!conversation)return{code:SDK.ERRORBADREQUEST,label:"Parameter 'bubble' don't have a conversation"};if(conversation.type!==Conversation.Type.ROOM)return{code:SDK.ERRORBADREQUEST,label:"Parameter 'conversation' is not a bubble conversation"};var message=conversation.getMessageById(strMessageId);return message&&message.fileId&&(message.shortFileDescriptor=fileStorageService.getFileDescriptorById(message.fileId)),message}},{key:"sendMessageToConversation",value:function(conversation,strMessage,alternativeContentType,alternativeContentMessage){var $log=imService_$log.get(this),SDK=imService_SDK.get(this),conversationService=imService_conversationService.get(this);if($log.sdk(this.logService+"[sendMessageToConversation] :: Trying to send a message"),!conversation)return{code:SDK.ERRORBADREQUEST,label:"Parameter 'conversation' is missing or null"};if(!strMessage)return{code:SDK.ERRORBADREQUEST,label:"Parameter 'strMessage' is missing or empty"};if("string"!=typeof strMessage)return{code:SDK.ERRORBADREQUEST,label:"Parameter 'strMessage' must be a string"};if(strMessage.length>1024)return{code:SDK.ERRORBADREQUEST,label:"Parameter 'strMessage' should be shorter than 1024 characters"};var alternativeContent=null;if(alternativeContentMessage){if(alternativeContentMessage.length>1024)return{code:SDK.ERRORBADREQUEST,label:"Parameter 'alternativeContent.message' should be shorter than 1024 characters"};if(!alternativeContentType||"text"!==alternativeContentType&&"markdown"!==alternativeContentType)return{code:SDK.ERRORBADREQUEST,label:"Parameter 'alternativeContent.type' should be set to either 'text' or 'markdown'"};alternativeContent={type:alternativeContentType,message:alternativeContentMessage}}return conversationService.sendChatMessage(conversation,strMessage,alternativeContent)}},{key:"sendCorrectedChatMessage",value:function(conversation,strMessage,messageId){var $log=imService_$log.get(this),SDK=imService_SDK.get(this),conversationService=imService_conversationService.get(this);return $log.sdk(this.logService+"[sendCorrectedChatMessage] :: Trying to send a corrected message"),conversation?strMessage?strMessage.length>1024?{code:SDK.ERRORBADREQUEST,label:"Parameter 'strMessage' should be shorter than 1024 characters"}:messageId?(conversationService.sendCorrectedChatMessage(conversation,strMessage,messageId),conversation.getMessageById(messageId)):{code:SDK.ERRORBADREQUEST,label:"Parameter 'messageId' is missing or empty"}:{code:SDK.ERRORBADREQUEST,label:"Parameter 'strMessage' is missing or empty"}:{code:SDK.ERRORBADREQUEST,label:"Parameter 'conversation' is missing or null"}}},{key:"replyToMessage",value:function(conversation,strMessage,message){var SDK=imService_SDK.get(this),conversationService=imService_conversationService.get(this);return new Promise((function(resolve,reject){conversation?strMessage?message?(conversationService.sendAnswerChatMessage(conversation,strMessage,message),resolve(message)):reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'message' is missing or null"}):reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'strMessage' is missing or null"}):reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'conversation' is missing or null"})}))}},{key:"deleteMessage",value:function(conversation,messageId){var SDK=imService_SDK.get(this),conversationService=imService_conversationService.get(this);return conversation?messageId?(conversationService.sendCorrectedChatMessage(conversation,"",messageId),conversation.getMessageById(messageId)):{code:SDK.ERRORBADREQUEST,label:"Parameter 'messageId' is missing or empty"}:{code:SDK.ERRORBADREQUEST,label:"Parameter 'conversation' is missing or null"}}},{key:"sendIsTypingStateInConversation",value:function(conversation,status){var SDK=imService_SDK.get(this),conversationService=imService_conversationService.get(this);return new Promise((function(resolve,reject){if(conversation)return"boolean"!=typeof status?reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'status' is missing or null"}):(conversation=conversation.id?conversationService.getConversationById(conversation.id):null)?(conversationService.sendIsTypingState(conversation,status),resolve()):reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'conversation': this conversation doesn't exist"});reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'conversation' is missing or null"})}))}},{key:"sendMessageToBubble",value:function(bubble,strMessage){var SDK=imService_SDK.get(this),conversationService=imService_conversationService.get(this),roomService=imService_roomService.get(this);return new Promise((function(resolve,reject){return bubble?strMessage?strMessage.length>1024?reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'strMessage' should be shorter than 1024 characters"}):void conversationService.getRoomConversation(bubble.jid).then((function(conversation){if(!conversation)return reject({code:SDK.ERRORNOTFOUND,label:"No 'conversation' found"});if(bubble.isActive){var message=conversationService.sendChatMessage(conversation,strMessage);return resolve(message)}roomService.sendInitialRoomPresenceSync(bubble).then((function(){var message=conversationService.sendChatMessage(conversation,strMessage);return resolve(message)})).catch((function(err){return reject(err)}))})):reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'strMessage' is missing or empty"}):reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'bubble' is missing or null"})}))}},{key:"sendIsTypingStateInBubble",value:function(bubble,status){var SDK=imService_SDK.get(this),conversationService=imService_conversationService.get(this);return new Promise((function(resolve,reject){return bubble?"boolean"!=typeof status?reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'status' is missing or null"}):bubble.jid?void conversationService.getRoomConversation(bubble.jid).then((function(conversation){return conversation?(conversationService.sendIsTypingState(conversation,status),resolve()):reject({code:SDK.ERRORNOTFOUND,label:"No 'conversation' found for this bubble"})})):reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'bubble': this bubble is not a valid one"}):reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'bubble' is missing or null"})}))}},{key:"removeAllMessagesFromConversation",value:function(conversation){var conversationService=imService_conversationService.get(this),Conversation=imService_Conversation.get(this),SDK=imService_SDK.get(this);return new Promise((function(resolve,reject){conversation?conversation.type!==Conversation.Type.ONE_TO_ONE?reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'conversation' is not a one-to-one conversation"}):conversationService.removeAllMessages(conversation).then((function(){resolve({code:SDK.OK,label:"OK"})})).catch((function(err){reject(err)})):reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'conversation' is missing or null"})}))}},{key:"markMessageFromConversationAsRead",value:function(conversation,message){var SDK=imService_SDK.get(this),conversationService=imService_conversationService.get(this),Message=_Message.get(this);return message?conversation?message.receiptStatus===Message.ReceiptStatus.READ?{code:SDK.ERRORBADREQUEST,label:"Parameter 'message' is aldready marked as read"}:(conversation.sendAckReadMessage(message),message.receiptStatus===Message.ReceiptStatus.READ&&conversationService.decreaseMissedIMCounterForConversation(conversation),{code:SDK.OK,label:"OK"}):{code:SDK.ERRORBADREQUEST,label:"Parameter 'conversation' is missing or null"}:{code:SDK.ERRORBADREQUEST,label:"Parameter 'message' is missing or empty"}}}]),ImService}();function webRTCService_defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}function webRTCService_createClass(Constructor,protoProps,staticProps){return protoProps&&webRTCService_defineProperties(Constructor.prototype,protoProps),staticProps&&webRTCService_defineProperties(Constructor,staticProps),Constructor}var webRTCService_$log=new WeakMap,webRTCService_$rootScope=new WeakMap,webRTCService_videoService=new WeakMap,webRTCService_platformService=new WeakMap,_settingsService=new WeakMap,_XMPPService=new WeakMap,_extensionSharingService=new WeakMap,webRTCService_Call=new WeakMap,webRTCService_webrtcGatewayService=new WeakMap,webRTCService_recordsService=new WeakMap,webRTCService_conversationService=new WeakMap,webRTCService_SDK=new WeakMap,WebRTCService=function(){function WebRTCService($log,$rootScope,videoService,platformService,settingsService,XMPPService,extensionSharingService,Call,webrtcGatewayService,recordsService,conversationService,SDK){var _this=this;!function(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}(this,WebRTCService),this.logService="WebRTCService | ",webRTCService_$log.set(this,$log),webRTCService_$rootScope.set(this,$rootScope),webRTCService_videoService.set(this,videoService),webRTCService_platformService.set(this,platformService),_settingsService.set(this,settingsService),_XMPPService.set(this,XMPPService),_extensionSharingService.set(this,extensionSharingService),webRTCService_Call.set(this,Call),webRTCService_webrtcGatewayService.set(this,webrtcGatewayService),webRTCService_recordsService.set(this,recordsService),webRTCService_conversationService.set(this,conversationService),webRTCService_SDK.set(this,SDK),this.isChromeExtensionInstalled=!1,this.RAINBOW_ONWEBRTCCALLSTATECHANGED="rainbowonwebrtccallstatechanged",this.RAINBOW_ONVOIPCALLSTATECHANGED="rainbowonvoipcallstatechanged",this.RAINBOW_ONWEBRTCMEDIADEVICECHANGED="rainbowonwebrtcmediadevicechanged",this.RAINBOW_ONWEBRTCERRORHANDLED="rainbowonwebrtcerrorhandled",this.RAINBOW_ONWEBRTCSTREAMADDED="rainbowonwebrtcstreamadded",this.RAINBOW_ONWEBRTCTRACKCHANGED="rainbowonwebrtctrackchanged",this.RAINBOW_ONWEBRTCTMEDIAERROROCCURED="rainbowonwebrtcmediaerroroccured",this.RAINBOW_ONWEBRTCTRECORDSTARTED="rainbowonwebrtcrecordstarted",this.RAINBOW_ONWEBRTCTRECORDSTOPPED="rainbowonwebrtcrecordstopped",this.RAINBOW_ONWEBRTCTRECORDPAUSED="rainbowonwebrtcrecordpaused",this.RAINBOW_ONWEBRTCTRECORDREMOTESTARTED="rainbowonwebrtcrecordremotestarted",this.RAINBOW_ONWEBRTCTRECORDREMOTESTOPPED="rainbowonwebrtcrecordremotestopped",this.RAINBOW_ONWEBRTCTRECORDDONE="rainbowonwebrtcrecorddone",this.RAINBOW_ONWEBRTCTRECORDERROR="rainbowonwebrtcrecorderror",this.canMakeAudioVideoCall=this.canMakeAudioVideoCall.bind(this),this.hasAMicrophone=this.hasAMicrophone.bind(this),this.hasACamera=this.hasACamera.bind(this),this.useMicrophone=this.useMicrophone.bind(this),this.useSpeaker=this.useSpeaker.bind(this),this.useCamera=this.useCamera.bind(this),this.callInAudio=this.callInAudio.bind(this),this.callInVideo=this.callInVideo.bind(this),this.callInSharing=this.callInSharing.bind(this),this.callinAudioWithSharing=this.callinAudioWithSharing.bind(this),this.answerInAudio=this.answerInAudio.bind(this),this.answerInVideo=this.answerInVideo.bind(this),this.getPeerConnectionForCall=this.getPeerConnectionForCall.bind(this),this.showLocalVideo=this.showLocalVideo.bind(this),this.hideLocalVideo=this.hideLocalVideo.bind(this),this.showRemoteVideo=this.showRemoteVideo.bind(this),this.hideRemoteVideo=this.hideRemoteVideo.bind(this),this.addVideoToCall=this.addVideoToCall.bind(this),this.addSharingToCall=this.addSharingToCall.bind(this),this.removeVideoFromCall=this.removeVideoFromCall.bind(this),this.removeSharingFromCall=this.removeSharingFromCall.bind(this),this.release=this.release.bind(this),this.muteAudioCall=this.muteAudioCall.bind(this),this.muteVideoCall=this.muteVideoCall.bind(this),this.unmuteAudioCall=this.unmuteAudioCall.bind(this),this.unmuteVideoCall=this.unmuteVideoCall.bind(this),this.getLocalStreamsFromCall=this.getLocalStreamsFromCall.bind(this),this.getRemoteStreamsFromCall=this.getRemoteStreamsFromCall.bind(this),this.setChromeExtensionIdForSharing=this.setChromeExtensionIdForSharing.bind(this),this.canMakeDesktopSharingCall=this.canMakeDesktopSharingCall.bind(this),this.startRecording=this.startRecording.bind(this),this.stopRecording=this.stopRecording.bind(this),$rootScope.$on("$destroy",$rootScope.$on("ON_CALL_UPDATED_EVENT",(function(event,call){return _this.onWebRTCCallChanged(event,call)}))),$rootScope.$on("$destroy",$rootScope.$on("ON_WEBRTC_CALL_ERROR_EVENT",(function(event,error){return _this.onWebRTCErrorHandled(event,error)}))),$rootScope.$on("$destroy",$rootScope.$on("ON_WEBRTC_REMOTE_STREAM_ADDED",(function(event,streams){return _this.onWebRTCRemoteStreamAdded(event,streams)}))),$rootScope.$on("$destroy",$rootScope.$on("ON_WEBRTC_CALL_ESCALATION_SUCCESS",(function(event,call){return _this.onWebRTCEscalation(event,call)}))),$rootScope.$on("$destroy",$rootScope.$on("ON_WEBRTC_GETUSERMEDIA_ERROR",(function(event,error){return _this.onWebRTCGetUserMediaError(event,error)}))),$rootScope.$on("$destroy",$rootScope.$on("ON_WEBRTC_RECORD_SAVED",(function(event,description,data,source){return _this.onWebRTCRecordingData(event,description,data,source)}))),$rootScope.$on("$destroy",$rootScope.$on("ON_WEBRTC_RECORD_ERROR",(function(){return _this.onWebRTCRecordingError()}))),$rootScope.$on("$destroy",$rootScope.$on("ON_RECORDING_START_MSG_RECEIVED",(function(){return _this.onWebRTCRecordingStartedByRemote()}))),$rootScope.$on("$destroy",$rootScope.$on("ON_RECORDING_STOP_MSG_RECEIVED",(function(){return _this.onWebRTCRecordingStoppedByRemote()})))}return webRTCService_createClass(WebRTCService,null,[{key:"$inject",get:function(){return["$log","$rootScope","videoService","platformService","settingsService","xmppService","extensionSharingService","Call","webrtcGatewayService","recordsService","conversationService","SDK"]}}]),webRTCService_createClass(WebRTCService,[{key:"onWebRTCCallChanged",value:function(__event,call){var webrtcGatewayService=webRTCService_webrtcGatewayService.get(this),Call=webRTCService_Call.get(this);if(call.type.value!==Call.Type.WEBRTC.value||webrtcGatewayService.isMediaPillarCallSituation(call)){if(call.type.value===Call.Type.WEBRTC.value&&webrtcGatewayService.isMediaPillarCallSituation(call)){var _sdkEvent=new CustomEvent(this.RAINBOW_ONVOIPCALLSTATECHANGED,{detail:call});document.dispatchEvent(_sdkEvent)}}else{var sdkEvent=new CustomEvent(this.RAINBOW_ONWEBRTCCALLSTATECHANGED,{detail:call});document.dispatchEvent(sdkEvent)}}},{key:"onWebRTCErrorHandled",value:function(__event,error){var sdkEvent=new CustomEvent(this.RAINBOW_ONWEBRTCERRORHANDLED,{detail:error});document.dispatchEvent(sdkEvent)}},{key:"onWebRTCRemoteStreamAdded",value:function(__event,streams){var sdkEvent=new CustomEvent(this.RAINBOW_ONWEBRTCSTREAMADDED,{detail:streams});document.dispatchEvent(sdkEvent)}},{key:"onWebRTCEscalation",value:function(__event,call){var sdkEvent=new CustomEvent(this.RAINBOW_ONWEBRTCTRACKCHANGED,{detail:call});document.dispatchEvent(sdkEvent)}},{key:"onWebRTCGetUserMediaError",value:function(__event,error){var sdkEvent=new CustomEvent(this.RAINBOW_ONWEBRTCMEDIAERROROCCURED,{detail:error});document.dispatchEvent(sdkEvent)}},{key:"onWebRTCRecordingData",value:function(__event,description,data,source){var sdkEvent=new CustomEvent(this.RAINBOW_ONWEBRTCTRECORDDONE,{detail:[description,data,source]});document.dispatchEvent(sdkEvent)}},{key:"onWebRTCRecordingError",value:function(){var sdkEvent=new CustomEvent(this.RAINBOW_ONWEBRTCTRECORDERROR,{detail:null});document.dispatchEvent(sdkEvent)}},{key:"onWebRTCRecordingStartedByRemote",value:function(){var sdkEvent=new CustomEvent(this.RAINBOW_ONWEBRTCTRECORDREMOTESTARTED,{detail:null});document.dispatchEvent(sdkEvent)}},{key:"onWebRTCRecordingStoppedByRemote",value:function(){var sdkEvent=new CustomEvent(this.RAINBOW_ONWEBRTCTRECORDREMOTESTOPPED,{detail:null});document.dispatchEvent(sdkEvent)}},{key:"canMakeAudioVideoCall",value:function(){return("https:"===location.protocol||"chrome-extension:"===location.protocol)&&DetectRTC.isWebRTCSupported&&DetectRTC.isGetUserMediaSupported}},{key:"hasAMicrophone",value:function(){return DetectRTC.hasMicrophone}},{key:"hasACamera",value:function(){return DetectRTC.hasWebcam}},{key:"useMicrophone",value:function(strMicrophoneId){var SDK=webRTCService_SDK.get(this),settingsService=_settingsService.get(this);return strMicrophoneId?(settingsService.setSetting("microphone",strMicrophoneId),settingsService.setSetting("headsetMicrophone",strMicrophoneId),{code:SDK.OK,label:"OK"}):{code:SDK.ERRORBADREQUEST,label:"Parameter 'strMicrophoneId' is missing or empty"}}},{key:"useSpeaker",value:function(strSpeakerId){var SDK=webRTCService_SDK.get(this),settingsService=_settingsService.get(this),platformService=webRTCService_platformService.get(this);return strSpeakerId?(settingsService.setSetting("speaker",strSpeakerId),settingsService.setSetting("headsetSpeaker",strSpeakerId),settingsService.setSetting("ringingSpeaker",strSpeakerId),platformService.setSpeakerForElement(document.getElementById("largevideo"),strSpeakerId),{code:SDK.OK,label:"OK"}):{code:SDK.ERRORBADREQUEST,label:"Parameter 'strSpeakerId' is missing or empty"}}},{key:"useCamera",value:function(strCameraId){var SDK=webRTCService_SDK.get(this),settingsService=_settingsService.get(this);return strCameraId?(settingsService.setSetting("camera",strCameraId),{code:SDK.OK,label:"OK"}):{code:SDK.ERRORBADREQUEST,label:"Parameter 'strCameraId' is missing or empty"}}},{key:"callInAudio",value:function(contact,subject){var SDK=webRTCService_SDK.get(this),videoService=webRTCService_videoService.get(this);return contact?this.canMakeAudioVideoCall()?(videoService.makeCall(contact,"audio",subject),{code:SDK.OK,label:"OK"}):{code:SDK.ERRORUNSUPPORTED,label:"WebRTC is not supported by your browser"}:{code:SDK.ERRORBADREQUEST,label:"Parameter 'contact' is missing or null"}}},{key:"callInVideo",value:function(contact,subject){var SDK=webRTCService_SDK.get(this),videoService=webRTCService_videoService.get(this);return contact?this.canMakeAudioVideoCall()?(videoService.makeCall(contact,"video",subject),{code:SDK.OK,label:"OK"}):{code:SDK.ERRORUNSUPPORTED,label:"WebRTC is not supported by your browser"}:{code:SDK.ERRORBADREQUEST,label:"Parameter 'contact' is missing or null"}}},{key:"callInSharing",value:function(contact,subject){var _this2=this,SDK=webRTCService_SDK.get(this),videoService=webRTCService_videoService.get(this),userAgent=navigator.userAgent;return new Promise((function(resolve,reject){if(!contact)return reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'contact' is missing or null"});if(!(userAgent.indexOf("Chrome")>-1))return videoService.makeDesktopSharingCall(contact,"sharingOnly",subject),resolve({code:SDK.OK,label:"OK"});var raw=navigator.userAgent.match(/Chrom(e|ium)\/([0-9]+)\./);if(parseInt(raw[2],10)>72)return videoService.makeDesktopSharingCall(contact,"sharingOnly",subject),resolve({code:SDK.OK,label:"OK"});_this2.canMakeDesktopSharingCall().then((function(){return videoService.makeDesktopSharingCall(contact,"sharingOnly",subject),resolve({code:SDK.OK,label:"OK"})})).catch((function(err){return reject(err)}))}))}},{key:"callinAudioWithSharing",value:function(contact,subject){var _this3=this,SDK=webRTCService_SDK.get(this),videoService=webRTCService_videoService.get(this),userAgent=navigator.userAgent;return new Promise((function(resolve,reject){if(!contact)return reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'contact' is missing or null"});if(!(userAgent.indexOf("Chrome")>-1))return videoService.makeDesktopSharingCall(contact,subject),resolve({code:SDK.OK,label:"OK"});var raw=navigator.userAgent.match(/Chrom(e|ium)\/([0-9]+)\./);if(parseInt(raw[2],10)>72)return videoService.makeDesktopSharingCall(contact,subject),resolve({code:SDK.OK,label:"OK"});_this3.canMakeDesktopSharingCall().then((function(){return videoService.makeDesktopSharingCall(contact,subject),resolve({code:SDK.OK,label:"OK"})})).catch((function(err){return reject(err)}))}))}},{key:"answerInAudio",value:function(call){var SDK=webRTCService_SDK.get(this),videoService=webRTCService_videoService.get(this);return call?this.canMakeAudioVideoCall()?(videoService.answerCall(call,"audio"),{code:SDK.OK,label:"OK"}):{code:SDK.ERRORUNSUPPORTED,label:"WebRTC is not supported by your browser"}:{code:SDK.ERRORBADREQUEST,label:"Parameter 'call' is missing or null"}}},{key:"answerInVideo",value:function(call){var SDK=webRTCService_SDK.get(this),videoService=webRTCService_videoService.get(this);return call?this.canMakeAudioVideoCall()?(videoService.answerCall(call,"video"),{code:SDK.OK,label:"OK"}):{code:SDK.ERRORUNSUPPORTED,label:"WebRTC is not supported by your browser"}:{code:SDK.ERRORBADREQUEST,label:"Parameter 'call' is missing or null"}}},{key:"getPeerConnectionForCall",value:function(call){var SDK=webRTCService_SDK.get(this),XMPPService=_XMPPService.get(this);return call?call.id?XMPPService.connection.jingle.sessions[call.id].peerconnection:{code:SDK.ERRORBADREQUEST,label:"Can not get the call ID"}:{code:SDK.ERRORBADREQUEST,label:"Parameter 'call' is missing or null"}}},{key:"showLocalVideo",value:function(){var SDK=webRTCService_SDK.get(this),videoService=webRTCService_videoService.get(this);return this.canMakeAudioVideoCall()?(videoService.attachLocalMediaStreams(!0),{code:SDK.OK,label:"OK"}):{code:SDK.ERRORUNSUPPORTED,label:"WebRTC is not supported by your browser"}}},{key:"hideLocalVideo",value:function(){var SDK=webRTCService_SDK.get(this),videoService=webRTCService_videoService.get(this);return this.canMakeAudioVideoCall()?(videoService.attachLocalMediaStreams(!1),{code:SDK.OK,label:"OK"}):{code:SDK.ERRORUNSUPPORTED,label:"WebRTC is not supported by your browser"}}},{key:"showRemoteVideo",value:function(call){var SDK=webRTCService_SDK.get(this),videoService=webRTCService_videoService.get(this);return call?this.canMakeAudioVideoCall()?(videoService.attachDistantMediaStreams(!0,call),{code:SDK.OK,label:"OK"}):{code:SDK.ERRORUNSUPPORTED,label:"WebRTC is not supported by your browser"}:{code:SDK.ERRORBADREQUEST,label:"Parameter 'call' is missing or null"}}},{key:"hideRemoteVideo",value:function(call){var SDK=webRTCService_SDK.get(this),videoService=webRTCService_videoService.get(this);return call?this.canMakeAudioVideoCall()?(videoService.attachDistantMediaStreams(!1,call),{code:SDK.OK,label:"OK"}):{code:SDK.ERRORUNSUPPORTED,label:"WebRTC is not supported by your browser"}:{code:SDK.ERRORBADREQUEST,label:"Parameter 'call' is missing or null"}}},{key:"addVideoToCall",value:function(call){var SDK=webRTCService_SDK.get(this),videoService=webRTCService_videoService.get(this);return this.canMakeAudioVideoCall()?(videoService.addVideoToCall(call,!1),{code:SDK.OK,label:"OK"}):{code:SDK.ERRORUNSUPPORTED,label:"WebRTC is not supported by your browser"}}},{key:"addSharingToCall",value:function(call){var _this4=this,videoService=webRTCService_videoService.get(this),SDK=webRTCService_SDK.get(this);return new Promise((function(resolve,reject){var userAgent=navigator.userAgent;if(!call)return reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'call' is missing or null"});if(!(userAgent.indexOf("Chrome")>-1))return videoService.addSharingToCall(call),resolve({code:SDK.OK,label:"OK"});var raw=navigator.userAgent.match(/Chrom(e|ium)\/([0-9]+)\./);if(parseInt(raw[2],10)>72)return videoService.addSharingToCall(call),resolve({code:SDK.OK,label:"OK"});_this4.canMakeDesktopSharingCall().then((function(){return videoService.addSharingToCall(call),resolve({code:SDK.OK,label:"OK"})})).catch((function(err){return reject(err)}))}))}},{key:"removeVideoFromCall",value:function(call){var SDK=webRTCService_SDK.get(this),videoService=webRTCService_videoService.get(this);return this.canMakeAudioVideoCall()?(videoService.removeVideoFromCall(call),{code:SDK.OK,label:"OK"}):{code:SDK.ERRORUNSUPPORTED,label:"WebRTC is not supported by your browser"}}},{key:"removeSharingFromCall",value:function(call){var videoService=webRTCService_videoService.get(this),SDK=webRTCService_SDK.get(this);return videoService.removeSharingFromCall(call),{code:SDK.OK,label:"OK"}}},{key:"release",value:function(call){var videoService=webRTCService_videoService.get(this),SDK=webRTCService_SDK.get(this),$log=webRTCService_$log.get(this);return call?(this.canMakeAudioVideoCall()||$log.warn("[webRTCService] release called but WebRTC is not supported by your browser"),videoService.rejectCall(call),{code:SDK.OK,label:"OK"}):{code:SDK.ERRORBADREQUEST,label:"Parameter 'call' is missing or null"}}},{key:"muteAudioCall",value:function(conversation){var videoService=webRTCService_videoService.get(this),SDK=webRTCService_SDK.get(this);return conversation?this.canMakeAudioVideoCall()?(videoService.muteAudio(conversation,!0),{code:SDK.OK,label:"OK"}):{code:SDK.ERRORUNSUPPORTED,label:"WebRTC is not supported by your browser"}:{code:SDK.ERRORBADREQUEST,label:"Parameter 'conversation' is missing or null"}}},{key:"muteVideoCall",value:function(conversation){var videoService=webRTCService_videoService.get(this),SDK=webRTCService_SDK.get(this);return conversation?this.canMakeAudioVideoCall()?(videoService.muteVideo(conversation,!0),{code:SDK.OK,label:"OK"}):{code:SDK.ERRORUNSUPPORTED,label:"WebRTC is not supported by your browser"}:{code:SDK.ERRORBADREQUEST,label:"Parameter 'conversation' is missing or null"}}},{key:"unmuteAudioCall",value:function(conversation){var videoService=webRTCService_videoService.get(this),SDK=webRTCService_SDK.get(this);return conversation?this.canMakeAudioVideoCall()?(videoService.muteAudio(conversation,!1),{code:SDK.OK,label:"OK"}):{code:SDK.ERRORUNSUPPORTED,label:"WebRTC is not supported by your browser"}:{code:SDK.ERRORBADREQUEST,label:"Parameter 'conversation' is missing or null"}}},{key:"unmuteVideoCall",value:function(conversation){var videoService=webRTCService_videoService.get(this),SDK=webRTCService_SDK.get(this);return conversation?this.canMakeAudioVideoCall()?(videoService.muteVideo(conversation,!1),{code:SDK.OK,label:"OK"}):{code:SDK.ERRORUNSUPPORTED,label:"WebRTC is not supported by your browser"}:{code:SDK.ERRORBADREQUEST,label:"Parameter 'conversation' is missing or null"}}},{key:"getLocalStreamsFromCall",value:function(call){var XMPPService=_XMPPService.get(this),SDK=webRTCService_SDK.get(this),Call=webRTCService_Call.get(this);if(!(call&&"id"in call))return{code:SDK.ERRORBADREQUEST,label:"Parameter 'call' is missing or empty"};if(call.type!==Call.Type.WEBRTC)return{code:SDK.ERRORNOTFOUND,label:"This call is not an audio or audio/video call"};var session=XMPPService.connection.jingle.sessions[call.id];return session?session.localStreams:[]}},{key:"getRemoteStreamsFromCall",value:function(call){var SDK=webRTCService_SDK.get(this),Call=webRTCService_Call.get(this),XMPPService=_XMPPService.get(this);if(!(call&&"id"in call))return{code:SDK.ERRORBADREQUEST,label:"Parameter 'call' is missing or empty"};if(call.type!==Call.Type.WEBRTC)return{code:SDK.ERRORNOTFOUND,label:"This call is not an audio or audio/video call"};var session=XMPPService.connection.jingle.sessions[call.id];return session?session.remoteStreams:[]}},{key:"setChromeExtensionIdForSharing",value:function(strExtensionId){var SDK=webRTCService_SDK.get(this),extensionSharingService=_extensionSharingService.get(this);return strExtensionId?(extensionSharingService.setExtensionId(strExtensionId),extensionSharingService.start(),{code:SDK.OK,label:"OK"}):{code:SDK.ERRORBADREQUEST,label:"Parameter 'strExtensionId' is missing or empty"}}},{key:"canMakeDesktopSharingCall",value:function(){var _this5=this,extensionSharingService=_extensionSharingService.get(this),SDK=webRTCService_SDK.get(this);return new Promise((function(resolve,reject){var userAgent=navigator.userAgent;if(userAgent.indexOf("Firefox")>-1)return resolve({code:SDK.OK,label:"OK"});if(userAgent.indexOf("Chrome")>-1){var raw=navigator.userAgent.match(/Chrom(e|ium)\/([0-9]+)\./);if(parseInt(raw[2],10)>72)return videoService.addSharingToCall(call),resolve({code:SDK.OK,label:"OK"})}else extensionSharingService.isExtensionInstalled().then((function(isInstalled){return isInstalled?(_this5.isChromeExtensionInstalled=!0,resolve({code:SDK.OK,label:"OK"})):(_this5.isChromeExtensionInstalled=!1,reject({code:SDK.ERRORUNSUPPORTED,label:"Not Chrome Extension installed for desktop sharing"}))})).catch((function(err){return reject(err)}))}))}},{key:"startRecording",value:function(call,fileName,recordRemote,toUpload,onlyAudio,mimeType){var _this6=this,$log=webRTCService_$log.get(this),SDK=webRTCService_SDK.get(this),recordsService=webRTCService_recordsService.get(this),conversationService=webRTCService_conversationService.get(this);if($log.sdk(this.logService+"[startRecording] :: Enter"),!call)return{code:SDK.ERRORBADREQUEST,label:"Parameter 'call' is missing or null"};if(!fileName)return{code:SDK.ERRORBADREQUEST,label:"Parameter 'fileName' is missing or null"};if(recordRemote=null==recordRemote||recordRemote,toUpload=null==toUpload||toUpload,onlyAudio=null!=onlyAudio&&onlyAudio,mimeType=null==mimeType?"video/webm;codecs=vp9":mimeType,$log.sdk(this.logService+"[startRecording] :: Prepare recording..."),recordsService.createRecord(call.id,recordRemote?"REMOTE":"LOCAL",toUpload,fileName,onlyAudio,mimeType)){recordsService.setOnPauseCallback((function(){$log.sdk(_this6.logService+"[onRTCChange] :: WebRTC recording paused");var sdkEvent=new CustomEvent(_this6.RAINBOW_ONWEBRTCTRECORDPAUSED,{detail:null});document.dispatchEvent(sdkEvent)})),$log.sdk(this.logService+"[startRecording] :: Start recording"),recordsService.startRecording();var conversation=conversationService.getConversationById(call.conversationId);conversation?($log.sdk(this.logService+"[startRecording] :: Notify remote peer",conversation),conversationService.sendRecordingMessage(conversation,"start")):$log.sdk(this.logService+"[startRecording] :: No conversation found - can't notify remote peer"),$log.sdk(this.logService+"[startRecording] :: WebRTC recording started");var _sdkEvent2=new CustomEvent(this.RAINBOW_ONWEBRTCTRECORDSTARTED,{detail:null});return document.dispatchEvent(_sdkEvent2),{code:SDK.OK,label:"OK"}}$log.sdk(this.logService+"[startRecording] :: can't start a webRTC recording");var sdkEvent=new CustomEvent(this.RAINBOW_ONWEBRTCTRECORDERROR,{detail:null});return document.dispatchEvent(sdkEvent),{code:SDK.ERRORBADREQUEST,label:"Can't record the conversation"}}},{key:"stopRecording",value:function(call){var $log=webRTCService_$log.get(this),recordsService=webRTCService_recordsService.get(this),conversationService=webRTCService_conversationService.get(this),SDK=webRTCService_SDK.get(this);$log.sdk(this.logService+"[stopRecording] :: Stop current WebRTC recording"),recordsService.setOnPauseCallback(null),recordsService.stopRecording();var conversation=conversationService.getConversationById(call.conversationId);conversation?($log.sdk(this.logService+"[stopRecording] :: Notify remote peer",conversation),conversationService.sendRecordingMessage(conversation,"stop")):$log.sdk(this.logService+"[stopRecording] :: No conversation found - can't notify remote peer");var sdkEvent=new CustomEvent(this.RAINBOW_ONWEBRTCTRECORDSTOPPED,{detail:null});return document.dispatchEvent(sdkEvent),{code:SDK.OK,label:"OK"}}}]),WebRTCService}();function bubblesService_defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}function bubblesService_createClass(Constructor,protoProps,staticProps){return protoProps&&bubblesService_defineProperties(Constructor.prototype,protoProps),staticProps&&bubblesService_defineProperties(Constructor,staticProps),Constructor}var bubblesService_$log=new WeakMap,bubblesService_roomService=new WeakMap,bubblesService_videoService=new WeakMap,bubblesService_conversationService=new WeakMap,bubblesService_contactService=new WeakMap,bubblesService_conferenceService=new WeakMap,bubblesService_profileService=new WeakMap,bubblesService_webConferenceService=new WeakMap,_PromiseQueue=new WeakMap,bubblesService_SDK=new WeakMap,_Room=new WeakMap,bubblesService_$rootScope=new WeakMap,BubblesService=function(){function BubblesService($log,roomService,videoService,conversationService,contactService,conferenceService,profileService,webConferenceService,PromiseQueue,SDK,Room,$rootScope){var _this=this;!function(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}(this,BubblesService),this.logService="BubblesService | ",bubblesService_$log.set(this,$log),bubblesService_roomService.set(this,roomService),bubblesService_videoService.set(this,videoService),bubblesService_conversationService.set(this,conversationService),bubblesService_contactService.set(this,contactService),bubblesService_conferenceService.set(this,conferenceService),bubblesService_profileService.set(this,profileService),bubblesService_webConferenceService.set(this,webConferenceService),_PromiseQueue.set(this,PromiseQueue),bubblesService_SDK.set(this,SDK),_Room.set(this,Room),bubblesService_$rootScope.set(this,$rootScope),this.confBubble=null,this.confBubbleType=null,this.RAINBOW_ONBUBBLEINVITATIONTOJOINRECEIVED="rainbowbubblerequesttojoin",this.RAINBOW_ONBUBBLEUPDATED="rainbowbubbleupdated",this.RAINBOW_ONWEBCONFERENCEUPDATED="rainbowwebconferenceupdated",this.RAINBOW_ONWEBRTCMEDIAERROROCCURED="rainbowwebrtcmediaerroroccured",this.RAINBOW_ONBUBBLEAVATARUPDATED="rainbowbubbleavatarupdated",this.RAINBOW_ONBUBBLECONFERENCESTARTEDINVITATIONRECEIVED="rainbowbubbleconferencestartinvitation",this.RAINBOW_ONBUBBLECONFERENCETALKERACTIVE="rainbowonbubbleconferencetalkeractive",this.RAINBOW_ONBUBBLESHARINGCONFERENCESTARTEDINVITATIONRECEIVED="rainbowbubblesharingconferencestartinvitation",this.RAINBOW_ONBUBBLEDEACTIVATED="rainbowonbubbledeactivated",this.createBubble=this.createBubble.bind(this),this.deleteBubble=this.deleteBubble.bind(this),this.deleteAllBubbles=this.deleteAllBubbles.bind(this),this.inviteContactToBubble=this.inviteContactToBubble.bind(this),this.removeContactFromBubble=this.removeContactFromBubble.bind(this),this.promoteContactToModerator=this.promoteContactToModerator.bind(this),this.demoteContactFromModerator=this.demoteContactFromModerator.bind(this),this.changeOwner=this.changeOwner.bind(this),this.acceptInvitationToJoinBubble=this.acceptInvitationToJoinBubble.bind(this),this.declineInvitationToJoinBubble=this.declineInvitationToJoinBubble.bind(this),this.leaveBubble=this.leaveBubble.bind(this),this.closeBubble=this.closeBubble.bind(this),this.isBubbleArchived=this.isBubbleArchived.bind(this),this.getAllBubbles=this.getAllBubbles.bind(this),this.getAllOwnedBubbles=this.getAllOwnedBubbles.bind(this),this.getAllPendingBubbles=this.getAllPendingBubbles.bind(this),this.getAllInactiveBubbles=this.getAllInactiveBubbles.bind(this),this.getBubbleById=this.getBubbleById.bind(this),this.updateDescriptionForBubble=this.updateDescriptionForBubble.bind(this),this.updateAvatarForBubble=this.updateAvatarForBubble.bind(this),this.deleteAvatarFromBubble=this.deleteAvatarFromBubble.bind(this),this.updateCustomDataForBubble=this.updateCustomDataForBubble.bind(this),this.deleteCustomDataForBubble=this.deleteCustomDataForBubble.bind(this),this.isWebRtcConferenceAllowed=this.isWebRtcConferenceAllowed.bind(this),this.hasActiveConferenceSession=this.hasActiveConferenceSession.bind(this),this.getWebRtcConferenceBubble=this.getWebRtcConferenceBubble.bind(this),this.startOrJoinWebRtcConference=this.startOrJoinWebRtcConference.bind(this),this.addMediaToConferenceSession=this.addMediaToConferenceSession.bind(this),this.addSharingToConferenceSession=this.addSharingToConferenceSession.bind(this),this.removeMediaFromConferenceSession=this.removeMediaFromConferenceSession.bind(this),this.removeSharingFromConferenceSession=this.removeSharingFromConferenceSession.bind(this),this.addLocalVideoStreamToConference=this.addLocalVideoStreamToConference.bind(this),this.showLocalVideo=this.showLocalVideo.bind(this),this.getConferenceSessionById=this.getConferenceSessionById.bind(this),this.addDistantVideoStreamToConference=this.addDistantVideoStreamToConference.bind(this),this.updateMainVideoSession=this.updateMainVideoSession.bind(this),this.startOrJoinSharingWebRtcConference=this.startOrJoinSharingWebRtcConference.bind(this),this.stopWebRtcConference=this.stopWebRtcConference.bind(this),$rootScope.$on("ON_CONFERENCE_UPDATED_EVENT",(function(event,conferenceSession){return _this.onConferenceUpdated(event,conferenceSession)})),$rootScope.$on("ON_WEBRTC_GETUSERMEDIA_ERROR",(function(event,conferenceSession){return _this.onWebRtcGetUserMediaError(event,conferenceSession)})),$rootScope.$on("ON_CONFERENCE_PARTICIPANT_EVENT",(function(event,conferenceSession){return _this.onConferenceParticipantEvent(event,conferenceSession)})),$rootScope.$on(roomService.ROOM_UPDATE_EVENT,(function(event,room){return _this.onBubbleUpdatedEvent(event,room)})),$rootScope.$on(roomService.ROOM_AVATAR_UPDATE_EVENT,(function(event){return _this.onAvatarUpdatedEvent(event)})),$rootScope.$on("ROOM_INVITATION",(function(event,room){return _this.onRoomInvitationEvent(event,room)})),$rootScope.$on("ON_CONFERENCE_STARTED_INVITATION",(function(event,room){return _this.onConferenceStartedInvitation(event,room)})),$rootScope.$on("ON_CONFERENCE_TALKER_EVENT",(function(event,conferenceSession){return _this.onConferenceTalkerEvent(event,conferenceSession)}))}return bubblesService_createClass(BubblesService,null,[{key:"$inject",get:function(){return["$log","roomService","videoService","conversationService","contactService","conferenceService","profileService","webConferenceService","PromiseQueue","SDK","Room","$rootScope"]}}]),bubblesService_createClass(BubblesService,[{key:"onConferenceUpdated",value:function(__event,conferenceSession){if(conferenceSession){var sdkEvent=new CustomEvent(this.RAINBOW_ONWEBCONFERENCEUPDATED,{detail:conferenceSession});document.dispatchEvent(sdkEvent)}}},{key:"onWebRtcGetUserMediaError",value:function(__event,conferenceSession){var sdkEvent=new CustomEvent(this.RAINBOW_ONWEBRTCMEDIAERROROCCURED,{detail:conferenceSession});document.dispatchEvent(sdkEvent)}},{key:"onConferenceParticipantEvent",value:function(__event,conferenceSession){var sdkEvent=new CustomEvent(this.RAINBOW_ONWEBCONFERENCEUPDATED,{detail:conferenceSession});document.dispatchEvent(sdkEvent)}},{key:"onBubbleUpdatedEvent",value:function(__event,room){if(!1===room.isActive){var sdkEvent=new CustomEvent(this.RAINBOW_ONBUBBLEDEACTIVATED,{detail:room});document.dispatchEvent(sdkEvent)}else{var _sdkEvent=new CustomEvent(this.RAINBOW_ONBUBBLEUPDATED,{detail:room});document.dispatchEvent(_sdkEvent)}}},{key:"onAvatarUpdatedEvent",value:function(){var sdkEvent=new CustomEvent(this.RAINBOW_ONBUBBLEAVATARUPDATED,{detail:null});document.dispatchEvent(sdkEvent)}},{key:"onRoomInvitationEvent",value:function(__event,room){var sdkEvent=new CustomEvent(this.RAINBOW_ONBUBBLEINVITATIONTOJOINRECEIVED,{detail:room});document.dispatchEvent(sdkEvent)}},{key:"onConferenceStartedInvitation",value:function(__event,room){var _this2=this,confEndpoints=room.confEndpoints;confEndpoints&&confEndpoints.forEach((function(confEndpoint){if("webrtc"===confEndpoint.mediaType){var sdkEvent=new CustomEvent(_this2.RAINBOW_ONBUBBLECONFERENCESTARTEDINVITATIONRECEIVED,{detail:room});document.dispatchEvent(sdkEvent)}if("webrtcSharingOnly"===confEndpoint.mediaType){var _sdkEvent2=new CustomEvent(_this2.RAINBOW_ONBUBBLESHARINGCONFERENCESTARTEDINVITATIONRECEIVED,{detail:room});document.dispatchEvent(_sdkEvent2)}}))}},{key:"onConferenceTalkerEvent",value:function(__event,conferenceSession){if(conferenceSession){var sdkEvent=new CustomEvent(this.RAINBOW_ONBUBBLECONFERENCETALKERACTIVE,{detail:conferenceSession});document.dispatchEvent(sdkEvent)}}},{key:"createBubble",value:function(strName,strDescription,boolWithHistory,disableNotifications,urlAvatar,autoAcceptInvitation){var _this3=this,roomService=bubblesService_roomService.get(this),conversationService=bubblesService_conversationService.get(this),$log=bubblesService_$log.get(this),SDK=bubblesService_SDK.get(this),bubble=null,description=strDescription||"",history=Boolean(boolWithHistory),notifications=Boolean(disableNotifications),autoAccept=Boolean(autoAcceptInvitation);return new Promise((function(resolve,reject){strName?roomService.createRoom(strName,description,history,urlAvatar,notifications,!1,!1,autoAccept).then((function(newBubble){return bubble=newBubble,conversationService.getRoomConversation(bubble.jid)})).then((function(conversation){return $log.sdk(_this3.logService+"[createBubble] :: New bubble "+strName+" created successfully"),roomService.sendInitialRoomPresence(conversation.room),resolve(bubble)})).catch((function(err){return $log.sdk(_this3.logService+"[createBubble] :: Error when creating a bubble"),reject(err)})):reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'strName' is missing or empty"})}))}},{key:"deleteBubble",value:function(bubble){var _this4=this,roomService=bubblesService_roomService.get(this),SDK=bubblesService_SDK.get(this);return bubble=bubble&&bubble.dbId?roomService.getRoomById(bubble.dbId):null,new Promise((function(resolve,reject){if(!bubble)return reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'bubble' is missing or null"});_this4.closeBubble(bubble).then((function(closedBubble){return roomService.ownerDeleteRoom(closedBubble)})).then((function(deletedRoom){return resolve(deletedRoom)})).catch((function(err){return reject(err)}))}))}},{key:"deleteAllBubbles",value:function(){var _this5=this,PromiseQueue=_PromiseQueue.get(this),roomService=bubblesService_roomService.get(this),deleteallBubblePromiseQueue=PromiseQueue.create();return roomService.getMyRooms().forEach((function(bubble){deleteallBubblePromiseQueue.add((function(){return _this5.deleteBubble(bubble)}))})),deleteallBubblePromiseQueue.execute()}},{key:"inviteContactToBubble",value:function(contact,bubble,boolAsModerator,boolWithInvitation){var _this6=this,roomService=bubblesService_roomService.get(this),$log=bubblesService_$log.get(this),SDK=bubblesService_SDK.get(this),Room=_Room.get(this);return bubble=bubble&&bubble.dbId?roomService.getRoomById(bubble.dbId):null,new Promise((function(resolve,reject){if(!contact)return reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'contact' is missing or null"});if(!bubble)return reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'bubble' is missing or null"});var privilege=Room.Privilege.USER;boolAsModerator&&(privilege=Room.Privilege.MODERATOR);var withoutInvitation=!1;"boolean"==typeof boolWithInvitation&&(withoutInvitation=!boolWithInvitation);var isActive=!1,isAway=!1,isInvited=!1,isRejected=!1,isDeleted=!1;if(bubble.users.forEach((function(user){if(user.contact.id===contact.id)switch(user.status){case"invited":isInvited=!0;break;case"accepted":isActive=!0;break;case"unsubscribed":isAway=!0;break;case"rejected":isRejected=!0;break;case"deleted":isDeleted=!0}})),isActive||isInvited)return reject({code:SDK.ERRORBADREQUEST,label:"Contact has been already invited or is already a member of the room"});isAway||isRejected?roomService.ownerReinviteRejectedUser(bubble,contact,null,privilege,withoutInvitation).then((function(updatedBubble){return updatedBubble.updateAvatarInfo(),resolve(updatedBubble)})).catch((function(err){return $log.sdk(_this6.logService+"[invite     ] :: Error when inviting a contact"),reject(err)})):isDeleted?roomService.ownerReinviteDeletedUser(bubble,contact,null,privilege).then((function(updatedBubble){return updatedBubble.updateAvatarInfo(),resolve(updatedBubble)})).catch((function(err){return $log.sdk(_this6.logService+"[invite     ] :: Error when inviting a contact"),reject(err)})):roomService.addRoomUser(bubble,contact,null,privilege,withoutInvitation).then((function(updatedBubble){return updatedBubble.updateAvatarInfo(),resolve(updatedBubble)})).catch((function(err){return $log.sdk(_this6.logService+"[invite     ] :: Error when inviting a contact"),reject(err)}))}))}},{key:"removeContactFromBubble",value:function(contact,bubble){var _this7=this,roomService=bubblesService_roomService.get(this),$log=bubblesService_$log.get(this),SDK=bubblesService_SDK.get(this);return bubble=bubble&&bubble.dbId?roomService.getRoomById(bubble.dbId):null,new Promise((function(resolve,reject){if(!contact)return reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'contact' is missing or null"});if(!bubble)return reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'bubble' is missing or is null"});var contactStatus="";switch(bubble.users.forEach((function(user){user.contact.id===contact.id&&(contactStatus=user.status)})),contactStatus){case roomService.RoomUserStatus.INVITED:roomService.ownerDeletesUserFromRoom(bubble,contact).then((function(updatedBubble){return updatedBubble.updateAvatarInfo(),resolve(updatedBubble)})).catch((function(err){return $log.sdk(_this7.logService+"[removeContactFromBubble] :: Error when removing a contact"),reject(err)}));break;case roomService.RoomUserStatus.ACCEPTED:roomService.unsubscribeUserFromRoom(bubble,contact).then((function(updatedBubble){return updatedBubble.updateAvatarInfo(),resolve(updatedBubble)})).catch((function(err){return $log.sdk(_this7.logService+"[removeContactFromBubble] :: Error when removing a contact"),reject(err)}));break;default:return resolve(bubble)}}))}},{key:"promoteContactToModerator",value:function(contact,bubble){var _this8=this,roomService=bubblesService_roomService.get(this),$log=bubblesService_$log.get(this),SDK=bubblesService_SDK.get(this);return bubble=bubble&&bubble.dbId?roomService.getRoomById(bubble.dbId):null,new Promise((function(resolve,reject){return contact?bubble?void roomService.updateRoomUser(bubble,contact,null,"moderator").then((function(updatedBubble){return updatedBubble.updateAvatarInfo(),resolve(updatedBubble)})).catch((function(err){return $log.sdk(_this8.logService+"[promoteContactToModerator] :: Error when promoting a contact to a moderator"),reject(err)})):reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'bubble' is missing or is null"}):reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'contact' is missing or null"})}))}},{key:"demoteContactFromModerator",value:function(contact,bubble){var _this9=this,roomService=bubblesService_roomService.get(this),$log=bubblesService_$log.get(this),SDK=bubblesService_SDK.get(this);return bubble=bubble&&bubble.dbId?roomService.getRoomById(bubble.dbId):null,new Promise((function(resolve,reject){return contact?bubble?void roomService.updateRoomUser(bubble,contact,null,"user").then((function(updatedBubble){return updatedBubble.updateAvatarInfo(),resolve(updatedBubble)})).catch((function(err){return $log.sdk(_this9.logService+"[demoteContactFromModerator] :: Error when demoting a contact"),reject(err)})):reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'bubble' is missing or is null"}):reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'contact' is missing or null"})}))}},{key:"changeOwner",value:function(contact,bubble){var _this10=this,roomService=bubblesService_roomService.get(this),$log=bubblesService_$log.get(this),SDK=bubblesService_SDK.get(this);return bubble=bubble&&bubble.dbId?roomService.getRoomById(bubble.dbId):null,new Promise((function(resolve,reject){return contact?bubble?void roomService.changeRoomOwner(bubble,contact).then((function(updatedBubble){return updatedBubble.updateAvatarInfo(),resolve(updatedBubble)})).catch((function(err){return $log.sdk(_this10.logService+"[changeOwner] :: Error when changing bubble owner"),reject(err)})):reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'bubble' is missing or is null"}):reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'contact' is missing or null"})}))}},{key:"acceptInvitationToJoinBubble",value:function(bubble){var _this11=this,roomService=bubblesService_roomService.get(this),$log=bubblesService_$log.get(this),SDK=bubblesService_SDK.get(this);return bubble=bubble&&bubble.dbId?roomService.getRoomById(bubble.dbId):null,new Promise((function(resolve,reject){if(!bubble)return reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'bubble' is missing or null"});roomService.acceptRoomInvitation(bubble).then((function(){return resolve(bubble)})).catch((function(err){return $log.sdk(_this11.logService+"[acceptInvitationToJoinBubble] :: Error when joining a bubble"),reject(err)}))}))}},{key:"declineInvitationToJoinBubble",value:function(bubble){var _this12=this,roomService=bubblesService_roomService.get(this),$log=bubblesService_$log.get(this),SDK=bubblesService_SDK.get(this);return bubble=bubble&&bubble.dbId?roomService.getRoomById(bubble.dbId):null,new Promise((function(resolve,reject){if(!bubble)return reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'bubble' is missing or null"});roomService.declineRoomInvitation(bubble).then((function(updatedBubble){return resolve(updatedBubble)})).catch((function(err){return $log.sdk(_this12.logService+"[declineInvitationToJoinBubble] :: Error when joining a bubble"),reject(err)}))}))}},{key:"leaveBubble",value:function(bubble){var _this13=this,roomService=bubblesService_roomService.get(this),$log=bubblesService_$log.get(this),SDK=bubblesService_SDK.get(this),contactService=bubblesService_contactService.get(this);return bubble=bubble&&bubble.dbId?roomService.getRoomById(bubble.dbId):null,new Promise((function(resolve,reject){if(!bubble)return reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'bubble' is missing or null"});var hasOtherModerator=!1;if(bubble.users.forEach((function(user){contactService.isUserContact(user)||"moderator"===user.privilege&&"accepted"===user.status&&(hasOtherModerator=!0)})),!hasOtherModerator)return reject({code:SDK.ERRORBADREQUEST,label:"Can't leave the bubble. No other moderator"});switch(bubble.status){case roomService.RoomUserStatus.UNSUBSCRIBED:roomService.participantCloseRoom(bubble).then((function(updatedBubble){return resolve(updatedBubble)})).catch((function(err){return $log.sdk(_this13.logService+"[leaveBubble] :: Error when leaving a bubble"),reject(err)}));break;default:roomService.unsubscribeMeFromRoom(bubble).then((function(updatedBubble){return resolve(updatedBubble)})).catch((function(err){return $log.sdk(_this13.logService+"[leaveBubble] :: Error when leaving a bubble"),reject(err)}))}}))}},{key:"closeBubble",value:function(bubble){var _this14=this,roomService=bubblesService_roomService.get(this),$log=bubblesService_$log.get(this),SDK=bubblesService_SDK.get(this);return bubble=bubble&&bubble.dbId?roomService.getRoomById(bubble.dbId):null,new Promise((function(resolve,reject){return bubble?_this14.isBubbleArchived(bubble)?resolve(bubble):void roomService.ownerArchiveRoom(bubble).then((function(updatedBubble){return resolve(updatedBubble)})).catch((function(err){return $log.sdk(_this14.logService+"[closeBubble] :: Error when closing a bubble"),reject(err)})):reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'bubble' is missing or null"})}))}},{key:"isBubbleArchived",value:function(bubble){var isArchived=!0,roomService=bubblesService_roomService.get(this);return(bubble=bubble&&bubble.dbId?roomService.getRoomById(bubble.dbId):null)?bubble.status!==roomService.RoomUserStatus.UNSUBSCRIBED?isArchived=!1:bubble.users.forEach((function(user){user.status!==roomService.RoomUserStatus.UNSUBSCRIBED&&user.status!==roomService.RoomUserStatus.DELETED&&(isArchived=!1)})):isArchived=!1,isArchived}},{key:"getAllBubbles",value:function(){return bubblesService_roomService.get(this).getRooms()}},{key:"getAllOwnedBubbles",value:function(){return bubblesService_roomService.get(this).getMyRooms()}},{key:"getAllPendingBubbles",value:function(){return bubblesService_roomService.get(this).getRooms().filter((function(bubble){return"invited"===bubble.status}))}},{key:"getAllInactiveBubbles",value:function(){return bubblesService_roomService.get(this).getRooms().filter((function(bubble){return!1===bubble.isActive}))}},{key:"getBubbleById",value:function(strBubbleId){var roomService=bubblesService_roomService.get(this),SDK=bubblesService_SDK.get(this);return strBubbleId?roomService.getRoomById(strBubbleId):{code:SDK.ERRORBADREQUEST,label:"Parameter 'strBubbleId' is missing or empty"}}},{key:"updateDescriptionForBubble",value:function(strDescription,bubble){var roomService=bubblesService_roomService.get(this),SDK=bubblesService_SDK.get(this);return bubble=bubble&&bubble.dbId?roomService.getRoomById(bubble.dbId):null,new Promise((function(resolve,reject){return strDescription?bubble?(bubble.desc=strDescription,void roomService.ownerUpdateRoom(bubble).then((function(updatedBubble){return resolve(updatedBubble)})).catch((function(err){return reject(err)}))):reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'bubble' is missing or empty"}):reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'strDescription' is missing or empty"})}))}},{key:"updateAvatarForBubble",value:function(urlAvatar,bubble){var roomService=bubblesService_roomService.get(this),SDK=bubblesService_SDK.get(this);return bubble=bubble&&bubble.dbId?roomService.getRoomById(bubble.dbId):null,new Promise((function(resolve,reject){return urlAvatar?bubble?(bubble.id=bubble.dbId,void roomService.setAvatarRoom(bubble,urlAvatar).then((function(updatedBubble){return resolve(updatedBubble)})).catch((function(err){return reject(err)}))):reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'bubble' is missing or empty"}):reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'urlAvatar' is missing or empty"})}))}},{key:"deleteAvatarFromBubble",value:function(bubble){var roomService=bubblesService_roomService.get(this),SDK=bubblesService_SDK.get(this);return bubble=bubble&&bubble.dbId?roomService.getRoomById(bubble.dbId):null,new Promise((function(resolve,reject){if(!bubble)return reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'bubble' is missing or empty"});roomService.deleteAvatarRoom(bubble.dbId).then((function(updatedBubble){return resolve(updatedBubble)})).catch((function(err){return reject(err)}))}))}},{key:"updateCustomDataForBubble",value:function(customData,bubble){var roomService=bubblesService_roomService.get(this),SDK=bubblesService_SDK.get(this);return bubble=bubble&&bubble.dbId?roomService.getRoomById(bubble.dbId):null,new Promise((function(resolve,reject){return customData?bubble?(bubble.customData=customData,void roomService.ownerUpdateRoomCustomData(bubble).then((function(updatedCustomData){return bubble.customData=updatedCustomData,resolve(bubble)})).catch((function(err){return reject(err)}))):reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'bubble' is missing or empty"}):reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'customData' is missing or empty"})}))}},{key:"deleteCustomDataForBubble",value:function(bubble){var roomService=bubblesService_roomService.get(this),SDK=bubblesService_SDK.get(this);return bubble=bubble&&bubble.dbId?roomService.getRoomById(bubble.dbId):null,new Promise((function(resolve,reject){if(!bubble)return reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'bubble' is missing or empty"});bubble.customData={},roomService.ownerUpdateRoomCustomData(bubble).then((function(updatedCustomData){return bubble.customData=updatedCustomData,resolve(bubble)})).catch((function(err){return reject(err)}))}))}},{key:"isWebRtcConferenceAllowed",value:function(){var profileService=bubblesService_profileService.get(this);return profileService.isFeatureEnabled(profileService.FeaturesEnum.WEBRTC_CONFERENCE_ALLOWED)}},{key:"hasActiveConferenceSession",value:function(){return!!bubblesService_webConferenceService.get(this).hasActiveConferenceSession()}},{key:"getWebRtcConferenceBubble",value:function(){return bubblesService_webConferenceService.get(this).getRelatedRoomToActiveConferenceSession()}},{key:"startOrJoinWebRtcConference",value:function(bubble){var _this15=this,roomService=bubblesService_roomService.get(this),webConferenceService=bubblesService_webConferenceService.get(this),SDK=bubblesService_SDK.get(this);return bubble=bubble&&bubble.dbId?roomService.getRoomById(bubble.dbId):null,new Promise((function(resolve,reject){return bubble?_this15.hasActiveConferenceSession()?reject({code:SDK.ERROR,label:"Already in a conference"}):void webConferenceService.startOrJoinWebConference(bubble).then((function(){return _this15.confBubble=bubble,_this15.confBubbleType="webrtc",resolve(roomService.getRoomById(bubble.dbId))})).catch((function(err){return reject(err)})):reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'bubble' is missing or empty"})}))}},{key:"addMediaToConferenceSession",value:function(conferenceSession){var SDK=bubblesService_SDK.get(this),webConferenceService=bubblesService_webConferenceService.get(this);return conferenceSession?webConferenceService.addMediaToConferenceSession(conferenceSession,"video"):{code:SDK.ERROR,label:"Parameter 'conferenceSession' is missing or empty"}}},{key:"addSharingToConferenceSession",value:function(conferenceSession){var SDK=bubblesService_SDK.get(this),webConferenceService=bubblesService_webConferenceService.get(this);return conferenceSession?webConferenceService.addMediaToConferenceSession(conferenceSession,"sharing"):{code:SDK.ERROR,label:"Parameter 'conferenceSession' is missing or empty"}}},{key:"removeMediaFromConferenceSession",value:function(conferenceSession){var SDK=bubblesService_SDK.get(this),webConferenceService=bubblesService_webConferenceService.get(this);return conferenceSession?(webConferenceService.removeMediaFromConferenceSession(conferenceSession,"video"),conferenceSession):{code:SDK.ERROR,label:"Parameter 'conferenceSession' is missing or empty"}}},{key:"removeSharingFromConferenceSession",value:function(conferenceSession){var SDK=bubblesService_SDK.get(this),webConferenceService=bubblesService_webConferenceService.get(this);return conferenceSession?(webConferenceService.removeMediaFromConferenceSession(conferenceSession,"sharing"),conferenceSession):{code:SDK.ERROR,label:"Parameter 'conferenceSession' is missing or empty"}}},{key:"addLocalVideoStreamToConference",value:function(conferenceSession){var SDK=bubblesService_SDK.get(this),webConferenceService=bubblesService_webConferenceService.get(this);return conferenceSession?(webConferenceService.attachLocalMediaStream(!0,conferenceSession),conferenceSession):{code:SDK.ERROR,label:"Parameter 'conferenceSession' is missing or empty"}}},{key:"showLocalVideo",value:function(){var SDK=bubblesService_SDK.get(this);return bubblesService_videoService.get(this).attachLocalMediaStream(!0),{code:SDK.OK,label:"OK"}}},{key:"getConferenceSessionById",value:function(conferenceId){var SDK=bubblesService_SDK.get(this),webConferenceService=bubblesService_webConferenceService.get(this);return conferenceId?webConferenceService.getConferenceSessionById(conferenceId):{code:SDK.ERROR,label:"Parameter 'conferenceId' is missing or empty"}}},{key:"addDistantVideoStreamToConference",value:function(conferenceSession){var SDK=bubblesService_SDK.get(this),webConferenceService=bubblesService_webConferenceService.get(this);return conferenceSession?(webConferenceService.attachDistantMediaStream(!0,conferenceSession),conferenceSession):{code:SDK.ERROR,label:"Parameter 'conferenceSession' is missing or empty"}}},{key:"updateMainVideoSession",value:function(conferenceId,sessionId){var SDK=bubblesService_SDK.get(this),webConferenceService=bubblesService_webConferenceService.get(this);return new Promise((function(__resolve,reject){return conferenceId?sessionId?(webConferenceService.updateMainScreenSession(conferenceId,sessionId),webConferenceService.getConferenceSessionById(conferenceId)):reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'sessionId' is missing or empty"}):reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'conferenceId' is missing or empty"})}))}},{key:"startOrJoinSharingWebRtcConference",value:function(bubble){var _this16=this,SDK=bubblesService_SDK.get(this),webConferenceService=bubblesService_webConferenceService.get(this),roomService=bubblesService_roomService.get(this);return bubble=bubble&&bubble.dbId?roomService.getRoomById(bubble.dbId):null,new Promise((function(resolve,reject){return bubble?_this16.hasActiveConferenceSession()?reject({code:SDK.ERROR,label:"Already in a conference"}):void webConferenceService.startOrJoinSharingOnlyConference(bubble).then((function(){return _this16.confBubble=bubble,_this16.confBubbleType="sharing",resolve(roomService.getRoomById(bubble.dbId))})).catch((function(err){return reject(err)})):reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'bubble' is missing or empty"})}))}},{key:"stopWebRtcConference",value:function(){var _this17=this,roomService=bubblesService_roomService.get(this),SDK=bubblesService_SDK.get(this),webConferenceService=bubblesService_webConferenceService.get(this),conferenceService=bubblesService_conferenceService.get(this),contactService=bubblesService_contactService.get(this);return this.confBubble=this.confBubble&&this.confBubble.dbId?roomService.getRoomById(this.confBubble.dbId):null,new Promise((function(resolve,reject){if(!_this17.hasActiveConferenceSession()||!_this17.confBubble)return reject({code:SDK.ERRORBADREQUEST,label:"No known conference in a Bubble"});var id="";id="webrtc"===_this17.confBubbleType?_this17.confBubble.getSFUConfEndpointId():_this17.confBubble.getSFUSharingConfEndpointId();var sharingConfSession=webConferenceService.getConferenceSessionById(id),participant=sharingConfSession?sharingConfSession.getParticipantByJid(contactService.userContact.jid):null;"moderator"!==participant.role?conferenceService.disconnectsParticipant(id,participant.participantId,_this17.confBubbleType).then((function(){return _this17.confBubble=null,_this17.confBubbleType=null,resolve()})).catch((function(err){return reject(err)})):conferenceService.stopConference(id,_this17.confBubbleType,_this17.confBubble.dbId).then((function(){return _this17.confBubble=null,_this17.confBubbleType=null,resolve()})).catch((function(err){return reject(err)}))}))}}]),BubblesService}();function groupsService_defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}function groupsService_createClass(Constructor,protoProps,staticProps){return protoProps&&groupsService_defineProperties(Constructor.prototype,protoProps),staticProps&&groupsService_defineProperties(Constructor,staticProps),Constructor}var groupsService_$rootScope=new WeakMap,groupsService_$log=new WeakMap,groupsService_groupService=new WeakMap,_Group=new WeakMap,groupsService_contactService=new WeakMap,groupsService_PromiseQueue=new WeakMap,groupsService_SDK=new WeakMap,GroupsService=function(){function GroupsService($log,groupService,Group,contactService,PromiseQueue,SDK,$rootScope){var _this=this;!function(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}(this,GroupsService),groupsService_$log.set(this,$log),groupsService_groupService.set(this,groupService),_Group.set(this,Group),groupsService_contactService.set(this,contactService),groupsService_PromiseQueue.set(this,PromiseQueue),groupsService_SDK.set(this,SDK),groupsService_$rootScope.set(this,$rootScope),this.logService="GroupService  | ",this.RAINBOW_ONGROUPCREATED="rainbowgroupcreated",this.RAINBOW_ONGROUPUPDATED="rainbowgroupupdated",this.RAINBOW_ONGROUPDELETED="rainbowgroupdeleted",this.RAINBOW_ONGROUPUSERADDED="rainbowgroupuseradded",this.RAINBOW_ONGROUPUSERREMOVED="rainbowgroupuserdeleted",this.createGroup=this.createGroup.bind(this),this.deleteGroup=this.deleteGroup.bind(this),this.deleteAllGroups=this.deleteAllGroups.bind(this),this.getAll=this.getAll.bind(this),this.getFavoritesGroups=this.getFavoritesGroups.bind(this),this.setGroupAsFavorite=this.setGroupAsFavorite.bind(this),this.unsetGroupAsFavorite=this.unsetGroupAsFavorite.bind(this),this.getGroupById=this.getGroupById.bind(this),this.getDetailedGroupById=this.getDetailedGroupById.bind(this),this.addContactInGroup=this.addContactInGroup.bind(this),this.removeContactFromGroup=this.removeContactFromGroup.bind(this),$rootScope.$on("$destroy",$rootScope.$on(groupService.ON_UPDATE_GROUP_EVENT,(function(event,groupId){return _this.onGroupUpdated(event,groupId)}))),$rootScope.$on("$destroy",$rootScope.$on(groupService.ON_CREATED_GROUP_EVENT,(function(event,groupId){return _this.onGroupCreated(event,groupId)}))),$rootScope.$on("$destroy",$rootScope.$on(groupService.ON_REMOVED_GROUP_EVENT,(function(event,groupId){return _this.onGroupDeleted(event,groupId)}))),$rootScope.$on("$destroy",$rootScope.$on(groupService.ON_ADD_GROUP_USER_EVENT,(function(event,groupId,userId){return _this.onGroupUserAdded(event,groupId,userId)}))),$rootScope.$on("$destroy",$rootScope.$on(groupService.ON_REMOVE_GROUP_USER_EVENT,(function(event,groupId,userId){return _this.onGroupUserRemoved(event,groupId,userId)})))}return groupsService_createClass(GroupsService,null,[{key:"$inject",get:function(){return["$log","groupService","Group","contactService","PromiseQueue","SDK","$rootScope"]}}]),groupsService_createClass(GroupsService,[{key:"onGroupUpdated",value:function(__event,groupId){var _this2=this;groupsService_groupService.get(this).getGroup(groupId).then((function(group){var sdkEvent=new CustomEvent(_this2.RAINBOW_ONGROUPUPDATED,{detail:group});document.dispatchEvent(sdkEvent)})).catch((function(err){return err}))}},{key:"onGroupCreated",value:function(__event,groupId){var _this3=this;groupsService_groupService.get(this).getGroup(groupId).then((function(group){var sdkEvent=new CustomEvent(_this3.RAINBOW_ONGROUPCREATED,{detail:group});document.dispatchEvent(sdkEvent)})).catch((function(err){return err}))}},{key:"onGroupDeleted",value:function(__event,groupId){var sdkEvent=new CustomEvent(this.RAINBOW_ONGROUPDELETED,{detail:groupId});document.dispatchEvent(sdkEvent)}},{key:"onGroupUserAdded",value:function(__event,groupId,userId){var _this4=this;groupsService_groupService.get(this).getGroup(groupId).then((function(group){var sdkEvent=new CustomEvent(_this4.RAINBOW_ONGROUPUSERADDED,{detail:{group:group,userId:userId}});document.dispatchEvent(sdkEvent)})).catch((function(err){return err}))}},{key:"onGroupUserRemoved",value:function(__event,groupId,userId){var _this5=this;groupsService_groupService.get(this).getGroup(groupId).then((function(group){var sdkEvent=new CustomEvent(_this5.RAINBOW_ONGROUPUSERREMOVED,{detail:{group:group,userId:userId}});document.dispatchEvent(sdkEvent)})).catch((function(err){return err}))}},{key:"createGroup",value:function(strName,strDescription,isFavorite){var _this6=this,Group=_Group.get(this),$log=groupsService_$log.get(this),groupService=groupsService_groupService.get(this),SDK=groupsService_SDK.get(this);return new Promise((function(resolve,reject){var group,comment=strDescription||"",boolFavorite=!1;if("boolean"==typeof isFavorite&&(boolFavorite=isFavorite),!strName)return reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'strName' is missing or empty"});group=new Group(null,strName,comment,boolFavorite),groupService.addGroup(group).then((function(newGroup){return $log.sdk(_this6.logService+"[createGroup] :: New group created successfully"),resolve(newGroup)})).catch((function(err){return $log.sdk(_this6.logService+"[createGroup] :: Error when creating a group"),reject(err)}))}))}},{key:"deleteGroup",value:function(group){var _this7=this,$log=groupsService_$log.get(this),groupService=groupsService_groupService.get(this),SDK=groupsService_SDK.get(this);return new Promise((function(resolve,reject){if(!group)return reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'group' is missing or empty"});groupService.removeGroup(group.id).then((function(){return $log.sdk(_this7.logService+"[deleteGroup] :: Group deleted successfully"),resolve({code:SDK.OK,label:"OK"})})).catch((function(err){return $log.sdk(_this7.logService+"[deleteGroup] :: Error when deleting a group"),reject(err)}))}))}},{key:"deleteAllGroups",value:function(){var _this8=this,$log=groupsService_$log.get(this),groupService=groupsService_groupService.get(this),SDK=groupsService_SDK.get(this);return new Promise((function(resolve,reject){var promiseQueue=[],groups=groupService.getGroupsAsArray();groups.forEach((function(group){promiseQueue.push(function(group){return groupService.removeGroup(group.id)}(group))})),Promise.all(promiseQueue).then((function(){return $log.sdk(_this8.logService+"[deleteAllGroups] :: All groups deleted successfully"),resolve({code:SDK.OK,label:"OK"})})).catch((function(err){return $log.sdk(_this8.logService+"[deleteAllGroups] :: Error when deleting all groups"),reject(err)}))}))}},{key:"getAll",value:function(){return groupsService_groupService.get(this).getGroupsAsArray()}},{key:"getFavoritesGroups",value:function(){return groupsService_groupService.get(this).getGroupsAsArray().filter((function(group){return group.isFavorite}))}},{key:"setGroupAsFavorite",value:function(group){var groupService=groupsService_groupService.get(this);return new Promise((function(resolve,reject){group.isFavorite=!0,groupService.updateGroup(group).then((function(){return resolve(group)})).catch((function(err){return reject(err)}))}))}},{key:"unsetGroupAsFavorite",value:function(group){var groupService=groupsService_groupService.get(this);return new Promise((function(resolve,reject){group.isFavorite=!1,groupService.updateGroup(group).then((function(){return resolve(group)})).catch((function(err){return reject(err)}))}))}},{key:"getGroupById",value:function(groupId){var groupService=groupsService_groupService.get(this),theGroup=null;return groupService.getGroupsAsArray().some((function(group){return groupId===group.id&&(theGroup=group,!0)})),theGroup}},{key:"getDetailedGroupById",value:function(id){var groupService=groupsService_groupService.get(this),SDK=groupsService_SDK.get(this);return new Promise((function(resolve,reject){if(!id)return reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'id' is missing or empty"});groupService.getGroup(id).then((function(updatedGroup){return resolve(updatedGroup)})).catch((function(err){return reject(err)}))}))}},{key:"addContactInGroup",value:function(contact,group){var _this9=this,SDK=groupsService_SDK.get(this),groupService=groupsService_groupService.get(this),$log=groupsService_$log.get(this);return new Promise((function(resolve,reject){return contact?group?void groupService.addGroupUser(group,contact).then((function(updatedGroup){return $log.sdk(_this9.logService+"[addContactInGroup] :: Contact added successfully"),resolve(updatedGroup)})).catch((function(err){return $log.sdk(_this9.logService+"[addContactInGroup] :: Error when adding a contact in a group"),reject(err)})):reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'group' is missing or null"}):reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'contact' is missing or null"})}))}},{key:"removeContactFromGroup",value:function(contact,group){var SDK=groupsService_SDK.get(this),groupService=groupsService_groupService.get(this);return new Promise((function(resolve,reject){return contact?group?resolve(groupService.removeGroupUser(group.id,contact)):reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'group' is missing or null"}):reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'contact' is missing or null"})}))}}]),GroupsService}();function callsLogService_defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}function callsLogService_createClass(Constructor,protoProps,staticProps){return protoProps&&callsLogService_defineProperties(Constructor.prototype,protoProps),staticProps&&callsLogService_defineProperties(Constructor,staticProps),Constructor}var callsLogService_callLogService=new WeakMap,CallsLogService=function(){function CallsLogService($rootScope,callLogService){var _this=this;!function(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}(this,CallsLogService),this.logService="CallsLogService | ",this.initialized=!1,callsLogService_callLogService.set(this,callLogService),this.RAINBOW_ONCALLLOGUPDATED="rainbowcalllogupdated",this.RAINBOW_ONCALLLOGACKUPDATED="rainbowcalllogackupdated",this.getAll=this.getAll.bind(this),this.getMissedCallLogCounter=this.getMissedCallLogCounter.bind(this),this.deleteOneCallLog=this.deleteOneCallLog.bind(this),this.deleteCallLogsForContact=this.deleteCallLogsForContact.bind(this),this.deleteAllCallLogs=this.deleteAllCallLogs.bind(this),this.markCallLogAsRead=this.markCallLogAsRead.bind(this),this.markAllCallsLogsAsRead=this.markAllCallsLogsAsRead.bind(this),this.isInitialized=this.isInitialized.bind(this),$rootScope.$on("$destroy",$rootScope.$on("ON_CALL_LOG_UPDATED",(function(event,data){return _this.onCallLogUpdated(event,data)}))),$rootScope.$on("$destroy",$rootScope.$on("ON_CALL_LOG_ACK_UPDATED",(function(event,data){return _this.onCallLogAckUpdated(event,data)})))}return callsLogService_createClass(CallsLogService,null,[{key:"$inject",get:function(){return["$rootScope","callLogService"]}}]),callsLogService_createClass(CallsLogService,[{key:"onCallLogUpdated",value:function(__event,data){var sdkEvent=new CustomEvent(this.RAINBOW_ONCALLLOGUPDATED,{detail:data});document.dispatchEvent(sdkEvent)}},{key:"onCallLogAckUpdated",value:function(__event,data){var sdkEvent=new CustomEvent(this.RAINBOW_ONCALLLOGACKUPDATED,{detail:data});document.dispatchEvent(sdkEvent)}},{key:"getAll",value:function(){var callLogService=callsLogService_callLogService.get(this);callLogService.orderCallLogsFunction();for(var callLogs=callLogService.getSimplifiedCallLogs(),i=0;i<callLogs.length;i++){var durationMs=0,hmmss=callLogs[i].duration;if(hmmss&&"string"==typeof hmmss&&hmmss.match(/^(?:(?:([01]?\d|2[0-3])h )?([0-5]?\d)m )?([0-5]?\ds)$/)){for(var parts=(hmmss=hmmss.replace(/[hms]/g,"")).split(" ").reverse(),j=0;j<parts.length;j++)durationMs+=parts[j]*Math.pow(60,j);callLogs[i].duration=1e3*durationMs}}return callLogs}},{key:"getMissedCallLogCounter",value:function(){return callsLogService_callLogService.get(this).getMissedCallLogCounter()}},{key:"deleteOneCallLog",value:function(id){return callsLogService_callLogService.get(this).deleteOneCallLog(id)}},{key:"deleteCallLogsForContact",value:function(jid){return callsLogService_callLogService.get(this).deleteCallLogsForContact(jid)}},{key:"deleteAllCallLogs",value:function(){return callsLogService_callLogService.get(this).deleteAllCallLogs()}},{key:"markCallLogAsRead",value:function(id){return callsLogService_callLogService.get(this).markCallLogAsRead(id)}},{key:"markAllCallsLogsAsRead",value:function(){return callsLogService_callLogService.get(this).markAllCallsLogsAsRead()}},{key:"isInitialized",value:function(){return this.initialized}}]),CallsLogService}();function favoritesService_defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}function favoritesService_createClass(Constructor,protoProps,staticProps){return protoProps&&favoritesService_defineProperties(Constructor.prototype,protoProps),staticProps&&favoritesService_defineProperties(Constructor,staticProps),Constructor}var favoritesService_favoriteService=new WeakMap,favoritesService_$log=new WeakMap,FavoritesService=function(){function FavoritesService($log,favoriteService){var _this=this;!function(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}(this,FavoritesService),favoritesService_favoriteService.set(this,favoriteService),favoritesService_$log.set(this,$log),this.logService="FavoritesService | ",this.RAINBOW_ONFAVORITECREATED="rainbowonfavoritecreated",this.RAINBOW_ONFAVORITEDELETED="rainbowonfavoritedeleted",this.fetchAllFavorites=this.fetchAllFavorites.bind(this),this.createFavorite=this.createFavorite.bind(this),this.deleteFavorite=this.deleteFavorite.bind(this),window.addEventListener("ON_FAVORITE_CREATED",(function(event){return _this.onFavoriteCreated(event)})),window.addEventListener("ON_FAVORITE_DELETED",(function(event){return _this.onFavoriteDeleted(event)}))}return favoritesService_createClass(FavoritesService,null,[{key:"$inject",get:function(){return["$log","favoriteService"]}}]),favoritesService_createClass(FavoritesService,[{key:"onFavoriteCreated",value:function(event){var sdkEvent=new CustomEvent(this.RAINBOW_ONFAVORITECREATED,{detail:event.detail});document.dispatchEvent(sdkEvent)}},{key:"onFavoriteDeleted",value:function(event){var sdkEvent=new CustomEvent(this.RAINBOW_ONFAVORITEDELETED,{detail:event.detail});document.dispatchEvent(sdkEvent)}},{key:"fetchAllFavorites",value:function(){var _this2=this,$log=favoritesService_$log.get(this),favoriteService=favoritesService_favoriteService.get(this);return new Promise((function(resolve,reject){var that=_this2;favoriteService.getServerFavorites().then((function(favorites){return $log.sdk(that.logService+"[fetchAllFavorites] :: Successfully fetched the Favorites"),resolve(favorites)})).catch((function(err){return $log.sdk(that.logService+"[fetchAllFavorites] :: ERROR:",err),reject(err)}))}))}},{key:"createFavorite",value:function(id,type){var _this3=this,favoriteService=favoritesService_favoriteService.get(this),$log=favoritesService_$log.get(this);return new Promise((function(resolve,reject){return id?type?"bubble"!==type&&"user"!==type?($log.sdk(_this3.logService+'[createFavorite] :: Error: type should be set to "user" or "bubble"'),reject(_this3.logService+'[createFavorite] :: Error: type should be set to "user" or "bubble"')):("bubble"===type&&(type="room"),void favoriteService.addServerFavorite(id,type).then((function(favorite){return $log.sdk(_this3.logService+"[createFavorite] :: Successfully added ".concat(type," to favorites")),resolve(favorite)})).catch((function(err){return $log.sdk(_this3.logService+"[createFavorite] :: Error: "+err),reject(err)}))):($log.sdk(_this3.logService+"[createFavorite] :: Error: parameter 'type' is missing or null"),reject(_this3.logService+"[createFavorite] :: Error: parameter 'type' is missing or null")):($log.sdk(_this3.logService+"[createFavorite] :: Error: parameter 'id' is missing or null"),reject(_this3.logService+"[createFavorite] :: Error: parameter 'id' is missing or null"))}))}},{key:"deleteFavorite",value:function(id){var _this4=this,favoriteService=favoritesService_favoriteService.get(this),$log=favoritesService_$log.get(this);return new Promise((function(resolve,reject){if(!id)return $log.sdk(_this4.logService+"[deleteFavorite] :: Error: parameter 'id' is missing or null"),reject(_this4.logService+"[deleteFavorite] :: Error: parameter 'id' is missing or null");favoriteService.removeServerFavorite(id).then((function(){return resolve()})).catch((function(err){return $log.sdk(_this4.logService+"[deleteFavorite] :: Error: "+err),reject(err)}))}))}}]),FavoritesService}();function filesStorageService_defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}function filesStorageService_createClass(Constructor,protoProps,staticProps){return protoProps&&filesStorageService_defineProperties(Constructor.prototype,protoProps),staticProps&&filesStorageService_defineProperties(Constructor,staticProps),Constructor}var filesStorageService_$rootScope=new WeakMap,filesStorageService_$log=new WeakMap,filesStorageService_Conversation=new WeakMap,filesStorageService_fileStorageService=new WeakMap,filesStorageService_fileServerService=new WeakMap,filesStorageService_conversationService=new WeakMap,filesStorageService_contactService=new WeakMap,filesStorageService_SDK=new WeakMap,FilesStorageService=function(){function FilesStorageService($log,Conversation,fileStorageService,fileServerService,conversationService,contactService,SDK,$rootScope){var _this=this;!function(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}(this,FilesStorageService),filesStorageService_$log.set(this,$log),filesStorageService_Conversation.set(this,Conversation),filesStorageService_fileStorageService.set(this,fileStorageService),filesStorageService_fileServerService.set(this,fileServerService),filesStorageService_conversationService.set(this,conversationService),filesStorageService_contactService.set(this,contactService),filesStorageService_SDK.set(this,SDK),filesStorageService_$rootScope.set(this,$rootScope),this.logService="FilesStorageService | ",this.RAINBOW_ONFILEUPLOADED="rainbowfileuploaded",this.RAINBOW_ONFILEUPLOADED_ERROR="rainbowfileuploadederror",this.RAINBOW_ONFILEDOWNLOADED="rainbowonfiledownloaded",this.RAINBOW_ONFILEDOWNLOADED_ERROR="rainbowfiledownloadederror",this.RAINBOW_ONCHUNKLOADMESSAGE="rainbowonchunkloadmessage",this.eventsMap={success:{download:this.RAINBOW_ONFILEDOWNLOADED,upload:this.RAINBOW_ONFILEUPLOADED},error:{download:this.RAINBOW_ONFILEDOWNLOADED_ERROR,upload:this.RAINBOW_ONFILEUPLOADED_ERROR}},this.addFileToConversation=this.addFileToConversation.bind(this),this.uploadFileToConversation=this.uploadFileToConversation.bind(this),this.uploadFileToBubble=this.uploadFileToBubble.bind(this),this.downloadFile=this.downloadFile.bind(this),this.removeFile=this.removeFile.bind(this),this.getFileDescriptorFromId=this.getFileDescriptorFromId.bind(this),this.getFilesReceivedInConversation=this.getFilesReceivedInConversation.bind(this),this.getFilesReceivedInBubble=this.getFilesReceivedInBubble.bind(this),this.getFilesSentInConversation=this.getFilesSentInConversation.bind(this),this.getFilesSentInBubble=this.getFilesSentInBubble.bind(this),this.getUserQuotaConsumption=this.getUserQuotaConsumption.bind(this),this.getAllFilesSent=this.getAllFilesSent.bind(this),this.getAllFilesReceived=this.getAllFilesReceived.bind(this),this.cancelCurrentFileTransfer=this.cancelCurrentFileTransfer.bind(this),$rootScope.$on("$destroy",$rootScope.$on("ON_FILE_TRANSFER_EVENT",(function(event,data){return _this.onFileTransferChanged(event,data)})))}return filesStorageService_createClass(FilesStorageService,null,[{key:"inject",get:function(){return["$log","Conversation","fileStorageService","fileServerService","conversationService","contactService","SDK","$rootScope"]}}]),filesStorageService_createClass(FilesStorageService,[{key:"onFileTransferChanged",value:function(__event,data){var $log=filesStorageService_$log.get(this);if(data.result&&data.type){$log.sdk(this.logService+"[onFileTransferChanged] ::  File transfered");var sdkEvent=new CustomEvent(this.eventsMap[data.result][data.type],{detail:data});document.dispatchEvent(sdkEvent)}else if("uploading"===(data=data.fileDesc).state||"downloading"===data.state){var _sdkEvent=new CustomEvent(this.RAINBOW_ONCHUNKLOADMESSAGE,{detail:data});document.dispatchEvent(_sdkEvent)}}},{key:"addFileToConversation",value:function(conversation,file,data){var SDK=filesStorageService_SDK.get(this),conversationService=filesStorageService_conversationService.get(this);return new Promise((function(resolve,reject){return new Promise((function(res){if("string"!=typeof file)return resolve(file);var xhr=new XMLHttpRequest;xhr.open("GET",file,!0),xhr.onreadystatechange=function(){if(xhr.readyState===XMLHttpRequest.DONE){var blob=xhr.response,_file=new File([blob],file.replace(/^.*[\\\/]/,""));return res(_file)}},xhr.responseType="blob",xhr.send()})).then((function(_file){if(_file.size>1e8)return reject({code:SDK.ERRORBADREQUEST,label:"The file is too large (limited to 100MB)"});conversationService.sendFSMessage(conversation,_file,data).then((function(message){return resolve(message)}))}))}))}},{key:"uploadFileToConversation",value:function(conversation,file,message){var _this2=this,SDK=filesStorageService_SDK.get(this),$log=filesStorageService_$log.get(this),Conversation=filesStorageService_Conversation.get(this);return new Promise((function(resolve,reject){return conversation?file?conversation.type!==Conversation.Type.ONE_TO_ONE?reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'conversation' is not a one-to-one conversation"}):($log.sdk(_this2.logService+"[uploadFileToConversation] ::  Add file to the conversation "+conversation.id),void _this2.addFileToConversation(conversation,file,message).then((function(msg){return $log.sdk(_this2.logService+"[uploadFileToConversation] ::  file added"),resolve(msg)})).catch((function(err){return reject(err)}))):reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'file' is missing or null"}):reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'conversation' is missing or null"})}))}},{key:"uploadFileToBubble",value:function(bubble,file,message){var _this3=this,SDK=filesStorageService_SDK.get(this),$log=filesStorageService_$log.get(this),Conversation=filesStorageService_Conversation.get(this),conversationService=filesStorageService_conversationService.get(this);return new Promise((function(resolve,reject){if(!bubble)return reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'bubble' is missing or null"});if(!file)return reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'file' is missing or null"});var conversation=conversationService.getConversationByRoomDbId(bubble.dbId);return conversation?conversation.type!==Conversation.Type.ROOM?reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'conversation' is not a bubble conversation"}):($log.sdk(_this3.logService+"[uploadFileToBubble] ::  Trying to add a file to the bubble "+bubble.dbId),void _this3.addFileToConversation(conversation,file,message).then((function(msg){return $log.sdk(_this3.logService+"[uploadFileToBubble] ::  File added"),resolve(msg)})).catch((function(err){return reject(err)}))):reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'bubble' don't have a conversation"})}))}},{key:"downloadFile",value:function(fileDescriptor){var _this4=this,$log=filesStorageService_$log.get(this),fileServerService=filesStorageService_fileServerService.get(this),SDK=filesStorageService_SDK.get(this);return new Promise((function(resolve,reject){if(!fileDescriptor)return reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'fileDescriptor' is missing or null"});$log.sdk(_this4.logService+"[downloadFile] ::  Trying to get a file"),fileServerService.getBlobFromFileDescriptor(fileDescriptor,!0).then((function(blob){return $log.sdk(_this4.logService+"[downloadFile] ::  File downloaded"),resolve(blob)})).catch((function(err){return reject(err)}))}))}},{key:"removeFile",value:function(fileDescriptor){var _this5=this,$log=filesStorageService_$log.get(this),fileStorageService=filesStorageService_fileStorageService.get(this),SDK=filesStorageService_SDK.get(this);return new Promise((function(resolve,reject){if(fileDescriptor||reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'fileDescriptor' is missing or null"}),fileDescriptor.id||fileDescriptor.url){$log.sdk(_this5.logService+"[removeFile] ::  Trying to remove a file");var fileDescriptorId=fileDescriptor.id;if(!fileDescriptorId){var parts=fileDescriptor.url.split("/");fileDescriptorId=parts.pop()||parts.pop()}fileStorageService.deleteFileDescriptor(fileDescriptorId).then((function(){$log.sdk(_this5.logService+"[removeFile] ::  File removed"),resolve({code:SDK.OK,label:"OK"})})).catch((function(err){reject(err)}))}else reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'fileDescriptor' don't contain information to remove the file"})}))}},{key:"getFileDescriptorFromId",value:function(id){var $log=filesStorageService_$log.get(this),fileStorageService=filesStorageService_fileStorageService.get(this);return $log.sdk(this.logService+"[getFileDescriptorFromId] ::  Get file descriptor "+id),fileStorageService.getFileDescriptorById(id)}},{key:"getFilesReceivedInConversation",value:function(conversation){var _this6=this,$log=filesStorageService_$log.get(this),fileStorageService=filesStorageService_fileStorageService.get(this),SDK=filesStorageService_SDK.get(this),Conversation=filesStorageService_Conversation.get(this),contactService=filesStorageService_contactService.get(this);return new Promise((function(resolve,reject){return conversation?conversation.type!==Conversation.Type.ONE_TO_ONE?reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'conversation' is not a one-to-one conversation"}):($log.sdk(_this6.logService+"[getFilesReceivedInConversation] ::  Get files received in conversation "+conversation.id+"..."),void fileStorageService.retrieveFilesReceivedFromPeer(contactService.userContact.dbId,conversation.contact.dbId).then((function(files){return $log.sdk(_this6.logService+"[getFilesReceivedInConversation] ::  Shared "+files.length),resolve(files)})).catch((function(err){return reject(err)}))):reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'conversation' is missing or null"})}))}},{key:"getFilesReceivedInBubble",value:function(bubble){var _this7=this,$log=filesStorageService_$log.get(this),fileStorageService=filesStorageService_fileStorageService.get(this),SDK=filesStorageService_SDK.get(this);return new Promise((function(resolve,reject){if(!bubble)return reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'bubble' is missing or null"});$log.sdk(_this7.logService+"[getFilesReceivedInBubble] ::  Get files received in bubble "+bubble.dbId),fileStorageService.retrieveReceivedFilesForRoom(bubble.dbId).then((function(files){return $log.sdk(_this7.logService+"[getFilesReceivedInBubble] ::  Shared "+files.length),resolve(files)})).catch((function(err){return reject(err)}))}))}},{key:"getFilesSentInConversation",value:function(conversation){var _this8=this,$log=filesStorageService_$log.get(this),fileStorageService=filesStorageService_fileStorageService.get(this),SDK=filesStorageService_SDK.get(this),Conversation=filesStorageService_Conversation.get(this);return new Promise((function(resolve,reject){return conversation?conversation.type!==Conversation.Type.ONE_TO_ONE?reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'conversation' is not a one-to-one conversation"}):($log.sdk(_this8.logService+"[getFilesSentInConversation] :: Get files sent in conversation "+conversation.id),void fileStorageService.retrieveSentFiles(conversation.contact.dbId).then((function(files){return $log.sdk(_this8.logService+"[getFilesSentInConversation] :: Shared "+files.length),resolve(files)})).catch((function(err){return reject(err)}))):reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'conversation' is missing or null"})}))}},{key:"getFilesSentInBubble",value:function(bubble){var _this9=this,$log=filesStorageService_$log.get(this),fileStorageService=filesStorageService_fileStorageService.get(this),SDK=filesStorageService_SDK.get(this);return new Promise((function(resolve,reject){if(!bubble)return reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'bubble' is missing or null"});$log.sdk(_this9.logService+"[getFilesSentInBubble] :: Get files sent in bubble "+bubble.dbId),fileStorageService.retrieveSentFiles(bubble.dbId).then((function(files){return $log.sdk(_this9.logService+"[getFilesSentInBubble] :: Shared "+files.length),resolve(files)})).catch((function(err){return reject(err)}))}))}},{key:"getUserQuotaConsumption",value:function(){var fileStorageService=filesStorageService_fileStorageService.get(this);return new Promise((function(resolve,reject){fileStorageService.retrieveUserConsumption().then((function(consumptionData){return resolve(consumptionData)})).catch((function(err){return reject(err)}))}))}},{key:"getAllFilesSent",value:function(){return filesStorageService_fileStorageService.get(this).getDocuments()}},{key:"getAllFilesReceived",value:function(){return filesStorageService_fileStorageService.get(this).getReceivedDocuments()}},{key:"cancelCurrentFileTransfer",value:function(id){var SDK=filesStorageService_SDK.get(this),fileStorageService=filesStorageService_fileStorageService.get(this),fileServerService=filesStorageService_fileServerService.get(this);return new Promise((function(resolve,reject){if(!id)return reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'id' is missing or null"});var fileDescriptor=fileStorageService.getFileDescriptorById(id);return null===fileDescriptor?reject({code:SDK.ERRORBADREQUEST,label:"Could not find a file with the id "+id}):"downloading"!==fileDescriptor.state&&"uploading"!==fileDescriptor.state?reject({code:SDK.ERRORBADREQUEST,label:"File Status is not set to 'downloading' or 'uploading'"}):(fileServerService.cancelCurrentFiletransfer(id),"not_uploaded"!==fileDescriptor.state&&"uploading"!==fileDescriptor.state?(fileDescriptor.state="uploaded",resolve(fileDescriptor)):"not_uploaded"!==fileDescriptor.state&&"uploading"===fileDescriptor.state?(fileDescriptor.state="not_uploaded",resolve(fileDescriptor)):void 0)}))}}]),FilesStorageService}();function capabilitiesService_defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}function capabilitiesService_createClass(Constructor,protoProps,staticProps){return protoProps&&capabilitiesService_defineProperties(Constructor.prototype,protoProps),staticProps&&capabilitiesService_defineProperties(Constructor,staticProps),Constructor}var capabilitiesService_profileService=new WeakMap,CapabilitiesService=function(){function CapabilitiesService(profileService){!function(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}(this,CapabilitiesService),capabilitiesService_profileService.set(this,profileService),this.getAll=this.getAll.bind(this),this.isFeatureEnabled=this.isFeatureEnabled.bind(this),this.hasS4BExtensionEnabled=this.hasS4BExtensionEnabled.bind(this),this.hasOutlookExtensionEnabled=this.hasOutlookExtensionEnabled.bind(this),this.hasCalendarPresenceEnabled=this.hasCalendarPresenceEnabled.bind(this),this.hasTelephonyBasicCallEnabled=this.hasTelephonyBasicCallEnabled.bind(this),this.hasTelephonySecondCallEnabled=this.hasTelephonySecondCallEnabled.bind(this),this.hasTelephonyTransferCallEnabled=this.hasTelephonyTransferCallEnabled.bind(this),this.hasTelephonyConferenceCallEnabled=this.hasTelephonyConferenceCallEnabled.bind(this),this.hasTelephonyDeflectCallEnabled=this.hasTelephonyDeflectCallEnabled.bind(this),this.hasTelephonyForwardCallEnabled=this.hasTelephonyForwardCallEnabled.bind(this),this.hasTelephonyPhoneBookEnabled=this.hasTelephonyPhoneBookEnabled.bind(this),this.hasTelephonyVoiceMailEnabled=this.hasTelephonyVoiceMailEnabled.bind(this),this.hasWebRTCAudioMobileEnabled=this.hasWebRTCAudioMobileEnabled.bind(this),this.hasWebRTCVideoMobileEnabled=this.hasWebRTCVideoMobileEnabled.bind(this),this.hasBridgeConferenceEnabled=this.hasBridgeConferenceEnabled.bind(this),this.hasBridgeConferenceRecordEnabled=this.hasBridgeConferenceRecordEnabled.bind(this),this.hasBridgeConferenceDialOutEnabled=this.hasBridgeConferenceDialOutEnabled.bind(this),this.maxParticipantsPerBubbleAllowed=this.maxParticipantsPerBubbleAllowed.bind(this),this.maxParticipantsPerBridgeConferenceAllowed=this.maxParticipantsPerBridgeConferenceAllowed.bind(this),this.maxFileStorageQuotaAllowed=this.maxFileStorageQuotaAllowed.bind(this)}return capabilitiesService_createClass(CapabilitiesService,null,[{key:"$inject",get:function(){return["profileService"]}}]),capabilitiesService_createClass(CapabilitiesService,[{key:"getAll",value:function(){return capabilitiesService_profileService.get(this).getMyProfileFeatures()}},{key:"isFeatureEnabled",value:function(featureString){return capabilitiesService_profileService.get(this).isFeatureEnabled(featureString)}},{key:"hasS4BExtensionEnabled",value:function(){return capabilitiesService_profileService.get(this).isFeatureEnabled("MS_SKYPE_PLUGIN")}},{key:"hasOutlookExtensionEnabled",value:function(){return capabilitiesService_profileService.get(this).isFeatureEnabled("MS_OUTLOOK_PLUGIN")}},{key:"hasCalendarPresenceEnabled",value:function(){return capabilitiesService_profileService.get(this).isFeatureEnabled("MSO365_CALENDAR_PRESENCE")}},{key:"hasTelephonyBasicCallEnabled",value:function(){return capabilitiesService_profileService.get(this).isFeatureEnabled("TELEPHONY_BASIC_CALL")}},{key:"hasTelephonySecondCallEnabled",value:function(){return capabilitiesService_profileService.get(this).isFeatureEnabled("TELEPHONY_SECOND_CALL")}},{key:"hasTelephonyTransferCallEnabled",value:function(){return capabilitiesService_profileService.get(this).isFeatureEnabled("TELEPHONY_TRANSFER_CALL")}},{key:"hasTelephonyConferenceCallEnabled",value:function(){return capabilitiesService_profileService.get(this).isFeatureEnabled("TELEPHONY_CONFERENCE_CALL")}},{key:"hasTelephonyDeflectCallEnabled",value:function(){return capabilitiesService_profileService.get(this).isFeatureEnabled("TELEPHONY_DEFLECT_CALL")}},{key:"hasTelephonyForwardCallEnabled",value:function(){return capabilitiesService_profileService.get(this).isFeatureEnabled("TELEPHONY_FORWARD_CALL")}},{key:"hasTelephonyPhoneBookEnabled",value:function(){return capabilitiesService_profileService.get(this).isFeatureEnabled("TELEPHONY_PHONE_BOOK")}},{key:"hasTelephonyVoiceMailEnabled",value:function(){return capabilitiesService_profileService.get(this).isFeatureEnabled("TELEPHONY_VOICE_MAIL")}},{key:"hasWebRTCAudioMobileEnabled",value:function(){return capabilitiesService_profileService.get(this).isFeatureEnabled("WEBRTC_FOR_MOBILE")}},{key:"hasWebRTCVideoMobileEnabled",value:function(){return capabilitiesService_profileService.get(this).isFeatureEnabled("WEBRTC_FOR_MOBILE_VIDEO")}},{key:"hasBridgeConferenceEnabled",value:function(){return capabilitiesService_profileService.get(this).isFeatureEnabled("CONFERENCE_ALLOWED")}},{key:"hasBridgeConferenceRecordEnabled",value:function(){return capabilitiesService_profileService.get(this).isFeatureEnabled("CONFERENCE_RECORDING")}},{key:"hasBridgeConferenceDialOutEnabled",value:function(){return capabilitiesService_profileService.get(this).isFeatureEnabled("CONFERENCE_DIAL_OUT")}},{key:"maxParticipantsPerBubbleAllowed",value:function(){return capabilitiesService_profileService.get(this).getFeatureLimitMax("BUBBLE_PARTICIPANT_COUNT")}},{key:"maxParticipantsPerBridgeConferenceAllowed",value:function(){return capabilitiesService_profileService.get(this).getFeatureLimitMax("CONFERENCE_PARTICIPANT_COUNT")}},{key:"maxFileStorageQuotaAllowed",value:function(){return capabilitiesService_profileService.get(this).getFeatureLimitMax("FILE_SHARING_QUOTA_GB")}}]),CapabilitiesService}();function adminService_defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}function adminService_createClass(Constructor,protoProps,staticProps){return protoProps&&adminService_defineProperties(Constructor.prototype,protoProps),staticProps&&adminService_defineProperties(Constructor,staticProps),Constructor}var _Company=new WeakMap,_User=new WeakMap,adminService_adminCompanyService=new WeakMap,adminService_adminUserService=new WeakMap,AdminService=function(){function AdminService(Company,User,adminCompanyService,adminUserService){!function(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}(this,AdminService),this.logService="AdminService | ",_Company.set(this,Company),_User.set(this,User),adminService_adminCompanyService.set(this,adminCompanyService),adminService_adminUserService.set(this,adminUserService),this.createEssentialCompany=this.createEssentialCompany.bind(this),this.createCompany=this.createCompany.bind(this),this.removeCompany=this.removeCompany.bind(this),this.createUserForCompany=this.createUserForCompany.bind(this),this.removeUserFromCompany=this.removeUserFromCompany.bind(this),this.fetchUsersByTag=this.fetchUsersByTag.bind(this),this.updateUserTags=this.updateUserTags.bind(this),this.setVisibilityForCompany=this.setVisibilityForCompany.bind(this),this.promoteCompanyToBP=this.promoteCompanyToBP.bind(this)}return adminService_createClass(AdminService,null,[{key:"$inject",get:function(){return["Company","User","adminCompanyService","adminUserService"]}}]),adminService_createClass(AdminService,[{key:"createEssentialCompany",value:function(strName,strCountry){var Company=_Company.get(this),adminCompanyService=adminService_adminCompanyService.get(this);return new Promise((function(resolve,reject){var company=Company.create(null,"");company.name=strName,company.country=strCountry,adminCompanyService.createCompanyEndUser(company).then((function(companyCreated){resolve(companyCreated)})).catch((function(err){reject(err)}))}))}},{key:"createCompany",value:function(strName,strCountry,strState){var Company=_Company.get(this),adminCompanyService=adminService_adminCompanyService.get(this);return new Promise((function(resolve,reject){var company=Company.create(null,"");company.name=strName,company.country=strCountry,strState&&(company.state=strState),company.economicActivityClassification="",adminCompanyService.createCompany(company).then((function(companyCreated){resolve(companyCreated)})).catch((function(err){reject(err)}))}))}},{key:"removeCompany",value:function(company){var adminCompanyService=adminService_adminCompanyService.get(this);return new Promise((function(resolve,reject){adminCompanyService.deleteCompany(company.id).then((function(){resolve(company)})).catch((function(err){reject(err)}))}))}},{key:"createUserForCompany",value:function(strLogin,strFirstName,strLastName,strPassword,company,tags){var User=_User.get(this),adminUserService=adminService_adminUserService.get(this);return new Promise((function(resolve,reject){var user=User.create();user.loginEmail=strLogin,user.firstName=strFirstName,user.lastName=strLastName,user.password=strPassword,user.language="en",user.companyId=company.id,user.adminType="undefined",user.isActive=!0,user.isInitialized=!0,tags&&(user.tags=tags&&Array.isArray(tags)?tags:[tags]),adminUserService.createUser(user).then((function(userCreated){resolve(userCreated)})).catch((function(err){reject(err)}))}))}},{key:"removeUserFromCompany",value:function(user){var adminUserService=adminService_adminUserService.get(this);return new Promise((function(resolve,reject){adminUserService.deleteUser(user).then((function(){resolve(user)})).catch((function(err){reject(err)}))}))}},{key:"fetchUsersByTag",value:function(searchPattern,page,pageSize){var adminUserService=adminService_adminUserService.get(this);return new Promise((function(resolve,reject){page=page||1,pageSize=pageSize||10,adminUserService.getUsers(null,page,pageSize,searchPattern,!1,null,!1,!0).then((function(users){return resolve(users)})).catch((function(err){return reject(err)}))}))}},{key:"updateUserTags",value:function(user,tags){var _this=this,adminUserService=adminService_adminUserService.get(this);return new Promise((function(resolve,reject){return user?user.id?tags instanceof Array!=!0?reject(_this.logService+"[updateUserTags] :: Error: parameter 'tags' must be an array"):tags instanceof Array&&(tags.length<1||tags.length>5)?reject(_this.logService+"[updateUserTags] :: Error: parameter 'tags' must be an array with at least 1 and maximum 5 elements"):(user.tags=tags,void adminUserService.updateUser(user).then((function(){return resolve})).catch((function(err){return reject(err)}))):reject(_this.logService+"[updateUserTags] :: Error: parameter 'user.id' is missing or null"):reject(_this.logService+"[updateUserTags] :: Error: parameter 'user' is missing or null")}))}},{key:"setVisibilityForCompany",value:function(company,visibleByCompany){var adminCompanyService=adminService_adminCompanyService.get(this);return new Promise((function(resolve,reject){adminCompanyService.addVisibility(company.id,visibleByCompany.id).then((function(){resolve(company)})).catch((function(err){reject(err)}))}))}},{key:"promoteCompanyToBP",value:function(company,bpType,applicantNumber){var adminCompanyService=adminService_adminCompanyService.get(this);return new Promise((function(resolve,reject){company.isBP=!0,company.bpType=bpType,company.bpBusinessModel="resell",company.bpApplicantNumber=applicantNumber,company.bpCRDid=applicantNumber,company.supportEmail="rford@sandbox.westworld.com",adminCompanyService.updateCompany(company).then((function(updatedCompany){resolve(updatedCompany)})).catch((function(error){reject(error)}))}))}}]),AdminService}();function channelsService_defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}function channelsService_createClass(Constructor,protoProps,staticProps){return protoProps&&channelsService_defineProperties(Constructor.prototype,protoProps),staticProps&&channelsService_defineProperties(Constructor,staticProps),Constructor}var channelsService_$log=new WeakMap,channelsService_$rootScope=new WeakMap,channelsService_channelService=new WeakMap,channelsService_contactService=new WeakMap,channelsService_SDK=new WeakMap,ChannelsService=function(){function ChannelsService($log,$rootScope,channelService,contactService,SDK){var _this=this;!function(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}(this,ChannelsService),this.logService="ChannelsService | ",channelsService_$log.set(this,$log),channelsService_$rootScope.set(this,$rootScope),channelsService_channelService.set(this,channelService),channelsService_contactService.set(this,contactService),channelsService_SDK.set(this,SDK),this.RAINBOW_ONCHANNELMESSAGERECEIVED="rainbowchannelmessagereceived",this.RAINBOW_ONCHANNELUPDATED="rainbowchannelupdate",this.RAINBOW_ONCHANNELDELETED="rainbowchanneldeleted",this.RAINBOW_ONCHANNELUSERSUPDATED="rainbowchannelusersupdate",this.RAINBOW_ONCHANNELRETRACTMESSAGERECEIVED="rainbowchannelretractmessage",this.RAINBOW_ONCHANNELAVATARUPDATED="rainbowchannelavatarupdate",this.RAINBOW_ONCHANNELUSERSUBSCRIBED="rainbowchannelusersubscribed",this.RAINBOW_ONCHANNELUSERUNSUBSCRIBED="rainbowchanneluserunsubscribed",this.fetchMyChannels=this.fetchMyChannels.bind(this),this.createPublicChannel=this.createPublicChannel.bind(this),this.createClosedChannel=this.createClosedChannel.bind(this),this.deleteChannel=this.deleteChannel.bind(this),this.fetchChannelsByName=this.fetchChannelsByName.bind(this),this.fetchChannelsByTopic=this.fetchChannelsByTopic.bind(this),this.fetchChannelsByCategory=this.fetchChannelsByCategory.bind(this),this.fetchChannel=this.fetchChannel.bind(this),this.createItem=this.createItem.bind(this),this.subscribeToChannelById=this.subscribeToChannelById.bind(this),this.subscribeToChannel=this.subscribeToChannel.bind(this),this.unsubscribeFromChannelById=this.unsubscribeFromChannelById.bind(this),this.unsubscribeFromChannel=this.unsubscribeFromChannel.bind(this),this.updateChannel=this.updateChannel.bind(this),this.updateChannelVisibility=this.updateChannelVisibility.bind(this),this.updateChannelVisibilityToPublic=this.updateChannelVisibilityToPublic.bind(this),this.updateChannelVisibilityToClosed=this.updateChannelVisibilityToClosed.bind(this),this.updateChannelName=this.updateChannelName.bind(this),this.updateChannelTopic=this.updateChannelTopic.bind(this),this.updateChannelCategory=this.updateChannelCategory.bind(this),this.updateChannelAvatar=this.updateChannelAvatar.bind(this),this.deleteChannelAvatar=this.deleteChannelAvatar.bind(this),this.fetchUsers=this.fetchUsers.bind(this),this.deleteAllUsersFromChannel=this.deleteAllUsersFromChannel.bind(this),this.updateChannelUsers=this.updateChannelUsers.bind(this),this.addMembersToChannel=this.addMembersToChannel.bind(this),this.addPublishersToChannel=this.addPublishersToChannel.bind(this),this.addOwnersToChannel=this.addOwnersToChannel.bind(this),this.deleteUsersFromChannel=this.deleteUsersFromChannel.bind(this),this.fetchItems=this.fetchItems.bind(this),this.deleteItem=this.deleteItem.bind(this),$rootScope.$on("$destroy",$rootScope.$on("CHANNEL_MESSAGE_RECEIVED",(function(event,messageType,message){return _this.onMessageReceived(event,messageType,message)}))),$rootScope.$on("$destroy",$rootScope.$on("CHANNEL_UPDATE_EVENT",(function(event,updateType,id){return _this.onChannelUpdated(event,updateType,id)}))),$rootScope.$on("$destroy",$rootScope.$on("CHANNEL_USERS_UPDATE_EVENT",(function(event,id,users){return _this.onChannelUsersUpdated(event,id,users)}))),$rootScope.$on("$destroy",$rootScope.$on("ON_UPDATE_CHANNEL_AVATAR",(function(event,id){return _this.onChannelAvatarUpdated(event,id)}))),$rootScope.$on("$destroy",$rootScope.$on("CHANNEL_USER_SUBSCRIPTION_EVENT",(function(event,type,channelId,userId){return _this.onUserSubscriptionChange(event,type,channelId,userId)})))}return channelsService_createClass(ChannelsService,null,[{key:"$inject",get:function(){return["$log","$rootScope","channelService","contactService","SDK"]}}]),channelsService_createClass(ChannelsService,[{key:"onMessageReceived",value:function(__event,messageType,message){var _this2=this,$log=channelsService_$log.get(this);$log.sdk(this.logService+"[ChannelsService] :: EVENT onMessageReceived"),this.fetchChannel(message.channelId).then((function(channel){if(0===messageType){var sdkEvent=new CustomEvent(_this2.RAINBOW_ONCHANNELMESSAGERECEIVED,{detail:{channel:channel,message:message}});document.dispatchEvent(sdkEvent)}else{$log.sdk(_this2.logService+"[ChannelsService] :: EVENT onMessageReceived - retracted message");var _sdkEvent=new CustomEvent(_this2.RAINBOW_ONCHANNELRETRACTMESSAGERECEIVED,{detail:{channel:channel,message:message}});document.dispatchEvent(_sdkEvent)}}))}},{key:"onChannelUpdated",value:function(__event,updateType,id){var _this3=this;if(channelsService_$log.get(this).sdk(this.logService+"[ChannelsService] :: EVENT: onChannelUpdated("+updateType+") id:"+id),3!==updateType)this.fetchChannel(id).then((function(channel){var sdkEvent=new CustomEvent(_this3.RAINBOW_ONCHANNELUPDATED,{detail:{channel:channel,updateType:updateType}});document.dispatchEvent(sdkEvent)}));else{var sdkEvent=new CustomEvent(this.RAINBOW_ONCHANNELDELETED,{detail:id});document.dispatchEvent(sdkEvent)}}},{key:"onChannelUsersUpdated",value:function(__event,id,users){var _this4=this;channelsService_$log.get(this).sdk(this.logService+"[ChannelsService] :: EVENT onChannelUsersUpdated:"+id),this.fetchChannel(id).then((function(channel){var sdkEvent=new CustomEvent(_this4.RAINBOW_ONCHANNELUSERSUPDATED,{detail:{channel:channel,users:users}});document.dispatchEvent(sdkEvent)}))}},{key:"onChannelAvatarUpdated",value:function(__event,id){var _this5=this,$log=channelsService_$log.get(this);this.fetchChannel(id).then((function(channel){$log.sdk(_this5.logService+"[ChannelsService] :: EVENT onChannelAvatarUpdated"+channel.id);var sdkEvent=new CustomEvent(_this5.RAINBOW_ONCHANNELAVATARUPDATED,{detail:channel});document.dispatchEvent(sdkEvent)}))}},{key:"onUserSubscriptionChange",value:function(__event,type,channelId,userId){var _this6=this,$log=channelsService_$log.get(this),contactService=channelsService_contactService.get(this),channel=null;this.fetchChannel(channelId).then((function(channelFound){return channel=channelFound,contactService.getContactByDBId(userId,!0)})).then((function(user){if(user=user||userId,4===type){$log.sdk(_this6.logService+"[ChannelsService] :: EVENT onUserSubscriptionChange: user subscribed to a channel: "+channelId);var sdkEvent=new CustomEvent(_this6.RAINBOW_ONCHANNELUSERSUBSCRIBED,{detail:{channel:channel,user:user}});document.dispatchEvent(sdkEvent)}else{$log.sdk(_this6.logService+"[ChannelsService] :: EVENT onUserSubscriptionChange: user unsubscribed from a channel: "+channelId);var _sdkEvent2=new CustomEvent(_this6.RAINBOW_ONCHANNELUSERUNSUBSCRIBED,{detail:{channel:channel,user:user}});document.dispatchEvent(_sdkEvent2)}}))}},{key:"fetchMyChannels",value:function(){return channelsService_channelService.get(this).getMyChannels()}},{key:"createPublicChannel",value:function(channelName){var _this7=this,channelTopic=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",category=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"",$log=channelsService_$log.get(this),SDK=channelsService_SDK.get(this),channelService=channelsService_channelService.get(this);return $log.sdk(this.logService+"[createPublicChannel] :: Trying to create a new public channel"),new Promise((function(resolve,reject){if(!channelName)return reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'channelName' is missing or empty"});channelService.createChannel(channelName,"company_public",channelTopic,category,!1).then((function(channel){return $log.sdk(_this7.logService+"[createPublicChannel] :: Public Channel created: "+channel.id),resolve(channel)})).catch((function(err){return reject(err)}))}))}},{key:"createClosedChannel",value:function(channelName){var _this8=this,channelTopic=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",category=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"",$log=channelsService_$log.get(this),SDK=channelsService_SDK.get(this),channelService=channelsService_channelService.get(this);return $log.sdk(this.logService+"[createClosedChannel] :: Trying to create a new closed channel"),new Promise((function(resolve,reject){if(!channelName)return reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'channelName' is missing or empty"});channelService.createChannel(channelName,"company_closed",channelTopic,category,!1).then((function(channel){return $log.sdk(_this8.logService+"[createClosedChannel] :: created: "+channel.id),resolve(channel)})).catch((function(err){return reject(err)}))}))}},{key:"deleteChannel",value:function(id){var _this9=this,$log=channelsService_$log.get(this),SDK=channelsService_SDK.get(this),channelService=channelsService_channelService.get(this);return $log.sdk(this.logService+"[deleteChannel] :: Trying to delete a channel"),new Promise((function(resolve,reject){if(!id)return reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'id' is missing or empty"});channelService.deleteChannel(id).then((function(){return $log.sdk(_this9.logService+"[deleteChannel] :: deleted: "+id),resolve({code:SDK.OK,label:"OK"})})).catch((function(err){return err}))}))}},{key:"fetchChannelsByName",value:function(name){var _this10=this,$log=channelsService_$log.get(this),channelService=channelsService_channelService.get(this),SDK=channelsService_SDK.get(this);return $log.sdk(this.logService+"[fetchChannelsByName] :: Trying to fetch channels by name"),new Promise((function(resolve,reject){if(!name)return reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'name' is missing or empty"});var filter={};filter.name=name,channelService.findChannels(filter).then((function(channels){return $log.sdk(_this10.logService+"[fetchChannelsByName] :: fetched: "+channels.length),resolve(channels)})).catch((function(err){return reject(err)}))}))}},{key:"fetchChannelsByTopic",value:function(topic){var _this11=this,$log=channelsService_$log.get(this),channelService=channelsService_channelService.get(this),SDK=channelsService_SDK.get(this);return $log.sdk(this.logService+"[fetchChannelsByTopic] :: Trying to fetch channels by topic"),new Promise((function(resolve,reject){if(!topic)return reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'topic' is missing or empty"});var filter={};filter.topic=topic,channelService.findChannels(filter).then((function(channels){return $log.sdk(_this11.logService+"[fetchChannelsByTopic] :: fetched: "+channels.length),resolve(channels)})).catch((function(err){return reject(err)}))}))}},{key:"fetchChannelsByCategory",value:function(category){var _this12=this,$log=channelsService_$log.get(this),channelService=channelsService_channelService.get(this),SDK=channelsService_SDK.get(this);return $log.sdk(this.logService+"[fetchChannelsByCategory] :: Trying to fetch channels by category"),new Promise((function(resolve,reject){if(!category)return reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'category' is missing or empty"});var filter={};filter.category=category,channelService.findChannels(filter).then((function(channels){return $log.sdk(_this12.logService+"[fetchChannelsByCategory] :: fetched: "+channels.length),resolve(channels)})).catch((function(err){return reject(err)}))}))}},{key:"fetchChannel",value:function(id){var _this13=this,$log=channelsService_$log.get(this),SDK=channelsService_SDK.get(this),channelService=channelsService_channelService.get(this);return $log.sdk(this.logService+"[fetchChannel] :: Trying to fetch a channel..."),new Promise((function(resolve,reject){if(!id)return reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'id' is missing or empty"});channelService.getChannel(id).then((function(channel){return $log.sdk(_this13.logService+"[fetchChannel] :: fetched: "+channel.id),resolve(channel)})).catch((function(err){return reject(err)}))}))}},{key:"createItem",value:function(channel,message,title,url,type){var _this14=this,$log=channelsService_$log.get(this),SDK=channelsService_SDK.get(this),channelService=channelsService_channelService.get(this);return $log.sdk(this.logService+"[createItem] :: Trying to create item"),new Promise((function(resolve,reject){return channel?message?type&&-1===["basic","markdown","html","data"].indexOf(type)?reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'type' could be 'basic', 'markdown', 'html' or 'data'"}):(title=title||"",url=url||"",type=type?"urn:xmpp:channels:"+type:"urn:xmpp:channels:basic",void channelService.publishToChannel(channel.id,null,type,message,title,url).then((function(){return $log.sdk(_this14.logService+"[createItem] :: created: "+channel.id),resolve({code:SDK.OK,label:"OK"})})).catch((function(err){return reject(err)}))):reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'message' is missing or empty"}):reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'channel' is missing or empty"})}))}},{key:"subscribeToChannelById",value:function(id){var _this15=this,$log=channelsService_$log.get(this),SDK=channelsService_SDK.get(this),channelService=channelsService_channelService.get(this);return $log.sdk(this.logService+"[subscribeToChannelById] :: Trying to subscribe to a channel..."),new Promise((function(resolve,reject){if(!id)return reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'id' is missing or null"});var channel=channelService.getChannelFromCache(id);channel?channelService.subscribeToChannel(channel).then((function(){return $log.sdk(_this15.logService+"[subscribeToChannelById] :: subscribed: "+id),resolve({code:SDK.OK,label:"OK"})})).catch((function(err){return reject(err)})):channelService.getChannel(id).then((function(channelFound){if(!channelFound)return reject({code:SDK.ERRORBADREQUEST,label:"No channel found with id "+id});channelService.subscribeToChannel(channelFound).then((function(){return $log.sdk(_this15.logService+"[subscribeToChannelById] :: subscribed: "+id),resolve({code:SDK.OK,label:"OK"})})).catch((function(err){return reject(err)}))}))}))}},{key:"subscribeToChannel",value:function(channel){var _this16=this,$log=channelsService_$log.get(this),SDK=channelsService_SDK.get(this),channelService=channelsService_channelService.get(this);return $log.sdk(this.logService+"[subscribeToChannel] :: Trying to subscribe to a channel..."),new Promise((function(resolve,reject){if(!channel)return reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'channel' is missing or null"});channelService.subscribeToChannel(channel).then((function(){return $log.sdk(_this16.logService+"[subscribeToChannel] :: subscribed: "+channel.id),resolve({code:SDK.OK,label:"OK"})})).catch((function(err){return reject(err)}))}))}},{key:"unsubscribeFromChannelById",value:function(id){var _this17=this,$log=channelsService_$log.get(this),SDK=channelsService_SDK.get(this),channelService=channelsService_channelService.get(this);return $log.sdk(this.logService+"[unsubscribeFromChannelById] :: Trying to unsubscribe from a channel..."),new Promise((function(resolve,reject){if(!id)return reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'id' is missing or empty"});var channel=channelService.getChannelFromCache(id);channel?channelService.unsubscribeToChannel(channel).then((function(){return $log.sdk(_this17.logService+"[unsubscribeFromChannelById] :: unsubscribed: "+id),resolve({code:SDK.OK,label:"OK"})})).catch((function(err){return reject(err)})):channelService.getChannel(id).then((function(channelFound){if(!channelFound)return reject({code:SDK.ERRORBADREQUEST,label:"No channel found with id "+id});channelService.unsubscribeToChannel(channelFound).then((function(){return $log.sdk(_this17.logService+"[unsubscribeFromChannelById] :: unsubscribed: "+id),resolve({code:SDK.OK,label:"OK"})})).catch((function(err){return reject(err)}))}))}))}},{key:"unsubscribeFromChannel",value:function(channel){var _this18=this,$log=channelsService_$log.get(this),SDK=channelsService_SDK.get(this),channelService=channelsService_channelService.get(this);return $log.sdk(this.logService+"[unsubscribeFromChannel] :: Trying to unsubscribe from a channel..."),new Promise((function(resolve,reject){if(!channel)return reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'channel' is missing or null"});channelService.unsubscribeToChannel(channel).then((function(){return $log.sdk(_this18.logService+"[unsubscribeFromChannel] :: unsubscribed: "+channel.id),resolve({code:SDK.OK,label:"OK"})})).catch((function(err){return reject(err)}))}))}},{key:"updateChannel",value:function(id,channelTopic,visibility,maxItems,maxPayloadSize,channelName,category){var _this19=this,$log=channelsService_$log.get(this),SDK=channelsService_SDK.get(this),channelService=channelsService_channelService.get(this);return $log.sdk(this.logService+"[updateChannel] :: Trying to update a channel..."),new Promise((function(resolve,reject){if(!id)return reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'id' is missing or empty"});var options={};null!==channelTopic&&(options.topic=channelTopic),null!==visibility&&(options.mode="company"===visibility?"company_public":"company_closed"),null!==maxItems&&(options.maxItems=maxItems),null!==maxPayloadSize&&(options.maxPayloadSize=maxPayloadSize),null!==channelName&&(options.name=channelName),null!==category&&(options.cateogry=category),channelService.updateChannel(id,options).then((function(channelUpdated){return channelUpdated.visibility=options.visibility,$log.sdk(_this19.logService+"[updateChannel] :: updated: "+id),resolve(channelUpdated)})).catch((function(err){return reject(err)}))}))}},{key:"updateChannelVisibility",value:function(id,visibility){var _this20=this,$log=channelsService_$log.get(this),SDK=channelsService_SDK.get(this),channelService=channelsService_channelService.get(this);return $log.sdk(this.logService+"[updateChannelVisibility] :: Trying to update visibility of a channel..."),new Promise((function(resolve,reject){if(!id)return reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'id' is missing or empty"});if(!visibility)return reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'visibility' is missing or empty"});var options={};null!==visibility&&(options.mode="company"===visibility?"company_public":"company_closed"),channelService.updateChannel(id,options).then((function(channelUpdated){return $log.sdk(_this20.logService+"[updateChannelVisibility] :: updated: "+id),resolve(channelUpdated)})).catch((function(err){return reject(err)}))}))}},{key:"updateChannelVisibilityToPublic",value:function(id){var _this21=this,$log=channelsService_$log.get(this),SDK=channelsService_SDK.get(this),channelService=channelsService_channelService.get(this);return $log.sdk(this.logService+"[updateChannelVisibilityToPublic] :: Trying to update visibility to visible for a channel"),new Promise((function(resolve,reject){if(!id)return reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'id' is missing or empty"});channelService.updateChannel(id,{mode:"company_public"}).then((function(channelUpdated){return $log.sdk(_this21.logService+"[updateChannelVisibilityToPublic] :: updated: "+id),resolve(channelUpdated)})).catch((function(err){return reject(err)}))}))}},{key:"updateChannelVisibilityToClosed",value:function(id){var _this22=this,$log=channelsService_$log.get(this),SDK=channelsService_SDK.get(this),channelService=channelsService_channelService.get(this);return $log.sdk(this.logService+"[updateChannelVisibilityToClosed] :: Trying to update visibility to closed for a channel"),new Promise((function(resolve,reject){if(!id)return reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'id' is missing or empty"});channelService.updateChannel(id,{mode:"company_closed"}).then((function(channelUpdated){return $log.sdk(_this22.logService+"[updateChannelVisibilityToClosed] :: updated: "+id),resolve(channelUpdated)})).catch((function(err){return reject(err)}))}))}},{key:"updateChannelName",value:function(id,channelName){var _this23=this,$log=channelsService_$log.get(this),SDK=channelsService_SDK.get(this),channelService=channelsService_channelService.get(this);return $log.sdk(this.logService+"[updateChannelName] :: Trying to update the name of a channel"),new Promise((function(resolve,reject){if(!id)return reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'id' is missing or empty"});var options={};null!==channelName&&(options.name=channelName),channelService.updateChannel(id,options).then((function(channelUpdated){return $log.sdk(_this23.logService+"[updateChannelName] :: updated: "+id),resolve(channelUpdated)})).catch((function(err){return reject(err)}))}))}},{key:"updateChannelTopic",value:function(id,channelTopic){var _this24=this,$log=channelsService_$log.get(this),SDK=channelsService_SDK.get(this),channelService=channelsService_channelService.get(this);return $log.sdk(this.logService+"[updateChannelTopic] :: Try to update the topic of a channel"),new Promise((function(resolve,reject){if(!id)return reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'id' is missing or empty"});var options={};null!==channelTopic&&(options.topic=channelTopic),channelService.updateChannel(id,options).then((function(channelUpdated){return $log.sdk(_this24.logService+"[updateChannelTopic] :: updated: "+id),resolve(channelUpdated)})).catch((function(err){return reject(err)}))}))}},{key:"updateChannelCategory",value:function(id,category){var _this25=this,$log=channelsService_$log.get(this),SDK=channelsService_SDK.get(this),channelService=channelsService_channelService.get(this);return $log.sdk(this.logService+"[updateChannelCategory] :: Try to update the category of a channel"),new Promise((function(resolve,reject){if(!id)return reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'id' is missing or empty"});var options={};null!==category&&(options.category=category),channelService.updateChannel(id,options).then((function(channelUpdated){return $log.sdk(_this25.logService+"[updateChannelCategory] :: updated: "+id),resolve(channelUpdated)})).catch((function(err){return reject(err)}))}))}},{key:"updateChannelAvatar",value:function(id,urlAvatar){var _this26=this,$log=channelsService_$log.get(this),SDK=channelsService_SDK.get(this),channelService=channelsService_channelService.get(this);return $log.sdk(this.logService+"[updateChannelAvatar] :: Try to update the avatar of a channel"),new Promise((function(resolve,reject){return id?urlAvatar?void channelService.uploadChannelAvatar(id,urlAvatar,512).then((function(){return $log.sdk(_this26.logService+"[updateChannelAvatar] :: updated: "+id),resolve({code:SDK.OK,label:"OK"})})).catch((function(err){return reject(err)})):reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'urlAvatar' is missing or empty"}):reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'id' is missing or empty"})}))}},{key:"deleteChannelAvatar",value:function(id){var _this27=this,$log=channelsService_$log.get(this),SDK=channelsService_SDK.get(this),channelService=channelsService_channelService.get(this);return $log.sdk(this.logService+"[deleteChannelAvatar] :: Try to delete the avatar of a channel"),new Promise((function(resolve,reject){if(!id)return reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'id' is missing or empty"});channelService.deleteChannelAvatar(id).then((function(){return $log.sdk(_this27.logService+"[deleteChannelAvatar] :: updated: "+id),resolve({code:SDK.OK,label:"OK"})})).catch((function(err){return reject(err)}))}))}},{key:"fetchUsers",value:function(id,options){var _this28=this,$log=channelsService_$log.get(this),SDK=channelsService_SDK.get(this),channelService=channelsService_channelService.get(this);return $log.sdk(this.logService+"[fetchUsers] :: Trying to fetch users of a channel"),new Promise((function(resolve,reject){if(!id)return reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'id' is missing or empty"});channelService.getChannelUsers(id,options).then((function(usersData){return $log.sdk(_this28.logService+"[fetchUsers] :: got: "+id),resolve(usersData.data)})).catch((function(error){return reject(error)}))}))}},{key:"deleteAllUsersFromChannel",value:function(id){var _this29=this,$log=channelsService_$log.get(this),SDK=channelsService_SDK.get(this),channelService=channelsService_channelService.get(this);return $log.sdk(this.logService+"[deleteAllUsersFromChannel] :: Trying to get delete all users of a channel..."),new Promise((function(resolve,reject){if(!id)return reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'id' is missing or empty"});channelService.removeAllUsersFromChannel(id).then((function(){return channelService.getChannel(id)})).then((function(channelUpdated){return $log.sdk(_this29.logService+"[deleteAllUsersFromChannel] :: deleted: "+id),resolve(channelUpdated)})).catch((function(err){return reject(err)}))}))}},{key:"updateChannelUsers",value:function(id,users,userType){var _this30=this,$log=channelsService_$log.get(this),SDK=channelsService_SDK.get(this),channelService=channelsService_channelService.get(this);return $log.sdk(this.logService+"[updateChannelUsers] :: Trying to update users of a channel"),new Promise((function(resolve,reject){if(!id)return reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'id' is missing or empty"});userType=userType||"member",channelService.updateChannelUsers(id,users,userType).then((function(usersData){return $log.sdk(_this30.logService+"[updateChannelUsers] :: updated: "+id),resolve(usersData)})).catch((function(err){return reject(err)}))}))}},{key:"addMembersToChannel",value:function(id,users){var _this31=this,$log=channelsService_$log.get(this),SDK=channelsService_SDK.get(this),channelService=channelsService_channelService.get(this);return $log.sdk(this.logService+"[addMembersToChannel] :: Trying to add members to a channel"),new Promise((function(resolve,reject){if(!id)return reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'id' is missing or empty"});channelService.updateChannelUsers(id,users,"member").then((function(usersData){return $log.sdk(_this31.logService+"[addMembersToChannel] :: added: "+id),resolve(usersData)})).catch((function(err){return reject(err)}))}))}},{key:"addPublishersToChannel",value:function(id,users){var _this32=this,$log=channelsService_$log.get(this),SDK=channelsService_SDK.get(this),channelService=channelsService_channelService.get(this);return $log.sdk(this.logService+"[addPublishersToChannel] :: Trying to add publishers to a channel"),new Promise((function(resolve,reject){if(!id)return reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'id' is missing or empty"});channelService.updateChannelUsers(id,users,"publisher").then((function(usersData){return $log.sdk(_this32.logService+"[addPublishersToChannel] :: added: "+id),resolve(usersData)})).catch((function(err){return reject(err)}))}))}},{key:"addOwnersToChannel",value:function(id,users){var _this33=this,$log=channelsService_$log.get(this),SDK=channelsService_SDK.get(this),channelService=channelsService_channelService.get(this);return $log.sdk(this.logService+"[addOwnersToChannel] :: Trying to add owners to a channel"),new Promise((function(resolve,reject){if(!id)return reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'id' is missing or empty"});channelService.updateChannelUsers(id,users,"owner").then((function(usersData){return $log.sdk(_this33.logService+"[addOwnersToChannel] :: added: "+id),resolve(usersData)})).catch((function(err){return reject(err)}))}))}},{key:"deleteUsersFromChannel",value:function(id,users){var _this34=this,$log=channelsService_$log.get(this),SDK=channelsService_SDK.get(this),channelService=channelsService_channelService.get(this);return $log.sdk(this.logService+"[deleteUsersFromChannel] :: Trying to delete users from a channel"),new Promise((function(resolve,reject){if(!id)return reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'id' is missing or empty"});channelService.updateChannelUsers(id,users,"none").then((function(usersData){return $log.sdk(_this34.logService+"[deleteUsersFromChannel] :: deleted: "+id),resolve(usersData)})).catch((function(err){return reject(err)}))}))}},{key:"fetchItems",value:function(id,maxMessages,beforeDate,afterDate){var _this35=this,$log=channelsService_$log.get(this),SDK=channelsService_SDK.get(this),channelService=channelsService_channelService.get(this);return $log.sdk(this.logService+"[fetchItems] :: Try to fetch items of a channel"),new Promise((function(resolve,reject){if(!id)return reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'id' is missing or empty"});channelService.getChannelItems(id,maxMessages,beforeDate,afterDate).then((function(messages){return $log.sdk(_this35.logService+"[fetchItems] :: fetched: "+id),resolve(messages)})).catch((function(err){return reject(err)}))}))}},{key:"deleteItem",value:function(channelId,itemId){var _this36=this,$log=channelsService_$log.get(this),SDK=channelsService_SDK.get(this),channelService=channelsService_channelService.get(this);return $log.sdk(this.logService+"[deleteItem] :: Trying to delete an item."),new Promise((function(resolve,reject){return channelId?itemId?void channelService.deleteChannelItem(channelId,itemId).then((function(){return $log.sdk(_this36.logService+"[deleteItem] :: Item deleted: "+itemId),resolve()})).catch((function(err){return reject(err)})):reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'itemId' is missing or empty"}):reject({code:SDK.ERRORBADREQUEST,label:"Parameter 'channelId' is missing or empty"})}))}}]),ChannelsService}();__webpack_require__(13),__webpack_require__(20),window.adapter=adapter_core_namespaceObject,__webpack_require__(21),__webpack_require__(22),__webpack_require__(152),__webpack_require__(153),__webpack_require__(154),__webpack_require__(155),__webpack_require__(156),angular.module("sdk").service("connectionService",ConnectionService),angular.module("sdk").service("presenceService",PresenceService),angular.module("sdk").service("userProfileService",UserProfileService),angular.module("sdk").service("contactsService",ContactsService),angular.module("sdk").service("pbxService",PbxService),angular.module("sdk").service("conversationsService",ConversationsService),angular.module("sdk").service("imService",ImService),angular.module("sdk").service("webRTCService",WebRTCService),angular.module("sdk").service("bubblesService",BubblesService),angular.module("sdk").service("groupsService",GroupsService),angular.module("sdk").service("callsLogService",CallsLogService),angular.module("sdk").service("favoritesService",FavoritesService),angular.module("sdk").service("filesStorageService",FilesStorageService),angular.module("sdk").service("capabilitiesService",CapabilitiesService),angular.module("sdk").service("adminService",AdminService),angular.module("sdk").service("channelsService",ChannelsService)}]);